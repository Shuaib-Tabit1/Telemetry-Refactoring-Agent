"EnhancedIntent(issue_category='INSTRUMENTATION', static_analysis_query={'find_method_call': 'SetTag'}, semantic_description='Add HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION headers as span attributes on CLM web HTTP request spans.', search_keywords=['HTTP_REFERER', 'HTTP_RESPONSE_REDIRECT_LOCATION', 'SetTag', 'ActivitySource', 'middleware', 'redirect'], telemetry_operation={'type': 'span', 'target_name': 'incoming http request span', 'action': 'ADD_ATTRIBUTES', 'attributes_to_add': [{'name': 'HTTP_REFERER', 'value_source': 'Request.Headers[\"Referer\"]'}, {'name': 'HTTP_RESPONSE_REDIRECT_LOCATION', 'value_source': 'Response.Headers[\"Location\"]'}], 'new_span_name': None, 'new_metric_details': {}}, confidence=<IntentConfidence.HIGH: 'high'>, operation_type=<OperationType.MULTI_FILE: 'multi_file'>, complexity_score=5, estimated_files=3, validation_result=ValidationResult(is_valid=True, confidence=<IntentConfidence.HIGH: 'high'>, issues=[], suggestions=[]), sub_tasks=[{'order': 1, 'name': 'Code-base Discovery', 'action': 'locate_configuration', 'description': 'Search clm-web solution for existing OpenTelemetry boot-strapper, ActivitySource registrations, and any custom span enrichment middleware.', 'search_keywords': ['AddOpenTelemetry', 'UseOpenTelemetry', 'ActivitySource', 'SetTag', 'EnrichWith'], 'expected_files': ['Startup.cs', 'Program.cs (for .NET 6+)', 'TelemetryExtensions.cs', 'OpenTelemetryMiddleware.cs'], 'validation_criteria': 'All files that configure instrumentation are identified and documented.'}, {'order': 2, 'name': 'Determine Injection Point', 'action': 'design_middleware', 'description': 'Confirm the best place in the ASP.NET pipeline to read request headers early (for Referer) and response headers late (for Location) while staying on the same server span. Usually a custom middleware registered immediately after UseRouting and before UseEndpoints.', 'dependencies': [1], 'validation_criteria': 'Middleware ordering diagram updated; decision recorded in design notes.'}, {'order': 3, 'name': 'Implement Request Header Enrichment', 'action': 'add_referer_tag', 'description': 'Inside chosen middleware, capture `HttpContext.Request.Headers[\"Referer\"]` (case-insensitive). If not null/empty, call `Activity.Current?.SetTag(\"HTTP_REFERER\", refererValue)`.', 'code_changes': ['Telemetry/RequestEnrichmentMiddleware.cs'], 'dependencies': [2], 'validation_criteria': 'Unit test verifies span includes HTTP_REFERER when header is present and omits when absent.'}, {'order': 4, 'name': 'Implement Response Header Enrichment', 'action': 'add_redirect_location_tag', 'description': 'After `await _next(context)` returns, inspect `context.Response.StatusCode` for 301,302,303,307,308. If match and `Location` header exists, call `Activity.Current?.SetTag(\"HTTP_RESPONSE_REDIRECT_LOCATION\", locationValue)`.', 'code_changes': ['Telemetry/RequestEnrichmentMiddleware.cs'], 'dependencies': [3], 'validation_criteria': 'Unit test simulating 302 confirms tag present with correct URL; 200 path confirms tag absent.'}, {'order': 5, 'name': 'Wire-up Middleware', 'action': 'register_middleware', 'description': 'Add `app.UseMiddleware<RequestEnrichmentMiddleware>();` in Startup.cs/Program.cs immediately after routing.', 'dependencies': [4], 'validation_criteria': 'Application compiles and requests flow correctly with middleware executed.'}, {'order': 6, 'name': 'Static Analysis / Linter', 'action': 'run_static_analysis', 'description': 'Run Solution analyzers and stylecop; ensure no new warnings. Confirm no PII violations with security linter (full URLs allowed per data-privacy guidelines).', 'dependencies': [5], 'validation_criteria': 'CI passes without new style or security violations.'}, {'order': 7, 'name': 'Automated Tests', 'action': 'add_tests', 'description': 'Add or extend integration tests that spin up TestServer, issue request with Referer header and simulate redirect response to verify both tags arrive in exported spans (use InMemoryExporter).', 'expected_files': ['TelemetryTests/RequestEnrichmentTests.cs'], 'dependencies': [5], 'validation_criteria': 'New tests pass in CI and fail if tags removed.'}, {'order': 8, 'name': 'Local Manual Verification', 'action': 'manual_test', 'description': 'Run clm-web locally with OTLP exporter pointed at dev collector + console exporter. Trigger BrowseDocuments.aspx which redirects via SSO. Observe span attributes in console and Grafana/Jaeger.', 'dependencies': [7], 'validation_criteria': 'HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION visible on corresponding span.'}, {'order': 9, 'name': 'Deploy to Demo Environment', 'action': 'deploy_demo', 'description': 'Promote branch to Demo slot via CI/CD. Enable feature flag `Telemetry.RedirectEnrichment` if gated (optional).', 'dependencies': [8], 'validation_criteria': 'Deployment green; smoke tests succeed.'}, {'order': 10, 'name': 'Kusto Validation', 'action': 'run_kusto_query', 'description': 'Execute the expected Kusto query provided in ticket. Confirm both columns populated for new traffic.', 'dependencies': [9], 'validation_criteria': '\u226595% of new 3xx spans contain both attributes when headers present.'}, {'order': 11, 'name': 'Performance Benchmark', 'action': 'perf_test', 'description': 'Run load test comparing p95 latency before/after. Confirm added tags do not degrade response time >1 ms or increase span size >200 B.', 'dependencies': [10], 'validation_criteria': 'Performance thresholds met.'}, {'order': 12, 'name': 'Rollout to All Environments', 'action': 'deploy_prod', 'description': 'Merge to main, tag release, promote via staged ring deployment (Test \u2192 Staging \u2192 Prod). Monitor logs & Kusto dashboards.', 'dependencies': [11], 'validation_criteria': 'No errors in production; attributes visible in Prod Kusto.'}, {'order': 13, 'name': 'Documentation & Closeout', 'action': 'update_docs', 'description': 'Update RUNBOOK.md and Telemetry_Conventions.md with new attributes. Close ticket after stakeholder sign-off.', 'dependencies': [12], 'validation_criteria': 'Docs merged; ticket moved to Done.'}], contextual_hints=['Hooking the response header capture late enough in the pipeline to guarantee Location header is set for 3xx responses but early enough to be on the same span', 'Ensuring attributes are only added to the server-side http span (avoiding duplication on nested child spans)', 'Validating changes across every hosting configuration (IIS, Kestrel, Azure App Service) and all redirect status codes', 'Writing automated or manual tests that trigger real 302 flows in CI/CD'], similar_patterns=['http-server span enrichment', 'response redirect attribute capture'], implementation_strategy=ImplementationStrategy(extend_existing=True, create_new=False, preferred_approach='middleware'), exact_requirements=ExactRequirements(attribute_names=['HTTP_REFERER', 'HTTP_RESPONSE_REDIRECT_LOCATION', 'HTTP_REFERER', 'HTTP_RESPONSE_REDIRECT_LOCATION'], patterns=['kusto\\nOtlpSpanEvents\\n| where Environment == \"Demo\"\\n| where url_path == \"/clm/Documents/BrowseDocuments.aspx\"\\n| where http_status_code > 200\\n| project Timestamp, url_path, http_status_code, HTTP_REFERER, HTTP_RESPONSE_REDIRECT_LOCATION\\n', '\\n\\n**Implementation Requirements:**\\n\\n1. **Add HTTP_REFERER attribute** to all incoming HTTP requests\\n   - Source: ', '\\n   - Add to span as: ', '\\n\\n2. **Add HTTP_RESPONSE_REDIRECT_LOCATION attribute** for redirect responses\\n   - Source: ', ' when status code is 301/302/303/307/308\\n   - Add to span as: '], implementation_notes=['SetTag(\"HTTP_RESPONSE_REDIRECT_LOCATION\", locationValue)`\\n\\n**Files to Look For:**\\n- CLM web application middleware or request handling code\\n- ASP', 'NET request pipeline components\\n- OpenTelemetry instrumentation configuration\\n- Files containing \"ActivitySource\", \"SetTag\", or \"AddTag\" method calls\\n- Middleware files that handle HTTP requests/responses\\n- Look for existing telemetry code in CLM-related projects\\n\\n**Acceptance Criteria:**\\n- [ ] HTTP_REFERER attribute captured from incoming request headers\\n- [ ] HTTP_RESPONSE_REDIRECT_LOCATION attribute captured for 302+ responses  \\n- [ ] Attributes visible in OtlpSpanEvents Kusto table\\n- [ ] No performance degradation from additional attribute collection\\n- [ ] Proper null/empty value handling for missing headers\\n\\n**Technical Notes:**\\n- Follow existing OpenTelemetry patterns in the codebase\\n- Ensure attribute names match exactly: \"HTTP_REFERER\" and \"HTTP_RESPONSE_REDIRECT_LOCATION\"\\n- Add attributes to HTTP request spans, not separate spans\\n- Handle edge cases where headers might be missing or empty']), telemetry_analysis=None)"