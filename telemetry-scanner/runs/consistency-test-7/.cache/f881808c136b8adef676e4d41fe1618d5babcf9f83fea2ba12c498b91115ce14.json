"EnhancedIntent(issue_category='INSTRUMENTATION', static_analysis_query={'find_method_call': 'SetTag'}, semantic_description='Add HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION tags to existing HTTP request spans in the CLM web application.', search_keywords=['HTTP_REFERER', 'HTTP_RESPONSE_REDIRECT_LOCATION', 'Activity.SetTag', 'AddTag', 'ActivitySource'], telemetry_operation={'type': 'span', 'target_name': 'incoming HTTP request span', 'action': 'ADD_ATTRIBUTES', 'attributes_to_add': [{'name': 'HTTP_REFERER', 'value_source': 'Request.Headers[\"Referer\"]'}, {'name': 'HTTP_RESPONSE_REDIRECT_LOCATION', 'value_source': 'Response.Headers[\"Location\"] when status code is 3xx'}], 'new_span_name': None, 'new_metric_details': {}}, confidence=<IntentConfidence.HIGH: 'high'>, operation_type=<OperationType.MULTI_FILE: 'multi_file'>, complexity_score=4, estimated_files=3, validation_result=ValidationResult(is_valid=True, confidence=<IntentConfidence.HIGH: 'high'>, issues=[], suggestions=[]), sub_tasks=[{'order': 1, 'name': 'Locate OpenTelemetry Configuration & HTTP Pipeline', 'action': 'locate_configuration', 'description': 'Search the CLM-web solution for OpenTelemetry setup and existing HTTP enrichment logic.', 'tasks': ['grep / ripgrep / VS \u2018Find in Files\u2019 for keywords: \"AddOpenTelemetry\", \"ActivitySource\", \"SetTag\", \"AddTag\", \".UseOpenTelemetry\"', 'Identify the project that owns the public web entry point (likely Clm.Web, Clm.WebHost or similar)', 'Open Startup.cs / Program.cs and any *TelemetryExtensions.cs to understand how instrumentation is added', 'Confirm whether manual ActivitySource instrumentation or ASP.NET Core auto-instrumentation is being used'], 'expected_files': ['Startup.cs / Program.cs', 'OpenTelemetryExtensions.cs', 'TelemetryMiddleware.cs (if it exists)'], 'validation_criteria': 'All configuration files and any custom middleware that already calls Activity.SetTag have been documented'}, {'order': 2, 'name': 'Design Enrichment Hook', 'action': 'design', 'description': 'Decide the best location to enrich spans once headers are final.', 'tasks': ['If custom OTEL middleware already exists, plan to extend it', 'Otherwise design a new ASP.NET Core middleware placed AFTER routing but BEFORE exception/response compression middleware so that both request headers and final response headers are available'], 'dependencies': [1], 'validation_criteria': 'Middleware insertion point documented and agreed on with team'}, {'order': 3, 'name': 'Implement Middleware / Enrichment Logic', 'action': 'implement_changes', 'description': 'Add HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION tags', 'code_snippet': 'public class HttpRedirectEnrichmentMiddleware\\n{\\n    private readonly RequestDelegate _next;\\n    private static readonly ActivitySource Source = new(\"clm-web\");\\n\\n    public HttpRedirectEnrichmentMiddleware(RequestDelegate next) => _next = next;\\n\\n    public async Task InvokeAsync(HttpContext context)\\n    {\\n        Activity? activity = Activity.Current;\\n        string? referer = context.Request.Headers[\"Referer\"].FirstOrDefault();\\n        if (!string.IsNullOrEmpty(referer))\\n        {\\n            activity?.SetTag(\"HTTP_REFERER\", referer);\\n        }\\n\\n        await _next(context);\\n\\n        if (context.Response.StatusCode >= 300 && context.Response.StatusCode < 400)\\n        {\\n            string? location = context.Response.Headers[\"Location\"].FirstOrDefault();\\n            if (!string.IsNullOrEmpty(location))\\n            {\\n                activity?.SetTag(\"HTTP_RESPONSE_REDIRECT_LOCATION\", location);\\n            }\\n        }\\n    }\\n}', 'expected_files_modified_or_added': ['Middleware/HttpRedirectEnrichmentMiddleware.cs', 'Startup.cs or Program.cs (Add middleware registration)'], 'dependencies': [2], 'validation_criteria': 'Build succeeds and new tags compile without warnings'}, {'order': 4, 'name': 'Unit Tests & Static Analysis', 'action': 'add_tests', 'description': 'Create or update unit tests validating tag presence.', 'tasks': ['Add integration test using TestServer to simulate a 200 with referer and a 302 with Location', 'Run static-analysis search (CI step) to verify exactly two new tag names appear'], 'dependencies': [3], 'validation_criteria': 'Tests pass locally and on CI'}, {'order': 5, 'name': 'Local Manual Verification with OTLP Collector', 'action': 'manual_test', 'description': 'Run CLM-web locally with OTLP exporter pointing to a Docker collector + Jaeger to inspect spans.', 'tasks': ['Trigger /clm/Documents/BrowseDocuments.aspx with custom Referer header', 'Trigger an endpoint that returns 302', 'Verify new attributes show up in Jaeger UI or console exporter'], 'dependencies': [3], 'validation_criteria': 'Attributes visible in span payload'}, {'order': 6, 'name': 'Performance & Security Review', 'action': 'review', 'description': 'Ensure no PII or sensitive querystring leaks; run BenchmarkDotNet or kestrel perf tests.', 'dependencies': [5], 'validation_criteria': '\u22641 % overhead and security sign-off recorded'}, {'order': 7, 'name': 'Pull Request & Code Review', 'action': 'create_pr', 'description': 'Open PR, tag Observability and CLM owners; link to ticket; attach test screenshots.', 'dependencies': [6], 'validation_criteria': 'All reviewers approve; CI green'}, {'order': 8, 'name': 'Deploy to Dev / Demo Environment', 'action': 'deploy', 'description': 'Use existing release pipeline with feature flag \u2018otel_redirect_enrichment\u2019 set to ON for Demo only.', 'dependencies': [7], 'validation_criteria': 'Deployment successful; site health green'}, {'order': 9, 'name': 'Post-Deployment Validation in Demo', 'action': 'validate_in_demos', 'description': 'Run the provided Kusto query in Demo cluster.', 'tasks': ['Confirm HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION columns populated', 'Sample at least 100 spans; expect \u226595 % have referer when header present'], 'dependencies': [8], 'validation_criteria': 'Query returns expected data; screenshot stored in ticket'}, {'order': 10, 'name': 'Rollout to All Environments', 'action': 'deploy_to_prod', 'description': 'Gradual exposure: 10 % \u2192 50 % \u2192 100 % over 2 days with telemetry checks at each step.', 'dependencies': [9], 'validation_criteria': 'No error-rate or latency regression; attributes visible in Prod'}, {'order': 11, 'name': 'Documentation & Knowledge Share', 'action': 'document', 'description': 'Update internal observability run-book, add new attributes to CLM telemetry field dictionary.', 'dependencies': [10], 'validation_criteria': 'Confluence page updated, link in ticket'}, {'order': 12, 'name': 'Close Ticket', 'action': 'close_ticket', 'description': 'Mark ticket Done once acceptance criteria satisfied and validated.', 'dependencies': [11], 'validation_criteria': 'Ticket closed with evidence attached'}], contextual_hints=['Hooking into the response after the status code and Location header are finalized so the redirect tag is always populated', 'Guaranteeing the new enrichment runs for every request path (including static files, error pipeline, etc.) without imposing noticeable latency'], similar_patterns=['custom HTTP server span enrichment', 'response status-based attribute addition'], implementation_strategy=ImplementationStrategy(extend_existing=True, create_new=False, preferred_approach='middleware'), exact_requirements=ExactRequirements(attribute_names=['HTTP_REFERER', 'HTTP_RESPONSE_REDIRECT_LOCATION', 'HTTP_REFERER', 'HTTP_RESPONSE_REDIRECT_LOCATION'], patterns=['kusto\\nOtlpSpanEvents\\n| where Environment == \"Demo\"\\n| where url_path == \"/clm/Documents/BrowseDocuments.aspx\"\\n| where http_status_code > 200\\n| project Timestamp, url_path, http_status_code, HTTP_REFERER, HTTP_RESPONSE_REDIRECT_LOCATION\\n', '\\n\\n**Implementation Requirements:**\\n\\n1. **Add HTTP_REFERER attribute** to all incoming HTTP requests\\n   - Source: ', '\\n   - Add to span as: ', '\\n\\n2. **Add HTTP_RESPONSE_REDIRECT_LOCATION attribute** for redirect responses\\n   - Source: ', ' when status code is 301/302/303/307/308\\n   - Add to span as: '], implementation_notes=['SetTag(\"HTTP_RESPONSE_REDIRECT_LOCATION\", locationValue)`\\n\\n**Files to Look For:**\\n- CLM web application middleware or request handling code\\n- ASP', 'NET request pipeline components\\n- OpenTelemetry instrumentation configuration\\n- Files containing \"ActivitySource\", \"SetTag\", or \"AddTag\" method calls\\n- Middleware files that handle HTTP requests/responses\\n- Look for existing telemetry code in CLM-related projects\\n\\n**Acceptance Criteria:**\\n- [ ] HTTP_REFERER attribute captured from incoming request headers\\n- [ ] HTTP_RESPONSE_REDIRECT_LOCATION attribute captured for 302+ responses  \\n- [ ] Attributes visible in OtlpSpanEvents Kusto table\\n- [ ] No performance degradation from additional attribute collection\\n- [ ] Proper null/empty value handling for missing headers\\n\\n**Technical Notes:**\\n- Follow existing OpenTelemetry patterns in the codebase\\n- Ensure attribute names match exactly: \"HTTP_REFERER\" and \"HTTP_RESPONSE_REDIRECT_LOCATION\"\\n- Add attributes to HTTP request spans, not separate spans\\n- Handle edge cases where headers might be missing or empty']), telemetry_analysis=None)"