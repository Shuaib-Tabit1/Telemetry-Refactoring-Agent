[
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/API.GateKeeper/Middlewares/LogAsyncRequestHttpMiddleware.cs'), strategy=<SearchStrategy.KEYWORD: 'keyword'>, relevance_score=100, reasoning=\"Direct match for 'SetTag' (1 occurrences)\", matching_patterns=['SetTag'], context_snippets=['try\\n\\t\\t{\\n\\t\\t\\tcontext.AddKazMonServerVariables();\\n\\t\\t\\tactivity?.SetTagsWithCommonFields(context);\\n\\t\\t\\tawait base.Invoke(context);\\n\\t\\t\\tactivity?.SetStatus(context?.Response.StatusCode < 400 ? ActivityStatusCode.Ok : ActivityStatusCode.Error);\\n\\t\\t}'], confidence=0.95)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/Web.Common/Profile/ProfileModule.cs'), strategy=<SearchStrategy.KEYWORD: 'keyword'>, relevance_score=100, reasoning=\"Direct match for 'SetTag' (1 occurrences)\", matching_patterns=['SetTag'], context_snippets=['private void OnPostRequestHandlerExecute(object sender, EventArgs e)\\n\\t\\t{\\n\\t\\t\\tActivity.Current?.SetTagsWithCommonFields(HttpContext.Current);\\n\\t\\t\\tLogSessionSize(HttpContext.Current?.Session);\\n\\t\\t\\t_performanceLog.SetSession(HttpContext.Current?.Session);\\n\\t\\t}'], confidence=0.95)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/Web.Common/Helpers/BaseApiHandler.cs'), strategy=<SearchStrategy.KEYWORD: 'keyword'>, relevance_score=100, reasoning=\"Direct match for 'SetTag' (1 occurrences)\", matching_patterns=['SetTag'], context_snippets=['try\\n\\t\\t{\\n\\t\\t\\tPopulateFeatureFlagContext(AtlasContext.Current.UserAccount, context);\\n\\t\\t\\tActivity.Current?.SetTagsWithCommonFields(context);\\n\\t\\t}\\n\\t\\tcatch (Exception ex)\\n\\t\\t{'], confidence=0.95)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/WebNet/Middlewares/LogAsyncRequestHttpMiddleware.cs'), strategy=<SearchStrategy.KEYWORD: 'keyword'>, relevance_score=100, reasoning=\"Direct match for 'SetTag' (1 occurrences); Matches 2 keywords: OpenTelemetry, middleware\", matching_patterns=['SetTag', 'OpenTelemetry', 'middleware'], context_snippets=['try\\n\\t\\t{\\n\\t\\t\\tcontext.AddKazMonServerVariables();\\n\\t\\t\\tactivity?.SetTagsWithCommonFields(context);\\n\\t\\t\\tawait base.Invoke(context);\\n\\t\\t\\tactivity?.SetStatus(context?.Response.StatusCode < 400 ? ActivityStatusCode.Ok : ActivityStatusCode.Error);\\n\\t\\t}'], confidence=0.95)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/Web.Common/ScmHttpApplication.cs'), strategy=<SearchStrategy.PATTERN: 'pattern'>, relevance_score=100, reasoning='Telemetry infrastructure: Import: DocuSign.CLM.Monitoring, Import: DocuSign.Msf.AspNet.OpenTelemetry.SemanticConventions, Import: OpenTelemetry.Metrics', matching_patterns=['Import: DocuSign.CLM.Monitoring', 'Import: DocuSign.Msf.AspNet.OpenTelemetry.SemanticConventions', 'Import: OpenTelemetry.Metrics', 'Import: OpenTelemetry.Trace', 'Pattern: OpenTelemetry', 'Pattern: Instrumentation', 'Pattern: Monitoring', 'Pattern: Metrics', 'Pattern: UseOpenTelemetry'], context_snippets=[], confidence=0.85)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/ActIntegration/Client/ActIntegrationClient.cs'), strategy=<SearchStrategy.GRAPH_BASED: 'graph_based'>, relevance_score=90, reasoning='contains HTTP-related constant: ADEXS.ActIntegration.ActIntegrationClient.MakeHttpRequestV2Async(ADEXS.Core.Domain.Model.UserAccount, System.Guid, System.Guid, System.Net.Http.HttpMethod, string, string, string, string, int, DocuSign.CLM.Monitoring.SmartMon.ISmartMon, bool); has relationship to telemetry symbol: System.TimeSpan.FromSeconds(double); contains HTTP-related constant: ADEXS.ActIntegration.ActIntegrationClient.MakeHttpRequestV2(ADEXS.Core.Domain.Model.UserAccount, System.Guid, System.Guid, System.Net.Http.HttpMethod, string, string, string, string, int, DocuSign.CLM.Monitoring.SmartMon.ISmartMon, bool); has relationship to telemetry symbol: System.TimeSpan.FromSeconds(double); contains HTTP-related constant: ADEXS.ActIntegration.ActIntegrationClient.MakeHttpRequest(ADEXS.Core.Domain.Model.UserAccount, System.Net.Http.HttpMethod, string, string, string, string, int, DocuSign.CLM.Monitoring.SmartMon.ISmartMon); has relationship to telemetry symbol: System.TimeSpan.FromSeconds(double); contains HTTP-related constant: ADEXS.ActIntegration.ActIntegrationClient.GetHttpClient(); contains HTTP-related constant: ADEXS.ActIntegration.ActIntegrationClient.GetTokenScopesForHttpMethod(System.Net.Http.HttpMethod, ADEXS.ActIntegration.ActAccountInfo); contains HTTP-related constant: ADEXS.ActIntegration.ActIntegrationClient.AddDefaultRequestHeaders(ADEXS.ActIntegration.ActAccountInfo, string, System.Net.Http.HttpClient, string, string, string)', matching_patterns=['http_constant_ADEXS.ActIntegration.ActIntegrationClient.MakeHttpRequestV2Async(ADEXS.Core.Domain.Model.UserAccount, System.Guid, System.Guid, System.Net.Http.HttpMethod, string, string, string, string, int, DocuSign.CLM.Monitoring.SmartMon.ISmartMon, bool)', 'telemetry_relationship', 'http_constant_ADEXS.ActIntegration.ActIntegrationClient.MakeHttpRequestV2(ADEXS.Core.Domain.Model.UserAccount, System.Guid, System.Guid, System.Net.Http.HttpMethod, string, string, string, string, int, DocuSign.CLM.Monitoring.SmartMon.ISmartMon, bool)', 'telemetry_relationship', 'http_constant_ADEXS.ActIntegration.ActIntegrationClient.MakeHttpRequest(ADEXS.Core.Domain.Model.UserAccount, System.Net.Http.HttpMethod, string, string, string, string, int, DocuSign.CLM.Monitoring.SmartMon.ISmartMon)', 'telemetry_relationship', 'http_constant_ADEXS.ActIntegration.ActIntegrationClient.GetHttpClient()', 'http_constant_ADEXS.ActIntegration.ActIntegrationClient.GetTokenScopesForHttpMethod(System.Net.Http.HttpMethod, ADEXS.ActIntegration.ActAccountInfo)', 'http_constant_ADEXS.ActIntegration.ActIntegrationClient.AddDefaultRequestHeaders(ADEXS.ActIntegration.ActAccountInfo, string, System.Net.Http.HttpClient, string, string, string)'], context_snippets=[], confidence=0.8)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/OpenApiClients/DacDocGenApiClient/Api/GenApi.cs'), strategy=<SearchStrategy.GRAPH_BASED: 'graph_based'>, relevance_score=90, reasoning='contains HTTP-related constant: DacDocGenApiClient.Api.GenApi.GenerateDocumentV1WithHttpInfo(string, DacDocGenApiClient.Model.GenerateDocumentRequest); contains HTTP-related constant: DacDocGenApiClient.Api.GenApi.GenerateDocumentV1WithHttpInfoAsync(string, DacDocGenApiClient.Model.GenerateDocumentRequest, System.Threading.CancellationToken); contains HTTP-related constant: DacDocGenApiClient.Api.GenApi.ParseTemplateV1WithHttpInfo(System.Guid, DacDocGenApiClient.Model.ParseTemplateRequest); contains HTTP-related constant: DacDocGenApiClient.Api.GenApi.ParseTemplateV1WithHttpInfoAsync(System.Guid, DacDocGenApiClient.Model.ParseTemplateRequest, System.Threading.CancellationToken); contains HTTP-related constant: DacDocGenApiClient.Api.GenApi.UploadTemplateV1WithHttpInfo(System.Guid, string, DacDocGenApiClient.Client.FileParameter, long?); contains HTTP-related constant: DacDocGenApiClient.Api.GenApi.UploadTemplateV1WithHttpInfoAsync(System.Guid, string, DacDocGenApiClient.Client.FileParameter, long?, System.Threading.CancellationToken)', matching_patterns=['http_constant_DacDocGenApiClient.Api.GenApi.GenerateDocumentV1WithHttpInfo(string, DacDocGenApiClient.Model.GenerateDocumentRequest)', 'http_constant_DacDocGenApiClient.Api.GenApi.GenerateDocumentV1WithHttpInfoAsync(string, DacDocGenApiClient.Model.GenerateDocumentRequest, System.Threading.CancellationToken)', 'http_constant_DacDocGenApiClient.Api.GenApi.ParseTemplateV1WithHttpInfo(System.Guid, DacDocGenApiClient.Model.ParseTemplateRequest)', 'http_constant_DacDocGenApiClient.Api.GenApi.ParseTemplateV1WithHttpInfoAsync(System.Guid, DacDocGenApiClient.Model.ParseTemplateRequest, System.Threading.CancellationToken)', 'http_constant_DacDocGenApiClient.Api.GenApi.UploadTemplateV1WithHttpInfo(System.Guid, string, DacDocGenApiClient.Client.FileParameter, long?)', 'http_constant_DacDocGenApiClient.Api.GenApi.UploadTemplateV1WithHttpInfoAsync(System.Guid, string, DacDocGenApiClient.Client.FileParameter, long?, System.Threading.CancellationToken)'], context_snippets=[], confidence=0.8)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/OpenApiClients/DacDocGenApiClient/Client/ApiClient.cs'), strategy=<SearchStrategy.GRAPH_BASED: 'graph_based'>, relevance_score=90, reasoning='contains HTTP-related constant: DacDocGenApiClient.Client.CustomJsonCodec.Deserialize<T>(System.Net.Http.HttpResponseMessage); contains HTTP-related constant: DacDocGenApiClient.Client.CustomJsonCodec.Deserialize(System.Net.Http.HttpResponseMessage, System.Type); contains HTTP-related constant: DacDocGenApiClient.Client.ApiClient.NewRequest(System.Net.Http.HttpMethod, string, DacDocGenApiClient.Client.RequestOptions, DacDocGenApiClient.Client.IReadableConfiguration); contains HTTP-related constant: DacDocGenApiClient.Client.ApiClient.InterceptRequest(System.Net.Http.HttpRequestMessage); contains HTTP-related constant: DacDocGenApiClient.Client.ApiClient.InterceptResponse(System.Net.Http.HttpRequestMessage, System.Net.Http.HttpResponseMessage); contains HTTP-related constant: DacDocGenApiClient.Client.ApiClient.ToApiResponse<T>(System.Net.Http.HttpResponseMessage, object, System.Uri); contains HTTP-related constant: DacDocGenApiClient.Client.ApiClient.Exec<T>(System.Net.Http.HttpRequestMessage, DacDocGenApiClient.Client.IReadableConfiguration); contains HTTP-related constant: DacDocGenApiClient.Client.ApiClient.ExecAsync<T>(System.Net.Http.HttpRequestMessage, DacDocGenApiClient.Client.IReadableConfiguration, System.Threading.CancellationToken)', matching_patterns=['http_constant_DacDocGenApiClient.Client.CustomJsonCodec.Deserialize<T>(System.Net.Http.HttpResponseMessage)', 'http_constant_DacDocGenApiClient.Client.CustomJsonCodec.Deserialize(System.Net.Http.HttpResponseMessage, System.Type)', 'http_constant_DacDocGenApiClient.Client.ApiClient.NewRequest(System.Net.Http.HttpMethod, string, DacDocGenApiClient.Client.RequestOptions, DacDocGenApiClient.Client.IReadableConfiguration)', 'http_constant_DacDocGenApiClient.Client.ApiClient.InterceptRequest(System.Net.Http.HttpRequestMessage)', 'http_constant_DacDocGenApiClient.Client.ApiClient.InterceptResponse(System.Net.Http.HttpRequestMessage, System.Net.Http.HttpResponseMessage)', 'http_constant_DacDocGenApiClient.Client.ApiClient.ToApiResponse<T>(System.Net.Http.HttpResponseMessage, object, System.Uri)', 'http_constant_DacDocGenApiClient.Client.ApiClient.Exec<T>(System.Net.Http.HttpRequestMessage, DacDocGenApiClient.Client.IReadableConfiguration)', 'http_constant_DacDocGenApiClient.Client.ApiClient.ExecAsync<T>(System.Net.Http.HttpRequestMessage, DacDocGenApiClient.Client.IReadableConfiguration, System.Threading.CancellationToken)'], context_snippets=[], confidence=0.8)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/Web/OWINStartup.cs'), strategy=<SearchStrategy.KEYWORD: 'keyword'>, relevance_score=55, reasoning='Matches 1 keywords: middleware', matching_patterns=['middleware'], context_snippets=[], confidence=0.6)"
]