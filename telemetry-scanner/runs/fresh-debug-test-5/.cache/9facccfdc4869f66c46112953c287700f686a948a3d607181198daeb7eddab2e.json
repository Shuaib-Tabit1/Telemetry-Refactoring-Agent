[
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/DetectTypeService/DetectTypeProcessor.Trace.cs'), strategy=<SearchStrategy.KEYWORD: 'keyword'>, relevance_score=100, reasoning=\"Direct match for 'SetTag' (4 occurrences); Contains method call: SetTag (4 times)\", matching_patterns=['SetTag'], context_snippets=['_serviceInstrumentation?.ActivitySource\\n\\t\\t\\t?.StartActivity($\"{InstrumentationNames.DetectTypeName}.{name}\")\\n\\t\\t\\t?.SetStatus(ActivityStatusCode.Error)\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeMessageType, TraceSemanticConventions.MessageTypeValues.Received)\\n\\t\\t\\t?.SetTag(MqWorkersServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, nameof(TaskTypes.DetectTypeTask))\\n\\t\\t\\t?.SetMetricName(InstrumentationNames.DetectTypeName)', '?.StartActivity($\"{InstrumentationNames.DetectTypeName}.{name}\")\\n\\t\\t\\t?.SetStatus(ActivityStatusCode.Error)\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeMessageType, TraceSemanticConventions.MessageTypeValues.Received)\\n\\t\\t\\t?.SetTag(MqWorkersServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, nameof(TaskTypes.DetectTypeTask))\\n\\t\\t\\t?.SetMetricName(InstrumentationNames.DetectTypeName)\\n\\t\\t\\t?.SetQueueTaskTags(Task)', '?.SetStatus(ActivityStatusCode.Error)\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeMessageType, TraceSemanticConventions.MessageTypeValues.Received)\\n\\t\\t\\t?.SetTag(MqWorkersServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, nameof(TaskTypes.DetectTypeTask))\\n\\t\\t\\t?.SetMetricName(InstrumentationNames.DetectTypeName)\\n\\t\\t\\t?.SetQueueTaskTags(Task)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignFileDataId, DeserializedPayload.FileDataUid);', '?.SetTag(MqWorkersServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, nameof(TaskTypes.DetectTypeTask))\\n\\t\\t\\t?.SetMetricName(InstrumentationNames.DetectTypeName)\\n\\t\\t\\t?.SetQueueTaskTags(Task)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignFileDataId, DeserializedPayload.FileDataUid);\\n}\\n#nullable restore'], confidence=0.95)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/DetectTypeService/VideoInfoProcessor.Trace.cs'), strategy=<SearchStrategy.KEYWORD: 'keyword'>, relevance_score=100, reasoning=\"Direct match for 'SetTag' (4 occurrences); Contains method call: SetTag (4 times)\", matching_patterns=['SetTag'], context_snippets=['_serviceInstrumentation?.ActivitySource\\n\\t\\t\\t?.StartActivity($\"{InstrumentationNames.VideoInfoName}.{name}\")\\n\\t\\t\\t?.SetStatus(ActivityStatusCode.Error)\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeMessageType, TraceSemanticConventions.MessageTypeValues.Received)\\n\\t\\t\\t?.SetTag(MqWorkersServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, nameof(TaskTypes.VideoInfoTask))\\n\\t\\t\\t?.SetMetricName(InstrumentationNames.VideoInfoName)', '?.StartActivity($\"{InstrumentationNames.VideoInfoName}.{name}\")\\n\\t\\t\\t?.SetStatus(ActivityStatusCode.Error)\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeMessageType, TraceSemanticConventions.MessageTypeValues.Received)\\n\\t\\t\\t?.SetTag(MqWorkersServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, nameof(TaskTypes.VideoInfoTask))\\n\\t\\t\\t?.SetMetricName(InstrumentationNames.VideoInfoName)\\n\\t\\t\\t?.SetQueueTaskTags(Task)', '?.SetStatus(ActivityStatusCode.Error)\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeMessageType, TraceSemanticConventions.MessageTypeValues.Received)\\n\\t\\t\\t?.SetTag(MqWorkersServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, nameof(TaskTypes.VideoInfoTask))\\n\\t\\t\\t?.SetMetricName(InstrumentationNames.VideoInfoName)\\n\\t\\t\\t?.SetQueueTaskTags(Task)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignDocumentId, DeserializedPayload.DocumentUid);', '?.SetTag(MqWorkersServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, nameof(TaskTypes.VideoInfoTask))\\n\\t\\t\\t?.SetMetricName(InstrumentationNames.VideoInfoName)\\n\\t\\t\\t?.SetQueueTaskTags(Task)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignDocumentId, DeserializedPayload.DocumentUid);\\n}\\n#nullable restore'], confidence=0.95)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/DetectTypeService/DetectTypeProcessor.cs'), strategy=<SearchStrategy.KEYWORD: 'keyword'>, relevance_score=100, reasoning=\"Direct match for 'SetTag' (1 occurrences)\", matching_patterns=['SetTag'], context_snippets=['Logger.InfoNoPII(Task.LastErrorMessage);\\n\\t\\t\\t\\t\\tresult.TaskResult = TaskResult.Success;\\n\\t\\t\\t\\t\\tactivity?.SetStatus(ActivityStatusCode.Ok)\\n\\t\\t\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignDetectTypeMimeType, mimeType);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tcatch (Exception e)\\n\\t\\t\\t\\t{'], confidence=0.95)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/Web.Common/ScmHttpApplication.cs'), strategy=<SearchStrategy.KEYWORD: 'keyword'>, relevance_score=100, reasoning=\"Direct match for 'SetTag' (2 occurrences); Telemetry infrastructure: Import: DocuSign.CLM.Monitoring, Import: DocuSign.Msf.AspNet.OpenTelemetry.SemanticConventions, Import: OpenTelemetry.Metrics\", matching_patterns=['Import: DocuSign.CLM.Monitoring', 'Import: DocuSign.Msf.AspNet.OpenTelemetry.SemanticConventions', 'Pattern: UseOpenTelemetry', 'SetTag', 'Pattern: Metrics', 'Pattern: OpenTelemetry', 'Import: OpenTelemetry.Metrics', 'Import: OpenTelemetry.Trace', 'Pattern: Monitoring', 'Pattern: Instrumentation'], context_snippets=['// [ATL-90561] Adding HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION to traces for NetFramework\\n\\t\\t\\t\\t\\t\\t//options.EnrichWithHttpResponse = (Activity activity, HttpResponse response) =>\\n\\t\\t\\t\\t\\t\\t//\\t{\\n\\t\\t\\t\\t\\t\\t//\\t\\tactivity.SetTag(OtelSemanticConventions.AttributeHttpResponseRedirectUrl, response?.Headers[\"Location\"]);\\n\\t\\t\\t\\t\\t\\t//\\t};\\n\\t\\t\\t\\t\\t\\t//\\toptions.EnrichWithHttpRequest = (Activity activity, HttpRequest request) =>\\n\\t\\t\\t\\t\\t\\t//\\t{', '//\\t};\\n\\t\\t\\t\\t\\t\\t//\\toptions.EnrichWithHttpRequest = (Activity activity, HttpRequest request) =>\\n\\t\\t\\t\\t\\t\\t//\\t{\\n\\t\\t\\t\\t\\t\\t//\\t\\tactivity.SetTag(OtelSemanticConventions.AttributeHttpReferer, request?.Headers[\"Referer\"]);\\n\\t\\t\\t\\t\\t\\t//\\t};\\n\\t\\t\\t\\t\\t\\t.AddAspNetInstrumentation(options =>\\n\\t\\t\\t\\t\\t\\t{'], confidence=0.95)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/MessageWorkerService/DispatchedWorker.cs'), strategy=<SearchStrategy.KEYWORD: 'keyword'>, relevance_score=100, reasoning=\"Direct match for 'SetTag' (3 occurrences)\", matching_patterns=['SetTag'], context_snippets=['ActivityKind.Consumer,\\n\\t\\t\\t\\t\\tparentContext: correlationToken.ToActivityContext())\\n\\t\\t\\t\\t?.SetStatus(ActivityStatusCode.Error)\\n\\t\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeMessageType, TraceSemanticConventions.MessageTypeValues.Received)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, TypeName)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignMessageQueueType, ServiceTraceSemanticConventions.DocuSignMessageQueueTypeWorker)\\n\\t\\t\\t\\t?.SetQueueTaskTags(task);', 'parentContext: correlationToken.ToActivityContext())\\n\\t\\t\\t\\t?.SetStatus(ActivityStatusCode.Error)\\n\\t\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeMessageType, TraceSemanticConventions.MessageTypeValues.Received)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, TypeName)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignMessageQueueType, ServiceTraceSemanticConventions.DocuSignMessageQueueTypeWorker)\\n\\t\\t\\t\\t?.SetQueueTaskTags(task);\\n\\t}', '?.SetStatus(ActivityStatusCode.Error)\\n\\t\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeMessageType, TraceSemanticConventions.MessageTypeValues.Received)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, TypeName)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignMessageQueueType, ServiceTraceSemanticConventions.DocuSignMessageQueueTypeWorker)\\n\\t\\t\\t\\t?.SetQueueTaskTags(task);\\n\\t}\\n}'], confidence=0.95)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/WINS/Engine/WorkflowInstance.cs'), strategy=<SearchStrategy.KEYWORD: 'keyword'>, relevance_score=100, reasoning=\"Direct match for 'SetTag' (9 occurrences); Contains method call: SetTag (9 times)\", matching_patterns=['SetTag'], context_snippets=['LastProcessDate = DateTime.UtcNow;\\n\\n\\t\\t\\tusing var span = StartActivity()\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, instanceActivity.Uid);\\n\\n            IWINSActivity activity = _SafeGetActivity(instanceActivity);\\n            if (activity == null) throw new ApplicationException(string.Format(\"Cannot find expected activity {0} in workflow map for instanceUid {1}\", instanceActivity.ActivityTypeName, Uid));', 'LastProcessDate = DateTime.UtcNow;\\n\\n\\t\\t\\tusing var span = StartActivity()\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, instanceActivity?.Uid);\\n\\n            IWINSActivity activity = _SafeGetActivity(instanceActivity);\\n            if (activity == null) return;', 'private Activity StartActivity([CallerMemberName] string name = \"\") => ServiceInstrumentation?.ActivitySource\\n\\t\\t\\t?.StartActivity($\"{nameof(WorkflowInstance)}.{name}\")\\n\\t\\t\\t?.SetStatus(ActivityStatusCode.Error)\\n\\t\\t\\t.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\\n\\t\\t\\t.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, _instance.AccountId)\\n\\t\\t\\t.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, _instance.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, _instance.Uid)', '?.StartActivity($\"{nameof(WorkflowInstance)}.{name}\")\\n\\t\\t\\t?.SetStatus(ActivityStatusCode.Error)\\n\\t\\t\\t.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\\n\\t\\t\\t.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, _instance.AccountId)\\n\\t\\t\\t.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, _instance.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, _instance.Uid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, _instance.VersionUid)', '?.SetStatus(ActivityStatusCode.Error)\\n\\t\\t\\t.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\\n\\t\\t\\t.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, _instance.AccountId)\\n\\t\\t\\t.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, _instance.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, _instance.Uid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, _instance.VersionUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, _instance.RevisionUid)', '.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\\n\\t\\t\\t.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, _instance.AccountId)\\n\\t\\t\\t.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, _instance.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, _instance.Uid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, _instance.VersionUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, _instance.RevisionUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, _instance.DefinitionUid);', '.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, _instance.AccountId)\\n\\t\\t\\t.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, _instance.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, _instance.Uid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, _instance.VersionUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, _instance.RevisionUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, _instance.DefinitionUid);', '.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, _instance.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, _instance.Uid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, _instance.VersionUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, _instance.RevisionUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, _instance.DefinitionUid);\\n\\n\\t\\tprivate void CheckAndHandleInstanceStateChanges()', '.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, _instance.Uid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, _instance.VersionUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, _instance.RevisionUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, _instance.DefinitionUid);\\n\\n\\t\\tprivate void CheckAndHandleInstanceStateChanges()\\n\\t\\t{'], confidence=0.95)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/API.WorkflowActivities/Program.cs'), strategy=<SearchStrategy.PATTERN: 'pattern'>, relevance_score=100, reasoning='Telemetry infrastructure: Import: DocuSign.CLM.API.WorkflowActivities.Infrastructure.Telemetry.Metrics.MetricsEmitters, Import: DocuSign.Msf.AspNet.OpenTelemetry.ServiceMetrics, Import: OpenTelemetry.Metrics; Matches 2 keywords: OpenTelemetry, middleware; Matches 2 keywords: OpenTelemetry, middleware', matching_patterns=['middleware', 'Import: DocuSign.CLM.API.WorkflowActivities.Infrastructure.Telemetry.Metrics.MetricsEmitters', 'Config file: program.cs', 'OpenTelemetry', 'Pattern: Metrics', 'Pattern: OpenTelemetry', 'Import: OpenTelemetry.Metrics', 'Pattern: Instrumentation', 'Import: DocuSign.Msf.AspNet.OpenTelemetry.ServiceMetrics'], context_snippets=[], confidence=0.85)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/AtlasDataManipulationService/Startup.cs'), strategy=<SearchStrategy.PATTERN: 'pattern'>, relevance_score=100, reasoning='Telemetry infrastructure: Import: ADEXS.Caching.OpenTelemetry.Extensions, Import: ADEXS.CqlCorePersistence.OpenTelemetry, Import: DocuSign.Msf.AspNet.OpenTelemetry.ServiceMetrics.Extensions', matching_patterns=['Import: ADEXS.Caching.OpenTelemetry.Extensions', 'Import: ADEXS.CqlCorePersistence.OpenTelemetry', 'Import: DocuSign.Msf.AspNet.OpenTelemetry.ServiceMetrics.Extensions', 'Import: DocuSign.Msf.AspNet.OpenTelemetry', 'Import: OpenTelemetry.Exporter', 'Import: OpenTelemetry.Metrics', 'Import: OpenTelemetry.Trace', 'Pattern: OpenTelemetry', 'Pattern: Instrumentation', 'Pattern: Metrics', 'Pattern: ConfigureServices', 'Config file: startup.cs'], context_snippets=[], confidence=0.85)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/Core.ServiceFramework/ICoreInstrumentationLifetimeService.cs'), strategy=<SearchStrategy.PATTERN: 'pattern'>, relevance_score=100, reasoning='Telemetry infrastructure: Import: OpenTelemetry.Metrics, Import: OpenTelemetry.Trace, Pattern: OpenTelemetry', matching_patterns=['Import: OpenTelemetry.Metrics', 'Import: OpenTelemetry.Trace', 'Pattern: OpenTelemetry', 'Pattern: Instrumentation', 'Pattern: Metrics', 'Pattern: TracerProvider', 'Pattern: MeterProvider', 'Config file: icoreinstrumentationlifetimeservice.cs'], context_snippets=[], confidence=0.85)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/WINS/Service/V1/WinsService.cs'), strategy=<SearchStrategy.STRUCTURAL: 'structural'>, relevance_score=100, reasoning='Contains method call: SetTag (54 times)', matching_patterns=['SetTag'], context_snippets=['ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\\n\\n\\t\\tValidateWorkflowName(request!.WorkflowName);\\n\\t\\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\\n\\n\\t\\tValidateWorkflowName(request!.WorkflowName);\\n\\t\\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\\n\\n\\t\\tValidateWorkflowName(request!.WorkflowName);\\n\\t\\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.VersionUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.VersionUid, out var versionUid))', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.VersionUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.VersionUid, out var versionUid))\\n\\t\\t{', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\\n\\n\\t\\tValidateWorkflowName(request!.WorkflowName);\\n\\t\\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.SourceVersionUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.SourceVersionUid, out var sourceVersionUid))', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.SourceVersionUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.SourceVersionUid, out var sourceVersionUid))\\n\\t\\t{', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\\n\\n\\t\\tValidateWorkflowName(request!.WorkflowName);\\n\\t\\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))\\n\\t\\t{', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))\\n\\t\\t{', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', 'ServerCallContext context)\\n\\t{\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid);', '{\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid);\\n\\n\\t\\tif (!Guid.TryParse(request.InstanceUid, out var instanceUid))', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid);\\n\\n\\t\\tif (!Guid.TryParse(request.InstanceUid, out var instanceUid))\\n\\t\\t{', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', 'request.XmlParam);\\n\\n\\t\\t\\tactivity?.SetStatus(ActivityStatusCode.Ok)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, instanceUid);\\n\\t\\t\\treturn Task.FromResult(new StartWorkflowResponse {InstanceUid = instanceUid.ToString()});\\n\\t\\t}\\n\\t\\tcatch (ArgumentException argEx)', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\\n\\n\\t\\tValidateWorkflowName(request!.WorkflowName);', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\\n\\n\\t\\tValidateWorkflowName(request!.WorkflowName);\\n\\t\\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);', 'ValidateUser(request?.StartParameters?.Submitter);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.RevisionUid);', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.RevisionUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.RevisionUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))\\n\\t\\t{', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.RevisionUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.RevisionUid, out var revisionUid))', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.RevisionUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.RevisionUid, out var revisionUid))\\n\\t\\t{', 'request.XmlParam);\\n\\n\\t\\t\\tactivity?.SetStatus(ActivityStatusCode.Ok)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, instanceUid);\\n\\t\\t\\treturn Task.FromResult(new StartRoutingApprovalWorkflowResponse {InstanceUid = instanceUid.ToString()});\\n\\t\\t}\\n\\t\\tcatch (ArgumentException argEx)', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\\n\\n\\t\\tValidateWorkflowName(request!.WorkflowName);\\n\\t\\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);', 'request.XmlParam);\\n\\n\\t\\t\\tactivity?.SetStatus(ActivityStatusCode.Ok)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, instanceUid);\\n\\n\\t\\t\\treturn Task.FromResult(new SendStartWorkflowResponse {InstanceUid = instanceUid.ToString()});\\n\\t\\t}', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkItemUid, request.WorkItemUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.WorkItemUid, out var workItemUid))', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkItemUid, request.WorkItemUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.WorkItemUid, out var workItemUid))\\n\\t\\t{', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.Version.Uid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, request.Version.DefinitionUid);', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.Version.Uid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, request.Version.DefinitionUid);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.Version.Uid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, request.Version.DefinitionUid);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.Revision.Uid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.Revision.VersionUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, request.Revision.DefinitionUid);', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.Revision.Uid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.Revision.VersionUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, request.Revision.DefinitionUid);', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.Revision.Uid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.Revision.VersionUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, request.Revision.DefinitionUid);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', '?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.Revision.Uid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.Revision.VersionUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, request.Revision.DefinitionUid);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceInstanceUid, request.SourceInstanceUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceActivityUid, request.SourceActivityUid);', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceInstanceUid, request.SourceInstanceUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceActivityUid, request.SourceActivityUid);', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceInstanceUid, request.SourceInstanceUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceActivityUid, request.SourceActivityUid);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', '?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceInstanceUid, request.SourceInstanceUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceActivityUid, request.SourceActivityUid);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', 'ValidateUser(request?.User);\\n\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceInstanceUid, request.SourceInstanceUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceActivityUid, request.SourceActivityUid);', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceInstanceUid, request.SourceInstanceUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceActivityUid, request.SourceActivityUid);', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceInstanceUid, request.SourceInstanceUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceActivityUid, request.SourceActivityUid);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', '?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceInstanceUid, request.SourceInstanceUid)\\n\\t\\t\\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceActivityUid, request.SourceActivityUid);\\n\\n\\t\\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);', 'ServerCallContext context)\\n\\t{\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.RevisionUid);', '{\\n\\t\\tusing var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.RevisionUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))', 'using var activity = StartActivity()\\n\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request.AccountId)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid)\\n\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.RevisionUid);\\n\\n\\t\\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))\\n\\t\\t{'], confidence=0.9)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/DetectTypeService/VideoInfo/VideoInfo.cs'), strategy=<SearchStrategy.STRUCTURAL: 'structural'>, relevance_score=100, reasoning='Contains method call: SetTag (5 times)', matching_patterns=['SetTag'], context_snippets=['_serviceInstrumentation?.ActivitySource\\n\\t\\t\\t\\t?.StartActivity($\"{InstrumentationNames.MediaInfo}.{name}\")\\n\\t\\t\\t\\t?.SetStatus(ActivityStatusCode.Error)\\n\\t\\t\\t\\t?.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\\n\\t\\t\\t\\t?.SetMetricName(InstrumentationNames.MediaInfo);\\n\\n\\t\\tprivate Activity SetVideoInfoTags(Activity activity, VideoInfoModel videoInfoModel) =>', 'private Activity SetVideoInfoTags(Activity activity, VideoInfoModel videoInfoModel) =>\\n\\t\\t\\tactivity\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoWidth, videoInfoModel.Width)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoHeight, videoInfoModel.Height)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoDuration, videoInfoModel.Duration)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoCodec, videoInfoModel.Codec);', 'private Activity SetVideoInfoTags(Activity activity, VideoInfoModel videoInfoModel) =>\\n\\t\\t\\tactivity\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoWidth, videoInfoModel.Width)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoHeight, videoInfoModel.Height)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoDuration, videoInfoModel.Duration)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoCodec, videoInfoModel.Codec);\\n\\t}', 'activity\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoWidth, videoInfoModel.Width)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoHeight, videoInfoModel.Height)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoDuration, videoInfoModel.Duration)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoCodec, videoInfoModel.Codec);\\n\\t}\\n}', '?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoWidth, videoInfoModel.Width)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoHeight, videoInfoModel.Height)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoDuration, videoInfoModel.Duration)\\n\\t\\t\\t\\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignVideoInfoCodec, videoInfoModel.Codec);\\n\\t}\\n}'], confidence=0.9)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/Core.Types/Enums.cs'), strategy=<SearchStrategy.GRAPH_BASED: 'graph_based'>, relevance_score=100, reasoning='has relationship to telemetry symbol: System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool); has relationship to telemetry symbol: System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool); has relationship to telemetry symbol: System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool); has relationship to telemetry symbol: System.Collections.Generic.IEnumerable<System.ComponentModel.DescriptionAttribute>.FirstOrDefault<System.ComponentModel.DescriptionAttribute>(); has relationship to telemetry symbol: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type); has relationship to telemetry symbol: System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool); has relationship to telemetry symbol: System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)', matching_patterns=['telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship'], context_snippets=[], confidence=0.8)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/WINS.Protocol/obj/Debug/net48/docusign/workflow/wins/v1alpha1/WinsModels.cs'), strategy=<SearchStrategy.GRAPH_BASED: 'graph_based'>, relevance_score=90, reasoning='has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.WriteTagAndValue(ref Google.Protobuf.WriteContext, string); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag()', matching_patterns=['telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship'], context_snippets=[], confidence=0.8)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/WINS.Protocol/obj/Debug/net48/docusign/workflow/wins/v1alpha1/WinsService.cs'), strategy=<SearchStrategy.GRAPH_BASED: 'graph_based'>, relevance_score=90, reasoning='has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.WriteTagAndValue(ref Google.Protobuf.WriteContext, string); has relationship to telemetry symbol: Google.Protobuf.FieldCodec<string>.CalculateSizeWithTag(string); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag(); has relationship to telemetry symbol: Google.Protobuf.JsonFormatter.ToDiagnosticString(Google.Protobuf.IMessage); has relationship to telemetry symbol: Google.Protobuf.WriteContext.WriteRawTag(byte); has relationship to telemetry symbol: Google.Protobuf.ParseContext.ReadTag()', matching_patterns=['telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship'], context_snippets=[], confidence=0.8)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/Atlas.Workflow.Client/WorkflowDesignRepository.cs'), strategy=<SearchStrategy.GRAPH_BASED: 'graph_based'>, relevance_score=90, reasoning='has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string); has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string); has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string); has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string); has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string); has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string); has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string); has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string); has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string); has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string); has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string); has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string); has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string); has relationship to telemetry symbol: ADEXS.Atlas.Workflow.Client.Telemetry.WorkflowClientTelemetry.GetTimer(string)', matching_patterns=['telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship'], context_snippets=[], confidence=0.8)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/Core.Domain/AIConfiguration/ConfigurationService.cs'), strategy=<SearchStrategy.GRAPH_BASED: 'graph_based'>, relevance_score=90, reasoning='file contains configuration or constants; has relationship to telemetry symbol: ADEXS.Core.Domain.AIConfiguration.ConfigurationService.PopulateAOMAttributes(ADEXS.Core.Domain.Model.UserAccount, System.Guid, System.Collections.Generic.List<System.Linq.IGrouping<ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType, ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping>>, System.Collections.Generic.List<ADEXS.Core.Domain.AIConfiguration.Models.RuleModelMappingBasicDetails>, System.Collections.Generic.List<System.Linq.IGrouping<ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType, ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping>>); has relationship to telemetry symbol: ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataGroupRepository.LoadByAccountId(int); has relationship to telemetry symbol: ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataGroupRepository.LoadByUid(int, System.Guid); has relationship to telemetry symbol: ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementFieldService.GetStandardFields(ADEXS.Core.Domain.Model.UserAccount, ADEXS.Core.Domain.Repository.AgreementRepository.Tag?); has relationship to telemetry symbol: ADEXS.Core.Domain.AIConfiguration.Utilities.DataTypeHelper.IsCustomAttributeSupported(ADEXS.Core.Domain.Model.MetadataField, out ADEXS.Core.Types.Enums.AttributeFieldType, out RulesEngineAPIClient.Model.DataType); has relationship to telemetry symbol: ADEXS.Core.Domain.AIConfiguration.Utilities.DataTypeHelper.IsStandardAttributeSupported(ADEXS.Core.Domain.Repository.AgreementRepository.AgreementField, out ADEXS.Core.Types.Enums.AttributeFieldType, out RulesEngineAPIClient.Model.DataType); has relationship to telemetry symbol: ADEXS.Core.Domain.SmartAgreement.AIModelManagement.IAiModelManagement.GetAllowedModelItemsByAccount(ADEXS.Core.Domain.Model.Account); has relationship to telemetry symbol: ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementFieldService.GetStandardFields(ADEXS.Core.Domain.Model.UserAccount, ADEXS.Core.Domain.Repository.AgreementRepository.Tag?)', matching_patterns=['configuration_pattern', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship', 'telemetry_relationship'], context_snippets=[], confidence=0.8)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/Core.ServiceFramework/AbstractServicedComponent.cs'), strategy=<SearchStrategy.PATTERN: 'pattern'>, relevance_score=85, reasoning='Telemetry infrastructure: Import: DocuSign.CLM.Monitoring, Import: DocuSign.Monitoring, Import: service invocation to start process,\\n\\t\\t\\t\\t\\t// so Assembly.EntryAssembly is not represents correct service assembly. We are\\n\\t\\t\\t\\t\\t// using GetType().Assembly instead, which would provide correct release version.\\n\\t\\t\\t\\t\\tTask.Run(() => _coreInstrumentationLifetimeService.StartAsync(\\n\\t\\t\\t\\t\\t\\tassembly: this.GetType().Assembly))\\n\\t\\t\\t\\t\\t\\t\\t.GetAwaiter().GetResult()', matching_patterns=['Import: DocuSign.CLM.Monitoring', 'Import: DocuSign.Monitoring', 'Import: service invocation to start process,\\n\\t\\t\\t\\t\\t// so Assembly.EntryAssembly is not represents correct service assembly. We are\\n\\t\\t\\t\\t\\t// using GetType().Assembly instead, which would provide correct release version.\\n\\t\\t\\t\\t\\tTask.Run(() => _coreInstrumentationLifetimeService.StartAsync(\\n\\t\\t\\t\\t\\t\\tassembly: this.GetType().Assembly))\\n\\t\\t\\t\\t\\t\\t\\t.GetAwaiter().GetResult()', 'Pattern: OpenTelemetry', 'Pattern: Instrumentation', 'Pattern: Monitoring', 'Pattern: UseOpenTelemetry'], context_snippets=[], confidence=0.85)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/Core.Domain/GlobalSuppressions.cs'), strategy=<SearchStrategy.KEYWORD: 'keyword'>, relevance_score=80, reasoning='Matches 2 keywords: OpenTelemetry, redirect; Matches 2 keywords: OpenTelemetry, redirect', matching_patterns=['OpenTelemetry', 'redirect'], context_snippets=[], confidence=0.6)",
  "SearchResult(file_path=PosixPath('/Users/shuaib.tabit/Documents/Atlas/src/Web/GlobalSuppressions.cs'), strategy=<SearchStrategy.KEYWORD: 'keyword'>, relevance_score=80, reasoning='Matches 2 keywords: middleware, redirect', matching_patterns=['middleware', 'redirect'], context_snippets=[], confidence=0.6)"
]