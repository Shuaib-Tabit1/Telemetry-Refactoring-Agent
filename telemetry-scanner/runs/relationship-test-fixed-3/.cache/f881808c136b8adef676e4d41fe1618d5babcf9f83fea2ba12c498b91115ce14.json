"EnhancedIntent(issue_category='INSTRUMENTATION', static_analysis_query={'find_method_call': 'SetTag'}, semantic_description='Add HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION headers as attributes on existing HTTP request spans for the CLM web application.', search_keywords=['HTTP_REFERER', 'HTTP_RESPONSE_REDIRECT_LOCATION', 'SetTag', 'ActivitySource', 'OpenTelemetry', 'middleware'], telemetry_operation={'type': 'span', 'target_name': 'HTTP Request Span', 'action': 'ADD_ATTRIBUTES', 'attributes_to_add': [{'name': 'HTTP_REFERER', 'value_source': 'Request.Headers[\"Referer\"]'}, {'name': 'HTTP_RESPONSE_REDIRECT_LOCATION', 'value_source': 'Response.Headers[\"Location\"]'}], 'new_span_name': None, 'new_metric_details': {}}, confidence=<IntentConfidence.HIGH: 'high'>, operation_type=<OperationType.MULTI_FILE: 'multi_file'>, complexity_score=4, estimated_files=3, validation_result=ValidationResult(is_valid=True, confidence=<IntentConfidence.HIGH: 'high'>, issues=[], suggestions=[]), sub_tasks=[{'order': 1, 'name': 'Code-base reconnaissance', 'action': 'locate_configuration', 'description': 'Identify where HTTP server spans are created or enriched so we only touch code once.', 'tasks': ['Search the CLM solution for keywords: ActivitySource, SetTag, AddTag, OpenTelemetry, UseOpenTelemetry', 'Open Startup.cs / Program.cs for any AddOpenTelemetryTracing() or AddAspNetInstrumentation() calls', 'Locate custom ASP.NET middleware that already adds custom tags (look for IApplicationBuilder.UseXXXTelemetry())'], 'expected_files': ['Startup.cs / Program.cs', 'Telemetry/TracingExtensions.cs (or similarly named)', 'Middleware/*Telemetry*.cs'], 'validation_criteria': 'Single location (or very small set) confirmed where spans are available for enrichment'}, {'order': 2, 'name': 'Design enrichment approach', 'action': 'technical_design', 'description': 'Choose the most maintainable hook to add two headers as span attributes.', 'tasks': ['If AddAspNetInstrumentation().Enrich is already used, extend the delegate', 'Otherwise plan to add a lightweight middleware placed early for request header capture and late for response header capture', 'Document pros/cons and confirm with team in slack channel #clm-observability'], 'validation_criteria': 'Short design note posted and approved by at least one senior dev'}, {'order': 3, 'name': 'Implement request enrichment (HTTP_REFERER)', 'action': 'implement_changes', 'dependencies': [2], 'description': 'Add code to capture the Referer header and place it on the current Activity.', 'tasks': ['string referer = context.Request.Headers[\"Referer\"].FirstOrDefault();', 'if (!string.IsNullOrEmpty(referer)) activity?.SetTag(\"HTTP_REFERER\", referer);'], 'code_location_hint': 'Tracing/HttpSpanEnricher.cs inside existing Enrich delegate or new middleware', 'validation_criteria': 'Unit test asserts span contains HTTP_REFERER when header supplied; null/empty not added'}, {'order': 4, 'name': 'Implement response enrichment (HTTP_RESPONSE_REDIRECT_LOCATION)', 'action': 'implement_changes', 'dependencies': [3], 'description': 'Capture redirect Location header only for 301/302/303/307/308 status codes.', 'tasks': ['After next(context) call, inspect context.Response.StatusCode and context.Response.Headers[\"Location\"]', 'if (statusCode >= 300 && statusCode < 400 && !string.IsNullOrEmpty(location)) activity?.SetTag(\"HTTP_RESPONSE_REDIRECT_LOCATION\", location);'], 'code_location_hint': 'Same file/middleware to keep logic centralized', 'validation_criteria': 'Unit test returns attribute only when both criteria met'}, {'order': 5, 'name': 'Unit & integration tests', 'action': 'testing', 'dependencies': [4], 'description': 'Automate verification of attributes under various scenarios.', 'tasks': ['Add xUnit tests using WebApplicationFactory to perform requests with Referer header', 'Assert exported Activity items contain expected tags via InMemoryExporter', 'Test redirect by creating fake endpoint /redirect that returns 302 Location'], 'validation_criteria': 'All new tests pass in CI pipeline'}, {'order': 6, 'name': 'Local manual validation', 'action': 'manual_validation', 'dependencies': [5], 'description': 'Run application locally and inspect OTLP/exporter logs.', 'tasks': ['Set OTEL_EXPORTER=console', 'Hit /clm/Documents/BrowseDocuments.aspx with a Referer header and follow redirect flow', 'Confirm console output shows both new attributes when applicable'], 'validation_criteria': 'Developer screenshots posted in PR description'}, {'order': 7, 'name': 'Performance & payload review', 'action': 'review', 'dependencies': [6], 'description': 'Ensure attribute size will not blow up trace payload.', 'tasks': ['Log average/95p length of Referer and Location during local test', 'Confirm with security team no PII is present or mark attributes as PII-safe per policy'], 'validation_criteria': 'Security/perf sign-off comment added to PR'}, {'order': 8, 'name': 'Create Pull Request', 'action': 'code_review', 'dependencies': [7], 'description': 'Open PR with clear summary, linked ticket, screenshots, and test evidence.', 'tasks': ['Add PR template sections: Why, What, How tested', 'Request reviewers: @clm-platform-maintainers', 'Address review comments'], 'validation_criteria': 'PR approved and merged into main branch'}, {'order': 9, 'name': 'Deploy to Demo environment', 'action': 'deployment', 'dependencies': [8], 'description': 'Promote build to Demo using existing Azure DevOps pipeline.', 'tasks': ['Ensure feature flag (if used) is ON in Demo', 'Monitor deployment dashboard for healthy rollout'], 'validation_criteria': 'Deployment succeeded, no new errors in App Insights'}, {'order': 10, 'name': 'Post-deploy verification (Kusto)', 'action': 'observability_validation', 'dependencies': [9], 'description': 'Run Kusto query provided in ticket and verify results.', 'tasks': ['Copy/Run query against OtlpSpanEvents', 'Check that HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION columns are populated for test traffic', 'Share screenshot in ticket comments'], 'validation_criteria': 'At least one span in Demo shows both attributes correctly'}, {'order': 11, 'name': 'Rollout to higher environments', 'action': 'deployment', 'dependencies': [10], 'description': 'Progressively deploy to Staging and Production following normal release calendar.', 'tasks': ['Repeat Kusto validation in each environment', 'Announce completion in #clm-eng channel'], 'validation_criteria': 'Telemetry present in Production without regression'}, {'order': 12, 'name': 'Documentation & Close ticket', 'action': 'documentation', 'dependencies': [11], 'description': 'Update internal wiki/Runbooks on new attributes and troubleshooting steps.', 'validation_criteria': 'Ticket moved to DONE with link to commit and wiki page'}], contextual_hints=['Finding or creating the proper ASP.NET middleware/enrichment hook that runs for BOTH successful requests and early pipeline redirects', 'Ensuring the Response.Headers[\"Location\"] value is still accessible at the moment the span ends (some frameworks flush headers late)'], similar_patterns=['http_server_instrumentation', 'http_header_enrichment'], implementation_strategy=ImplementationStrategy(extend_existing=True, create_new=False, preferred_approach='middleware'), exact_requirements=ExactRequirements(attribute_names=['HTTP_REFERER', 'HTTP_RESPONSE_REDIRECT_LOCATION', 'HTTP_REFERER', 'HTTP_RESPONSE_REDIRECT_LOCATION'], patterns=['kusto\\nOtlpSpanEvents\\n| where Environment == \"Demo\"\\n| where url_path == \"/clm/Documents/BrowseDocuments.aspx\"\\n| where http_status_code > 200\\n| project Timestamp, url_path, http_status_code, HTTP_REFERER, HTTP_RESPONSE_REDIRECT_LOCATION\\n', '\\n\\n**Implementation Requirements:**\\n\\n1. **Add HTTP_REFERER attribute** to all incoming HTTP requests\\n   - Source: ', '\\n   - Add to span as: ', '\\n\\n2. **Add HTTP_RESPONSE_REDIRECT_LOCATION attribute** for redirect responses\\n   - Source: ', ' when status code is 301/302/303/307/308\\n   - Add to span as: '], implementation_notes=['SetTag(\"HTTP_RESPONSE_REDIRECT_LOCATION\", locationValue)`\\n\\n**Files to Look For:**\\n- CLM web application middleware or request handling code\\n- ASP', 'NET request pipeline components\\n- OpenTelemetry instrumentation configuration\\n- Files containing \"ActivitySource\", \"SetTag\", or \"AddTag\" method calls\\n- Middleware files that handle HTTP requests/responses\\n- Look for existing telemetry code in CLM-related projects\\n\\n**Acceptance Criteria:**\\n- [ ] HTTP_REFERER attribute captured from incoming request headers\\n- [ ] HTTP_RESPONSE_REDIRECT_LOCATION attribute captured for 302+ responses  \\n- [ ] Attributes visible in OtlpSpanEvents Kusto table\\n- [ ] No performance degradation from additional attribute collection\\n- [ ] Proper null/empty value handling for missing headers\\n\\n**Technical Notes:**\\n- Follow existing OpenTelemetry patterns in the codebase\\n- Ensure attribute names match exactly: \"HTTP_REFERER\" and \"HTTP_RESPONSE_REDIRECT_LOCATION\"\\n- Add attributes to HTTP request spans, not separate spans\\n- Handle edge cases where headers might be missing or empty']), telemetry_analysis=None)"