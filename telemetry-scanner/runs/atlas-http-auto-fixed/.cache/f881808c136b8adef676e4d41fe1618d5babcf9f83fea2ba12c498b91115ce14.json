"EnhancedIntent(issue_category='INSTRUMENTATION', static_analysis_query={'find_method_call': 'SetTag'}, semantic_description='Add HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION attributes to existing HTTP request spans in the CLM web app.', search_keywords=['HTTP_REFERER', 'HTTP_RESPONSE_REDIRECT_LOCATION', 'Activity.SetTag', 'Referer header', 'Location header', '302 redirect'], telemetry_operation={'type': 'span', 'target_name': 'HTTP server span', 'action': 'ADD_ATTRIBUTES', 'attributes_to_add': [{'name': 'HTTP_REFERER', 'value_source': 'Request.Headers[\"Referer\"]'}, {'name': 'HTTP_RESPONSE_REDIRECT_LOCATION', 'value_source': 'Response.Headers[\"Location\"]'}], 'new_span_name': None, 'new_metric_details': {}}, confidence=<IntentConfidence.HIGH: 'high'>, operation_type=<OperationType.MULTI_FILE: 'multi_file'>, complexity_score=4, estimated_files=3, validation_result=ValidationResult(is_valid=True, confidence=<IntentConfidence.HIGH: 'high'>, issues=[], suggestions=[]), sub_tasks=[{'order': 1, 'id': 'code_audit', 'action': 'LocateExistingInstrumentation', 'description': 'Search for current OpenTelemetry configuration, ActivitySource registrations, and any custom ASP.NET Core middleware that already enriches spans.', 'tasks': ['grep -R \"AddOpenTelemetry\" src/clm-web', 'grep -R \"ActivitySource\" src/clm-web', 'grep -R \"SetTag(\" src/clm-web'], 'expected_files': ['Startup.cs', 'Program.cs', 'TelemetryExtensions.cs', '*Tracing*.cs', 'ExistingMiddleware/*.cs'], 'owner': 'Dev-A', 'validation_criteria': 'All touch-points where Activity.SetTag or Enrich callbacks are used are listed in the engineering design doc.'}, {'order': 2, 'id': 'design', 'action': 'AuthorHighLevelDesign', 'description': 'Decide whether to extend EXISTING enrich callback or introduce NEW middleware. Document decision and edge-case handling (missing headers, multiple redirects, performance).', 'dependencies': ['code_audit'], 'owner': 'Dev-A + TechLead', 'validation_criteria': 'Design doc approved in PRD channel and linked to ticket.'}, {'order': 3, 'id': 'implementation', 'action': 'ImplementInstrumentation', 'description': 'Add code that sets two attributes on the active HTTP server Activity.', 'implementation_options': ['Option-A (Preferred) \u2013 Use AspNetCoreInstrumentation Enrich callback:\\n  builder.AddAspNetCoreInstrumentation(options => {\\n      options.Enrich = (activity, eventName, obj) => {\\n          if (eventName == \"OnStartActivity\") {\\n              var httpCtx = obj as HttpRequest;\\n              var referer = httpCtx?.Headers[\"Referer\"].FirstOrDefault();\\n              if (!string.IsNullOrEmpty(referer)) activity.SetTag(\"HTTP_REFERER\", referer);\\n          }\\n          if (eventName == \"OnStopActivity\") {\\n              var response = (obj as HttpResponse);\\n              if (response != null && response.StatusCode >= 301 && response.StatusCode <= 308) {\\n                  var loc = response.Headers[\"Location\"].FirstOrDefault();\\n                  if (!string.IsNullOrEmpty(loc)) activity.SetTag(\"HTTP_RESPONSE_REDIRECT_LOCATION\", loc);\\n              }\\n          }\\n      }; \\n  });', 'Option-B \u2013 Custom ASP.NET Core middleware placed after authentication.\\n  - Capture Activity.Current at request start.\\n  - On response.OnStarting delegate, read headers and SetTag.'], 'code_files_to_modify_or_add': ['TelemetryExtensions.cs (if using Enrich)', 'RedirectTrackingMiddleware.cs (if chosen)'], 'dependencies': ['design'], 'owner': 'Dev-A', 'validation_criteria': ['Solution builds locally with no warnings.', 'Unit tests covering header-present, header-missing, multi-redirect cases pass.']}, {'order': 4, 'id': 'unit_tests', 'action': 'AddAutomatedTests', 'description': 'Create/extend unit & integration tests to ensure attributes are populated correctly.', 'tasks': ['Leverage WebApplicationFactory to issue requests containing Referer header and inspect exported Activity tags.', 'Test 302 response with Location header.', 'Verify null/empty header results in absence of tag.'], 'expected_files': ['RedirectTelemetryTests.cs'], 'dependencies': ['implementation'], 'owner': 'QA/Dev-B', 'validation_criteria': 'New tests run in CI pipeline and pass.'}, {'order': 5, 'id': 'local_validation', 'action': 'RunLocallyAndVerify', 'description': 'Start clm-web with OTLP exporter pointed at local Jaeger/Console. Trigger pages to ensure new tags appear.', 'commands': ['dotnet run --project src/clm-web', 'curl -H \"Referer: http://localhost/previous\" http://localhost/clm/Documents/BrowseDocuments.aspx -L'], 'dependencies': ['unit_tests'], 'owner': 'Dev-A', 'validation_criteria': 'Console/Jaeger shows spans with HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION.'}, {'order': 6, 'id': 'code_review', 'action': 'PullRequestAndReview', 'description': 'Open PR, include design doc & test evidence. Request reviews from Telemetry Guild & CLM owners.', 'dependencies': ['local_validation'], 'owner': 'Dev-A', 'validation_criteria': 'PR approved, all comments resolved, build green.'}, {'order': 7, 'id': 'deploy_demo', 'action': 'DeployToDemo', 'description': 'Promote build to Demo environment via CI/CD pipeline.', 'dependencies': ['code_review'], 'owner': 'DevOps', 'validation_criteria': ['Kusto query returns new attributes within 15 min:', 'OtlpSpanEvents | where Environment == \"Demo\" | where url_path == \"/clm/Documents/BrowseDocuments.aspx\" | where http_status_code > 200 | project HTTP_REFERER, HTTP_RESPONSE_REDIRECT_LOCATION']}, {'order': 8, 'id': 'monitor', 'action': 'PostDeployMonitoring', 'description': 'Observe Grafana dashboard & Application Insights for performance or error spikes for 24 h.', 'dependencies': ['deploy_demo'], 'owner': 'SRE', 'validation_criteria': 'No >5 % increase in p95 latency, no new exceptions.'}, {'order': 9, 'id': 'rollout', 'action': 'GradualRolloutAllEnvs', 'description': 'If Demo stable, promote to Stage and Prod via blue/green. Maintain canary at 5 % for first 2 h.', 'dependencies': ['monitor'], 'owner': 'DevOps', 'validation_criteria': 'Same Kusto query in Prod shows attributes; no incidents in first 24 h.'}, {'order': 10, 'id': 'close_ticket', 'action': 'TicketClosure', 'description': 'Update ticket with evidence screenshots, test links, and Kusto query results. Mark ticket Done.', 'dependencies': ['rollout'], 'owner': 'PM', 'validation_criteria': 'Stakeholders sign-off.'}], contextual_hints=['Identifying the exact point in the ASP.NET pipeline where both request and response headers are available in the same Activity instance', 'Guaranteeing that attributes are added only to server spans (and not to any child Activity) without introducing performance overhead'], similar_patterns=['HTTP server span enrichment', 'Middleware attribute injection'])"