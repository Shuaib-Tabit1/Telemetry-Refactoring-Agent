"EnhancedIntent(issue_category='INSTRUMENTATION', static_analysis_query={'find_method_call': 'SetTag'}, semantic_description='Add HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION attributes to existing HTTP request spans in the CLM web app.', search_keywords=['HTTP_REFERER', 'HTTP_RESPONSE_REDIRECT_LOCATION', 'activity.SetTag', 'ActivitySource', 'middleware'], telemetry_operation={'type': 'span', 'target_name': 'HTTP request span', 'action': 'ADD_ATTRIBUTES', 'attributes_to_add': [{'name': 'HTTP_REFERER', 'value_source': 'Request.Headers[\"Referer\"]'}, {'name': 'HTTP_RESPONSE_REDIRECT_LOCATION', 'value_source': 'Response.Headers[\"Location\"]'}], 'new_span_name': None, 'new_metric_details': {}}, confidence=<IntentConfidence.HIGH: 'high'>, operation_type=<OperationType.MULTI_FILE: 'multi_file'>, complexity_score=4, estimated_files=3, validation_result=ValidationResult(is_valid=True, confidence=<IntentConfidence.HIGH: 'high'>, issues=[], suggestions=[]), sub_tasks=[{'order': 1, 'id': 'code_search', 'action': 'Locate existing telemetry code', 'description': 'Search the CLM web solution for any existing ActivitySource, SetTag or Enrich delegates to understand where HTTP-span enrichment currently happens.', 'tools': ['IDE global search / grep', 'GitHub search'], 'search_terms': ['ActivitySource', 'SetTag(', 'AddTag(', 'OpenTelemetry', 'builder.AddAspNetCoreInstrumentation('], 'validation_criteria': 'At least one file or delegate that currently enriches HTTP request spans is identified (e.g. Startup.cs, TelemetryExtensions.cs, or custom middleware).'}, {'order': 2, 'id': 'locate_configuration', 'action': 'Inspect OpenTelemetry registration', 'description': \"Open the files discovered in step 1 (commonly Startup.cs, Program.cs or *TelemetryExtensions.cs) to confirm where AddAspNetCoreInstrumentation or ActivitySource.AddActivityListener is configured. Determine whether enrichment is already done via the 'Enrich' option or via custom middleware.\", 'expected_files': ['Startup.cs', 'TelemetryExtensions.cs', 'Program.cs'], 'dependencies': ['code_search'], 'validation_criteria': 'Exact point(s) in the ASP.NET pipeline where HTTP request spans are created and enriched is documented.'}, {'order': 3, 'id': 'design_enrichment', 'action': 'Choose enrichment mechanism', 'description': 'Decide whether to 1) extend the existing Enrich delegate passed to AddAspNetCoreInstrumentation, or 2) create a lightweight custom middleware that runs once per request and augments the current Activity. Document decision and update design doc.', 'dependencies': ['locate_configuration'], 'validation_criteria': 'Design doc approved by at least one senior developer and telemetry owner.'}, {'order': 4, 'id': 'implement_changes', 'action': 'Add span attributes', 'description': 'Implement code that sets the two attributes ONLY when values exist. Pseudocode:\\n```\\nvar activity = Activity.Current;\\nif (activity != null)\\n{\\n   var referer = context.Request.Headers[\"Referer\"].FirstOrDefault();\\n   if (!string.IsNullOrEmpty(referer))\\n       activity.SetTag(\"HTTP_REFERER\", referer);\\n\\n   var status = context.Response.StatusCode;\\n   if (status == 301 || status == 302 || status == 303 || status == 307 || status == 308)\\n   {\\n       var location = context.Response.Headers[\"Location\"].FirstOrDefault();\\n       if (!string.IsNullOrEmpty(location))\\n           activity.SetTag(\"HTTP_RESPONSE_REDIRECT_LOCATION\", location);\\n   }\\n}\\n```', 'expected_files': ['TelemetryEnrichment.cs', 'Startup.cs (registration)'], 'dependencies': ['design_enrichment'], 'validation_criteria': 'Solution builds locally with new code, no new warnings, and attributes appear in debug console traces.'}, {'order': 5, 'id': 'unit_tests', 'action': 'Create/extend unit tests', 'description': 'Add tests that spin up TestServer, issue requests with/without Referer header and assert that Activity tags are correctly attached. Add tests for 302 redirect scenario using a fake MVC endpoint.', 'expected_files': ['TelemetryEnrichmentTests.cs'], 'dependencies': ['implement_changes'], 'validation_criteria': 'All new & existing unit tests pass in CI.'}, {'order': 6, 'id': 'local_validation', 'action': 'Validate in local environment with OTLP exporter', 'description': 'Run CLM web locally with an OTLP collector (e.g., OpenTelemetry Collector + Jaeger) and manually navigate pages that issue redirects. Verify attributes in Jaeger UI or console exporter.', 'dependencies': ['unit_tests'], 'validation_criteria': 'Both HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION values visible on spans for manual test cases.'}, {'order': 7, 'id': 'demo_deploy', 'action': 'Deploy to Demo environment under feature flag', 'description': 'Create release containing the change and enable via configuration flag `Telemetry.RedirectAttributes=true` to limit blast radius.', 'dependencies': ['local_validation'], 'validation_criteria': 'Deployment succeeds, site health metrics unchanged (<1 % latency delta).'}, {'order': 8, 'id': 'kusto_verification', 'action': 'Verify attributes in Kusto', 'description': 'Run the expected query:\\n```\\nOtlpSpanEvents\\n| where Environment == \"Demo\"\\n| where url_path == \"/clm/Documents/BrowseDocuments.aspx\"\\n| where http_status_code > 200\\n| project Timestamp, url_path, http_status_code, HTTP_REFERER, HTTP_RESPONSE_REDIRECT_LOCATION\\n```', 'dependencies': ['demo_deploy'], 'validation_criteria': 'Query returns rows where both new columns are populated for qualifying requests.'}, {'order': 9, 'id': 'performance_security_review', 'action': 'Check perf & PII', 'description': 'Run Azure Application Insights perf counters & privacy checklist to ensure URLs do not contain sensitive data and collection adds <0.2 ms median latency.', 'dependencies': ['kusto_verification'], 'validation_criteria': 'Perf impact within threshold, privacy sign-off obtained.'}, {'order': 10, 'id': 'rollout_to_all_envs', 'action': 'Gradual production rollout', 'description': 'Promote build to Staging \u2192 Prod with 25 % traffic, then full. Keep feature flag for quick disable.', 'dependencies': ['performance_security_review'], 'validation_criteria': 'Production Kusto shows attributes, no error-rate regression.'}], contextual_hints=['Injecting logic at the correct point in the ASP.NET pipeline so both request and response objects are available', 'Ensuring the tag enrichment runs only once per span and does not create duplicate spans', 'Unit / integration-testing redirect scenarios (301/302/303/307/308) in local and CI environments'], similar_patterns=['http middleware instrumentation', 'span attribute enrichment'])"