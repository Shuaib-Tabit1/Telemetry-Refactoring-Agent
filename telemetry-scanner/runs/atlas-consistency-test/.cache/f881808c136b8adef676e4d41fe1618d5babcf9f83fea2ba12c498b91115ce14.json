"EnhancedIntent(issue_category='INSTRUMENTATION', static_analysis_query={'find_method_call': 'SetTag'}, semantic_description='Add missing HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION attributes to existing HTTP server spans in the CLM web application.', search_keywords=['HTTP_REFERER', 'HTTP_RESPONSE_REDIRECT_LOCATION', 'SetTag', 'ActivitySource', 'OpenTelemetry'], telemetry_operation={'type': 'span', 'target_name': 'HTTP server request span', 'action': 'ADD_ATTRIBUTES', 'attributes_to_add': [{'name': 'HTTP_REFERER', 'value_source': 'Request.Headers[\"Referer\"]'}, {'name': 'HTTP_RESPONSE_REDIRECT_LOCATION', 'value_source': 'Response.Headers[\"Location\"]'}], 'new_span_name': None, 'new_metric_details': {}}, confidence=<IntentConfidence.HIGH: 'high'>, operation_type=<OperationType.MULTI_FILE: 'multi_file'>, complexity_score=4, estimated_files=4, validation_result=ValidationResult(is_valid=True, confidence=<IntentConfidence.HIGH: 'high'>, issues=[], suggestions=[]), sub_tasks=[{'order': 1, 'name': 'Source & Config Discovery', 'action': 'locate_configuration', 'description': 'Search clm-web solution for OpenTelemetry bootstrap and custom middleware. Confirm where ActivitySource/SetTag calls already exist.', 'commands_or_tools': ['ripgrep -i \"ActivitySource\"', 'ripgrep -i \"AddOpenTelemetry\"', 'ripgrep -i \"SetTag(\"'], 'expected_files': ['Startup.cs or Program.cs (ASP.NET Core 6+)', 'OpenTelemetryExtensions.cs', 'TelemetryMiddleware.cs (if present)', 'DiagnosticsConfig.json (if used)'], 'validation_criteria': 'Locations that create or enrich HTTP-server spans are identified and documented.'}, {'order': 2, 'name': 'Implementation Design', 'action': 'design_instrumentation', 'description': 'Decide whether to (a) add tags inside an existing middleware or (b) create a new middleware placed immediately after Routing but before Endpoint execution to ensure Response headers are available via OnStarting.', 'deliverables': ['One-page design note in /docs/otel/otel_redirect_design.md', 'Middleware ordering diagram'], 'validation_criteria': 'Design note approved by at least 1 senior developer and 1 SRE.'}, {'order': 3, 'name': 'Code Changes \u2013 Request Header Tag', 'action': 'implement_referer_tag', 'dependencies': [2], 'description': 'Within chosen middleware, capture HttpContext.Request.Headers[\"Referer\"] (case-insensitive) and, if not null/empty, call Activity.Current?.SetTag(\"HTTP_REFERER\", value).', 'expected_files_modified': ['TelemetryMiddleware.cs  (+20 LOC)'], 'validation_criteria': 'Unit test passes: when Referer header present, span contains HTTP_REFERER=expected.'}, {'order': 4, 'name': 'Code Changes \u2013 Redirect Location Tag', 'action': 'implement_redirect_location_tag', 'dependencies': [2], 'description': 'Use HttpResponse.OnStarting(callback) to read Response.StatusCode and Response.Headers[\"Location\"]. If status code in {301,302,303,307,308} and header not null/empty, set Activity.Current?.SetTag(\"HTTP_RESPONSE_REDIRECT_LOCATION\", location).', 'expected_files_modified': ['TelemetryMiddleware.cs  (+35 LOC)'], 'validation_criteria': 'Integration test simulating 302 response shows both status and location tag on span.'}, {'order': 5, 'name': 'Null & Privacy Guardrail', 'action': 'implement_safety_checks', 'dependencies': [3, 4], 'description': \"Add logic to skip tagging if value length > 4k or if value contains credentials (e.g., '://user:pass@').\", 'validation_criteria': 'Static-analysis rule passes, no secrets flagged.'}, {'order': 6, 'name': 'Unit & Integration Tests', 'action': 'add_tests', 'dependencies': [3, 4, 5], 'description': 'Add xUnit tests: (a) no headers \u2192 no tags; (b) Referer only; (c) 302 with Location; (d) both headers.', 'expected_files_added': ['TelemetryMiddlewareTests.cs'], 'validation_criteria': 'All tests green in CI.'}, {'order': 7, 'name': 'Performance Benchmark', 'action': 'run_benchmarks', 'dependencies': [6], 'description': 'Use existing k6 or Bombardier script (10k RPS) to measure p95 latency with/without middleware changes. Target delta <1 ms.', 'validation_criteria': 'Benchmark report attached to PR.'}, {'order': 8, 'name': 'Code Review & Security Review', 'action': 'conduct_reviews', 'dependencies': [7], 'description': 'Submit PR. Obtain approvals from core maintainer and Security for new data collection (Referer may contain PII).', 'validation_criteria': 'PR merged with required approvals.'}, {'order': 9, 'name': 'Deploy to Dev Environment', 'action': 'deploy_dev', 'dependencies': [8], 'description': 'CI/CD pipeline builds and deploys clm-web:dev. Verify startup logs show new middleware registered.', 'validation_criteria': 'Smoke tests pass; no startup errors.'}, {'order': 10, 'name': 'Telemetry Validation (Dev)', 'action': 'validate_kusto_dev', 'dependencies': [9], 'description': 'Run Kusto query in OTLP backend for dev environment to confirm new attributes appear and values are correct.', 'validation_criteria': 'Query returns \u22651 span with both HTTP_REFERER and HTTP_RESPONSE_REDIRECT_LOCATION columns populated.'}, {'order': 11, 'name': 'Deploy to Demo & Stage', 'action': 'progressive_rollout', 'dependencies': [10], 'description': 'Promote build to Demo, then Stage after 24h of clean metrics. Monitor error rate and latency dashboards.', 'validation_criteria': 'No regressions; SLOs maintained.'}, {'order': 12, 'name': 'Production Rollout', 'action': 'deploy_prod', 'dependencies': [11], 'description': 'Blue/green or canary (10% \u2192 100% traffic) deployment to prod.', 'validation_criteria': 'Kusto query in prod shows attributes; error/latency unchanged.'}, {'order': 13, 'name': 'Documentation & Post-mortem', 'action': 'update_docs', 'dependencies': [12], 'description': 'Update observability-runbook.md and system-README.md with new attributes and sample queries.', 'validation_criteria': 'Docs merged; link shared in #clm-observability channel.'}], contextual_hints=['Placing middleware in the correct order so Response.Headers[\"Location\"] is available and Activity is still accessible', 'Ensuring tags are added only once when multiple middlewares or automatic ASP.NET instrumentation are present', 'Handling async/await flow so Activity.Current is preserved', 'Avoiding performance regressions under high request volume'], similar_patterns=['add_request_header_as_span_attribute', 'add_response_header_as_span_attribute'])"