{
  "selected_files": [
    {
      "path": "/Users/shuaib.tabit/Documents/Atlas/src/DetectTypeService/DetectTypeProcessor.Trace.cs",
      "content": "\ufeff#nullable enable\nusing System.Diagnostics;\nusing System.Runtime.CompilerServices;\n\nusing ADEXS.DetectTypeService.Extensions.Telemetry;\nusing ADEXS.DetectTypeService.Telemetry;\n\nusing CLM.MessageDefines.Tasks;\n\nusing DocuSign.Msf.AspNet.OpenTelemetry.SemanticConventions;\nusing DocuSign.Msf.AspNet.OpenTelemetry.ServiceMetrics.Extensions;\n\nusing ServiceTraceSemanticConventions = ADEXS.DetectTypeService.Telemetry.ServiceTraceSemanticConventions;\nusing MqWorkersServiceTraceSemanticConventions = ADEXS.MqWorkers.Telemetry.ServiceTraceSemanticConventions;\n\nnamespace ADEXS.DetectTypeService;\n\npublic partial class DetectTypeProcessor\n{\n\tprivate readonly IServiceInstrumentation _serviceInstrumentation;\n\n\tprivate Activity? StartActivity([CallerMemberName] string name = \"\") =>\n\t\t_serviceInstrumentation?.ActivitySource\n\t\t\t?.StartActivity($\"{InstrumentationNames.DetectTypeName}.{name}\")\n\t\t\t?.SetStatus(ActivityStatusCode.Error)\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeMessageType, TraceSemanticConventions.MessageTypeValues.Received)\n\t\t\t?.SetTag(MqWorkersServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, nameof(TaskTypes.DetectTypeTask))\n\t\t\t?.SetMetricName(InstrumentationNames.DetectTypeName)\n\t\t\t?.SetQueueTaskTags(Task)\n\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignFileDataId, DeserializedPayload.FileDataUid);\n}\n#nullable restore\n",
      "relevance_score": 100
    },
    {
      "path": "/Users/shuaib.tabit/Documents/Atlas/src/DetectTypeService/VideoInfoProcessor.Trace.cs",
      "content": "\ufeff#nullable enable\nusing System.Diagnostics;\nusing System.Runtime.CompilerServices;\n\nusing ADEXS.DetectTypeService.Extensions.Telemetry;\nusing ADEXS.DetectTypeService.Telemetry;\n\nusing CLM.MessageDefines.Tasks;\n\nusing DocuSign.Msf.AspNet.OpenTelemetry.SemanticConventions;\nusing DocuSign.Msf.AspNet.OpenTelemetry.ServiceMetrics.Extensions;\n\nusing ServiceTraceSemanticConventions = ADEXS.DetectTypeService.Telemetry.ServiceTraceSemanticConventions;\nusing MqWorkersServiceTraceSemanticConventions = ADEXS.MqWorkers.Telemetry.ServiceTraceSemanticConventions;\n\nnamespace ADEXS.DetectTypeService;\n\npublic partial class VideoInfoProcessor\n{\n\tprivate readonly IServiceInstrumentation _serviceInstrumentation;\n\n\tprivate Activity? StartActivity([CallerMemberName] string name = \"\") =>\n\t\t_serviceInstrumentation?.ActivitySource\n\t\t\t?.StartActivity($\"{InstrumentationNames.VideoInfoName}.{name}\")\n\t\t\t?.SetStatus(ActivityStatusCode.Error)\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeMessageType, TraceSemanticConventions.MessageTypeValues.Received)\n\t\t\t?.SetTag(MqWorkersServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, nameof(TaskTypes.VideoInfoTask))\n\t\t\t?.SetMetricName(InstrumentationNames.VideoInfoName)\n\t\t\t?.SetQueueTaskTags(Task)\n\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignDocumentId, DeserializedPayload.DocumentUid);\n}\n#nullable restore\n",
      "relevance_score": 100
    },
    {
      "path": "/Users/shuaib.tabit/Documents/Atlas/src/DetectTypeService/DetectTypeProcessor.cs",
      "content": "\ufeffusing System;\nusing System.Diagnostics;\nusing System.Net.Mime;\n\nusing ADEXS.Core.Domain;\nusing ADEXS.Core.Domain.Model;\nusing ADEXS.Core.Domain.Model.QueueTasks;\nusing ADEXS.Core.Domain.Persistence;\nusing ADEXS.Core.Domain.Persistence.Model;\nusing ADEXS.Core.Domain.PhysicalStorage;\nusing ADEXS.Core.Util.Extensions;\nusing ADEXS.Core.Util.FileIO;\nusing ADEXS.Core.Util.ServiceLocator;\nusing ADEXS.DetectTypeService.Config;\nusing ADEXS.DetectTypeService.Extensions.Telemetry;\nusing ADEXS.DetectTypeService.MimeLookup;\nusing ADEXS.DetectTypeService.Telemetry;\nusing ADEXS.MqWorkers.DispatchedWorker;\nusing ADEXS.ServiceFramework;\n\nusing DocuSign.CLM.ContentStorage;\n\nnamespace ADEXS.DetectTypeService\n{\n\tpublic partial class DetectTypeProcessor : CommonTaskProcessor<DetectTypeTaskPayload>\n\t{\n\t\tprivate readonly IAtlasPersistenceFactory _atlasPersistenceFactory;\n\n\t\tprivate readonly IAtlasPhysicalStorageFactory _atlasPhysicalStorageFactory;\n\n\t\tprivate readonly IMimeDetector _mimeDetector;\n\n\t\tprivate readonly IDetectTypeServiceFeaturesConfig _featuresConfig;\n\n\t\tpublic DetectTypeProcessor()\n\t\t\t: this(\n\t\t\t\tServiceLocator.GetInstance<IAtlasPersistenceFactory>(),\n\t\t\t\tServiceLocator.GetInstance<IAtlasPhysicalStorageFactory>(),\n\t\t\t\tServiceLocator.GetInstance<IMimeDetector>(),\n\t\t\t\tServiceLocator.GetInstance<IServiceInstrumentation>(),\n\t\t\t\tServiceLocator.GetInstance<IDetectTypeServiceFeaturesConfig>())\n\t\t{\n\t\t}\n\n\t\tpublic DetectTypeProcessor(\n\t\t\tIAtlasPersistenceFactory atlasPersistenceFactory,\n\t\t\tIAtlasPhysicalStorageFactory atlasPhysicalStorageFactory,\n\t\t\tIMimeDetector mimeDetector,\n\t\t\tIServiceInstrumentation serviceInstrumentation,\n\t\t\tIDetectTypeServiceFeaturesConfig featuresConfig)\n\t\t{\n\t\t\t_atlasPersistenceFactory = atlasPersistenceFactory;\n\t\t\t_atlasPhysicalStorageFactory = atlasPhysicalStorageFactory;\n\t\t\t_mimeDetector = mimeDetector;\n\t\t\t_serviceInstrumentation = serviceInstrumentation;\n\t\t\t_featuresConfig = featuresConfig;\n\t\t}\n\n\t\tpublic override ProcessTaskResult ProcessTask()\n\t\t{\n\t\t\tusing var activity = StartActivity();\n\n\t\t\t// get and report the status of whether Optimizely is the feature flag provider\n\t\t\tLogger.InfoNoPII($\"Verification: IsOptimizelyVerificationFlagEnabled is {_featuresConfig.IsOptimizelyVerificationFlagEnabled} for account '{Task.AccountId}' (context accountId: '{AtlasContext.Current.AccountId}')\");\n\n\t\t\tProcessTaskResult result = new ProcessTaskResult();\n\t\t\tresult.TaskResult = TaskResult.Failure;\n\t\t\tvar fileDataPersistence = _atlasPersistenceFactory.Get<IFileDataPersistence>(Task.AccountId);\n\n\t\t\tFileData fd = fileDataPersistence.LoadByUid(DeserializedPayload.FileDataUid);\n\t\t\tif (fd == null)\n\t\t\t{\n\t\t\t\tLogger.WarnNoPII($\"FileDataUid {DeserializedPayload.FileDataUid} does not exist in the db; ignoring\");\n\t\t\t\tresult.TaskResult = TaskResult.Success;\n\t\t\t\tresult.Message = \"Filedata Doesn't Exist\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\t// first try and detect the MIME type\n\t\t\t\t\tstring mimeType;\n\t\t\t\t\tusing (TempFile temp = new TempFile(fd.Extension))\n\t\t\t\t\t{\n\t\t\t\t\t\t//We could possibly optimize this by reading the first 256 bytes and passing them to the underlying COM library urlmon.dll.\n\t\t\t\t\t\t//See https://msdn.microsoft.com/en-us/library/ms775107(v=vs.85).aspx (FindMimeFromData function)\n\t\t\t\t\t\t_atlasPhysicalStorageFactory.GetPhysicalStorage(fd.AccountId).GetFile(fd.AccountId, fd.FileName, StorageConstants.StorageFormat.Native, temp.FileName);\n\t\t\t\t\t\tmimeType = _mimeDetector.DetectMimeType(temp.FileName);\n\t\t\t\t\t}\n\t\t\t\t\tTask.LastErrorMessage = string.Format(\"Detected MIME type '{0}' for fileDataUid {1}.\", mimeType, fd.FileDataUid);\n\n\t\t\t\t\t// if still not sure try to map the extension to the MIME type\n\t\t\t\t\tif (string.IsNullOrEmpty(mimeType) || (mimeType == MediaTypeNames.Application.Octet))\n\t\t\t\t\t{\n\t\t\t\t\t\tmimeType = FileUtil.GetMimeTypeByExtension(fd.Extension);\n\t\t\t\t\t\tTask.LastErrorMessage = string.Format(\"Matched extension to MIME type '{0}' for fileDataUid {1} with extension '{2}'.\", mimeType, fd.FileDataUid, fd.Extension);\n\t\t\t\t\t}\n\n\t\t\t\t\t// once we have a new MIME type, save it\n\t\t\t\t\tif (!string.IsNullOrEmpty(mimeType) && mimeType != fd.MIMEType)\n\t\t\t\t\t{\n\t\t\t\t\t\tfileDataPersistence.UpdateMIMEType(fd.Uid, mimeType);\n\t\t\t\t\t\tTask.LastErrorMessage = string.Format(\"Detected and set MIME type '{0}' for fileDataUid {1} with extension '{2}'.\", mimeType, fd.FileDataUid, fd.Extension);\n\t\t\t\t\t}\n\t\t\t\t\tLogger.InfoNoPII(Task.LastErrorMessage);\n\t\t\t\t\tresult.TaskResult = TaskResult.Success;\n\t\t\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok)\n\t\t\t\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignDetectTypeMimeType, mimeType);\n\t\t\t\t}\n\t\t\t\tcatch (Exception e)\n\t\t\t\t{\n\t\t\t\t\tresult.TaskResult = TaskResult.Failure;\n\t\t\t\t\te.Trace();\n\t\t\t\t\tLogger.ErrorNoPII($\"Failed to process fileDataUid {fd.FileDataUid} with exception \", e);\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tTask.LastErrorMessage = e.Message;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e2)\n\t\t\t\t\t{\n\t\t\t\t\t\tLogger.ErrorNoPII($\"Failed to mark fileDataUid {fd.FileDataUid} as failed with exception \", e2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tactivity?.SetQueueTaskResultTags(Task, result);\n\t\t\treturn result;\n\t\t}\n\t}\n}\n",
      "relevance_score": 100
    },
    {
      "path": "/Users/shuaib.tabit/Documents/Atlas/src/MessageWorkerService/DispatchedWorker.cs",
      "content": "\ufeffusing System;\nusing System.Collections.Generic;\nusing ADEXS.Core.Util.Core;\nusing ADEXS.MQ;\nusing ADEXS.Core.Domain;\nusing System.Threading;\nusing ADEXS.Core.Domain.Persistence.Model;\nusing System.IO;\nusing ADEXS.Core.Domain.Model;\nusing System.Diagnostics;\n\nusing ADEXS.Core.Domain.FeatureFlags;\nusing ADEXS.Core.Types;\nusing ADEXS.Core.Util.Config;\nusing ADEXS.Core.Util.Config.Context;\nusing ADEXS.Core.Util.Extensions;\nusing ADEXS.Core.Util.ServiceLocator;\nusing ADEXS.Core.Util.Text;\nusing ADEXS.ServiceFramework;\nusing CLM.MessageDefines;\nusing CLM.MessageDefines.Constants;\nusing CLM.MessageDefines.Interfaces;\nusing DocuSign.CLM.Monitoring;\nusing DocuSign.Monitoring;\n\nusing ADEXS.MqWorkers.DispatchedWorker.Telemetry;\n\nusing StructureMap;\nusing ADEXS.MqWorkers.Config.Context;\nusing ADEXS.MqWorkers.Extensions;\nusing ADEXS.MqWorkers.Telemetry;\n\nusing CLM.MessageDefines.Tasks;\n\nusing DocuSign.Msf.AspNet.OpenTelemetry.SemanticConventions;\nusing DocuSign.OneConfig.Extensions;\nusing ADEXS.MqWorkers.Config;\n\nnamespace ADEXS.Services.MessageWorkerService\n{\n\t//Should probably make an interface that encapsulates the methods for loading and\n\t//updating the Tasks so that we don't have to be tied to MessageQueues for this type of worker\n\tpublic class DispatchedWorker<T, U> : AbstractServiceQueue<T> where T : class, IQueueTask, new() where U : class, ITaskProcessor<T>, new()\n\t{\n\t\tprivate const string DESIRED_WORKER_COUNT = \"_WorkerCount\";\n\t\tprivate const string DESIRED_WORKER_MULTIPLIER = \"_WorkerMultiplier\";\n\t\tprivate const string TASK_DISPATCHERS = \"_TaskDispatchers\";\n\t\tprivate const string DESIRED_STAND_ALONE = \"_StandAlone\";\n\t\tprivate const string DEFAULT_TASK_DISPATCHERS = \"DefaultTaskDispatchers\";\n\t\tprivate const int DEFAULT_WORKER_COUNT = 5;\n\t\tprivate const double DEAFULT_CORE_TO_WORKER_MULTIPLIER = 0;\n\t\tprivate readonly string TASKPROCESSOR = Configuration.GetStringAppSetting(PROCESSSTART_NAME, \"ADEXS.TaskProcessor.exe\");\n\t\tprivate const string PROCESSSTART_NAME = \"PROCESSSTART_NAME\";\n\t\tprivate string _typeName;\n\t\tprivate readonly TaskTypes _taskType;\n\t\tprivate bool _standAlone;\n\n\t\tprivate readonly IContainer _container;         // optionally injected DI container\n\t\tprivate readonly IWatchedSingletonConfig<ISiteConfig> _siteConfig;\n\t\tprivate readonly Func<U> _createProcessor;\n\t\tprivate int _fetchMod;\n\n\t\t[ThreadStatic]\n\t\tprivate static int _errorCount = 0;\n\n\t\tpublic override string Name => base.Name + TypeName;\n\n\t\t[EventSource(\"Workers\", \"CLM.DispatchedWorker\")]\n\t\tprivate static readonly PropertyBagEventSource _workersEventSource = new PropertyBagEventSource();\n\n\t\t[Counter(\"Workers Count\", \"CLM.DispatchedWorker\", MeasureProperty = \"Count\", InstanceProperty = \"Description\")]\n\t\t[EventSource(\"Workers Count\", \"CLM.DispatchedWorker\")]\n\t\tprivate static readonly CountEventSource _workersCountEventSource = new CountEventSource();\n\n\t\t[EventSource(\"Worker Logging Exceptions\", \"CLM.DispatchedWorker\")]\n\t\t[Counter(\"Worker Logging Exceptions\", \"CLM.DispatchedWorker\", InstanceProperty = \"Description\")]\n\t\tprivate static ExceptionEventSource _workerLoggingExceptionEventSource = new ExceptionEventSource();\n\n\t\tstatic DispatchedWorker()\n\t\t{\n\t\t\t// Kazmon emits from a generic type do not work without this call\n\t\t\tMonitoringRuntime.RegisterGenericType(typeof(DispatchedWorker<T, U>));\n\t\t}\n\n\t\tpublic string TypeName\n\t\t{\n\t\t\tget\n\t\t\t{\n\t\t\t\t_typeName ??= _taskType.ToString();\n\t\t\t\treturn _typeName;\n\t\t\t}\n\t\t}\n\n\t\tpublic IMessageQueueWrapperFactory MessageQueueWrapperFactory { get; set; }\n\n\t\t/// <summary>\n\t\t/// Legacy Constructor -- delegates to the new overload; passes DI container extracted from ServiceLocator.\n\t\t/// This method will be deprecated in the future -- prefer the (IServicedComponent, IContainer) overload.\n\t\t/// </summary>\n\t\t/// <param name=\"component\">the component this dispatched worker services</param>\n\t\t/// <param name=\"taskType\">the task that will be run by this worker</param>\n\t\tpublic DispatchedWorker(IServicedComponent component, TaskTypes taskType, IWatchedSingletonConfig<ISiteConfig> siteConfig) : this(component, taskType, ServiceLocator.Container, Activator.CreateInstance<U>, siteConfig)\n\t\t{\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Constructor overload that accepts a DI container (stepping stone to moving away from SL pattern).\n\t\t/// </summary>\n\t\t/// <param name=\"component\">the component this worker services</param>\n\t\t/// <param name=\"taskType\">the task that will be run by this worker</param>\n\t\t/// <param name=\"container\">the DI container for service discovery and IOC</param>\n\t\tinternal DispatchedWorker(IServicedComponent component, TaskTypes taskType, IContainer container, Func<U> processorFactory, IWatchedSingletonConfig<ISiteConfig> siteConfig) : base(component)\n\t\t{\n\t\t\t_container = container;\n\t\t\t_createProcessor = processorFactory ?? (() => new U());\n\t\t\tServiceLocator.BuildUp(this);\n\t\t\t_taskType = taskType;\n\t\t\t//This is here to prevent a regression following ATL-81324\n\t\t\tif (TypeName != typeof(T).Name)\n\t\t\t\tthrow new ArgumentException($\"Failed to initialize DispatchedWorker: Task Name ({typeof(T).Name}) must match task type ({TypeName})\");\n\t\t\t_waitOnNoItems = false;\n\t\t\t_standAlone = Configuration.GetBooleanAppSetting(TypeName + DESIRED_STAND_ALONE, false);\n\t\t\tif (_standAlone) _log.DebugNoPII($\"Worker running in StandAlone mode for {TypeName}\");\n\t\t\t_siteConfig = siteConfig;\n\t\t}\n\n\t\tprivate ProcessTaskResult RunExternalTaskProcessor(ProcessTaskRequest taskRequest)\n\t\t{\n\t\t\tvar accountId = taskRequest.Task.AccountId;\n\t\t\tbool useAnonymousPipes = TasksManagementFeatureFlags.UseAnonymousPipeForExternalTaskProcessors &&\n\t\t\t                         Configuration.GetBooleanAppSetting(\n\t\t\t\t                         $\"{accountId}_UseAnonymousPipeForExternalTaskProcessors\", true);\n\t\t\t_log.InfoNoPII(useAnonymousPipes\n\t\t\t\t? \"Worker using Anonymous Pipes for Request and Results\"\n\t\t\t\t: \"Worker using Temp Files for Request and Results\");\n\t\t\tExternalTaskWorker externalTaskWorker = ExternalTaskWorkerFactory.GetExternalTaskWorker(useAnonymousPipes);\n\t\t\treturn externalTaskWorker.RunExternalProcessor(taskRequest,TASKPROCESSOR);\n\t\t}\n\n\t\tprotected override int MaxQueueDepth()\n\t\t{\n\t\t\treturn Configuration.GetInt32AppSetting(TypeName + \"_WorkerMaxQueueDepth\", Configuration.GetInt32AppSetting(TypeName + WORKER_MAXSET, WORKER_MAXSET_DEFAULT)) * DesiredWorkerCount();\n\t\t}\n\n\t\tprotected override IList<T> Fetch(int fetchCount)\n\t\t{\n\t\t\tList<T> tasks = new List<T>();\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tPeriodicPulse();\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\t_log.WarnNoPII($\"Could not pulse for ''{TypeName}''.\", ex);\n\t\t\t}\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\ttasks = FetchFromQueues(fetchCount);\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\t_log.WarnNoPII($\"Could not load the items for the queue: {TypeName}\", ex);\n\t\t\t\t_lastFetchDate = DateTime.UtcNow;\n\t\t\t}\n\n\t\t\tAttemptRestorePropertiesFromPayload(tasks);\n\n\t\t\treturn tasks;\n\t\t}\n\n\t\tprivate List<T> FetchFromQueues(int fetchCount)\n\t\t{\n\t\t\tvar queuePaths = DefaultQueue.GetWorkerMqPaths(TypeName, TaskUtilities.GetMessageBrokerTypeByTaskType(TypeName));\n\n\t\t\t// keep incrementing to pull from a different queue on each fetch, fetching from all queues seems to have an adverse effect on the channels\n\t\t\t_fetchMod %= queuePaths.Length;\n\t\t\tvar queuePath = queuePaths[_fetchMod];\n\t\t\t_fetchMod++;\n\n\t\t\treturn FetchSingleQueue(fetchCount, queuePath);\n\t\t}\n\n\t\tprivate List<T> FetchSingleQueue(int fetchCount, string path)\n\t\t{\n\t\t\tbool isMainPath = path == DefaultQueue.GetWorkerMqPath(TypeName, TaskUtilities.GetMessageBrokerTypeByTaskType(TypeName));\n\t\t\tint waitTime = isMainPath ? TaskUtilities.InitialReceiveWaitMS(TypeName) : Configuration.GetInt32AppSetting(\"InitialReceiveWaitAdditionalQueueMS\", 20);\n\t\t\tusing (IMessageQueueWrapper pdfMQ = MessageQueueWrapperFactory.CreateReceiveInstance(Configuration.GetStringAppSetting(TypeName + \"_WorkerMQPath\", path)))\n\t\t\t{\n\t\t\t\treturn pdfMQ.ReceiveMultiple<T>(waitTime, MQApplicationSettings.DefaultExtraReceiveWaitMS, fetchCount);\n\t\t\t}\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Restore the task type properties from the payload. This will only live temporarily as we move\n\t\t/// all tasks toward using the CommonTask payload. If we fail to restore from properties we should log to kazmon\n\t\t/// but we should not not block tasks from getting processed. We are also logging when we find a task\n\t\t/// without a payload set.\n\t\t/// </summary>\n\t\tprivate void AttemptRestorePropertiesFromPayload(List<T> tasks)\n\t\t{\n\t\t\t// App Setting to disable this behavior just in case of issues\n\t\t\tvar restoreFromPayload = Configuration.GetBooleanAppSetting($\"RestoreTaskFromPayload_All\", true) &&\n\t\t\t\tConfiguration.GetBooleanAppSetting($\"RestoreTaskFromPayload_{TypeName}\", true);\n\n\t\t\tforeach (var task in tasks)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tif (task is CommonTask cTask)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (string.IsNullOrEmpty(cTask.Payload))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Log to kazmon to ensure that we don't miss any tasks\n\t\t\t\t\t\t\tCommonTaskPayloadHelper.CommonTaskPayloadMissingEventSource.Emit(1, cTask.Label);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (restoreFromPayload)\n\t\t\t\t\t\t\t\tcTask.RestorePropertiesFromPayload();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (Exception ex)\n\t\t\t\t{\n\t\t\t\t\tCommonTaskPayloadHelper.PayloadRestoreExceptionEventSource.Emit(ex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate QueueItemType _lastSentQueueStatus = QueueItemType.QueueStopped;\n\t\tpublic override void AdjustWorkers()\n\t\t{\n\t\t\tbase.AdjustWorkers();\n\n\t\t\tint desiredWorkerCount = DesiredWorkerCount(out double multiplier);\n\t\t\tSetEnabled(desiredWorkerCount > 0);\n\t\t\tQueueItemType currentQueueStatus = (desiredWorkerCount > 0) ? QueueItemType.QueueStarted : QueueItemType.QueueStopped;\n\t\t\tif (currentQueueStatus == _lastSentQueueStatus) return;\n\n\t\t\tEmitWorkerConfiguration(currentQueueStatus, desiredWorkerCount, multiplier);\n\t\t\tstring adminQueuePath = \"Unset\";\n\t\t\ttry\n\t\t\t{\n\t\t\t\tT startTask = new T\n\t\t\t\t{\n\t\t\t\t\tLastProcessedDate = DateTime.UtcNow,\n\t\t\t\t\tSendMachine = Environment.MachineName,\n\t\t\t\t\tQueueItemType = currentQueueStatus,\n\t\t\t\t\tUniqueId = Guid.NewGuid().ToString()\n\t\t\t\t};\n\n\t\t\t\tif (!_standAlone)\n\t\t\t\t{\n\t\t\t\t\tforeach (string machine in DispatcherMachines())\n\t\t\t\t\t{\n\t\t\t\t\t\tadminQueuePath = GetAdminQueuePath(machine);\n\t\t\t\t\t\tusing (IMessageQueueWrapper mq = MessageQueueWrapperFactory.CreateInstance<T>(adminQueuePath))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmq.Send(startTask);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_lastSentQueueStatus = currentQueueStatus;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\t_log.ErrorNoPII(\"DispatchedWorker:AdjustWorkers - Could not contact the administration queue: \" + adminQueuePath, ex);\n\t\t\t}\n\t\t}\n\n\t\tprivate void EmitWorkerConfiguration(QueueItemType queueItemtype, int desiredWorkerCount, double multiplier)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t_workersCountEventSource.Emit(desiredWorkerCount, TypeName);\n\n\t\t\t\tusing (var propertyBag = _workersEventSource.CreateEventPropertyBag(queueItemtype.ToString()))\n\t\t\t\t{\n\t\t\t\t\tpropertyBag.AddOrUpdate(\"TaskType\", TypeName);\n\t\t\t\t\tpropertyBag.AddOrUpdate(\"DesiredWorkerCount\", desiredWorkerCount.ToString());\n\t\t\t\t\tpropertyBag.AddOrUpdate(\"Multiplier\", multiplier.ToString());\n\t\t\t\t\tpropertyBag.AddOrUpdate(\"ProcessorCount\", Environment.ProcessorCount.ToString());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\t_workerLoggingExceptionEventSource.Emit(ex);\n\t\t\t}\n\t\t}\n\n\t\tprivate string GetMachineName() => System.Net.Dns.GetHostName();\n\t\tprivate string GetTaskTypeName() => typeof(T).FullName;\n\n\t\tprivate static int _queueStateTouchIntervalMin = 60;\n\t\tprivate DateTime _nextStateTouchTime = DateTime.UtcNow.AddMinutes(_queueStateTouchIntervalMin);\n\n\t\tprotected virtual void PeriodicPulse()\n\t\t{\n\t\t\tif (_nextStateTouchTime < DateTime.UtcNow)\n\t\t\t{\n\t\t\t\tQueueStatePersistence.AuthenticationInstance.Touch(GetMachineName(), GetTaskTypeName());\n\t\t\t\t_nextStateTouchTime = DateTime.UtcNow.AddMinutes(_queueStateTouchIntervalMin);\n\t\t\t}\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Blast the local queue back to the dispatcher so that it can be\n\t\t/// dispatched to another worker.\n\t\t///\n\t\t/// Also sends a disable me message\n\t\t/// </summary>\n\t\tpublic override void Stop()\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t//Try to do a prelim kill before the stop of the workers\n\t\t\t\tKillTaskProcessors();\n\t\t\t}\n\t\t\tcatch\n\t\t\t{\n\t\t\t\t_log.DebugNoPII(\"Didn't kill processes first time\");\n\t\t\t}\n\n\t\t\tbase.Stop();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tSetEnabled(false);\n\t\t\t\tif (!_standAlone && (_lastSentQueueStatus != QueueItemType.QueueStopped))\n\t\t\t\t{\n\t\t\t\t\tforeach (string machine in DispatcherMachines())\n\t\t\t\t\t{\n\t\t\t\t\t\tT stopTask = new T\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLastProcessedDate = DateTime.UtcNow,\n\t\t\t\t\t\t\tQueueItemType = QueueItemType.QueueStopped,\n\t\t\t\t\t\t\tSendMachine = Environment.MachineName,\n\t\t\t\t\t\t\tUniqueId = Guid.NewGuid().ToString()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tusing (IMessageQueueWrapper mq = MessageQueueWrapperFactory.CreateInstance<T>(GetAdminQueuePath(machine)))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmq.Send(stopTask);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_lastSentQueueStatus = QueueItemType.QueueStopped;\n\t\t\t\t}\n\n\t\t\t\tKillTaskProcessors();\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\t_log.ErrorNoPII(\"DispatchedWorker:Stop - Exception generated during stop:\", ex);\n\t\t\t}\n\t\t\tEmitWorkerConfiguration(QueueItemType.QueueStopped, 0, 0);\n\t\t}\n\n\t\tprivate void KillTaskProcessors()\n\t\t{\n\t\t\tvar nestedContainer = CreateNestedContainer(null);\n\t\t\tvar processor = CreateTaskProcessor(nestedContainer);  // necessary to determine if processor would run out-of-process\n\t\t\t// attempt to kill any active out-of-process processors\n\t\t\tif (processor.RunInSeparateProcess && _siteConfig.IsOnPremEnvironment())\n\t\t\t{\n\t\t\t\tstring processName = Path.GetFileNameWithoutExtension(TASKPROCESSOR);\n\t\t\t\tProcess[] tokill = System.Diagnostics.Process.GetProcessesByName(processName);\n\t\t\t\tif (tokill.Length > 0)\n\t\t\t\t{\n\t\t\t\t\t_log.DebugNoPII($\"Killing {processName} processes.\");\n\t\t\t\t\tforeach (Process p in tokill)\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tp.Kill();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (Exception ex)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_log.WarnNoPII($\"Failed to kill process with pid: {p.Id}\", ex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate void SetEnabled(bool enable)\n\t\t{\n\t\t\tif (_standAlone) return;        // short-circuit any communication message based services\n\t\t\tbool alreadySet = false;\n\t\t\tstring taskTypeName = GetTaskTypeName();\n\t\t\t_log.DebugNoPII($\"Task type: {taskTypeName}, enable set to {enable}\");\n\n\t\t\tforeach (QueueState state in QueueStatePersistence.AuthenticationInstance.LoadAll())\n\t\t\t{\n\t\t\t\tif (state.MachineName.Equals(GetMachineName(), StringComparison.InvariantCultureIgnoreCase)\n\t\t\t\t\t&& state.TaskTypeName == taskTypeName)\n\t\t\t\t{\n\t\t\t\t\tif (enable)\n\t\t\t\t\t{\n\t\t\t\t\t\t_log.DebugNoPII($\"Machine already exists for task type {taskTypeName}, attempting to enable it\");\n\t\t\t\t\t\tRegisterQueueState(state);\n\t\t\t\t\t\talreadySet = true;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_log.DebugNoPII($\"Machine exists for task type {taskTypeName}, attempting to disable it\");\n\t\t\t\t\t\tstate.Enabled = false;\n\t\t\t\t\t\tQueueStatePersistence.AuthenticationInstance.Save(state);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (enable && !alreadySet)\n\t\t\t{\n\t\t\t\t// must be a new entry in the queuestate table\n\t\t\t\t_log.DebugNoPII($\"Machine does not already exist for task type {taskTypeName}, attempting to create it\");\n\t\t\t\tRegisterQueueState(null);\n\t\t\t}\n\t\t}\n\t\t/// <summary>\n\t\t/// This will either create the queuestate or update\n\t\t/// it as enabled.\n\t\t/// </summary>\n\t\tprivate void RegisterQueueState(QueueState queueState)\n\t\t{\n\t\t\tif (queueState == null)\n\t\t\t{\n\t\t\t\tqueueState = new QueueState();\n\t\t\t\tType taskType = typeof(T);\n\t\t\t\tqueueState.MachineName = GetMachineName();\n\t\t\t\tqueueState.TaskAssemblyName = taskType.Assembly.GetName().Name;\n\t\t\t\tqueueState.TaskTypeName = GetTaskTypeName();\n\t\t\t\t_log.DebugNoPII($\"Creating new entry in QueueState for tasktype: {queueState.TaskTypeName}\");\n\t\t\t}\n\n\t\t\tqueueState.Enabled = true;\n\t\t\tqueueState.WorkerCount = DesiredWorkerCount(out double multiplier);\n\n\t\t\t_log.DebugNoPII($\"Saving QueueState for task type: {queueState.TaskTypeName} with properties - machine name: {queueState.MachineName},\" +\n\t\t\t\t$\"assembly name: {queueState.TaskAssemblyName} enabled: {queueState.Enabled}, worker count: {queueState.WorkerCount}\");\n\n\t\t\tQueueStatePersistence.AuthenticationInstance.Save(queueState);\n\t\t\tEmitWorkerConfiguration(QueueItemType.QueueStarted, queueState.WorkerCount, multiplier);\n\t\t}\n\n\t\tprotected override TaskResult Process(T task, out string message)\n\t\t{\n\t\t\tmessage = null;\n\n\t\t\tAtlasContext.Current.AccountId = task.AccountId;\n\t\t\tAtlasContext.Current.TransactionId = task.CorrelationId;\n\t\t\tif (task is IUserTask usrTask)\n\t\t\t{\n\t\t\t\tAtlasContext.Current.UserAccountUid = usrTask.UserAccountUid;\n\t\t\t}\n\n\t\t\tGuid corrToken;\n\t\t\tGuid.TryParse(task.CorrelationId, out corrToken);\n\n\t\t\tusing var activity = StartActivity(task, corrToken);\n\n\t\t\tstring telemetryLabel = task.Label;\n\t\t\tusing (LogContext.Set(task.CorrelationId))\n\t\t\tusing (var logger = new TaskServiceRequestEventLogger(corrToken, telemetryLabel))\n\t\t\t{\n\t\t\t\t// introduces request-scoped container for user context state (and any other future per-request DI state)\n\t\t\t\tusing var nestedContainer = CreateNestedContainer(AtlasContext.Current);\n\n\t\t\t\t// The DataPoint enum is defined in DocuSign sources. Trying to use some, hopefully with close enough semantics.\n\t\t\t\tServiceContext.Log(DataPoint.AccountId, task.AccountId);\n\t\t\t\tServiceContext.Log(DataPoint.QueueItemId, task.UniqueId);\n\t\t\t\tServiceContext.Log(DataPoint.TimeQueued, $\"{task.CreatedDate:yyyy-MM-dd HH:mm:ss.fff}\");\n\t\t\t\tif (Guid.Empty != AtlasContext.Current.UserAccountUid)\n\t\t\t\t{\n\t\t\t\t\tServiceContext.Log(DataPoint.UserId, AtlasContext.Current.UserAccountUid);\n\t\t\t\t}\n\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\t// The nugget inside the monitoring wrapper.\n\t\t\t\t\tTaskResult taskResult = ProcessTask(task, nestedContainer, out message, activity);\n\n\t\t\t\t\tServiceContext.Log(DataPoint.ApiStatus, $\"{taskResult}\");\n\t\t\t\t\tlogger.Success = (taskResult != TaskResult.Failure);\n\t\t\t\t\tactivity?.SetStatusFromTask(taskResult);\n\t\t\t\t\treturn taskResult;\n\t\t\t\t}\n\t\t\t\tcatch (Exception ex)\n\t\t\t\t{\n\t\t\t\t\tex.Trace().Report();\n\t\t\t\t\tthrow;\n \t\t\t\t}\n\t\t\t\tfinally\n\t\t\t\t{\n\t\t\t\t\tif (!logger.Success && null != message)\n\t\t\t\t\t{\n\t\t\t\t\t\tServiceContext.Log(DataPoint.ApiErrorMessage, message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate TaskResult ProcessTask(T task, IContainer nestedContainer, out string message, Activity activity)\n\t\t{\n\t\t\tProcessTaskResult result = new ProcessTaskResult() { Message = \"Context Set\" };\n\n\t\t\tif (TaskUtilities.CheckSuspendedTaskTypeForAccount(TypeName, task.AccountId))\n\t\t\t{\n\t\t\t\tmessage = $\"task failed because Aid {task.AccountId} is in the suspended account list for {TypeName}\";\n\t\t\t\t_log.InfoNoPII(message);\n\t\t\t\ttask.ErrorCount = int.MaxValue;\n\t\t\t\treturn TaskResult.Failure;\n\t\t\t}\n\n\t\t\tvar processor = CreateTaskProcessor(nestedContainer);\n\n\t\t\tAtlasContext.Current.ActionType = processor.ActionType;\n\n\t\t\tif (processor.RunInSeparateProcess && !processor.HandleSeparateProcess && _siteConfig.IsOnPremEnvironment())\n\t\t\t{\n\t\t \t\tProcessTaskRequest taskRequest = new ProcessTaskRequest()\n\t\t\t\t{\n\t\t\t\t\tAccountId = AtlasContext.Current.AccountId,\n\t\t\t\t\tUserAccountUid = AtlasContext.Current.UserAccountUid,\n\t\t\t\t\tActionType = AtlasContext.Current.ActionType,\n\t\t\t\t\tProcessorTypeName = processor.GetType().AssemblyQualifiedName,\n\t\t\t\t\tTask = task,\n\t\t\t\t\tTaskType = _taskType,\n\t\t\t\t\tCorrelationToken = MonitoringContext.CorrelationToken ?? Guid.Empty\n\t\t\t\t};\n\t\t\t\tresult = RunExternalTaskProcessor(taskRequest);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprocessor.Task = task;\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tprocessor.PreProcess();\n\t\t\t\t\tresult = processor.ProcessTask();\n\t\t\t\t}\n\t\t\t\tfinally\n\t\t\t\t{\n\t\t\t\t\tprocessor.PostProcess();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmessage = result.Message;\n\n\t\t\tactivity?.SetQueueTaskResultTags(task, new MqWorkers.DispatchedWorker.ProcessTaskResult { Message = message });\n\n\t\t\treturn result.TaskResult;\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Returns an instance of the ITaskProcessor that should be used when processing a request.\n\t\t/// </summary>\n\t\t/// <remarks>\n\t\t/// This method takes into account whether we are using a scoped DI container, and if so, will\n\t\t/// attempt to get the task processor from there to ensure that other scoped DI services (eg user context)\n\t\t/// are also correctly set up. If the supplied `container` parameter is null we create a non-scoped\n\t\t/// processor instance, otherwise we demand it from the container (which may throw if none is registered).\n\t\t/// </remarks>\n\t\t/// <param name=\"container\">Optional (nullable) DI container from which we acquire scoped processors</param>\n\t\t/// <returns>An instance of ITaskProcessor{T} that can process the task.</returns>\n\t\tprivate U CreateTaskProcessor(IContainer container)\n\t\t{\n\t\t\t// NOTE: If we have a nested DI container, defer to it for the ITaskProcessor instance.\n\t\t\t//       If there is no nested container, or it doesn't have a ITaskProcessor registered,\n\t\t\t//       instantiate one one locally.\n\t\t\treturn container?.GetInstance<U>() ?? _createProcessor.Invoke();\n\t\t}\n\n\t\tprotected override void UpdateFailure(T task, string message)\n\t\t{\n\t\t\tSendTaskStatusUpdate(task, () =>\n\t\t\t{\n\t\t\t\ttask.LastErrorMessage = message;\n\t\t\t\ttask.LastProcessedDate = DateTime.UtcNow;\n\t\t\t\t//this will requeue it if needed\n\t\t\t\ttask.QueueItemType = QueueItemType.Ack;\n\t\t\t}, () =>\n\t\t\t{\n\t\t\t\t/*\n\t\t\t\t * Again errors should pause the movement of the items.\n\t\t\t\t * For this worker.\n\t\t\t\t */\n\t\t\t\tif (_errorCount++ % Configuration.GetInt32AppSetting(\"ErrorCountSleepMod\", 100) == 0)\n\t\t\t\t{\n\t\t\t\t\tThread.Sleep(SleepMilliSeconds());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tprotected override void UpdateUnlock(T task, string message)\n\t\t{\n\t\t\tSendTaskStatusUpdate(task, () =>\n\t\t\t{\n\t\t\t\ttask.LastErrorMessage = message;\n\t\t\t\ttask.LastProcessedDate = DateTime.UtcNow;\n\t\t\t\t//task will requeue it\n\t\t\t\ttask.QueueItemType = QueueItemType.Task;\n\t\t\t});\n\t\t}\n\n\t\tprotected override void UpdateSuccess(T task, string message)\n\t\t{\n\t\t\tSendTaskStatusUpdate(task, () =>\n\t\t\t{\n\t\t\t\ttask.QueueItemType = QueueItemType.Completed;\n\t\t\t});\n\t\t}\n\n\t\tprivate void SendTaskStatusUpdate(T task, Action beforeSend, Action afterSend = null)\n\t\t{\n\t\t\tusing (LogContext.Set(task.CorrelationId))\n\t\t\t{\n\t\t\t\tif (_standAlone) return;        // short-circuit any communication message based services\n\n\t\t\t\tbeforeSend();\n\n\t\t\t\tstring sendMachine = task.SendMachine; // Send() changes the SendMachine property, so store it here in case we need to restore it after an exception.\n\n\t\t\t\tusing (IMessageQueueWrapper adminQueue = MessageQueueWrapperFactory.CreateInstance<T>(GetAdminQueuePath(task.SendMachine)))\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tadminQueue.Send(task);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (IOException ioe)\n\t\t\t\t\t{\n\t\t\t\t\t\t_log.WarnNoPII($\"Detected IOException.  Will retry once.\", ioe);\n\n\t\t\t\t\t\tadminQueue.ReSend(task);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Restore original SendMachine, for the sake of the UpdateFailure() call from AbstractServiceQueue.\n\t\t\t\t\t\ttask.SendMachine = sendMachine;\n\t\t\t\t\t\tthrow;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (afterSend != null)\n\t\t\t\t{\n\t\t\t\t\tafterSend();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Crate a nested DI container for the user context (and potentially other request-scoped DI state).\n\t\t/// </summary>\n\t\t/// <remarks>\n\t\t/// Introduced as part of ATL-72998 to add support for feature flag integration, which requires access to\n\t\t/// the request-scoped Account/User identity for flag resolution decisions.\n\t\t/// </remarks>\n\t\t/// <param name=\"atlasContext\">Atlas request context for this request/task</param>\n\t\t/// <returns>Disposable DI container for this request-scoped state</returns>\n\t\tprivate IContainer CreateNestedContainer(IAtlasContext atlasContext)\n\t\t{\n\t\t\tvar nestedContainer = _container.GetNestedContainer();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (atlasContext != null)\n\t\t\t\t{\n\t\t\t\t\tvar userContextSetter = nestedContainer.TryGetInstance<IUserContextSetter>();\n\t\t\t\t\tif (userContextSetter != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tuserContextSetter.AccountId = atlasContext.AccountId;\n\t\t\t\t\t\tuserContextSetter.UserId = atlasContext.UserAccountUid; // this may be null, but that's ok\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// Should we have a specific OT telemetry event for this condition? It's most like incorrectly configured DI setup, but may not be a defect.\n\t\t\t\t\t\t_log.WarnNoPII($\"Unable to create or acquire IUserContextSetter - transactionId {atlasContext.TransactionId} will proceed without scoped user context.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar taskContextSetter = nestedContainer.TryGetInstance<ITaskTypeContextSetter>();\n\n\t\t\t\tif (taskContextSetter != null)\n\t\t\t\t{\n\t\t\t\t\ttaskContextSetter.TaskType = _taskType;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_log.WarnNoPII($\"Unable to create or acquire ITaskTypeContextSetter - {TypeName} will proceed without scoped task type context.\");\n\t\t\t\t}\n\n\t\t\t\treturn nestedContainer;\n\t\t\t}\n\t\t\tcatch (Exception)\n\t\t\t{\n\t\t\t\tnestedContainer?.Dispose();  // avoid leaking nested container\n\t\t\t\tthrow;\n\t\t\t}\n\t\t}\n\n\t\tpublic virtual int StandardSleepSeconds => 5;\n\t\tprotected override int SleepSeconds()\n\t\t{\n\t\t\treturn Configuration.GetInt32AppSetting(TypeName + \"_SleepSeconds\", StandardSleepSeconds);\n\t\t}\n\n\t\tpublic virtual int StandardWorkerCount => DEFAULT_WORKER_COUNT;\n\n\t\tpublic override int DesiredWorkerCount()\n\t\t{\n\t\t\treturn DesiredWorkerCount(out _);\n\t\t}\n\n\t\tprivate int DesiredWorkerCount(out double multiplier)\n\t\t{\n\t\t\tmultiplier = 0;\n\t\t\tint count = -1;\n\t\t\tif (IsOneConfigEnabledForWorkerCount())\n\t\t\t{\n\t\t\t\tvar mqTasksconfigs = ServiceLocator.GetInstance<IWatchedSingletonConfig<IMqTasksConfig>>()?.Value;\n\t\t\t\tvar taskConfigs = mqTasksconfigs?.TaskConfigs;\n\t\t\t\tif (taskConfigs != null && taskConfigs.TryGetValue(TypeName, out var taskConfig))\n\t\t\t\t{\n\t\t\t\t\tcount = taskConfig.WorkerCount;\n\t\t\t\t\tmultiplier = taskConfig.WorkerMultiplier;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_log.InfoNoPII($\"Failed to retrieve task configuration from INI file for TaskName: {TypeName}. Falling back to legacy processing.\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count < 0)\n\t\t\t{\n\t\t\t\t// Rely on appsetting if oneConfig is disabled or if it cannot retrive from oneconfig\n\t\t\t\tcount = Configuration.GetInt32AppSetting(TypeName + DESIRED_WORKER_COUNT, StandardWorkerCount);\n\t\t\t\tmultiplier = Configuration.GetDoubleAppSetting(TypeName + DESIRED_WORKER_MULTIPLIER, DEAFULT_CORE_TO_WORKER_MULTIPLIER);\n\t\t\t}\n\n\t\t\t// we still want to be able to force the count to zero in order to turn off a worker group effectively\n\t\t\t// let's check the worker count based on the number of logical cores and a configured multiplier\n\t\t\tif (count != 0 && multiplier > 0)\n\t\t\t{\n\t\t\t\t// use the number of logical cores and a multiplier to determine a good worker count number.\n\t\t\t\tint numCores = Environment.ProcessorCount;\n\t\t\t\tcount = Math.Max((int)(numCores * multiplier), 1);  // we really never want a > 0 multiplier to cause a zero worker count\n\t\t\t}\n\t\t\treturn count;\n\t\t}\n\n\t\tprivate bool IsOneConfigEnabledForWorkerCount()\n\t\t{\n\t\t\tbool isOneConfigEnabled = false;\n\t\t\tif(ConfigWrapper.UseOneConfigMqTasksConfig)\n\t\t\t{\n\t\t\t\tvar appconfigs = ServiceLocator.GetInstance<IWatchedSingletonConfig<IAppConfig>>()?.Value;\n\t\t\t\tif (Configuration.GetBooleanAppSetting(\"UseOneConfigMqTasks_\" + appconfigs?.AppName, true))\n\t\t\t\t{\n\t\t\t\t\tisOneConfigEnabled = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isOneConfigEnabled;\n\t\t}\n\n\t\tprivate IEnumerable<string> DispatcherMachines()\n\t\t{\n\t\t\treturn StringUtil.Split('|', Configuration.GetStringAppSetting(TypeName + TASK_DISPATCHERS, Configuration.GetStringAppSetting(DEFAULT_TASK_DISPATCHERS, GetMachineName())));\n\t\t}\n\n\t\tprivate string GetAdminQueuePath(string machine)\n\t\t{\n\t\t\treturn string.Format(Configuration.GetStringAppSetting(TypeName + \"_EventMQPathFormat\", DefaultQueue.GetAdminMqPathFormat(TypeName, TaskUtilities.GetMessageBrokerTypeByTaskType(TypeName))), machine ?? GetMachineName());\n\t\t}\n\n\t\tprivate Activity StartActivity(T task, Guid correlationToken) =>\n\t\t\tServiceInstrumentation.ActivitySource\n\t\t\t\t?.StartActivity(\n\t\t\t\t\ttask.Label ?? $\"{nameof(ADEXS.Services.MessageWorkerService)}\",\n\t\t\t\t\tActivityKind.Consumer,\n\t\t\t\t\tparentContext: correlationToken.ToActivityContext())\n\t\t\t\t?.SetStatus(ActivityStatusCode.Error)\n\t\t\t\t?.SetTag(TraceSemanticConventions.AttributeMessageType, TraceSemanticConventions.MessageTypeValues.Received)\n\t\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignMessageTaskName, TypeName)\n\t\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignMessageQueueType, ServiceTraceSemanticConventions.DocuSignMessageQueueTypeWorker)\n\t\t\t\t?.SetQueueTaskTags(task);\n\t}\n}\n",
      "relevance_score": 100
    },
    {
      "path": "/Users/shuaib.tabit/Documents/Atlas/src/WINS/Engine/WorkflowInstance.cs",
      "content": "\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\nusing System.Linq;\nusing System.Runtime.CompilerServices;\n\nusing ADEXS.Atlas.Workflow.Activities.Activities;\nusing ADEXS.Atlas.Workflow.Activities.Activities.Helpers;\nusing ADEXS.Atlas.Workflow.Activities.Activities.HumanActivities;\nusing ADEXS.Atlas.Workflow.Activities.Governance;\nusing ADEXS.Atlas.Workflow.Activities.Interfaces;\nusing ADEXS.Atlas.Workflow.Activities.Models;\nusing ADEXS.Atlas.Workflow.Activities.Telemetry;\nusing ADEXS.Atlas.Workflow.ActivityProperties;\nusing ADEXS.Atlas.Workflow.Readers.Readers;\nusing ADEXS.Caching;\nusing ADEXS.Core.Domain;\nusing ADEXS.Core.Domain.Exceptions;\nusing ADEXS.Core.Domain.ExpressionService.Exceptions;\nusing ADEXS.Core.Domain.FeatureFlags;\nusing ADEXS.Core.Domain.Messaging.Framework.Integration.Emails;\nusing ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces;\nusing ADEXS.Core.Domain.Model;\nusing ADEXS.Core.Domain.Model.Workflow;\nusing ADEXS.Core.Domain.Persistence.Model.Workflow;\nusing ADEXS.Core.Domain.Providers;\nusing ADEXS.Core.Domain.Repository.DocumentRepository;\nusing ADEXS.Core.Domain.Repository.User;\nusing ADEXS.Core.Domain.Repository.Workflow;\nusing ADEXS.Core.Domain.Repository.Workflow.Client;\nusing ADEXS.Core.Domain.Repository.Workflow.Interfaces;\nusing ADEXS.Core.Types;\nusing ADEXS.Core.Util.Config;\nusing ADEXS.Core.Util.Core;\nusing ADEXS.Core.Util.Loggers;\nusing ADEXS.Core.Util.ServiceLocator;\nusing ADEXS.Core.Workflow.Config;\nusing ADEXS.Core.Workflow.Infrastructure.Exceptions;\nusing ADEXS.Core.Workflow.Repository.Interfaces;\nusing ADEXS.WINS.Engine.Throttling;\nusing ADEXS.WINS.Exceptions;\nusing ADEXS.WINS.Helpers;\nusing ADEXS.WINS.Interfaces;\nusing ADEXS.WINS.Telemetry;\nusing ADEXS.WINS.V1;\n\nusing CLM.MessageDefines.Event;\n\nusing DocuSign.Msf.AspNet.OpenTelemetry.SemanticConventions;\nusing DocuSign.OneConfig.Extensions;\n\nusing Platform.Common;\n\nusing SCMAppenders;\n\nusing static ADEXS.Atlas.Workflow.Activities.Handlers.InstanceHandler;\n\nusing IEventRepository = ADEXS.Core.Domain.Repository.EventRepository.IEventRepository;\nusing InstanceVariable = ADEXS.Core.Domain.Model.Workflow.InstanceVariable;\nusing LoggingHelper = ADEXS.Atlas.Workflow.Activities.Infrastructure.LoggingHelper;\nusing Revision = ADEXS.Core.Domain.Model.Workflow.Revision;\nusing UserAccount = ADEXS.Core.Domain.Model.UserAccount;\n\nnamespace ADEXS.WINS.Engine\n{\n\t/// <summary>\n\t/// An instance of a workflow -- a specific example of a definition.\n\t/// This class contains methods for controlling it, but all such calls should actually be fed through\n\t/// WorkflowManager so they can be queued, etc.\n\t/// </summary>\n\tpublic class WorkflowInstance : IWINSControlInstance\n    {\n        public const int SQL_SEVERITY_LEVEL_TRANSIENT = 12;\n\n\t\tprivate static readonly IDiscreetLogger _log = DiscreetLogger.GetLogger(typeof(WorkflowInstance));\n\n\t\tprivate IEventRepository _eventRepo;\n\t\tprivate IInstanceVariableGovernance _instanceVariableGovernance;\n\t\tprivate IWorkflowSettingRepository _workflowSettingRepository;\n\t\tprivate IGovernor _governor;\n\t\tprivate IInstanceHandler _instanceHandler;\n\t\tprivate IServiceInstrumentation _serviceInstrumentation;\n\t\tprivate IWatchedSingletonConfig<IWorkflowV1ClientInvariantConfig> _workflowClientConfig;\n\t\tprivate IWatchedSingletonConfig<ISiteConfig> _siteConfig;\n\t\tprivate ICacheRepository _cacheRepository;\n\n\t\tprivate IEventRepository EventRepo => (_eventRepo ?? (_eventRepo = ServiceLocator.GetInstance<IEventRepository>()));\n\t\tprivate IInstanceVariableGovernance InstanceVariableGovernance => (_instanceVariableGovernance ?? (_instanceVariableGovernance = ServiceLocator.GetInstance<IInstanceVariableGovernance>()));\n\t\tprivate IWorkflowSettingRepository WorkflowSettingRepository => _workflowSettingRepository ?? (_workflowSettingRepository = ServiceLocator.GetInstance<IWorkflowSettingRepository>());\n\t\tprivate IGovernor Governor => _governor ?? (_governor = ServiceLocator.GetInstance<IGovernor>());\n\t\tprivate IInstanceHandler InstanceHandler => _instanceHandler ?? (_instanceHandler = ServiceLocator.GetInstance<IInstanceHandler>());\n\n\n\t\tprivate IServiceInstrumentation ServiceInstrumentation => _serviceInstrumentation ?? (_serviceInstrumentation = ServiceLocator.GetInstance<IServiceInstrumentation>());\n\t\tprivate IWatchedSingletonConfig<IWorkflowV1ClientInvariantConfig> WorkflowClientConfig => _workflowClientConfig ?? (_workflowClientConfig = ServiceLocator.GetInstance<IWatchedSingletonConfig<IWorkflowV1ClientInvariantConfig>>());\n\t\tprivate IWatchedSingletonConfig<ISiteConfig> SiteConfig => _siteConfig ?? (_siteConfig = ServiceLocator.GetInstance<IWatchedSingletonConfig<ISiteConfig>>());\n\t\tprivate ICacheRepository CacheRepository => _cacheRepository ?? (_cacheRepository = ServiceLocator.GetInstance<ICacheRepository>());\n\n\t\tprivate IWorkflowConfig _workflowConfig;\n\t\tprivate IWorkflowConfig WorkflowConfig(int accountId) => _workflowConfig ?? (_workflowConfig = ServiceLocator.GetInstance<IConfigProvider>().GetConfig<IWorkflowConfig>(accountId));\n\n\n\t\t/// <summary>\n\t\t/// Loads (and locks) an existing instance.  Fails if the instance doesn't exist or can't be locked.\n\t\t/// </summary>\n\t\tpublic static WorkflowInstance LoadExisting(int accountId, Guid instanceUid, IWINSDataStore data)\n        {\n\t        DateTime lockExpirationDate;\n            InstancePersistence.LockResult lockResult = data.LockInstance(accountId, instanceUid, out lockExpirationDate);\n            switch (lockResult)\n            {\n                case InstancePersistence.LockResult.AlreadyCompleted:\n                    throw new InstanceAlreadyCompletedException(string.Format(\"InstanceUid {0} is already completed\", instanceUid));\n                case InstancePersistence.LockResult.DoesNotExist:\n                    throw new ApplicationException(string.Format(\"Invalid instanceUid {0}\", instanceUid));\n                case InstancePersistence.LockResult.LockedByOther:\n                    throw new InstanceLockedException(string.Format(\"InstanceUid {0} is locked by another process\", instanceUid));\n                case InstancePersistence.LockResult.Locked:\n                    // This is our success condition\n                    break;\n                default:\n                    throw new ApplicationException(string.Format(\"Unhandled lockResult for instanceUid {0}: {1}\", instanceUid, lockResult));\n            }\n            Instance instance = data.LoadInstanceByUid(accountId, Constants.WorkflowUser, instanceUid);\n            if (instance == null) throw new ApplicationException(string.Format(\"Failed to load workflow instanceUid {1} for account {0}.\", accountId, instanceUid));\n\n\t\t\ttry\n            {\n                if (instance.ScopeUid != Guid.Empty)\n                {\n                    Scope scope = ServiceLocator.GetInstance<IDocumentScopeRepository>().GetScopeByUid(accountId, instance.ScopeUid);\n                    if (scope != null)\n                        instance.ScopeName = scope.Name;\n                }\n            }\n            catch (Exception ex)\n            {\n                // the failure to load the scope should not cause the failure to load the instance, log it and move on\n                _log.WarnNoPII(string.Format(\"Could not load the scope '{0}' for workflow instance '{1}'.\", instance.ScopeUid, instanceUid), ex);\n            }\n\n\t\t\tRevision revision = data.LoadRevisionByUid(accountId, Constants.WorkflowUser, instance.RevisionUid);\n            if (revision == null) throw new ApplicationException(string.Format(\"Failed to load workflow definition version {1} for account {0}.\", accountId, instance.RevisionUid));\n            // ATL-68146: Populate RevisionCreatedDate here, because LoadInstanceByUid() doesn't populate it.\n            instance.RevisionCreatedDate = revision.CreatedDate;\n            WorkflowMap workflowMap = null;\n            instance.DefinitionUid = revision.DefinitionUid;\n\n\t\t\ttry\n            {\n\t            workflowMap = ServiceLocator.GetInstance<IDefinitionReaderFactory>().GetDefinitionReaderFromRevision(revision).BuildWorkflowMap(revision);\n            }\n            catch (InvalidDesignDefinitionException ex)\n            {\n\t            try\n\t            {\n\t\t            new WorkflowInstance(instance, data).Abort(UserAccount.WorkflowUserAccount(accountId), ex.Message);\n\t            }\n\t\t\t\tcatch(Exception e)\n\t\t\t\t{\n\t\t\t\t\t_log.WarnNoPII($\"Error aborting workflow instance '{instanceUid}' with invalid definition\", e);\n\t\t\t\t}\n\n\t            throw;\n            }\n\n            var workflowInstance = new WorkflowInstance(instance, workflowMap, data);\n\t        workflowInstance.LockExpirationDate = lockExpirationDate;\n\t        return workflowInstance;\n\n        }\n\n        private readonly IWINSDataStore _data;\n        private readonly WorkflowMap _workflowMap;\n        private Instance _instance;\n\n        // The count of the activities that have been generated by this particular in-memory instance.  This doesn't get persisted anywhere, so is\n        // cleared whenever this WorkflowInstance gets unloaded (eg, when it enters into a Waiting state).\n        // It's use is to detect runaway workflows.\n        public const int MAX_IN_MEMORY_ACTIVITY_COUNT = 5000;\n        private int _inMemoryActivityCount = 0;\n\t\tprivate int _activityExecutionCountEnforcedLimit = 0;\n\t\tprivate Guid _revisionUid = Guid.Empty;\n\t\tprivate Guid _definitionUid = Guid.Empty;\n\t\tprivate DateTime _revisionCreatedDate = DateTime.MinValue;\n\t\tprivate bool _isActivityExecutionLimitReached = false;\n\n\t\tprivate readonly object _lockObject = new object();\n        private readonly IDictionary<Guid, InstanceActivity> _unfinishedActivities = new Dictionary<Guid, InstanceActivity>();\n        private readonly Queue<Event> _queuedControlEvents = new Queue<Event>();\n        private readonly Queue<Event> _queuedEvents = new Queue<Event>();\n\n        private readonly Dictionary<string, ContentDefinition> _contentDefinitions = new Dictionary<string, ContentDefinition>(StringComparer.InvariantCultureIgnoreCase);\n        private readonly Dictionary<string, InstanceVariable> _variables = new Dictionary<string, InstanceVariable>(StringComparer.InvariantCultureIgnoreCase);\n        private readonly Dictionary<string, IXmlVariableDefinition> _xmlVariableDefinitions = new Dictionary<string, IXmlVariableDefinition>(StringComparer.InvariantCultureIgnoreCase);\n\n        private readonly TimedLock _lock;\n\n        // Kind of a hack -- this is kept around so that if we end the instance without reaching the End step, we have an activity that we can\n        // log the message to.\n        private Guid _lastActivityUid;\n\n        private WorkflowInstance(Instance instance, IWINSDataStore data)\n        {\n\t        _data = data;\n\t        _lock = new TimedLock(instance.Uid.ToString());\n\t        _instance = instance;\n\t\t\t_revisionUid = _instance.RevisionUid;\n\t\t\t_revisionCreatedDate = instance.RevisionCreatedDate;\n\t        LastProcessDate = DateTime.UtcNow;\n\t\t\t_definitionUid = _instance.DefinitionUid;\n\t\t}\n\n\t\tpublic WorkflowInstance(Instance instance, WorkflowMap workflowMap, IWINSDataStore data) : this(instance, data)\n        {\n            _workflowMap = workflowMap;\n            // Load up any incomplete activities.  This is pointless to do for a new workflow, but it's not expensive either,\n            // so we simply avoid trying to figure that out and simply do it.\n            QueueIncompleteActivities();\n        }\n\n        /// <summary>\n        /// The AccountId this instance is running in.\n        /// </summary>\n        public int AccountId { get { return _instance.AccountId; } }\n\n        public Dictionary<string, ContentDefinition> ContentDefinitions { get { return _contentDefinitions; } }\n\n        public IWINSDataStore DataStore { get { return _data; } }\n\n        public TimedLock ThreadLock { get { return _lock; } }\n\n        /// <summary>\n        /// An in-memory, non-persisted value -- this is used when workers are finding instances to do work on.\n        /// It acts to make the WorkflowManager more FIFO, so that some workflows don't continually get ignored in favor of\n        /// newer work coming in.\n        /// </summary>\n        public DateTime LastProcessDate { get; private set; }\n\n        /// <summary>\n        /// The model Instance object; I didn't call this Instance because I didn't want it confused with a singleton pattern, and because\n        /// I didn't like seeing \"instance.Instance\".\n        /// </summary>\n        public Instance Model { get { return _instance; } }\n\n\t\tpublic DateTime LockExpirationDate { get; set; }\n\n\t\t/// <summary>\n\t\t/// The instance's Uid.  Primary key.\n\t\t/// </summary>\n\t\tpublic Guid Uid { get { return _instance.Uid; } }\n\n        public Dictionary<string, InstanceVariable> Variables { get { return _variables; } }\n\n        public Dictionary<string, IXmlVariableDefinition> XmlVariableDefinitions { get { return _xmlVariableDefinitions; } }\n\n        public Enums.WorkflowStepStatus Status => _instance.Status;\n\n        public bool HasQueuedWork\n        {\n            get { return _queuedEvents.Count > 0 || _queuedControlEvents.Count > 0; }\n        }\n\n        public bool HasUnfinishedActivities\n        {\n            get { return _unfinishedActivities.Count > 0; }\n        }\n\n        public void QueueActivity(InstanceActivity instanceActivity)\n        {\n            lock (_lockObject)\n            {\n                _unfinishedActivities[instanceActivity.Uid] = instanceActivity;\n            }\n        }\n\n\t\tpublic int ActivityExecutionCount { get; set; }\n\n\t\tpublic int ActivityExecutionCountEnforcedLimit => _activityExecutionCountEnforcedLimit;\n\n\t\tpublic bool IsActivityExecutionLimitReached => _isActivityExecutionLimitReached;\n\n\t\tpublic Guid RevisionUid => _revisionUid;\n\n\t\tpublic Guid DefinitionUid => _definitionUid;\n\n\t\tpublic DateTime RevisionCreatedDate => _revisionCreatedDate;\n\n\t\t/// <summary>\n\t\t///\n\t\t/// </summary>\n\t\t/// <param name=\"previousActivity\"></param>\n\t\t/// <param name=\"linkName\"></param>\n\t\t/// <param name=\"localContextId\"></param>\n\t\t/// <param name=\"followEmptyPathByDefault\"></param>\n\t\t/// <param name=\"useLinkName\">when true, uses linkName as the InputActivityOutput instead of getting it from previousActivity.Output</param>\n\t\tpublic void QueueActivitiesByLink(InstanceActivity previousActivity, string linkName, int localContextId = 0, bool followEmptyPathByDefault = true, bool useLinkName = false)\n        {\n            IEnumerable<WorkflowMap.Link> links;\n            bool found = false;\n            if (_workflowMap.TryGetLinks(previousActivity.Name, linkName, out links))\n            {\n                foreach (WorkflowMap.Link link in links)\n                {\n                    QueueActivityByName(previousActivity, link.ToName, localContextId, linkName, useLinkName);\n                    found = true;\n                }\n            }\n            // If we got no matches, try to go for the default (empty) output.\n            if (followEmptyPathByDefault && !found && !string.IsNullOrEmpty(linkName)) QueueActivitiesByLink(previousActivity, string.Empty, localContextId);\n        }\n\n        /// <summary>\n        ///\n        /// </summary>\n        /// <param name=\"previousActivity\"></param>\n        /// <param name=\"name\"></param>\n        /// <param name=\"localContextId\"></param>\n        /// <param name=\"linkName\"></param>\n        /// <param name=\"useLinkName\">when true, uses linkName as the InputActivityOutput instead of getting it from previousActivity.Output</param>\n        public void QueueActivityByName(InstanceActivity previousActivity, string name, int localContextId = 0, string linkName = null, bool useLinkName = false)\n        {\n            IWINSActivity activity;\n            if (!_workflowMap.TryGetActivity(name, out activity)) throw new ApplicationException(string.Format(\"InstanceUid {0}: Tried to execute invalid activity '{1}'\", Uid, PII.Encode(ApplicationSettings.PIIHashingStrategy, name)));\n\n            if (localContextId <= 0) localContextId = (previousActivity == null ? int.MinValue : previousActivity.LocalContextId);\n\n            // Create a new activity\n            InstanceActivity instanceActivity = new InstanceActivity\n            {\n                AccountId = _instance.AccountId,\n                InstanceUid = _instance.Uid,\n                Name = name,\n                ActivityTypeName = activity.LegacyElementName(),\n                Status = Enums.WorkflowStepStatus.Pending,\n                InputActivityOutput = useLinkName ? linkName : (previousActivity == null ? string.Empty : previousActivity.Output),\n                InputActivityUid = (previousActivity == null ? Guid.Empty : previousActivity.Uid),\n                LocalContextId = localContextId,\n                IsWinsActivity = true,\n                CreatedDate = DateTime.UtcNow //make sure that the in memory copy has a value\n            };\n\n            try\n            {\n                _data.CreateActivity(instanceActivity);\n            }\n            catch (Exception ex)\n            {\n                _log.ErrorWithPII($\"Failed to queue activity {{0}} for instance {_instance?.Uid} in account {_instance?.AccountId}\", ex, name);\n                _data.ActivityFailure(_instance, instanceActivity);\n            }\n\n            _unfinishedActivities[instanceActivity.Uid] = instanceActivity;\n            QueueActivity(instanceActivity);\n        }\n\n        public void QueueEvent(Event e)\n        {\n            if (_instance.Status != Enums.WorkflowStepStatus.Failed && _instance.Status != Enums.WorkflowStepStatus.Aborted)\n            {\n                lock (_lockObject)\n                {\n                    Queue<Event> queue = (e.IsControlEvent ? _queuedControlEvents : _queuedEvents);\n                    if (e.Uid != Guid.Empty)\n                    {\n                        // Ensure this item isn't already in the list\n                        if (queue.Any(e2 => e2.Uid == e.Uid)) return;\n                    }\n                    queue.Enqueue(e);\n                    WorkflowEventWorkload wrk = new WorkflowEventWorkload(e, \"EventQueued\")\n\t\t\t\t\t{\n\t\t\t\t\t\tRevisionUid = _instance.RevisionUid,\n\t\t\t\t\t\tWorkflowDB = DataStore.GetDbNameForAccount(e.AccountId)\n\t\t\t\t\t};\n                    wrk.Log();\n\t            }\n            }\n        }\n\n        public void QueueIncompleteActivities()\n        {\n            InstanceActivities activities = _data.LoadIncompleteActivitiesByInstanceUid(AccountId, Constants.WorkflowUser, Uid);\n            if (activities == null || activities.Count == 0) return;\n            lock (_lockObject)\n            {\n                foreach (InstanceActivity activity in activities) _unfinishedActivities[activity.Uid] = activity;\n            }\n\n        }\n\n        public bool CheckActivityForCompletion(InstanceActivity instanceActivity)\n        {\n            // We only care about Waiting steps.\n            if (instanceActivity.Status != Enums.WorkflowStepStatus.Waiting) return false;\n\n            IWINSActivity activity = _SafeGetActivity(instanceActivity);\n            if (activity == null) throw new ApplicationException(string.Format(\"Cannot find expected activity '{0}' in workflow map for instanceUid '{1}'.\", instanceActivity.ActivityTypeName, Uid));\n            using (ScmNDC.Push(BuildNDCTags(instanceActivity)))\n            {\n\t            _log.DebugNoPII($\"CheckActivityForCompletion called for ActivityUid {instanceActivity.Uid} ({instanceActivity.Name}).\");\n\t            try\n\t            {\n\t\t            IWINSWorkflowContext ctx = _CreateContext(activity, instanceActivity);\n\t\t            ctx.CheckForCompletion();\n\t\t            if (instanceActivity.Status == Enums.WorkflowStepStatus.Completed)\n\t\t            {\n\t\t\t            _data.ActivityCompleted(instanceActivity, (activity is AbstractHumanActivity));\n\t\t\t            SaveInstanceActivityVariables(instanceActivity, ctx);\n\n\t\t\t\t\t\tRemoveProperties(instanceActivity, activity);\n\n\t\t\t\t\t\tif (!ShouldUseScopeEventHandler()) CompleteScopeStep(instanceActivity, activity, ctx);\n\n\t\t\t\t\t\tactivity.ActivityFinished(ctx);\n\n\t\t\t\t\t\tQueueActivitiesByLink(instanceActivity, instanceActivity.Output);\n\t\t\t            _unfinishedActivities.Remove(instanceActivity.Uid);\n\t\t\t            return true;\n\t\t            }\n                    _log.DebugWithPII($\"CheckActivityForCompletion completed for Activity ({{0}}) in status: {instanceActivity.Status}.\", instanceActivity.Name);\n\t            }\n\t\t\t\tcatch (ExpressionApiRequestThrottledException expressionApiThrottledException)\n\t\t\t\t{\n\t\t\t\t\texpressionApiThrottledException.WorkflowThrottledStatus = Enums.WorkflowThrottledStatus.ThrottledDueToExpressionRateLimit;\n\t\t\t\t\tPauseWhenThrottled(instanceActivity, expressionApiThrottledException);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tcatch (SmallBenApiRequestThrottledException smallBenApiThrottledException)\n\t\t\t\t{\n\t\t\t\t\tsmallBenApiThrottledException.WorkflowThrottledStatus = Enums.WorkflowThrottledStatus.ThrottledDueToExpressionRateLimit;\n\t\t\t\t\tPauseWhenThrottled(instanceActivity, smallBenApiThrottledException);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tcatch (Exception e)\n\t            {\n                    _log.ErrorNoPII($\"CheckActivityForCompletion failed.\", e);\n\t            }\n            }\n            return false;\n        }\n\n        public bool DoNextTask()\n        {\n\t        LastProcessDate = DateTime.UtcNow;\n\n\t        CheckAndHandleInstanceStateChanges();\n\n\t\t\t// If we're in a non-processing state, we want to respond only to control events.\n\t\t\t// If we have no control events, we can just skip everything else.\n\t\t\tif (!_ShouldProcessEvent())\n\t        {\n\t\t        return _ExecuteFirstEvent(controlOnly: true);\n\t        }\n\n\t        // If we have any queued events, do one of those.\n\t        if (_ExecuteFirstEvent(controlOnly: false)) return true;\n\n\t        if (!_ShouldProcess()) return false;\n\n\t        // Otherwise, check to see if any activities need to be executed; if so, do those.\n\t        if (_ExecuteFirstActivity()) return true;\n\n\t        // If we get here, it might be that we have some unfinished activities in the database that for some reason weren't loaded into memory.\n\t        // Check for that, and, if so, load them now.\n\t        QueueIncompleteActivities();\n\t        // Try to execute an activity again -- we may have just loaded some\n\t        if (_ExecuteFirstActivity()) return true;\n\t        // If we can complete a waiting activity, do that.\n\t        if (_CheckWaitingActivities()) return true;\n\n\t        // Otherwise, we've got nothing to do and can quit.\n\t        if (!HasQueuedWork && !HasUnfinishedActivities)\n\t        {\n\t\t        _MarkCompleted();\n\t\t\t\t// If we processed nothing (the activity count is 0) we don't want to mark ourselves as waiting.  This is mostly because\n\t\t\t\t// we don't want to update our UpdatedDate (see ATL-20570).  This case occurs when our workflow is already waiting and has been\n\t\t\t\t// picked up for the day and each activity checked to see if it's done waiting.  We don't want this to trigger an update if\n\t\t\t\t// nothing has actually changed.\n\t        }\n\t        else if (_inMemoryActivityCount > 0 || _instance.Status != Enums.WorkflowStepStatus.Waiting)\n\t        {\n\t\t\t\tvar workflowConfig = WorkflowConfig(_instance.AccountId);\n\t\t\t\tvar enableSmallBenRateLimits = workflowConfig?.EnableSmallBenRateLimits ?? false;\n\n\t\t\t\tif (_instance.Status == Enums.WorkflowStepStatus.Paused\n\t\t\t\t    && ((string.Equals(ADEXS.Core.Workflow.Infrastructure.FeatureFlags.WorkflowFeatureFlags.EnableExpressionApiRateLimit, \"live\", StringComparison.OrdinalIgnoreCase)\n\t\t\t\t         && _instance.WorkflowThrottledStatus == Enums.WorkflowThrottledStatus.ThrottledDueToExpressionRateLimit)\n\t\t\t\t\t|| (enableSmallBenRateLimits && _instance.WorkflowThrottledStatus == Enums.WorkflowThrottledStatus.ThrottledDueToSmallBenRateLimit)))\n\t\t\t\t{\n\t\t\t\t\t// keep throttled workflows in paused status\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t_MarkWaiting();\n\t\t\t}\n\n\t\t    return false;\n        }\n\n        public void ExecuteActivity(InstanceActivity instanceActivity)\n        {\n\t        LastProcessDate = DateTime.UtcNow;\n\n\t\t\tusing var span = StartActivity()\n\t\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, instanceActivity.Uid);\n\n            IWINSActivity activity = _SafeGetActivity(instanceActivity);\n            if (activity == null) throw new ApplicationException(string.Format(\"Cannot find expected activity {0} in workflow map for instanceUid {1}\", instanceActivity.ActivityTypeName, Uid));\n\n            using (ScmNDC.Push(BuildNDCTags(instanceActivity)))\n            {\n\t            _log.InfoWithPII($\"ExecuteActivity called for Activity ({{0}}).\", instanceActivity.Name);\n\t            IWINSWorkflowContext ctx = null;\n\t            Stopwatch sw = Stopwatch.StartNew();\n\t            try\n\t            {\n\t\t            _lastActivityUid = instanceActivity.Uid;\n\n\t\t\t\t\tif (!_ShouldProcess()) throw new ApplicationException(string.Format(\"InstanceUid {0} is in an invalid state to execute activity {1}\", Uid, PII.Encode(ApplicationSettings.PIIHashingStrategy, instanceActivity.Name)));\n\n\t\t            // Check for runaway workflows.\n\t\t            if (++_inMemoryActivityCount >= MAX_IN_MEMORY_ACTIVITY_COUNT)\n\t\t            {\n\t\t\t            _log.WarnNoPII(string.Format(\"In-memory activity count exceeded: {0} activities without entering into a Waiting state\", _inMemoryActivityCount));\n\t\t\t            throw new PublicException(PublicException.FailReason.InvalidState, string.Format(\"In-memory activity count exceeded: {0} activities without entering into a Waiting state\", _inMemoryActivityCount));\n\t\t            }\n\n\t\t\t\t\t// Governance, check if activity execution limit has been reached\n\t\t\t\t\tif (PauseWhenActivityExecutionLimitReached())\n\t\t\t\t\t{\n\t\t\t\t\t\t// In this case, the workflow is paused, purge date is set and an e-mail has been sent to support team.\n\t\t\t\t\t\t// The current activity will not be executed, unless the limits are increased and the workflow resumed.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t_data.ActivityExecuting(_instance, instanceActivity);\n\n\t\t            ctx = _CreateContext(activity, instanceActivity);\n\n\t\t\t\t\tif (!ShouldUseScopeEventHandler() && IsTrackItActivity(activity))\n\t\t\t\t\t{\n\t\t\t\t\t\tFireWorkflowScopeEvent(null, ScopeEventType.StepInitiated, activity, ctx);\n\t\t\t\t\t}\n\n\t\t\t\t\tactivity.Execute(ctx);\n\t\t            _ActivityWorkCompleted(instanceActivity, activity, ctx, sw);\n\t\t\t\t\tspan?.SetStatus(ActivityStatusCode.Ok);\n\t            }\n\t\t\t\tcatch (ExpressionApiRequestThrottledException expressionApiThrottledException)\n\t\t\t\t{\n\t\t\t\t\texpressionApiThrottledException.WorkflowThrottledStatus = Enums.WorkflowThrottledStatus.ThrottledDueToExpressionRateLimit;\n\t\t\t\t\tPauseWhenThrottled(instanceActivity, expressionApiThrottledException);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (SmallBenApiRequestThrottledException smallBenApiThrottledException)\n\t\t\t\t{\n\t\t\t\t\tsmallBenApiThrottledException.WorkflowThrottledStatus = Enums.WorkflowThrottledStatus.ThrottledDueToSmallBenRateLimit;\n\t\t\t\t\tPauseWhenThrottled(instanceActivity, smallBenApiThrottledException);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (Exception e)\n\t            {\n\t\t\t\t\tif (e is ArgumentNullException && ctx == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar message =\n\t\t\t\t            string.Format(Resources.WINSResources.ActionFailed_ReferenceID_0, Guid.NewGuid()) +\n\t\t\t\t            $\". Inst: {instanceActivity.AccountId} '{instanceActivity.InstanceUid}'.\";\n\t\t\t            _log.ErrorNoPII(message, e);\n\t\t\t\t\t\t_data.CreateInstanceHistory(instanceActivity.AccountId, instanceActivity.InstanceUid, instanceActivity.Uid, message, true);\n\t\t            }\n\n\t\t\t\t\t// Oh my...\n\t\t\t\t\t// Look at this catch block.\n\t\t\t\t\tbool isTransient = e is TransientException;\n\t\t            bool useFailureOutput = ctx != null && activity.HasFailureOutput;\n\n\t\t            if (isTransient) throw new TransientException(e);\n\t\t            if (useFailureOutput)\n\t\t            {\n\t\t\t\t\t\tctx.ActivityVariables.Set(\"Failure\", e.Message);\n\t\t\t\t\t\tctx.MarkAsCompleted(AbstractActivity.OUTPUT_FAILURE);\n\t\t\t            _ActivityWorkCompleted(instanceActivity, activity, ctx, sw);\n\t\t            }\n\t\t            else\n\t\t            {\n\t\t\t            _data.ActivityFailure(_instance, instanceActivity);\n\t\t\t            if (ctx == null) ctx = _CreateContext(activity, instanceActivity);\n\t\t\t\t\t\tif (!ShouldUseScopeEventHandler()) CompleteScopeStep(instanceActivity, activity, ctx);\n\t\t\t\t\t\tactivity.ActivityFinished(ctx);\n\n\t\t\t\t\t\ttry\n\t\t\t            {\n\t\t\t\t            if (_instance.Status == Enums.WorkflowStepStatus.Failed)\n\t\t\t\t            {\n\t\t\t\t\t\t\t\tif (ShouldUseScopeEventHandler())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tInstanceHandler.Fail(ctx, activity, GetUnfinishedWINSWorkflowContextsWINSActivities(instanceActivity.EndDate));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tWorkflowScopeEvent.ScopeEventInfo scopeEventData = new WorkflowScopeEvent.ScopeEventInfo()\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tAccountId = ctx.AccountId,\n\t\t\t\t\t\t\t\t\t\tScopeUid = ctx.ScopeUid,\n\t\t\t\t\t\t\t\t\t\tScopeName = ctx.ScopeName,\n\t\t\t\t\t\t\t\t\t\tStepName = instanceActivity.Name,\n\t\t\t\t\t\t\t\t\t\tStepDisplayName = GetActivityDisplayName(activity, ctx),\n\t\t\t\t\t\t\t\t\t\tStepTypeName = instanceActivity.ActivityTypeName,\n\t\t\t\t\t\t\t\t\t\tStepUid = instanceActivity.Uid,\n\t\t\t\t\t\t\t\t\t\tPeriodStart = instanceActivity.EndDate,\n\t\t\t\t\t\t\t\t\t\tEventType = (int)ScopeEventType.WorkflowFailed,\n\t\t\t\t\t\t\t\t\t\tOutput = instanceActivity.Output,\n\t\t\t\t\t\t\t\t\t\tWorkflowUid = ctx.WorkflowInstanceUid,\n\t\t\t\t\t\t\t\t\t\tWorkflowName = ctx.WorkflowName\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tWorkflowScopeEvent scopeEvent = new WorkflowScopeEvent(ctx.AccountId, ctx.WorkflowInstanceUid)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tEventData = scopeEventData\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tEventRepo.FireEvent(ctx.WorkflowUserAccount.Account, scopeEvent);\n\n\t\t\t\t\t\t\t\t\tAbortOrFailScopeStep(Enums.WorkflowStepStatus.Failed, instanceActivity.EndDate);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t            }\n\t\t\t            catch (Exception ex)\n\t\t\t            {\n\t\t\t\t        _log.ErrorNoPII($\"Error in saving scope event {ctx.ScopeUid} for eventtype {ScopeEventType.WorkflowFailed}\", ex);\n\t\t\t            }\n\n\t\t\t            _unfinishedActivities.Remove(instanceActivity.Uid);\n\t\t\t            _data.FireMessageQueueEvent(new WorkflowEvent(AccountId, _instance.Uid, (int)_instance.Status));\n\t\t            }\n\t            }\n\t            finally\n\t            {\n\t\t            ActivityExecutionCount++;\n\t            }\n\t\t\t}\n        }\n\n        public void ExecuteCallback(InstanceActivity instanceActivity, string name, object value)\n        {\n            LastProcessDate = DateTime.UtcNow;\n\n\t\t\tusing var span = StartActivity()\n\t\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, instanceActivity?.Uid);\n\n            IWINSActivity activity = _SafeGetActivity(instanceActivity);\n            if (activity == null) return;\n\n            using (ScmNDC.Push(BuildNDCTags(instanceActivity)))\n            {\n\t            _log.InfoWithPII($\"ExecuteCallback called for Activity ({{0}}) with callback {name}.\", instanceActivity.Name);\n\n\t            if (!(_ShouldProcess(instanceActivity) && _ShouldProcessEvent()))\n\t            {\n\t\t            if (instanceActivity.Status == Enums.WorkflowStepStatus.Completed)\n\t\t            {\n\t\t\t\t\t\t_log.InfoWithPII($\"ExecuteCallback did not complete because the activity was already completed. Activity {{0}} is in an invalid state to process callback {name}. Activity status: {instanceActivity.Status}. Instance status: {Model.Status}\", instanceActivity.Name);\n\t\t            }\n\t\t            else\n\t\t            {\n\t\t\t            _log.ErrorWithPII($\"InstanceUid {Uid} is in an invalid state to process callback {name}. Activity status: {instanceActivity.Status}.  Instance status: {Model.Status}\");\n\t\t\t\t\t}\n\t\t            return;\n\t\t\t\t}\n\n\t            IWINSWorkflowContext ctx = _CreateContext(activity, instanceActivity);\n\n\t\t\t\ttry\n\t\t        {\n\t\t\t\t\tStopwatch sw = Stopwatch.StartNew();\n\t\t            activity.ExecuteCallback(ctx, name, value);\n\n\t\t            if (_instance.Status != Enums.WorkflowStepStatus.Aborted)\n\t\t            {\n\t\t\t            _ActivityWorkCompleted(instanceActivity, activity, ctx, sw);\n\t\t            }\n\n\t\t            span?.SetStatus(ActivityStatusCode.Ok);\n\t            }\n\t\t\t\tcatch (ExpressionApiRequestThrottledException expressionApiThrottledException)\n\t\t\t\t{\n\t\t\t\t\texpressionApiThrottledException.WorkflowThrottledStatus = Enums.WorkflowThrottledStatus.ThrottledDueToExpressionRateLimit;\n\t\t\t\t\tPauseWhenThrottled(instanceActivity, expressionApiThrottledException);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (SmallBenApiRequestThrottledException smallBenApiThrottledException)\n\t\t\t\t{\n\t\t\t\t\tsmallBenApiThrottledException.WorkflowThrottledStatus = Enums.WorkflowThrottledStatus.ThrottledDueToSmallBenRateLimit;\n\t\t\t\t\tPauseWhenThrottled(instanceActivity, smallBenApiThrottledException);\n\n\t\t\t\t\t// Throw so that the calling method will handle re-queuing the failed event\n\t\t\t\t\t// When resumed we will retry the recurring reminder callback\n\t\t\t\t\tthrow;\n\t\t\t\t}\n\t            catch (Exception e)\n\t            {\n\t\t\t\t\t// Note that we don't fail the workflow here -- see ATL-21019\n\t\t\t\t\tif (instanceActivity.Status == Enums.WorkflowStepStatus.Completed ||\n\t\t                Model.Status == Enums.WorkflowStepStatus.Completed)\n\t\t            {\n\t\t\t\t\t\t_log.InfoNoPII($\"The callback is unnecessary: workflow activity '{instanceActivity.Uid}' [{instanceActivity.Status}] or instance '{instanceActivity.InstanceUid}' [{Model.Status}] has already completed.\");\n\t\t            }\n\t\t            else\n\t\t            {\n\t\t\t\t\t\tvar pe = e as PublicException;\n\t\t\t\t\t\t_log.ErrorNoPII($\"ExecuteCallback failed.\", pe?.InnerException ?? e);\n\t\t            }\n\t            }\n            }\n        }\n\n        public void ExecuteEvent(Event e, bool queueOnFailure = true)\n        {\n            LastProcessDate = DateTime.UtcNow;\n            if (e == null) return;\n\n            using var span = StartActivity();\n\n            using (ScmNDC.Push(BuildNDCTags(e)))\n            {\n\t            // If we have Uid but the lock expired we don't want to process the event as it was persisted and some other worker probably has already picked it.\n\t            if (e.Uid != Guid.Empty && e.LockExpirationDate <= LastProcessDate)\n\t            {\n\t\t            _log.InfoNoPII($\"Aborting event execution - ExecuteEvent called with an event that has an expired lock ({e.LockExpirationDate}) for callback {e.CallbackName}.\");\n\t\t\t\t\tspan?.SetStatus(ActivityStatusCode.Ok);\n\t\t            return;\n\t            }\n\n\t            _log.InfoNoPII($\"ExecuteEvent called with callback {e.CallbackName}.\");\n\t            try\n\t            {\n\t\t            Stopwatch sw = Stopwatch.StartNew();\n\t\t            if (e.ActivityUid == Guid.Empty)\n\t\t            {\n\t\t\t            // We expect these to be control codes\n\t\t\t            string comment = (e.CallbackObject == null ? \"\" : e.CallbackObject.ToString());\n\t\t\t            switch (e.CallbackName)\n\t\t\t            {\n\t\t\t\t            case Event.ControlNames.Abort:\n\t\t\t\t\t            Abort(e.BPMUser, comment);\n\t\t\t\t\t            break;\n\t\t\t\t\t\t\tcase Event.ControlNames.PauseForAccountCancel:\n\t\t\t\t\t\t\t\tPause(e.BPMUser, comment);\n\t\t\t\t\t\t\t\tSetPurgeDateForAccountCancel();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Event.ControlNames.PauseForRevisionSuspended:\n\t\t\t\t\t\t\t\tPauseForRevisionSuspended(e.BPMUser, comment);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Event.ControlNames.ResumeForSuspendedRevision:\n\t\t\t\t\t\t\t\t ResumeForSuspendedRevision(e.BPMUser, comment);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Event.ControlNames.Pause:\n\t\t\t\t\t\t\t\tPause(e.BPMUser, comment);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t            case Event.ControlNames.Resume:\n\t\t\t\t\t            Resume(e.BPMUser, comment);\n\t\t\t\t\t            break;\n\t\t\t\t            case Event.ControlNames.ResumeFromError:\n\t\t\t\t\t            ResumeFromError(e.BPMUser, comment);\n\t\t\t\t\t            break;\n\t\t\t\t            case Event.ControlNames.StartActivity:\n\t\t\t\t\t            QueueActivityByName(null, comment);\n\t\t\t\t\t            break;\n\t\t\t\t            default:\n\t\t\t\t\t            throw new ApplicationException(string.Format(\"Unhandled event {0}\", e.CallbackName));\n\t\t\t            }\n\t\t            }\n\t\t            else\n\t\t            {\n\t\t\t            // These *may* be control codes.  If they're not control codes, then\n\t\t\t            // we expect them to be a callback to an activity.\n\t\t\t            InstanceActivity activity;\n\t\t\t            if (!_unfinishedActivities.TryGetValue(e.ActivityUid, out activity)) activity = _data.LoadActivityByUid(_instance.AccountId, Constants.WorkflowUser, e.ActivityUid);\n\t\t\t            if (activity == null || activity.InstanceUid != e.InstanceUid) throw new ApplicationException(string.Format(\"Invalid ActivityUid {0} for InstanceUid {1}\", e.ActivityUid, e.InstanceUid));\n\t\t\t            switch (e.CallbackName)\n\t\t\t            {\n\t\t\t\t            // TODO: Start specific steps, fire specific outputs, complete specific steps, etc.\n\t\t\t\t            default:\n\t\t\t\t\t            ExecuteCallback(activity, e.CallbackName, e.CallbackObject);\n\t\t\t\t\t            break;\n\t\t\t            }\n\t\t            }\n\t\t            if (e.Uid != Guid.Empty) _data.EventSuccess(e.AccountId, e.Uid);\n\t\t\t\t\tWorkflowEventWorkload wrk = new WorkflowEventWorkload(e, \"EventExecuted\")\n\t\t\t\t\t{\n\t\t\t\t\t\tTotalMs = sw.ElapsedMilliseconds,\n\t\t\t\t\t\tRevisionUid = _instance.RevisionUid, WorkflowDB = DataStore.GetDbNameForAccount(e.AccountId)\n\t\t\t\t\t};\n\t\t            wrk.Log();\n\n\t\t            span?.SetStatus(ActivityStatusCode.Ok);\n\t            }\n\t            catch (Exception excp)\n\t            {\n\t\t            _log.ErrorNoPII($\"Error processing eventUid {e.Uid} ({e.CallbackName}).\", excp);\n\t\t            if (!queueOnFailure) throw;\n\t\t            if (e.Uid == Guid.Empty)\n\t\t            {\n\t\t\t            e.NextProcessDate = _data.NextProcessDate();\n\t\t\t            e.ErrorCount = 1;\n\t\t\t            e.LastErrorMessage = excp.Message;\n\t\t\t            _data.CreateEvent(e);\n\t\t\t            WorkflowEventWorkload wrk = new WorkflowEventWorkload(e, \"EventCreatedOnExecuteException\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tRevisionUid = _instance.RevisionUid,\n\t\t\t\t\t\t\tWorkflowDB = DataStore.GetDbNameForAccount(e.AccountId)\n\t\t\t\t\t\t};\n\t\t\t            wrk.Log();\n\t\t            }\n\t\t            else\n\t\t            {\n\t\t\t            _data.EventFailure(e.AccountId, e.Uid, _data.NextProcessDate(), excp.Message);\n\t\t            }\n\t            }\n            }\n        }\n\n        public void Abort(UserAccount user, string comment)\n        {\n            LastProcessDate = DateTime.UtcNow;\n            lock (_lockObject)\n            {\n                foreach (InstanceActivity activity in _unfinishedActivities.Values)\n                {\n\t                try\n\t                {\n\t\t                IWINSActivity winsActivity = _SafeGetActivity(activity);\n\t\t                IWINSWorkflowContext ctx = _CreateContext(winsActivity, activity);\n\t\t                winsActivity.OnActivityAborted(ctx);\n\t                }\n\t                catch (Exception ex)\n\t                {\n\t\t                _log.ErrorNoPII(string.Format(\"Failed OnActivityAborted AccountId {0}, ActivityUid {1}\", user.AccountId, activity.Uid), ex);\n\t\t\t\t\t}\n                }\n                new WorkflowControlInstance(Model).Abort(user, comment);\n\n\t\t\t\tif (ShouldUseScopeEventHandler())\n\t\t\t\t{\n\t\t\t\t\tInstanceHandler.Abort(_instance, user, GetUnfinishedWINSWorkflowContextsWINSActivities(DateTime.UtcNow));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tAbortOrFailScopeStep(Enums.WorkflowStepStatus.Aborted, DateTime.UtcNow);\n\t\t\t\t\tFireWorkflowScopeEvent(user, ScopeEventType.WorkflowAborted);\n\t\t\t\t}\n\n\t\t\t\t_ForceReload();\n            }\n        }\n\n        public int SetPurgeDateForAccountCancel()\n        {\n\t        LastProcessDate = DateTime.UtcNow;\n\t        lock (_lockObject)\n\t        {\n\t\t        var daysUntilPurge = new WorkflowControlInstance(Model).SetPurgeDateForAccountCancel();\n\t\t        _ForceReload();\n\t\t\t\treturn daysUntilPurge;\n\t        }\n        }\n\n        public void ClearPurgeDate()\n        {\n\t        LastProcessDate = DateTime.UtcNow;\n\t        lock (_lockObject)\n\t        {\n\t\t        new WorkflowControlInstance(Model).ClearPurgeDate();\n\t\t        _ForceReload();\n\t        }\n        }\n\n\t\tpublic void Pause(UserAccount user, string comment)\n\t\t{\n\t\t\t_log.InfoNoPII($\"Pause - Pausing\");\n\t\t\tPauseInstance(user, comment, new WorkflowControlInstance(Model).Pause);\n\t\t}\n\n\t\tpublic void PauseForRevisionSuspended(UserAccount user, string comment)\n\t\t{\n\t\t\tif (Model.Status == Enums.WorkflowStepStatus.Paused)\n\t\t\t{\n\t\t\t\t_log.InfoNoPII($\"PauseForRevisionSuspended - No action taken, instance already paused\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_log.InfoNoPII($\"PauseForRevisionSuspended - Pausing\");\n\t\t\tPauseInstance(user, comment, new WorkflowControlInstance(Model).PauseForRevisionSuspended);\n\t\t}\n\n\t\tpublic void ResumeForSuspendedRevision(UserAccount user, string comment)\n\t\t{\n\t\t\tif (Model.Status != Enums.WorkflowStepStatus.Paused)\n\t\t\t{\n\t\t\t\t_log.InfoNoPII($\"ResumeForSuspendedRevision - No action taken, instance not paused. Status:{Model.Status}\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check if instance UpdatedBy has changed since the PauseForRevisionSuspended was invoked, if it has we do not want to do anything.\n\t\t\tif (Model.UpdatedBy != WorkflowControlInstance.PauseForSuspendedRevisionUpdatedBy)\n\t\t\t{\n\t\t\t\t_log.InfoNoPII($\"ResumeForSuspendedRevision - No action taken, UpdatedBy is not {WorkflowControlInstance.PauseForSuspendedRevisionUpdatedBy}\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_log.InfoNoPII($\"ResumeForSuspendedRevision - Resuming\");\n\t\t\tResume(user, comment);\n\t\t\tClearPurgeDate();\n\t\t}\n\n\t\tpublic bool PauseWhenActivityExecutionLimitReached()\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// Governance, check whether the number of executed activities exceeded the configured limit\n\t\t\t\t_isActivityExecutionLimitReached = Governor.IsActivityExecutionLimitReached(AccountId, Uid, _instance.RevisionUid, _instance.RevisionCreatedDate, ActivityExecutionCount, out _activityExecutionCountEnforcedLimit);\n\n\t\t\t\tif (_isActivityExecutionLimitReached)\n\t\t\t\t{\n\t\t\t\t\t_log.InfoNoPII($\"Workflow instance '{Uid}' for account '{AccountId}' has exceeded the maximum limit (Actual={ActivityExecutionCount}, EnforcedLimit={_activityExecutionCountEnforcedLimit}) and will be paused.\");\n\n\t\t\t\t\tPause(UserAccount.WorkflowUserAccount(AccountId), \"Workflow activity execution limit reached.\");\n\n\t\t\t\t\tTrySendActivityExecutionLimitExceedNotification(SetPurgeDateForAccountCancel());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e)\n\t\t\t{\n\t\t\t\t_log.ErrorNoPII($\"Unable to pause instance '{Uid}' for account '{AccountId}' activity execution limit\", e);\n\t\t\t}\n\n\t\t\treturn _isActivityExecutionLimitReached;\n\t\t}\n\n\t\tpublic void PauseWhenThrottled(InstanceActivity activity, WorkflowApiRequestThrottledException exception)\n\t\t{\n\t\t\tRequires.NotNull(activity, nameof(InstanceActivity));\n\t\t\tRequires.NotNull(exception, nameof(WorkflowApiRequestThrottledException));\n\n\t\t\tif (exception.WorkflowThrottledStatus == Enums.WorkflowThrottledStatus.NotThrottled)\n\t\t\t{\n\t\t\t\t_log.InfoNoPII($\"Workflow instance '{Uid}' for account '{AccountId}' is not throttled and will not be paused.\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tactivity.Status = Enums.WorkflowStepStatus.Paused;\n\t\t\t\tvar throttledByApi = exception.ThrottledApiAsString();\n\n\t\t\t\t_log.InfoNoPII($\"Workflow instance '{Uid}' for account '{AccountId}' has exceeded the maximum {throttledByApi} request limit and will be paused. Message: {exception.Message}\");\n\n\t\t\t\tPauseInstance(UserAccount.WorkflowUserAccount(AccountId), $\"{throttledByApi} requests limit reached.\", new WorkflowControlInstance(Model).PauseForWorkflowRateLimitExceed);\n\n\t\t\t\t// Send notification\n\t\t\t\tswitch (exception.WorkflowThrottledStatus)\n\t\t\t\t{\n\t\t\t\t\tcase Enums.WorkflowThrottledStatus.ThrottledDueToExpressionRateLimit:\n\t\t\t\t\t\tTrySendExpressionRateLimitExceedNotification(SetPurgeDateForWorkflowRateLimit(), GetAdvancedWorkflowNotificationUserAccountUid());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Enums.WorkflowThrottledStatus.ThrottledDueToSmallBenRateLimit:\n\t\t\t\t\t\tTrySendSmallBenRateLimitExceedNotification(SetPurgeDateForWorkflowRateLimit(), GetAdvancedWorkflowNotificationUserAccountUid());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t_log.WarnNoPII(\"No notifications sent for unsupported throttle status\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// mark instance as throttled for current workflow run session, WorkflowThrottledStatus property is not persisted and refreshed on reload\n\t\t\t\t_instance.WorkflowThrottledStatus = exception.WorkflowThrottledStatus;\n\t\t\t}\n#pragma warning disable CA1031\n\t\t\tcatch (Exception e)\n#pragma warning restore CA1031\n\t\t\t{\n\t\t\t\t_log.ErrorNoPII($\"Unable to pause instance '{Uid}' for account '{AccountId}' rate limit request limit with status {exception?.WorkflowThrottledStatus}\", e);\n\t\t\t}\n\t\t}\n\n\t\tpublic int SetPurgeDateForWorkflowRateLimit()\n\t\t{\n\t\t\tLastProcessDate = DateTime.UtcNow;\n\t\t\tlock (_lockObject)\n\t\t\t{\n\t\t\t\tvar daysUntilPurge = new WorkflowControlInstance(Model).SetPurgeDateForWorkflowRateLimit();\n\t\t\t\t_ForceReload();\n\t\t\t\treturn daysUntilPurge;\n\t\t\t}\n\t\t}\n\n\t\tprivate Guid GetAdvancedWorkflowNotificationUserAccountUid()\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\treturn new AccountSettings(AccountId, Constants.WorkflowUser).AdvancedWorkflowNotificationUserAccountUid;\n\t\t\t}\n#pragma warning disable CA1031\n\t\t\tcatch (Exception ex)\n#pragma warning restore CA1031\n\t\t\t{\n\t\t\t\t_log.ErrorNoPII($\"An exception occurred while retrieving AdvancedWorkflowNotificationUserAccountUid for account '{AccountId}' and workflow instance '{Uid}'.\", ex);\n\t\t\t\treturn Guid.Empty;\n\t\t\t}\n\t\t}\n\n\t\tpublic void TrySendSmallBenRateLimitExceedNotification(int pausedPurgeDays, Guid advancedWorkflowNotificationUserAccountUid)\n\t\t{\n\t\t\t// Send notification - pending ATL-90622\n\t\t}\n\n\t\tpublic void TrySendExpressionRateLimitExceedNotification(int pausedPurgeDays, Guid advancedWorkflowNotificationUserAccountUid)\n\t\t{\n\t\t\tif (!ServiceLocator.GetInstance<IWorkflowSettingRepository>().GetEnableWorkflowLimitNotifications(AccountId))\n\t\t\t{\n\t\t\t\t_log.InfoNoPII($\"EnableWorkflowLimitNotifications disabled for account {AccountId}, not sending expression rate limit exceeded notification\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (advancedWorkflowNotificationUserAccountUid == Guid.Empty)\n\t\t\t\t{\n\t\t\t\t\t_log.InfoNoPII($\"There is no AdvancedWorkflowNotificationUser configured. Not sending expression rate limit exceeded notification for account '{AccountId}' and workflow instance '{Uid}'.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Send to AdvancedWorkflowNotificationUserAccountUid, if configured for account\n\t\t\t\t_log.InfoNoPII($\"Loading {nameof(UserAccount)} {advancedWorkflowNotificationUserAccountUid} to receive expression rate limit exceeded notification\");\n\t\t\t\tUserAccount notificationUser = UserAccountRepository.Instance.LoadByUid(AccountId, advancedWorkflowNotificationUserAccountUid);\n\n\t\t\t\tif (string.IsNullOrEmpty(notificationUser?.EmailAddress))\n\t\t\t\t{\n\t\t\t\t\t_log.InfoNoPII($\"AdvancedWorkflowNotificationUser '{advancedWorkflowNotificationUserAccountUid}' not found or missing email address. Not sending expression rate limit exceeded notification for account '{AccountId}' and workflow instance '{Uid}'.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar emailRecipients = new List<string>() { notificationUser.EmailAddress };\n\n\t\t\t\t_log.InfoNoPII($\"Sending expression rate limit exceeded notification to user '{advancedWorkflowNotificationUserAccountUid}' for account '{AccountId}' and workflow instance '{Uid}'.\");\n\n\t\t\t\tvar email = new WorkflowPauseExpressionRateLimitExceededNotificationEmail\n\t\t\t\t{\n\t\t\t\t\tAccountId = AccountId,\n\t\t\t\t\tWorkflowInstanceUid = Uid,\n\t\t\t\t\tWorkflowInstanceId = _instance.Id,\n\t\t\t\t\tEmailRecipients = emailRecipients,\n\t\t\t\t\tPausedPurgeDays = pausedPurgeDays\n\t\t\t\t};\n\n\t\t\t\tServiceLocator.GetInstance<IEmailDistributor>().Init(email).QueueIt();\n\n\t\t\t\treturn;\n\t\t\t}\n#pragma warning disable CA1031\n\t\t\tcatch (Exception ex)\n#pragma warning restore CA1031\n\t\t\t{\n\t\t\t\t_log.ErrorNoPII($\"An exception occurred while sending activity execution limit exceeded notification to support for account '{AccountId}' and workflow instance '{Uid}'.\", ex);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tpublic void Resume(UserAccount user, string comment)\n        {\n            LastProcessDate = DateTime.UtcNow;\n            lock (_lockObject)\n            {\n                new WorkflowControlInstance(Model).Resume(user, comment);\n                _ForceReload();\n            }\n\t\t\tif (ShouldUseScopeEventHandler())\n\t\t\t{\n\t\t\t\tInstanceHandler.Resume(_instance, user);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tFireWorkflowScopeEvent(user, ScopeEventType.WorkflowResumed);\n\t\t\t}\n        }\n\n        public void ResumeFromError(UserAccount user, string comment)\n        {\n            LastProcessDate = DateTime.UtcNow;\n            lock (_lockObject)\n            {\n                new WorkflowControlInstance(Model).ResumeFromError(user, comment);\n                _ForceReload();\n\t\t\t}\n\t\t\tif (ShouldUseScopeEventHandler())\n\t\t\t{\n\t\t\t\tInstanceHandler.ResumeFromError(_instance, user);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tFireWorkflowScopeEvent(user, ScopeEventType.WorkflowResumed);\n\t\t\t}\n\t\t}\n\n        public void SaveToDatabase()\n        {\n            // We may have in-memory events that need to be saved to the db.\n\t\t\tPersistEvents();\n            _PersistVariables();\n        }\n\n        public void SaveEventsToDatabase()\n        {\n\t\t\ttry\n\t\t\t{\n\t\t\t\tPersistEvents();\n\t\t\t}\n\t\t\tcatch (Exception e)\n\t\t\t{\n\t\t\t\t_log.ErrorNoPII($\"Failed to save unsaved events for instance {Uid} to db\", e);\n\t\t\t}\n\t\t}\n\n\t    public void ArchiveVariables()\n        {\n            var incompleteActivities = _data.LoadIncompleteActivitiesByInstanceUid(AccountId, Constants.WorkflowUser, _instance.Uid);\n            // don't archive if there are any incomplete activites besides the one that has triggered this\n            if (incompleteActivities != null && incompleteActivities.Count > 1)\n            {\n                return;\n            }\n            _data.ArchiveVariables(AccountId, Constants.WorkflowUser, Uid);\n        }\n\n\t    public bool HasExistingLockExpired()\n\t    {\n\t\t    return LockExpirationDate < DateTime.UtcNow;\n\t    }\n\n\n        /// <summary>\n        /// Replaces variables provided in the dictionary returning replaced variables\n        /// </summary>\n        public void SetVariables(\n\t        InstanceActivity instanceActivity,\n\t        Dictionary<string, object> variables,\n\t        out List<InstanceVariable> oldVariables,\n\t        out bool areVariablesOverTotalSizeLimit,\n\t        out int totalVariablesSizeBytes,\n\t        out int totalVariablesSizeLimitBytes,\n\t\t\tout Dictionary<string, int> oversizedVariables,\n\t        out int variableValueSizeLimitBytes)\n        {\n            IWINSActivity activity = _SafeGetActivity(instanceActivity);\n            if (activity == null) throw new ApplicationException(string.Format(\"Cannot find expected activity '{0}' in workflow map for instanceUid '{1}'.\", instanceActivity.ActivityTypeName, Uid));\n            _log.DebugWithPII($\"SetVariables called for ActivityUid {instanceActivity.Uid} ({{0}}).\", instanceActivity.Name);\n\n            // We create the context so that the variable dictionaries get populated\n            IWINSWorkflowContext ctx = _CreateContext(activity, instanceActivity);\n            oldVariables = new List<InstanceVariable>();\n            var newVariables = UpdateVariablesHelper.PopulateContextVariables(ctx, this.Model, variables);\n\n            // Only set variables that are under the size limit\n\t\t\toversizedVariables = InstanceVariableGovernance.GetOversizedVariables(ctx.AccountId, newVariables, ctx.SubmittedDate, out variableValueSizeLimitBytes);\n\t\t\tforeach (InstanceVariable variable in newVariables)\n\t\t\t{\n\t\t\t\tif (!oversizedVariables.ContainsKey(variable.Name))\n\t\t\t\t{\n\t\t\t\t\toldVariables.Add(Variables[variable.Name]);\n\t\t\t\t\t// we could do \"ctx.Variables.Set(variable.Key, variable.Value);\" but that would log as the instanceActivity and we don't want that...\n\t\t\t\t\tVariables[variable.Name] = variable;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Undo setting the variables, if the instance's total variable size exceeds the limit\n\t\t\tareVariablesOverTotalSizeLimit = InstanceVariableGovernance.AreVariablesOverTotalSizeLimit(ctx.AccountId,\n\t\t\t\tVariables.Select(x => x.Value), ctx.SubmittedDate, activityConfiguration: null, out totalVariablesSizeBytes, out totalVariablesSizeLimitBytes);\n\t\t\tif (areVariablesOverTotalSizeLimit)\n\t\t\t{\n\t\t\t\tforeach (InstanceVariable variable in oldVariables)\n\t\t\t\t{\n\t\t\t\t\tVariables[variable.Name] = variable;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n        }\n\n        public DateTime GetLastAbortNotificationDate()\n        {\n\t        if (!_contextInitialized)\n\t        {\n\t\t        _LoadVariables();\n            }\n\n\t        if (_variables.TryGetValue(WINSClientLibrary.VAR_LAST_ABORT_NOTIFICATION_DATE, out InstanceVariable lastNotificationDate) &&\n\t            DateTime.TryParse(lastNotificationDate.Value.ToString(), out DateTime dateTime))\n\t        {\n\t\t        return dateTime;\n\t        }\n\n            return DateTime.MinValue;\n        }\n\n        public void SaveLastAbortNotificationDate(int accountId, Guid workflowInstanceUid, DateTime lastAbortNotificationDate)\n        {\n            var variable = InstanceVariable.CreateFromValue(\n\t            accountId,\n\t            workflowInstanceUid,\n\t            WINSClientLibrary.VAR_LAST_ABORT_NOTIFICATION_DATE,\n\t            Enums.WorkflowVariableType.Date,\n\t            lastAbortNotificationDate);\n\n            ServiceLocator.GetInstance<IInstanceVariablePersistence>().Save(Constants.WorkflowUser, variable);\n\n        }\n\n        /// <summary>\n        /// Called when we've finished work on an activity -- either executing it or performing a callback on it.\n        /// </summary>\n        private void _ActivityWorkCompleted(InstanceActivity instanceActivity, IWINSActivity activity, IWINSWorkflowContext ctx, Stopwatch sw)\n        {\n\t        // If it's flagged as completed, update in the db, queue up any next activities, and remove it from our list.\n            if (instanceActivity.Status == Enums.WorkflowStepStatus.Completed)\n            {\n                _data.ActivityCompleted(instanceActivity, (activity is AbstractHumanActivity));\n                SaveInstanceActivityVariables(instanceActivity, ctx);\n\n\t\t\t\tRemoveProperties(instanceActivity, activity);\n\n\t\t\t\tif (!ShouldUseScopeEventHandler()) CompleteScopeStep(instanceActivity, activity, ctx);\n\n\t\t\t\tactivity.ActivityFinished(ctx);\n\n\t\t\t\tQueueActivitiesByLink(instanceActivity, instanceActivity.Output);\n\t\t\t\tlock (_unfinishedActivities)\n                {\n                    if (_unfinishedActivities.ContainsKey(instanceActivity.Uid)) _unfinishedActivities.Remove(instanceActivity.Uid);\n                }\n            }\n            else\n            {\n                // Otherwise, it's still running.  Flag it as waiting so it doesn't get processed again.\n                instanceActivity.Status = Enums.WorkflowStepStatus.Waiting;\n                _data.SaveInstanceActivity(instanceActivity);\n            }\n\n            _log.InfoWithPII($\"_ActivityWorkCompleted done for Activity ({{0}}) in status: {instanceActivity.Status} ({sw.ElapsedMilliseconds} ms).\", instanceActivity.Name);\n\n\n            // log workload data\n            try\n            {\n                WorkflowWorkload ww = new WorkflowWorkload();\n                ww.Add(ctx);\n                ww.TotalMs = sw.ElapsedMilliseconds;\n\t\t\t\tww.StartTime = DateTime.UtcNow.AddMilliseconds(-ww.TotalMs);\n                ww.Status = instanceActivity.Status.ToString();\n                ww.Output = instanceActivity.Output;\n                ww.ActivityCreatedDate = instanceActivity.CreatedDate;\n                ww.ActivityStartDate = instanceActivity.StartDate;\n                if (DateTime.MinValue < instanceActivity.EndDate && instanceActivity.EndDate < DateTime.MaxValue)\n                    ww.ActivityEndDate = instanceActivity.EndDate;\n                if (DateTime.MinValue < _instance.CreatedDate && _instance.CreatedDate < DateTime.MaxValue)\n\t                ww.InstanceCreatedDate = _instance.CreatedDate;\n                ww.ActivityKind = activity.Kind.ToString();\n                ww.RevisionUid = _instance.RevisionUid.ToString();\n\t\t\t\tww.DefinitionUid = _instance.DefinitionUid.ToString();\n\t\t\t\tww.WorkflowDB = DataStore.GetDbNameForAccount(instanceActivity.AccountId);\n\n\t\t\t\tww.Log();\n            }\n            catch (Exception ex)\n            {\n                _log.WarnNoPII(\"Failed to log workload.\", ex);\n            }\n        }\n\n\t\tprivate void CompleteScopeStep(InstanceActivity instanceActivity, IWINSActivity activity, IWINSWorkflowContext ctx)\n\t\t{\n            try\n            {\n                if (IsTrackItActivity(activity))\n                {\n                    Documents documents = null;\n                    if (ctx.TrackActivity())\n                    {\n                        documents = ((ITrackItActivity)activity).GetDocuments(ctx);\n\t\t\t\t\tServiceLocator.GetInstance<IDocumentScopeRepository>().CompleteStep(ctx.AccountId, ctx.ScopeUid, instanceActivity.Uid,\n                            documents, instanceActivity.Output, instanceActivity.Status,\n                            instanceActivity.EndDate);\n                    }\n\n                    WorkflowScopeEvent.ScopeEventInfo scopeEventData = new WorkflowScopeEvent.ScopeEventInfo()\n                    {\n                        AccountId = ctx.AccountId,\n                        Documents = documents?.Select(d => new WorkflowScopeEvent.DocumentDetail() { Uid = d.Uid, Name = d.Name }).ToList(),\n                        ScopeUid = ctx.ScopeUid,\n                        ScopeName = ctx.ScopeName,\n                        StepName = instanceActivity.Name,\n                        StepDisplayName = GetActivityDisplayName(activity, ctx),\n                        StepTypeName = instanceActivity.ActivityTypeName,\n                        StepUid = instanceActivity.Uid,\n                        PeriodStart = instanceActivity.EndDate,\n                        EventType = (int)ScopeEventType.StepFinished,\n                        Output = instanceActivity.Output,\n                        WorkflowUid = ctx.WorkflowInstanceUid,\n                        WorkflowName = ctx.WorkflowName\n                    };\n                    WorkflowScopeEvent scopeEvent = new WorkflowScopeEvent(ctx.AccountId, ctx.WorkflowInstanceUid)\n                    {\n                        EventData = scopeEventData\n                    };\n                    EventRepo.FireEvent(ctx.WorkflowUserAccount.Account, scopeEvent);\n                }\n            }\n            catch (Exception ex)\n            {\n                _log.ErrorNoPII($\"Error in saving scope event {ctx.ScopeUid} for eventtype {ScopeEventType.StepFinished}\", ex);\n            }\n        }\n\n        private void SaveInstanceActivityVariables(InstanceActivity instanceActivity, IWINSWorkflowContext ctx)\n        {\n\t        if (ctx.WorkflowUserAccount.Account.Settings.EnableWorkflowVariableHistory)\n\t        {\n\t\t        var instanceVariableRepository = ServiceLocator.GetInstance<IInstanceVariableRepository>();\n\t\t        instanceVariableRepository.SaveVariableHistory(instanceActivity.AccountId, ctx.WorkflowUserAccount.Uid,\n\t\t\t        instanceActivity.InstanceUid, instanceActivity.Uid, ctx.Variables.GetAllVariables());\n\t        }\n        }\n\n        private List<WINSWorkflowContextWINSActivity> GetUnfinishedWINSWorkflowContextsWINSActivities(DateTime endDate)\n        {\n\t\t\tvar list = new List<WINSWorkflowContextWINSActivity>();\n\n\t\t\tif (!HasUnfinishedActivities) return list;\n\n            List<InstanceActivity> activities;\n            lock (_unfinishedActivities)\n            {\n                activities = new List<InstanceActivity>(_unfinishedActivities.Values);\n            }\n\n            IWINSWorkflowContext ctx = null;\n            foreach (var activity in activities)\n            {\n                var winsActivity = _SafeGetActivity(activity);\n                ctx = _CreateContext(winsActivity, activity);\n\n                if (ctx.TrackActivity() && IsTrackItActivity(winsActivity))\n                {\n\t\t\t\t\tlist.Add(new WINSWorkflowContextWINSActivity { EndDate = endDate, WINSActivity = winsActivity, WINSWorkflowContext = ctx });\n\t\t\t\t}\n            }\n\n\t\t\treturn list;\n        }\n\n\t\tprivate void AbortOrFailScopeStep(Enums.WorkflowStepStatus status, DateTime endDate)\n\t\t{\n\t\t\tif (!HasUnfinishedActivities) return;\n\n\t\t\tList<InstanceActivity> activities;\n\t\t\tlock (_unfinishedActivities)\n\t\t\t{\n\t\t\t\tactivities = new List<InstanceActivity>(_unfinishedActivities.Values);\n\t\t\t}\n\t\t\tIWINSWorkflowContext ctx = null;\n\t\t\tforeach (var activity in activities)\n\t\t\t{\n\t\t\t\tvar winsActivity = _SafeGetActivity(activity);\n\t\t\t\tctx = _CreateContext(winsActivity, activity);\n\n\t\t\t\tif (ctx.TrackActivity() && IsTrackItActivity(winsActivity))\n\t\t\t\t{\n\t\t\t\t\tvar documents = ((ITrackItActivity)winsActivity).GetDocuments(ctx);\n\n\t\t\t\t\tServiceLocator.GetInstance<IDocumentScopeRepository>().CompleteStep(ctx.AccountId, ctx.ScopeUid, activity.Uid, documents, null, status, endDate);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate bool _CheckWaitingActivities()\n        {\n            List<InstanceActivity> activities;\n            lock (_unfinishedActivities)\n            {\n                activities = new List<InstanceActivity>(_unfinishedActivities.Values.Where(n => n.Status == Enums.WorkflowStepStatus.Waiting));\n            }\n            bool success = false;\n            foreach (InstanceActivity activity in activities)\n            {\n                if (CheckActivityForCompletion(activity)) success = true;\n            }\n            return success;\n        }\n\n        private bool _contextInitialized = false;\n        private IWINSWorkflowContext _CreateContext(IWINSActivity activity, InstanceActivity instanceActivity)\n        {\n            IWINSWorkflowContext ctx = CreateContext(activity, instanceActivity);\n            AtlasContext.Current.UserAccount = ctx.WorkflowUserAccount;\n            // Only do this once.  If it's been done, it's done.\n            if (_contextInitialized) return ctx;\n\n            // This all depends on the properties for the Start step.  We always want a Start step for normal processing;\n            // however, we don't necessarily have a Start step for our tests.\n            StartActivity start = _workflowMap.StartActivity;\n            if (start == null)\n            {\n                if (_data.IsTest) return ctx;\n                throw new ApplicationException(string.Format(\"Cannot find StartActivity for InstanceUid {0}\", _instance.Uid));\n            }\n\n            // Contents\n            string[][] contents = start.DefinedContents;\n            if (contents != null && contents.Length > 0)\n            {\n                foreach (string[] t in contents)\n                {\n                    ContentDefinition definition = new ContentDefinition(t);\n                    if (!_contentDefinitions.ContainsKey(definition.Name)) _contentDefinitions[definition.Name] = definition;\n                }\n            }\n\n            _LoadVariables();\n\n            // XML Variables\n            // Because XmlVariables have dependencies on the variables as well, it's easier to feed this through the xml variable handler\n            // rather than replicate the code.\n            List<IXmlVariableDefinition> definitions = start.DefinedXmlVariables;\n            if (definitions != null && definitions.Count > 0)\n            {\n                foreach (IXmlVariableDefinition definition in definitions)\n                {\n                    if (!_xmlVariableDefinitions.ContainsKey(definition.Name)) ctx.XmlVariables.Declare(definition, logMessage: false);\n                }\n            }\n\n            _contextInitialized = true;\n            return ctx;\n\t\t}\n\n        public IWINSWorkflowContext CreateContext(IWINSActivity activity, InstanceActivity instanceActivity)\n        {\n\t\t\treturn ServiceLocator.GetInstance<IWorkflowContextFactory>().CreateWorkflowContext(this, activity, instanceActivity);\n        }\n\n\t\tprivate void _LoadVariables()\n        {\n\t        // Variables\n\t        Dictionary<string, InstanceVariable> variables = _data.LoadVariablesByInstanceUid(AccountId, Constants.WorkflowUser, Uid);\n\t        foreach (InstanceVariable variable in variables.Values)\n\t        {\n\t\t        if (!_variables.ContainsKey(variable.Name)) _variables[variable.Name] = variable;\n\t        }\n        }\n\n        private bool _ExecuteFirstActivity()\n        {\n            InstanceActivity activity = null;\n            lock (_unfinishedActivities)\n            {\n                if (_unfinishedActivities.Count > 0) activity = _unfinishedActivities.Values.FirstOrDefault(n => n.Status == Enums.WorkflowStepStatus.Pending || n.Status == Enums.WorkflowStepStatus.Executing);\n            }\n            if (activity == null) return false;\n            ExecuteActivity(activity);\n            return true;\n        }\n\n        private bool _ExecuteFirstEvent(bool controlOnly = false)\n        {\n            // We always try to execute control events first.\n            Event e = null;\n            lock (_queuedControlEvents)\n            {\n                if (_queuedControlEvents.Count > 0) e = _queuedControlEvents.Dequeue();\n            }\n            if (e != null)\n            {\n                ExecuteEvent(e);\n                return true;\n            }\n\n            // If we're only caring about control events, we can quit now.\n            if (controlOnly) return false;\n\n            // Otherwise, we do the same thing with the rest of the events.\n            lock (_queuedEvents)\n            {\n                if (_queuedEvents.Count > 0) e = _queuedEvents.Dequeue();\n            }\n            if (e != null)\n            {\n                ExecuteEvent(e);\n                return true;\n            }\n\n            return false;\n        }\n\n        private void _ForceReload()\n        {\n            // Reload the object to get new state -- we do this inside the lock so that there's no race condition\n            // between this and a worker who may be working on the object\n            lock (_lockObject)\n            {\n                Guid instanceUid = Uid;\n                _instance = _data.LoadInstanceByUid(AccountId, Constants.WorkflowUser, instanceUid);\n                if (_instance == null) throw new ApplicationException(string.Format(\"Failed to reload instanceUid: {0}\", instanceUid));\n            }\n        }\n\n        private void _MarkCompleted()\n        {\n\t        if (_instance.IsCompleted)\n\t        {\n\t\t        _log.InfoNoPII($\"Instance {_instance.Uid} is already complete with status {_instance.Status}\");\n\t\t        return;\n\t        }\n\n            _PersistVariables();\n            bool endActivityFailure = _workflowMap.HasEndActivity() && !_instance.EndActivityReached;\n            Enums.WorkflowStepStatus endStatus = endActivityFailure ? Enums.WorkflowStepStatus.Failed : Enums.WorkflowStepStatus.Completed;\n            _data.SaveInstance(_instance);\n            _data.InstanceCompleted(_instance, endStatus);\n\n\t\t\tif (ShouldUseScopeEventHandler())\n\t\t\t{\n\t\t\t\tInstanceHandler.Complete(_instance);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar eventType = _instance.Status == Enums.WorkflowStepStatus.Failed ? ScopeEventType.WorkflowFailed : ScopeEventType.WorkflowFinished;\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tWorkflowScopeEvent.ScopeEventInfo scopeEventData = new WorkflowScopeEvent.ScopeEventInfo()\n\t\t\t\t\t{\n\t\t\t\t\t\tAccountId = _instance.AccountId,\n\t\t\t\t\t\tScopeUid = _instance.ScopeUid,\n\t\t\t\t\t\tScopeName = _instance.ScopeName,\n\t\t\t\t\t\tPeriodStart = _instance.EndDate,\n\t\t\t\t\t\tEventType = (int)eventType,\n\t\t\t\t\t\tWorkflowUid = _instance.Uid,\n\t\t\t\t\t\tWorkflowName = _instance.Name\n\t\t\t\t\t};\n\t\t\t\t\tWorkflowScopeEvent scopeEvent = new WorkflowScopeEvent(_instance.AccountId, _instance.Uid)\n\t\t\t\t\t{\n\t\t\t\t\t\tEventData = scopeEventData\n\t\t\t\t\t};\n\t\t\t\t\tEventRepo.FireEvent(_instance.AccountId, scopeEvent);\n\t\t\t\t}\n\t\t\t\tcatch (Exception ex)\n\t\t\t\t{\n\t\t\t\t\t_log.ErrorNoPII($\"Error in saving scope event {_instance.ScopeUid} for eventtype {eventType}\", ex);\n\t\t\t\t}\n\t\t\t}\n\n            if (endActivityFailure && _instance.Status == Enums.WorkflowStepStatus.Failed)\n            {\n                if (_lastActivityUid == Guid.Empty)\n                {\n                    _log.WarnNoPII($\"No activities for workflow.\");\n                }\n                else\n                {\n                    InstanceActivity activity = _data.LoadActivityByUid(AccountId, Constants.WorkflowUser, _lastActivityUid);\n                    IWINSActivity winsActivity = _SafeGetActivity(activity);\n                    IWINSWorkflowContext ctx = _CreateContext(winsActivity, activity);\n                    LoggingHelper.LogActivityErrorNoPII(ctx, Resources.WINSResources.WorkflowExitedWithoutReachingTheEndActivity);\n                }\n\n            }\n            if (_instance.Status == Enums.WorkflowStepStatus.Completed || _instance.Status == Enums.WorkflowStepStatus.Failed)\n            {\n                _data.FireMessageQueueEvent(new WorkflowEvent(AccountId, _instance.Uid, (int)_instance.Status));\n            }\n        }\n\n        private void _MarkWaiting()\n        {\n            _PersistVariables();\n            _instance.Status = Enums.WorkflowStepStatus.Waiting;\n            _data.SaveInstance(_instance);\n        }\n\n        private void _PersistVariables()\n        {\n            InstanceVariables variables = new InstanceVariables();\n            foreach (InstanceVariable variable in _variables.Values) if (variable.IsModified) variables.Add(variable);\n            _data.SaveInstanceVariables(AccountId, Constants.WorkflowUser, variables);\n        }\n\n        private void PersistEvents()\n\t\t{\n\t\t\tlock (_queuedControlEvents)\n\t\t\t{\n\t\t\t\twhile (_queuedControlEvents.Count > 0)\n\t\t\t\t{\n\t\t\t\t\tPersistEvent(_queuedControlEvents.Dequeue());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlock (_queuedEvents)\n\t\t\t{\n\t\t\t\twhile (_queuedEvents.Count > 0)\n\t\t\t\t{\n\t\t\t\t\tPersistEvent(_queuedEvents.Dequeue());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n        private void PersistEvent(Event e)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (e.Uid == Guid.Empty)\n\t\t\t\t{\n\t\t\t\t\t_data.CreateEvent(e);\n\t\t\t\t\tWorkflowEventWorkload wrk = new WorkflowEventWorkload(e, \"EventCreatedOnInstanceSave\")\n\t\t\t\t\t{\n\t\t\t\t\t\tRevisionUid = _instance.RevisionUid,\n\t\t\t\t\t\tWorkflowDB = DataStore.GetDbNameForAccount(e.AccountId)\n\t\t\t\t\t};\n\t\t\t\t\twrk.Log();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_data.UnlockEvent(e.AccountId, e.Uid);\n\t\t\t\t\tWorkflowEventWorkload wrk = new WorkflowEventWorkload(e, \"EventUnlockedOnInstanceSave\")\n\t\t\t\t\t{\n\t\t\t\t\t\tRevisionUid = _instance.RevisionUid,\n\t\t\t\t\t\tWorkflowDB = DataStore.GetDbNameForAccount(e.AccountId)\n\t\t\t\t\t};\n\t\t\t\t\twrk.Log();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\t_log.ErrorNoPII($\"Failed to save event {e.Uid}, for instance {e.InstanceUid}, activity {e.ActivityUid}, and callback name {e.CallbackName} to db\", ex);\n\t\t\t}\n\t\t}\n\n\t\tprivate IWINSActivity _SafeGetActivity(InstanceActivity instanceActivity)\n        {\n            try\n            {\n                IWINSActivity activity;\n                if (_workflowMap.TryGetActivity(instanceActivity.Name, out activity)) return activity;\n                // There is a problem with old MWF workflow data where the name of the activity is really the type name.\n                // Don't ask.  It's a stupid and boring story.\n                // But we still should handle it, at least for awhile.  So: if we get here because we didn't match name, we should see\n                // if we match type name.\n                // This whole thing is a huge hack that should get removed when it can.\n                InstanceActivity inputActivity = null;\n                if (instanceActivity.InputActivityUid != Guid.Empty) inputActivity = _data.LoadActivityByUid(AccountId, Constants.WorkflowUser, instanceActivity.InputActivityUid);\n                if (_workflowMap.LegacyTryGetActivityByTypeName(instanceActivity.Name, inputActivity == null ? \"\" : inputActivity.Name, instanceActivity.InputActivityOutput ?? \"\", out activity))\n                {\n                    // Rename it so we get one less instance of this in the future\n                    instanceActivity.Name = activity.Name;\n                    return activity;\n                }\n                throw new ApplicationException(string.Format(\"Invalid activity name '{0}' for instanceUid '{1}'.\", instanceActivity.Name, instanceActivity.InstanceUid));\n            }\n            catch (Exception e)\n            {\n                _log.ErrorNoPII($\"_SafeGetActivity failed.\", e);\n                return null;\n            }\n        }\n\n        private bool _ShouldProcess(InstanceActivity instanceActivity)\n        {\n            switch (instanceActivity.Status)\n            {\n                case Enums.WorkflowStepStatus.Executing:\n                case Enums.WorkflowStepStatus.Pending:\n                case Enums.WorkflowStepStatus.Waiting:\n                case Enums.WorkflowStepStatus.Aborted:\n                    return true;\n                default:\n                    return false;\n            }\n        }\n\n        private bool _ShouldProcess()\n        {\n            lock (_lockObject)\n            {\n                switch (Model.Status)\n                {\n                    case Enums.WorkflowStepStatus.Executing:\n                    case Enums.WorkflowStepStatus.Pending:\n                    case Enums.WorkflowStepStatus.Waiting:\n                        return true;\n                    default:\n                        return false;\n                }\n            }\n        }\n\n        private bool _ShouldProcessEvent()\n        {\n            lock (_lockObject)\n            {\n                switch (Model.Status)\n                {\n                    case Enums.WorkflowStepStatus.Executing:\n                    case Enums.WorkflowStepStatus.Pending:\n                    case Enums.WorkflowStepStatus.Waiting:\n                    case Enums.WorkflowStepStatus.Aborted:\n                        return true;\n                    default:\n                        return false;\n                }\n            }\n        }\n\n        //ITrackItActivity interface is implemented by activities whose data is tracked in DocumentScope and ScopeEvent tables.\n        private bool IsTrackItActivity(IWINSActivity activity)\n        {\n            return activity is ITrackItActivity;\n        }\n\n\t\tprivate void FireWorkflowScopeEvent(UserAccount user, ScopeEventType eventType, IWINSActivity activity = null, IWINSWorkflowContext ctx = null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tWorkflowScopeEvent.ScopeEventInfo scopeEventData = new WorkflowScopeEvent.ScopeEventInfo\n\t\t\t\t{\n\t\t\t\t\tAccountId = _instance.AccountId,\n\t\t\t\t\tScopeUid = _instance.ScopeUid,\n\t\t\t\t\tScopeName = _instance.ScopeName,\n\t\t\t\t\tPeriodStart = DateTime.UtcNow,\n\t\t\t\t\tEventType = (int)eventType,\n\t\t\t\t\tWorkflowUid = _instance.Uid,\n\t\t\t\t\tWorkflowName = _instance.Name,\n\t\t\t\t\tEventBy = user == null ? null : new WorkflowScopeEvent.Assignee() { Email = user.EmailAddress, Name = user.FriendlyName, Uid = user.Uid }\n\t\t\t\t};\n\n\t\t\t\tif (activity != null && ctx != null)\n\t\t\t\t{\n\t\t\t\t\tscopeEventData.StepName = ctx.ActivityName;\n\t\t\t\t\tscopeEventData.StepDisplayName = GetActivityDisplayName(activity, ctx);\n\t\t\t\t\tscopeEventData.StepTypeName = ctx.ActivityTypeName;\n\t\t\t\t\tscopeEventData.StepUid = ctx.ActivityUid;\n\t\t\t\t}\n\n\t\t\t\tEventRepo.FireEvent(_instance.AccountId, new WorkflowScopeEvent(_instance.AccountId, _instance.Uid)\n\t\t\t\t{\n\t\t\t\t\tEventData = scopeEventData\n\t\t\t\t});\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\t_log.ErrorNoPII($\"Error in saving scope event scopeUid: {_instance.ScopeUid}, instanceUid: {_instance.Uid} eventType: {eventType}\", ex);\n\t\t\t}\n\t\t}\n\n\t\tprivate void RemoveProperties(InstanceActivity instanceActivity, IWINSActivity activity)\n\t    {\n\t\t    // We need to delete properties if this is not a human activity or WaitForNextStepAfterCompletion is not set\n\t\t    if (activity is AbstractHumanActivity && ServiceLocator.GetInstance<IWorkflowSettingRepository>().GetWaitForNextStepAfterCompletion(instanceActivity.AccountId))\n\t\t    {\n\t\t\t\t_data.DeleteActivityPropertiesWithExclusion(instanceActivity.AccountId, instanceActivity.InstanceUid, instanceActivity.Uid, new List<string> { nameof(AbstractHumanActivity.WaitForNextStep) });\n\t\t\t\t_log.InfoNoPII(\"Removing activity properties except WaitForNextStep\");\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t\t    _data.DeleteActivityProperties(instanceActivity.AccountId, instanceActivity.InstanceUid, instanceActivity.Uid);\n\t\t\t    _log.InfoNoPII(\"Removing activity properties\");\n\t\t    }\n\t    }\n\n\t\tprivate string[] BuildNDCTags(InstanceActivity instanceActivity) => instanceActivity != null ? new[] { $\"ActivityId:{instanceActivity.Uid}\",$\"W:{instanceActivity.InstanceUid}\" } : new string[] { };\n\t    private string[] BuildNDCTags(Event e) => e != null ? new[] { $\"ActivityId:{e.ActivityUid}\", $\"W:{e.InstanceUid}\" } : new string[] { };\n\n\t\t/// <summary>\n\t\t/// Try to send an e-mail to support when a workflow instance activity execution account exceeds configured threshold.\n\t\t/// </summary>\n\t\t/// <param name=\"pausedPurgeDays\">Number of days to purge workflow related data</param>\n\t\t/// <returns>\n\t\t/// True\t-> Success.\n\t\t/// False\t-> Fail to send email.\n\t\t/// </returns>\n\t\tprivate bool TrySendActivityExecutionLimitExceedNotification(int pausedPurgeDays)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar emailRecipients = new List<string>();\n\n\t\t\t\t// Support should get the email\n\t\t\t\tvar supportEmailAddress = WorkflowSettingRepository.GetSupportNotificationEmailAddress(AccountId);\n\t\t\t\tif (!string.IsNullOrEmpty(supportEmailAddress))\n\t\t\t\t{\n\t\t\t\t\temailRecipients.Add(supportEmailAddress);\n\t\t\t\t}\n\n\t\t\t\t// Also send to AdvancedWorkflowNotificationUserAccountUid, if configured for account\n\t\t\t\tUserAccount notificationUser = null;\n\t\t\t\tvar notificationUserUid = new AccountSettings(AccountId, Constants.WorkflowUser).AdvancedWorkflowNotificationUserAccountUid;\n\t\t\t\tif (notificationUserUid != Guid.Empty)\n\t\t\t\t{\n\t\t\t\t\t_log.InfoNoPII($\"Loading {nameof(UserAccount)} {notificationUserUid} to receive activity execution limit exceeded notification\");\n\t\t\t\t\tnotificationUser = UserAccountRepository.Instance.LoadByUid(AccountId, notificationUserUid);\n\t\t\t\t}\n\t\t\t\tif (!string.IsNullOrEmpty(notificationUser?.EmailAddress))\n\t\t\t\t{\n\t\t\t\t\temailRecipients.Add(notificationUser.EmailAddress);\n\t\t\t\t}\n\n\t\t\t\tif (!emailRecipients.Any())\n\t\t\t\t{\n\t\t\t\t\t_log.InfoNoPII($\"Email support address setting is empty, and there is no AdvancedWorkflowNotificationUser configured. Thus, not sending activity execution limit exceeded notification for account '{AccountId}' and workflow instance '{Uid}'.\");\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t_log.InfoNoPII($\"Sending activity execution limit exceeded notification to {emailRecipients.Count} {(emailRecipients.Count > 1 ? \"recipients\" : \"recipient\")} for account '{AccountId}' and workflow instance '{Uid}'.\");\n\n\t\t\t\tvar email = new WorkflowPauseActivityExecutionLimitExceededNotificationEmail\n\t\t\t\t{\n\t\t\t\t\tAccountId = AccountId,\n\t\t\t\t\tWorkflowInstanceUid = Uid,\n\t\t\t\t\tWorkflowRevisionUid = _instance.RevisionUid,\n\t\t\t\t\tNumberOfActivitiesExecuted = ActivityExecutionCount,\n\t\t\t\t\tEmailRecipients = emailRecipients,\n\t\t\t\t\tPausedPurgeDays = pausedPurgeDays\n\t\t\t\t};\n\n\t\t\t\tServiceLocator.GetInstance<IEmailDistributor>().Init(email).QueueIt();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\t_log.ErrorNoPII($\"An exception occurred while sending activity execution limit exceeded notification to support for account '{AccountId}' and workflow instance '{Uid}'.\", ex);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tprivate string GetActivityDisplayName(IWINSActivity activity, IWINSWorkflowContext ctx)\n\t\t{\n\t\t\treturn activity is AbstractHumanActivity abstractHumanActivity\n\t\t\t\t? abstractHumanActivity.ActivityDisplayName.Evaluate(ctx)\n\t\t\t\t: null;\n\t\t}\n\n\t\tprivate bool ShouldUseScopeEventHandler() => WorkflowFeatureFlags.UseScopeEventHandler &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t Model?.EngineVersion == Core.Workflow.Constants.EngineVersionV2;\n\n\t\tprivate void PauseInstance(UserAccount user, string comment, Action<UserAccount, string> pauseMethod)\n\t\t{\n\t\t\tRequires.NotNull(pauseMethod, nameof(pauseMethod));\n\t\t\tLastProcessDate = DateTime.UtcNow;\n\t\t\tlock (_lockObject)\n\t\t\t{\n\t\t\t\tpauseMethod(user, comment);\n\t\t\t\t_ForceReload();\n\t\t\t}\n\t\t\tif (ShouldUseScopeEventHandler())\n\t\t\t{\n\t\t\t\tInstanceHandler.Pause(_instance, user);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tFireWorkflowScopeEvent(user, ScopeEventType.WorkflowPaused);\n\t\t\t}\n\t\t}\n\n\t\tprivate Activity StartActivity([CallerMemberName] string name = \"\") => ServiceInstrumentation?.ActivitySource\n\t\t\t?.StartActivity($\"{nameof(WorkflowInstance)}.{name}\")\n\t\t\t?.SetStatus(ActivityStatusCode.Error)\n\t\t\t.SetTag(TraceSemanticConventions.AttributeCodeFunction, name)\n\t\t\t.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, _instance.AccountId)\n\t\t\t.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, _instance.AccountId)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, _instance.Uid)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, _instance.VersionUid)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, _instance.RevisionUid)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, _instance.DefinitionUid);\n\n\t\tprivate void CheckAndHandleInstanceStateChanges()\n\t\t{\n\t\t\tvar environmentType = SiteConfig?.Value?.EnvironmentType;\n\t\t\tvar isGrpcEnabled = WorkflowClientConfig?.Value?.IsGrpcClientEnabled == true;\n\n\t\t\tvar isRunningOnCloudWithGrpcEnabled = environmentType == Core.Util.Config.EnvironmentType.Cloud && isGrpcEnabled;\n\n\t\t\tif (isRunningOnCloudWithGrpcEnabled && InstanceStateChangedHelper.IsInstanceStateChanged(_instance.Uid, ActivityExecutionCount, CacheRepository, WorkflowSettingRepository))\n\t\t\t{\n\t\t\t\t_ForceReload();\n\t\t\t\tInstanceStateChangedHelper.RemoveInstanceStateChanged(_instance.Uid, CacheRepository);\n\t\t\t}\n\t\t}\n    }\n}\n",
      "relevance_score": 100
    },
    {
      "path": "/Users/shuaib.tabit/Documents/Atlas/src/Core.Types/Enums.cs",
      "content": "\nusing ADEXS.Core.Util.Loggers;\nusing System;\nusing System.Collections.Concurrent;\nusing System.Collections.Generic;\nusing System.Collections.Specialized;\nusing System.ComponentModel;\nusing System.Globalization;\nusing System.Linq;\nusing System.Reflection;\nusing System.Resources;\nusing Newtonsoft.Json;\nusing Newtonsoft.Json.Converters;\n\n\nnamespace ADEXS.Core.Types\n{\n\tpublic class Enums : ADEXS.Globals.ScmEnums\n\t{\n\t\tprivate static readonly IDiscreetLogger _log = DiscreetLogger.GetLogger(typeof(Enum));\n\n\t\t#region A\n\n\t\tpublic enum ABACAttributeSource\n\t\t{\n\t\t\tBase, // native properties of an object\n\t\t\tAOM, // properties that come from Agreement Object/Document Model\n\t\t\tAttribute // Metadata on the object\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum ABACAccessLevel\n\t\t{\n\t\t\tAttributeBased = -1,\n\t\t\tDefault = 0,\n\t\t\tView = 1,\n\t\t\tEdit = 2,\n\t\t\tManage = 3\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum  ABACDocumentStatus\n\t\t{\n\t\t\tActive = AgreementStatus.Active,\n\t\t\tInactive = AgreementStatus.Inactive,\n\t\t\tPending = AgreementStatus.Pending,\n\t\t\tUnknown = AgreementStatus.Unknown\n\t\t}\n\n\t\tpublic enum Access\n\t\t{\n\t\t\tNone = 0,\n\t\t\tReadOnly = 1,\n\t\t\tWrite = 2\n\t\t}\n\n\t\tpublic enum AccountStatus\n\t\t{\n\t\t\tSuspended = -3, // Temporary status used to stop all activity in an account for maintenance purposes\n\t\t\tCancelled = -2, // Account that was paid for, but is now cancelled\n\t\t\tDeleted = -1, // Account is deleted\n\t\t\tTrial = 0, // Trial account, within it's 30 days\n\t\t\tPaid = 1, // Account that is paid for\n\t\t\tExpiredTrial = 2, // Trial account, expired, after it's 30 days are up\n\t\t\tUnpaid = 3, // Account that was paid for, but is now behind\n\t\t}\n\n\t\tpublic enum AccountBrandingImageStatus\n\t\t{\n\t\t\tHasImage = 1,\n\t\t\tDoesNotHaveImage = 2,\n\t\t\tUnknown = 3\n\t\t}\n\n\t\tpublic enum AccountBrandingImageType\n\t\t{\n\t\t\tLogo,\n\t\t\tIcon\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Allow account types, used so we can allow different types of accounts to have different feature sets available and also enact behaviors based on account type.\n\t\t/// </summary>\n\t\tpublic enum AccountType\n\t\t{\n\t\t\t[Description(\"Unknown\")]\n\t\t\tUnknown = 0,\n\t\t\t[Description(\"Free Edition (Deprecated)\")]\n\t\t\tFreeEdition = 2,\n\t\t\t[Description(\"DocuSign Gen\")]\n\t\t\tGen = 1000,\n\t\t\t[Description(\"Classic Business\")]\n\t\t\tBusiness = 2000,\n\t\t\t[Description(\"Docusign CLM\")]\n\t\t\tCLM = 2200,\n\t\t\t[Description(\"DocuSign Negotiate\")]\n\t\t\tNegotiate = 2300,\n\t\t\t[Description(\"Classic Contracts\")]\n\t\t\tContracts = 2500,\n\t\t\t[Description(\"Classic Enterprise\")]\n\t\t\tEnterprise = 3000,\n\t\t\t[Description(\"Classic Premium\")]\n\t\t\tPremium = 4000\n\t\t}\n\n\t\tpublic enum ActionGroupType\n\t\t{\n\t\t\tSimple = 0,\n\t\t\tTop = 1,\n\t\t\tSubmenu = 2,\n\t\t\tHeader = 3\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum ActorRestrictedTo\n\t\t{\n\t\t\t[Description(\"All Users and Groups\")]\n\t\t\tUsersAndGroups = 0,\n\t\t\t[Description(\"All Users\")]\n\t\t\tUsers = 2,\n\t\t\t[Description(\"All Groups\")]\n\t\t\tGroups = 3,\n\t\t\t[Description(\"Users in Specific Groups\")]\n\t\t\tUsersInGroups = 4,\n\t\t\t[Description(\"Specific Groups\")]\n\t\t\tSpecificGroups = 5\n\t\t}\n\n\t\t//Used in reporting\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum AggregateType\n\t\t{\n\t\t\tNone,\n\t\t\tAverage,\n\t\t\tTotal,\n\t\t\tMin,\n\t\t\tMax,\n\t\t\tCount\n\t\t}\n\n\t\tpublic enum AIDocumentStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tScheduled = 1,\n\t\t\tInProgress = 2,\n\t\t\tSuccessful = 3,\n\t\t\tCancelled = 4\n\t\t}\n\n\t\tpublic enum AIDocumentSubStatus\n\t\t{\n\t\t\tFailedGeneratingPDF = -12,\n\t\t\tEmptyFileNotSupported = -11,\n\t\t\tDuplicateDocumentUpload = -10,\n\t\t\tFailedProcessingByAIEngine = -9,\n\t\t\tFailedToAuthenticateWithAIEngine = -8,\n\t\t\tFailedUploadDocumentToAIEngine = -7,\n\t\t\tPasswordProtectedFileNotSupported = -6,\n\t\t\tFailedLogicAppRun = -5,\n\t\t\tFailedGeneratingGlyphs = -4,\n\t\t\tFailedGettingExtractions = -3,\n\t\t\tFailedWaitingForCallback = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tScheduled = 1,\n\t\t\tWaitingForCallback = 2,\n\t\t\tGettingExtractions = 3,\n\t\t\tWaitingForGlyphExtraction = 4,\n\t\t\tSuccessful = 5,\n\t\t\tWaitingForGlyphReconciliation = 6,\n\t\t\tCompletingTheTransaction = 7,\n\t\t\tCompletedRetryForTransaction = 8,\n\t\t\tWaitingForPdfGeneration = 9,\n\t\t\tScheduledForAiIngestionRetry = 10\n\t\t}\n\n\t\tpublic enum AIProviderType\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tSeal = 1,\n\t\t\tAIS = 2,\n\t\t\tAPR = 3\n\t\t}\n\n\t\tpublic enum AIProviderExtractionType\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tLabels = 1,\n\t\t\tScorecard = 2\n\t\t}\n\n\t\tpublic enum AIDocumentUploadStatus\n\t\t{\n\t\t\tPasswordProtectedFile = -7,\n\t\t\tBatchNotFound = -6,\n\t\t\tTransactionNotFound = -5,\n\t\t\tFileTypeNotSupported = -4,\n\t\t\tDuplicateDocument = -3,\n\t\t\tDocumentNotFound = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tBatchInCancelledStatus = 2,\n\t\t}\n\n\t\tpublic enum AISIngestionStatus\n\t\t{\n\t\t\tEmptyFile = -6,\n\t\t\tPasswordProtectedFile = -5,\n\t\t\tBatchNotFound = -4,\n\t\t\tUnlock = -3,\n\t\t\tFileTypeNotSupported = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tPending = 1,\n\t\t\tSuccess = 2,\n\t\t\tTransactionNotFound = 3,\n\t\t\tDocumentNotFound = 4,\n\t\t\tBatchInCancelledStatus = 5,\n\t\t\tWaitingForPdfCreation = 6\n\t\t}\n\n\t\tpublic enum APRAIIngestionStatus\n\t\t{\n\t\t\tEmptyFile = -6,\n\t\t\tPasswordProtectedFile = -5,\n\t\t\tBatchNotFound = -4,\n\t\t\tUnlock = -3,\n\t\t\tFileTypeNotSupported = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tPending = 1,\n\t\t\tSuccess = 2,\n\t\t\tTransactionNotFound = 3,\n\t\t\tDocumentNotFound = 4,\n\t\t\tBatchInCancelledStatus = 5,\n\t\t\tWaitingForPdfCreation = 6,\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Object type to be used for Target system where atttributes will be mapped.\n\t\t/// </summary>\n\t\tpublic enum AIRulesEngineMappingObjectType\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tCLMAttributes = 1,\n\t\t\tAOM = 2,\n\t\t\tClauseLibrary = 3,\n\t\t\tCLMAttributesGroup =4,\n\t\t\tAOMAttributesGroup = 5\n\t\t}\n\n\t\tpublic enum AIAttributeReviewProgressStatus\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tNotStarted = 1,\n\t\t\tInProgress = 2,\n\t\t\tCompleted = 3\n\t\t}\n\n\t\tpublic enum AIBatchReportStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tNotStarted = 1,\n\t\t\tInProgress = 2,\n\t\t\tCompleted = 3,\n\t\t}\n\n\t\tpublic enum AIDocumentStatisticsCounterType\n\t\t{\n\t\t\tTotalTransactions = 1,\n\t\t\tTotalTransactionsProcessed = 2\n\t\t}\n\n\t\tpublic enum AIReviewStatus\n\t\t{\n\t\t\tUnreviewed = 0,\n\t\t\tPartiallyReviewed = 1,\n\t\t\tReviewed = 2\n\t\t}\n\n\t\tpublic enum AllowedValueResultStatus\n\t\t{\n\t\t\tCascadingPrevFieldNotSet = -5,\n\t\t\tNonDropdownDataTypeFound = -4,\n\t\t\tMetadataFieldNotFound = -3,\n\t\t\tInvalidObjectId = -2,\n\t\t\tObjectTypeNotSupported = -1,\n\t\t\tSuccess = 0\n\t\t}\n\n\t\t//Lists All Api Versions\n\t\tpublic enum APIVersion\n\t\t{\n\t\t\tv1 = 1,\n\t\t\tv2 = 2,\n\t\t\tv201411 = 201411,\n\t\t\tv201708 = 201708\n\t\t}\n\n\t\t[Obsolete(\"Please use AttachmentFileSource enum instead\")]\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum AttachmentSource\n\t\t{\n\t\t\tAny = 0,\n\t\t\tSpringCM = 1,\n\t\t\tUpload = 2\n\t\t}\n\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum AttachmentFileSource\n\t\t{\n\t\t\tAny = 0,\n\t\t\tCLM = 1,\n\t\t\tUpload = 2\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum AuthenticationType\n\t\t{\n\t\t\tNone = 0,\n\t\t\tSMS = 1,\n\t\t\tKBA = 2,\n\t\t\tAccessCode = 3,\n\t\t\tPhone = 4\n\t\t}\n\n\t\tpublic enum EmailActionType\n\t\t{\n\t\t\tNone,\n\t\t\tCheckin,\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Acceptable values for the Document State property.\n\t\t/// </summary>\n\t\tpublic enum AddressBookEntryStatus\n\t\t{\n\t\t\tDeleted = -1,\n\t\t\tUnknown = 0,\n\t\t\tActive = 1\n\t\t}\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum AllowedChoices\n\t\t{\n\t\t\t/// <summary>\n\t\t\t/// User must choose at least one thing\n\t\t\t/// </summary>\n\t\t\tOneOrMore,\n\t\t\t/// <summary>\n\t\t\t/// User can *only* choose one thing\n\t\t\t/// </summary>\n\t\t\tOne,\n\t\t\t/// <summary>\n\t\t\t/// User can choose any number of things\n\t\t\t/// </summary>\n\t\t\tZeroOrMore,\n\t\t}\n\n\t\tpublic enum CompareType\n\t\t{\n\t\t\t/// <summary>\n\t\t\t/// User does not compare\n\t\t\t/// </summary>\n\t\t\tNone,\n\t\t\t/// <summary>\n\t\t\t/// User compares against the previous version of the document\n\t\t\t/// </summary>\n\t\t\tPrevious,\n\t\t\t/// <summary>\n\t\t\t/// User compares against the first version of the document\n\t\t\t/// </summary>\n\t\t\tFirst\n\t\t}\n\n\t\tpublic enum MergeOutputType\n\t\t{\n\t\t\t/// <summary>\n\t\t\t/// Merge creates a .pdf document\n\t\t\t/// </summary>\n\t\t\tPdf,\n\n\t\t\t/// <summary>\n\t\t\t/// Merge creates a .docx document\n\t\t\t/// </summary>\n\t\t\tWord\n\t\t}\n\n\t\tpublic enum MergeTargetLocation\n\t\t{\n\t\t\t/// <summary>\n\t\t\t/// Merged file(s) are uploaded to salesforce.\n\t\t\t/// </summary>\n\t\t\tSalesforce,\n\n\t\t\t/// <summary>\n\t\t\t/// Merged file(s) are saved in clm.\n\t\t\t/// </summary>\n\t\t\tClm\n\t\t}\n\n\n\t// AtlasEtlFactory creates instance of class based on enum name.\n\t\t// Make sure if you add a entry the name is same as class name in AtlasEtlService\n\t\tpublic enum AtlasEtlType\n\t\t{\n\t\t\tEtlExcel = 0,\n\t\t\tEtlSalesforce = 1\n\t\t}\n\n\t\tpublic enum AtlasEtlResultStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tCompleted = 0\n\t\t}\n\n\t\tpublic enum AdminPage\n\t\t{\n\t\t\tNone = 0,\n\n\t\t\tResetPassword = 10,\n\t\t\tMyPreferences = 11,\n\t\t\tDownloads = 12,\n\t\t\tMyProfile = 13,\n\t\t\tSupportAccounts = 14,\n\n\t\t\tAccountPreferences = 20,\n\t\t\tAccountSecurity = 21,\n\t\t\tInboundEmailAddresses = 23,\n\t\t\tManageFaxLines = 24,\n\t\t\tAttributes = 25,\n\t\t\tDocumentRules = 26,\n\t\t\tAttributeImportMappings = 27,\n\t\t\tSchedules = 28,\n\t\t\tResellerAccounts = 29,\n\t\t\tCreatePackage = 30,\n\t\t\tPermissionSetManagement = 31,\n\t\t\tElectronicSignature = 32,\n\n\t\t\tBranding = 50,\n\t\t\tAddLogInToMyWebsite = 51,\n\n\t\t\tDeviceManagement = 54,\n\t\t\tNotificationPreference = 55,\n\t\t\tSFConfiguration = 56,\n\t\t\tSSO = 57,\n\t\t\tAutoNumbers = 58,\n\t\t\tAPIUsers = 59,\n\t\t\tReminderTemplates = 60,\n\t\t\tSFTPAuthentication = 61,\n\t\t\tDocLauncherConfig = 62,\n\t\t\tTwoFactorAuthentication = 63,\n\t\t\tMenuActions = 64,\n\t\t\tSiteInfo = 65,\n\t\t\tDocFolderSettings = 66,\n\t\t\tLegacyCustomActionsReport = 67,\n\t\t\tUsers = 68,\n\t\t\t//SecurityGroups = 69,\n\t\t\tContacts = 70,\n\t\t\tQueues = 71,\n\t\t\tGroups = 72,\n\t\t\tConnectedApps = 73,\n\t\t\tSealConfiguration = 74,\n\t\t\tClauseConfiguration = 75,\n\t\t\tPartyManagement = 76,\n\t\t\tActIntegrationManagement = 77,\n\t\t\tPartyAdminDocUpload = 78,\n\t\t\tAttributeAutofill = 79,\n\t\t\tConnections = 80,\n\t\t\tDocumentAccess = 81,\n\t\t\tProcessBuilder = 82,\n\t\t\tConvertUsers = 83,\n\t\t\tConvertGroups = 84,\n\t\t\tConversionDashboard = 85,\n\t\t\tObjectMapping = 86,\n\t\t\tAllDocuments = 87,\n\t\t\tBeginConversion = 88,\n\t\t\tDocumentSettings = 89,\n\t\t\tDocumentTypes = 90,\n\t\t\t//Nav Tabs used as Admin Tabs: Mapping to 100 + Enums.Tabs for these in case we add others.\n\t\t\tNavForms = 109,\n\t\t\tNavWorkflow = 102\n\t\t}\n\n\t\tpublic enum AlertCategory\n\t\t{\n\t\t\tInternal = 0,\n\t\t\tCollaboration = 1,\n\t\t\tSystem = 2,\n\t\t\tSharedFolder = 3\n\t\t}\n\n\t\tpublic enum AlertType\n\t\t{\n\t\t\tUnknown = -1,\n\n\t\t\tPlannedDowntime = 1,\n\t\t\tNewFeatures = 2,\n\t\t\tSystemMessage = 3,\n\n\t\t\t/*No longer used\n\t\t\tNewCollaboration = 21,\n\t\t\tEndCollaboration = 22,\n\t\t\tRevisionRequest = 23,\n\t\t\tWorkFlowStepRejected = 24,\n\t\t\tWorkFlowActionRequired = 25,\n\t\t\tWorkFlowStepFinalized = 26,\n\t\t\tWorkFlowsCompleted = 27,\n\t\t\tWorkFlowStepOverdue = 28,\n\t\t\tWorkFlowStepReminder = 29,\n\t\t\tDocumentNudge = 30,\n\t\t\tDocumentCheckIn = 31,\n\t\t\tWorkFlowNudge = 33,\n\t\t\tWorkFlowActionNotRequired = 34,*/\n\n\t\t\tAccountCapacity = 41,\n\t\t\tFailedEmail = 42,\n\t\t\tFailedFax = 43,\n\t\t\tStatusChange = 44,\n\t\t\tFileExpiration = 45,\n\n\t\t\tSharedFolderNudge = 61,\n\t\t\tSharedDocumentUndoCheckout = 62\n\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum AnalyticsChartOrientation\n\t\t{\n\t\t\tHorizontal = 0,\n\t\t\tVertical = 1\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum AnalyticsChartType\n\t\t{\n\t\t\tTable = 0,\n\t\t\tBar = 1,\n\t\t\tDonut = 2\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum AnalyticsReportType\n\t\t{\n\t\t\tNone = -1,\n\t\t\tSummary = 0,\n\t\t\tDetail = 1,\n\t\t\tDocument = 3,\n\t\t\tStepDetail = 4,\n\t\t\tDocumentActivity = 5,\n\t\t\tWorkflowProcesses = 6,\n\t\t\tUsers = 7,\n\t\t\tAgreementsExpiring = 8,\n\t\t\tObligations = 9,\n\t\t\tPublicDocumentsAndFolders = 10,\n\t\t\tAgreementsApproachingRenewal = 11\n\t\t}\n\n\t\t[Flags]\n\t\tpublic enum AnalyticsReportAccessLevel\n\t\t{\n\t\t\tNone = 0,\n\t\t\tView = 1,\n\t\t\tExport = 2,\n\t\t\tEdit = 4\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum ReportAccessType\n\t\t{\n\t\t\tNone = 0,\n\t\t\tDefault = 1,\n\t\t\tPublic = 2,\n\t\t\tPrivate = 3\n\t\t}\n\n\t\tpublic enum AtlasScriptBuilds\n\t\t{\n\t\t\tNone = 0,\n\t\t\tAtlas = 1,\n\t\t\tEforms = 2,\n\t\t\tInteractivePreview = 3,\n\t\t\tGlobalHeader = 4,\n\t\t\tReports = 5,\n\t\t\tSearch = 6,\n\t\t\tAnalytics = 7,\n\t\t\tConfigureWorkflowTemplates = 8,\n\t\t\tWorkflowTemplate = 9,\n\t\t\tTasks = 10,\n\t\t\tCounterpartyManagement = 11,\n\t\t\tTaskList = 12,\n\t\t\tActUI = 13,\n\t\t\tSessionTimeout = 14,\n\t\t\tDocExplorer = 15,\n\t\t\tAgreementSummary = 16,\n\t\t\tTranslationManagement = 17,\n\t\t\tDelegateAccess = 18,\n\t\t\tSupportAccounts = 19,\n\t\t\tObligationManagement = 20,\n\t\t\tSmartAgreement = 21,\n\t\t\tAgreementTemplate = 22,\n\t\t\tDocumentAccess = 23,\n\t\t\tPublicDocumentsAndFoldersReport = 24,\n\t\t\tProcessBuilder = 25,\n\t\t\tAgreementList = 26,\n\t\t\tDocExplorerWidgets = 27,\n\t\t\tDocAttribute = 28,\n\t\t\tIE11DeprecationNotice = 29,\n\t\t\tAccountMigrationBanner = 30,\n\t\t\tGlobalFooter = 31,\n\t\t\tAccountMigration = 32,\n\t\t\tLogin = 33,\n\t\t\tAdmin = 34,\n\t\t\tDocumentTypes = 35,\n\t\t\tDocGenPartySelectModal = 36,\n\t\t\tSearchApp = 37,\n\t\t\tSecureForm = 39,\n\t\t\tCopyShareLink = 40,\n\t\t\tClassicDashboardDeprecationNotice = 41,\n\t\t\tDocReviewMigrationBanner = 42,\n\n\t\t\t//DotVVM Scripts\n\t\t\tDotVVMModule = 100,\n\t\t\tDotVVMAddressBook = 101,\n\t\t\tDotVVMAttributeGroups = 102,\n\t\t\tDotVVMNodeGrid = 103,\n\t\t\tConnectionChooser = 104\n\t\t}\n\n\t\tpublic enum AnalyzerInsightsIngestionStatus\n\t\t{\n\t\t\tUnknown = -2,\n\t\t\tFailed = -1,\n\t\t\tSuccess = 1,\n\t\t\tFileTypeNotSupported = 2,\n\t\t\tDuplicateDocument = 3,\n\t\t\tDocumentNotFound = 4\n\t\t}\n\n\t\tpublic enum AIAutofillPostProcessingTaskStatus\n\t\t{\n\t\t\tFailedToUpdateTransaction = -3,\n\t\t\tFailedToSaveStagedMetadata = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tTransactionNotFound = 2,\n\t\t\tBatchNotFound = 3,\n\t\t\tZeroRuleModels = 4,\n\t\t\tZeroInputLabels = 5,\n\t\t\tZeroMappings = 6,\n\t\t\tProblemGettingExtractions = 7,\n\t\t\tBatchInCancelledStatus = 8,\n\t\t\tTransactionInCancelledStatus = 9\n\t\t}\n\n\t\tpublic enum AIAutofillAvailableLabelTypes\n\t\t{\n\t\t\tCoreLabels = 0,\n\t\t\tLogicApps = 1,\n\t\t\tIntellego = 2,\n\t\t}\n\n\t\tpublic enum AIBatchInitiatorSource\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tCLM = 1,\n\t\t\tUC = 2\n\t\t}\n\n\t\tpublic enum AgreementStatus\n\t\t{\n\t\t\tActive = 0,\n\t\t\tInactive = 1,\n\t\t\tPending = 2,\n\t\t\tUnknown = 3\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Views of Agreement List.\n\t\t/// See Views in Web.CommonUI\\resources\\js\\react\\packages\\agreementList\\enums.ts\n\t\t/// </summary>\n\t\tpublic enum AgreementListAssignType\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tUnassigned = 1,\n\t\t\tAssignedToMe = 2,\n\t\t\tAssignedToMyReports = 3,\n\t\t\tAll = 4,\n\t\t\tSearch = 5,\n\t\t\tActive =6\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum AccountConversionStatus\n\t\t{\n\t\t\tFailure = -1,\n\t\t\tNotSet = 0,\n\t\t\tValidated = 1,\n\t\t\tInProgress = 2,\n\t\t\tDsMappingComplete = 3,\n\t\t\tComplete = 4,\n\t\t\tRollback = 5\n\t\t}\n\n\t\tpublic enum AccountConversionAction\n\t\t{\n\t\t\tDefault = 0,\n\t\t\tAccountValidation = 1,\n\t\t\tConversionStatusChange = 2,\n\t\t\tPropertyChange = 3,\n\t\t\tGroupConversion = 4,\n\t\t\tUserConversion = 5,\n\t\t\tAccountHealth = 6,\n\t\t\tMigrationComplete = 7,\n\t\t\tRollback = 8,\n\t\t\tPSOConversion = 9,\n\t\t\tAccountSnapshot = 10,\n\t\t\tInitialConversionRequest = 11,\n\t\t\tAccountConversion = 12,\n\t\t\tMixedMode = 13,\n\t\t\tNotificationAction = 14\n\t\t}\n\n\t\t#endregion\n\t\t#region B\n\t\tpublic enum BillingHistoryItemType\n\t\t{\n\t\t\tInboundFax = 1,\n\t\t\tOutboundFax = 2,\n\t\t\tPrintOnDemand = 3,\n\t\t\tMonthlySubscription = 4\n\t\t}\n\n\t\tpublic enum BillingHistoryStatus\n\t\t{\n\t\t\tEstimated = 0,\n\t\t\tOutstanding = 1,\n\t\t\tPaid = 2,\n\t\t\tReverted = 3,\n\t\t\tAppealed = 4\n\t\t}\n\n\t\tpublic enum BPMExecutionStatus\n\t\t{\n\t\t\t/// <summary>\n\t\t\t/// Execution Pending\n\t\t\t/// </summary>\n\t\t\tEP,\n\t\t\t/// <summary>\n\t\t\t/// Finished With Errors\n\t\t\t/// </summary>\n\t\t\tFE,\n\t\t\t/// <summary>\n\t\t\t/// Finished Successfully\n\t\t\t/// </summary>\n\t\t\tFN,\n\t\t\t/// <summary>\n\t\t\t/// Executing\n\t\t\t/// </summary>\n\t\t\tEX,\n\t\t\t/// <summary>\n\t\t\t/// Paused\n\t\t\t/// </summary>\n\t\t\tPA,\n\t\t\t/// <summary>\n\t\t\t/// Aborted\n\t\t\t/// </summary>\n\t\t\tAB,\n\t\t\t/// <summary>\n\t\t\t/// Waiting\n\t\t\t/// </summary>\n\t\t\tSL,\n\t\t}\n\n\t\tpublic enum BreadCrumbLinkType\n\t\t{\n\t\t\tNoLinks,\n\t\t\tBrowse,\n\t\t\tPublicBrowse\n\t\t}\n\n\t\tpublic enum BulkImportUsersType\n\t\t{\n\t\t\tAddressBook,\n\t\t\tSmartRule,\n\t\t\tSalesforce\n\t\t}\n\n\t\t#endregion\n\t\t#region C\n\t\tpublic enum CancelBatchStatus\n\t\t{\n\t\t\tBatchAlreadyCancelled = -3,\n\t\t\tFailed = -2,\n\t\t\tBatchNotFound = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1\n\t\t}\n\n\t\tpublic enum CalcSecurityByUserOptimizationMode\n\t\t{\n\t\t\tUnset = 0,\n\t\t\tOnlySecurityNodes = 1,\n\t\t\tAllDescendants = 2\n\t\t}\n\n\t\tpublic enum ApprovalTemplateAction\n\t\t{\n\t\t\tEdit = 0,\n\t\t\tViewTemplate = 1,\n\t\t\tUseTemplate = 2,\n\t\t\tDeleteTemplate = 3\n\t\t}\n\n\t\tpublic enum ContactStatus\n\t\t{\n\t\t\tDeleted = -1,\n\t\t\tUnknown = 0,\n\t\t\tEnabled = 1,\n\t\t\tDisabled = 2 //only used for UserAccount Status\n\t\t}\n\n\t\tpublic enum CompareRequestStatus\n\t\t{\n\t\t\tCancelled = 0,\n\t\t\tCompleted = 1,\n\t\t\tFailed = 2,\n\t\t\tProcessing = 3,\n\t\t\tQueued = 4,\n\t\t\tQueuedCacheFailed = 5,\n\t\t\tTimeout = 6\n\t\t}\n\n\t\tpublic enum CommentsConfiguration\n\t\t{\n\t\t\tRequired = 0,\n\t\t\tOptional = 1,\n\t\t\tHidden = 2\n\t\t}\n\n\t\tpublic enum WorkflowAutoAssignUser\n\t\t{\n\t\t\tLeaveUnassigned = 0,\n\t\t\tNoProvider = 1,\n\t\t\tRandom = 2,\n\t\t\tLeastUsedResource = 3,\n\t\t\tRoundRobin = 4\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Used to categorize items in the central queue\n\t\t/// </summary>\n\t\tpublic enum CentralQueueActionType\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tFolderDocumentRemoved = 1,\n\t\t\tFolderDocumentAdded = 2,\n\t\t\tFolderAccessChange = 3,\n\t\t\tDocumentAdd = 4,\n\t\t\tDocumentMove = 5,\n\t\t\tDocumentMetadataChange = 6,\n\t\t\tDocumentRevise = 7\n\t\t}\n\t\t// The reason for cancel a checkout\n\t\tpublic enum UndoCheckoutContext\n\t\t{\n\t\t\tNormal = 0,\t\t\t// day to day processing\n\t\t\tSystem = 1,\t\t\t// when undoing system checkout for workflow, signature, etc.\n\t\t\tLegalHold = 2,\t\t// when placing a legal hold\n\t\t\tRecord = 3,\t\t\t// when the document is made a record\n\t\t}\n\n\t\tpublic enum CheckoutStatus\n\t\t{\n\t\t\t[Description(\"Available\")]\n\t\t\tNotCheckedOut = 0,\n\t\t\t[Description(\"Checked Out\")]\n\t\t\tCheckedOut = 1,\n\t\t\t[Description(\"Waiting\")]\n\t\t\tHandOff = 2, //used when assigning the next user\n\n\t\t\t// Every CheckoutStatus >= SystemForCollaboration is for a system checkout\n\t\t\t// sprocs are aware of the magic value for SystemForCollaboration == 3\n\t\t\t[Description(\"System Checked Out\")]\n\t\t\tSystemForCollaboration = 3, // checked out by the system; only the system can check it in\n\t\t\t// INDEXTODO: When Indexing in batches happens, bring this back, along with code in NodeGrid.cs...\n\t\t\t//[Description(\"Batch Indexing\")]\n\t\t\t//Indexing = 4\n\t\t\t[Description(\"System Checked Out for Workflow\")]\n\t\t\tSystemForAdvancedWorkflow = 5, // checked out by the system as part of an Advanced Workflow; only the system can check it in\n\t\t\t[Description(\"System Checked Out for Signature\")]\n\t\t\tSystemForSignature = 6, // checked out by the system for a signature operation; only the system can check it in\n\t\t\t[Description(\"Checked Out\")]\n\t\t\tCheckoutExternalReview = 7,\n\t\t\t[Description(\"Locked by OWA\")]\n\t\t\tLockedByOfficeWebApps = 8,\n\t\t\t[Description(\"Checked Out for Approval\")]\n\t\t\tCheckoutApproval = 9,\n\t\t\t[Description(\"Checked Out for Data Reconciliation\")]\n\t\t\tCheckoutDataReconciliation = 10,\n\t\t\t[Description(\"Locked by Google Docs\")]\n\t\t\tLockedByGoogleDocs = 11\n\t\t}\n\n\t\tpublic enum CheckOutAllowed\n\t\t{\n\t\t\tDisplayError = 0,\n\t\t\tAllowed = 1,\n\t\t\tAllowedCheckedOutByCurrentUser = 2\n\t\t}\n\n\t\t//ClauseIncluded is an enum of valid state for acceptance\n\t\tpublic enum ClauseIncluded\n\t\t{\n\t\t\t[Description(\"Yes\")]\n\t\t\tYes,\n\t\t\t[Description(\"No\")]\n\t\t\tNo,\n\t\t\t[Description(\"NotApplicable\")]\n\t\t\tNotApplicable\n\t\t}\n\n\t\t[Serializable]\n\t\tpublic enum ClipboardOperation\n\t\t{\n\t\t\tCopy,\n\t\t\tCut\n\t\t}\n\n\t\tpublic enum ColumnDataType\n\t\t{\n\t\t\tString = 0,\n\t\t\tDate = 1,\n\t\t\tActionType = 2,\n\t\t\tDocument = 3,\n\t\t\tFolderPath = 4\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Acceptable values for the Document State property.\n\t\t/// </summary>\n\t\tpublic enum CompanyStatus\n\t\t{\n\t\t\tDeleted = -1,\n\t\t\tUnknown = 0,\n\t\t\tActive = 1,\n\t\t\tInactive = 2\n\t\t}\n\n\t\tpublic enum DocLauncherConfigEvent\n\t\t{\n\t\t\t[Description(\"DocumentGenerationConfigCreated\")]\n\t\t\tCreated,\n\t\t\t[Description(\"DocumentGenerationConfigModified\")]\n\t\t\tModified,\n\t\t\t[Description(\"DocumentGenerationConfigDeleted\")]\n\t\t\tDeleted\n\t\t}\n\n\t\tpublic enum CustomRuleEventType\n\t\t{\n\t\t\t[Description(\"\")]\n\t\t\tUndefined = -1,\n\t\t\t[Description(\"Document Added\")]\n\t\t\tDocumentAdded = 0,\n\t\t\t[Description(\"Document Checked In\")]\n\t\t\tDocumentCheckedIn = 1,\n\t\t\t[Description(\"Document Entered Folder\")]\n\t\t\tEnteredFolder = 2,\n\t\t\t[Description(\"Attribute Group Assigned\")]\n\t\t\tAttributeGroupAssigned = 3,\n\t\t\t[Description(\"Document Indexed\")]\n\t\t\tAttributeValueChanged = 4,\n\n\t\t\t[Description(\"Chained\")]\n\t\t\tChained = 6,\n\n\t\t\t[Description(\"Outbound Fax Delivery\")]\n\t\t\tFaxDelivery = 7,\n\t\t\t[Description(\"Document Reminder Processed\")]\n\t\t\tDocumentReminderProcessed = 8,\n\t\t\t[Description(\"Document Deleted\")]\n\t\t\tDocumentDeleted = 9,\n\n\t\t\t[Description(\"Folder Created\")]\n\t\t\tFolderCreated = 2000,\n\t\t\t[Description(\"Folder Entered Folder\")]\n\t\t\tFolderEnteredFolder = 2001,\n\n\t\t\t[Description(\"Document Obligation Extraction\")]\n\t\t\tDocumentObligationExtractionEvent = 3000,\n\t\t}\n\n\t\t// The enum declared name must match the name of the class that implements it\n\t\tpublic enum CustomRuleActionType\n\t\t{\n\t\t\t[Description(\"\")]\n\t\t\tUndefined = -1,\n\n\t\t\t[Description(\"Move Document\")]\n\t\t\tMoveDocument = 0,\n\t\t\t[Description(\"Start Workflow\")]\n\t\t\tStartWorkflow = 1,\n\t\t\t[Description(\"Assign Attribute Group\")]\n\t\t\tSetAttributeGroup = 2,\n\t\t\t[Description(\"Assign Attribute Value\")]\n\t\t\tSetAttributeValue = 3,\n\t\t\t[Description(\"Send Email\")]\n\t\t\tSendEmail = 4,\n\t\t\t[Description(\"Bulk Attribute Import\")]\n\t\t\tBulkMetadataImport = 5,\n\t\t\t[Description(\"Start Approval Template\")]\n\t\t\tStartApprovalTemplate = 6,\n\t\t\t[Description(\"Notify Web Service\")]\n\t\t\tNotifyWebService = 7,\n\t\t\t//[Description(\"Make Record\")]\n\t\t\t//MakeRecord = 8,\n\t\t\t[Description(\"Move To Trash\")]\n\t\t\tDeleteDocument = 9,\n\t\t\t[Description(\"Send Report\")]\n\t\t\tSendReport = 10,\n\t\t\t[Description(\"Set Security\")]\n\t\t\tSetSecurity = 11,\n\t\t\t[Description(\"Create Folder\")]\n\t\t\tCreateFolder = 12,\n\t\t\t[Description(\"Bulk Import Users\")]\n\t\t\tUserSyncFromFile = 13,\n\t\t\t[Description(\"Update Description\")]\n\t\t\tUpdateDescription = 14,\n\t\t\t[Description(\"Rename\")]\n\t\t\tRename = 15,\n\t\t\t[Description(\"Copy Document\")]\n\t\t\tCopyDocument = 16,\n\t\t\t[Description(\"Run Rule\")]\n\t\t\tRunRule = 17,\n\t\t\t[Description(\"Send Chatter Post\")]\n\t\t\tSendChatterPost = 18,\n\t\t\t[Description(\"Schedule Document Reminder\")]\n\t\t\tScheduleReminder = 19,\n\t\t\t[Description(\"Deliver Report to Folder\")]\n\t\t\tDeliverReportToFolder = 20,\n\t\t\t[Description(\"Bulk User Update\")]\n\t\t\tLimitedUserSyncFromFile = 21,\n\n\t\t\t[Description(\"Rename\")]\n\t\t\tRenameFolder = 2000,\n\t\t\t[Description(\"Move Folder\")]\n\t\t\tMoveFolder = 2001,\n\t\t}\n\n\t\t// The enum declared name must match the name of the class that implements it\n\t\tpublic enum CustomRuleFilterType\n\t\t{\n\t\t\t[Description(\"\")]\n\t\t\tUndefined = -1,\n\n\t\t\t[Description(\"In Folder\")]\n\t\t\tInFolder = 0,\n\t\t\t[Description(\"In Subfolder\")]\n\t\t\tInSubfolder = 1,\n\t\t\t[Description(\"Upload Source\")]\n\t\t\tUploadSource = 2,\n\t\t\t[Description(\"Has Attribute Group\")]\n\t\t\tHasAttributeGroup = 3,\n\t\t\t[Description(\"Has Attribute Value\")]\n\t\t\tHasAttributeValue = 4,\n\t\t\t[Description(\"Has Name Like\")]\n\t\t\tHasNameLike = 5,\n\t\t\t[Description(\"Changed Attribute Field\")]\n\t\t\tChangedAttributeField = 6,\n\t\t\t[Description(\"Assigned Group\")]\n\t\t\tAssignedGroup = 7,\n\t\t\t[Description(\"Fax Delivery Status\")]\n\t\t\tFaxDeliveryStatus = 8\n\t\t}\n\n\t\tpublic enum CustomRuleLogStatus\n\t\t{\n\t\t\t[Description(\"Error\")]\n\t\t\tError = -1,\n\t\t\t[Description(\"Success\")]\n\t\t\tSuccess = 0,\n\t\t\t[Description(\"Warning\")]\n\t\t\tWarning = 1,\n\t\t}\n\n\t\tpublic enum CustomActionType\n\t\t{\n\t\t\tUrl = 1,\n\t\t\tForm = 2,\n\t\t\tWorkflow = 3,\n\t\t\tDocLauncher = 4\n\t\t}\n\n\t\tpublic enum APIClientType\n\t\t{\n\t\t\t[Description(\"Webserver\")]\n\t\t\tWebserver = 0,\n\t\t\t[Description(\"User-agent\")]\n\t\t\tUseragent = 1,\n\t\t\t[Description(\"Client Credentials - API Users\")]\n\t\t\tClientCredentials = 2\n\t\t}\n\n\t\tpublic enum CoilSprocketType\n\t\t{\n\t\t\t//TrackingList = 1, //unused, retain to prevent value reuse.\n\t\t\tPreview = 2,\n\t\t\tWatchlist = 3,\n\t\t\tFolderWatchlist = 4,\n\t\t\tFolder = 5,\n\t\t\tWorkflowInbox = 6,\n\t\t\tRecentDocuments = 7,\n\t\t\tWorkflowQueue = 8,\n\t\t\tReport = 9,\n\t\t\tLegacyReport = 10,\n\t\t\tSavedSearch = 11\n\t\t}\n\n\t\tpublic enum CompareTrackedContentTaskInitiateResult\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tSubmitted = 1,\n\t\t\tComparisionTypeNotSupported = 2,\n\t\t\tDocumentToCompareNotFound = 3,\n\t\t\tSourceDocumentFormatNotSupported = 4,\n\t\t\tDocumentToCompareFormatNotSupported = 5\n\t\t}\n\n\t\tpublic enum CompareTrackedContentTaskProcessingStatus\n\t\t{\n\t\t\tDocumentCorrupt = -6,\n\t\t\tDocumentToCompareNotSupportedFormat = -5,\n\t\t\tDocumentToCompareNotFound = -4,\n\t\t\tOriginalDocumentNotSupportedFormat = -3,\n\t\t\tOriginalDocumentNotFound = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tNoTrackedContentFound = 2,\n\t\t}\n\n\t\t#endregion\n\t\t#region D\n\n\t\tpublic enum DashboardGridInterval\n\t\t{\n\t\t\tLastLogin,\n\t\t\tToday,\n\t\t\tYesterday,\n\t\t\tThisWeek,\n\t\t\tLastWeek,\n\t\t\tTwoWeeks,\n\t\t\tThisMonth,\n\t\t\tLast30\n\t\t}\n\n\t\tpublic enum DashboardLayout\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tOneColumn = 1,\n\t\t\tTwoColumns = 2,\n\t\t\tThreeColumns = 3,\n\t\t\tOneThirdTwoThirds = 4,\n\t\t\tTwoThirdsOneThird = 5,\n\t\t\tDynamic = 6 //aka Coil, used on Command Center Dashboard\n\t\t}\n\n\t\tpublic enum DashboardViewerType\n\t\t{\n\t\t\tAccount = 0,\n\t\t\tPersona = 1,\n\t\t\tUser = 2,\n\t\t\tMultiple = 99\n\t\t}\n\n\t\t//TODO This should be replaced by a registry of valid widget types.\n\t\tpublic enum DashboardWidgetType\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tAlerts,\n\t\t\tLiteral,\n\t\t\tMessages,\n\t\t\tRecentDocuments,\n\t\t\tReport,\n\t\t\tWorkflowInbox,\n\t\t\tChart,\n\t\t\tFolderViewer\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum DataType\n\t\t{\n\t\t\t[Description(\"Text\")]\n\t\t\tString = 0,\n\t\t\t[Description(\"Number\")]\n\t\t\tNumber = 1,     // integers\n\t\t\t[Description(\"Date\")]\n\t\t\tDate = 2,\n\t\t\t[Description(\"Selection\")]\n\t\t\tDropDown = 3,   // for strings only\n\t\t\t[Description(\"Decimal\")]\n\t\t\tDecimal = 4,     // fixed decimal point, 2 decimal places.\n\t\t\t[Description(\"Dynamic Drop Down\")]\n\t\t\tMagicDropDown = 5,\n\t\t\t[Description(\"Cascade\")]\n\t\t\tCascade = 6,\n\t\t\t[Description(\"Auto Number\")]\n\t\t\tAutoNumber = 7,\n\t\t\t[Description(\"Users and Groups\")]\n\t\t\tActor = 8, // user or group\n\t\t\t[Description(\"Duration\")]\n\t\t\tDuration = 9,\n\t\t\t[Description(\"Currency\")]\n\t\t\tCurrency = 10,\n\t\t\t[Description(\"Boolean\")]\n\t\t\tBoolean = 11,\n\t\t}\n\n\t\tpublic enum DataReconciliationMode\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tSalesForce = 1,\n\t\t\tAttributeAutofill = 2\n\t\t}\n\n\t\tpublic enum DataReviewFieldType\n\t\t{\n\t\t\tField = 0,\n\t\t\tSet = 1\n\t\t}\n\n\t\tpublic enum DataReviewFuzzyMatcherMatchType\n\t\t{\n\t\t\tNotAMatch = 0,\n\t\t\tFuzzyMatch = 1,\n\t\t\tContains = 2,\n\t\t\tStartsWith = 3,\n\t\t\tExactMatch = 4,\n\t\t\tSentenceLevel = 5\n\t\t}\n\n\t\tpublic enum DataReviewObjectType\n\t\t{\n\t\t\tCLMCustomMetadataAttribute,\n\t\t\tStandardFields\n\t\t}\n\n\t\tpublic enum DateInterval\n\t\t{\n\t\t\t[Description(\"d\")]\n\t\t\tDay = 0,\n\t\t\t[Description(\"w\")]\n\t\t\tWeek = 1,\n\t\t\t[Description(\"m\")]\n\t\t\tMonth = 2,\n\t\t\t[Description(\"y\")]\n\t\t\tYear = 3\n\t\t}\n\n\t\tpublic enum NoticePeriodTimeUnit\n\t\t{\n\t\t\tDay = 1,\n\t\t\tWeek = 2,\n\t\t\tMonth = 3,\n\t\t\tYear = 4\n\t\t}\n\n\t\tpublic enum DayOfWeek\n\t\t{\n\t\t\t[Description(\"Sunday\")]\n\t\t\tSunday = 0,\n\t\t\t[Description(\"Monday\")]\n\t\t\tMonday = 1,\n\t\t\t[Description(\"Tuesday\")]\n\t\t\tTuesday = 2,\n\t\t\t[Description(\"Wednesday\")]\n\t\t\tWednesday = 3,\n\t\t\t[Description(\"Thursday\")]\n\t\t\tThursday = 4,\n\t\t\t[Description(\"Friday\")]\n\t\t\tFriday = 5,\n\t\t\t[Description(\"Saturday\")]\n\t\t\tSaturday = 6\n\t\t}\n\n\t\t[JsonConverter(typeof(StringEnumConverter))]\n\t\tpublic enum DocGenFieldType\n\t\t{\n\t\t\tBoolean = 0,\n\t\t\tText = 1,\n\t\t\tLongText = 2,\n\t\t\tRichText = 3,\n\t\t\tNumber = 4,\n\t\t\tCurrency = 5,\n\t\t\tDate = 6,\n\t\t\tCollection = 7,\n\t\t\tSignature = 8,\n\t\t\tAttachment = 9,\n\t\t\tCheckbox = 10,\n\t\t\tRadioButtons = 11,\n\t\t\tDropdown = 12 ,\n\t\t\tMultiSelectDropdown = 13\n\t\t}\n\n\t\tpublic enum DocumentSelectionType\n\t\t{\n\t\t\tAll = 0,\n\t\t\tHighlight = 1,\n\t\t\tComment = 2,\n\t\t\tSeal = 3,\n\t\t\tTrackedContent = 4,\n\t\t\tScorecard = 5,\n\t\t\tObligation = 6,\n\t\t\tAIS = 7,\n\t\t\tAPR = 8\n\t\t}\n\n\t\tpublic enum DocuSignResourceTokenResourcesType\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tSfCommunityUser = 1,\n\t\t\tDelegateAccess = 2\n\t\t}\n\n\t\tpublic enum DeleteDocumentReminderStatus\n\t\t{\n\t\t\tDocumentIsTrashed = -3,\n\t\t\tNotAuthorizedWriteDocument = -2,\n\t\t\tNotAuthorizedReadDocument = -1,\n\t\t\tSuccess = 0,\n\t\t}\n\n\t\tpublic enum DeleteAIObjectMappingResultStatus\n\t\t{\n\t\t\tStandardAttributesGroupCannotBeDeleted = -3,\n\t\t\tRulesConfigInUse = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1\n\t\t}\n\n\t\tpublic enum SaveTermStatus\n\t\t{\n\t\t\tFolderUidNotSpecified = -14,\n\t\t\tTermDocumentCheckedOutBySomeoneElse = -12,\n\t\t\tExceededCharacterLimitForDescription = -11,\n\t\t\tExceededCharacterLimitForTermName = -10,\n\t\t\tExceededCharacterLimitForNotes = -9,\n\t\t\tUnauthorized = -8,\n\t\t\tTermOptionNameCannotBeBlank = -7,\n\t\t\tTermNameIsInvalid = -6,\n\t\t\tTermNameCannotBeBlank = -5,\n\t\t\tExceededFileSizeLimit = -4,\n\t\t\tDuplicateOptionName = -3,\n\t\t\tExceededCharacterLimitForOption = -2,\n\t\t\tUnknown = -1,\n\t\t\tSuccess = 0,\n\t\t}\n\n\t\t[Flags]\n\t\tpublic enum DeliveryPrefsFlags\n\t\t{\n\t\t\tNone = 0x0000,\n\t\t\tSecure = 0x0001,\n\t\t\tEmailPDF = 0x0002,\n\t\t\tEbinder = 0x0004, /* Obsolete */\n\t\t\tEmailNative = 0x0008,\n\t\t\tMail = 0x0010,\n\t\t\tFax = 0x0020,\n\t\t\tPrint = 0x0040,\n\t\t\tAll = Secure | EmailPDF | EmailNative | Mail | Fax | Print\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Enumeration for Delivery Status in the adexs system\n\t\t/// </summary>\n\t\tpublic enum DeliveryStatus : short\n\t\t{\n\t\t\t[Description(\"Failed\")]\n\t\t\tFailed = -1,\n\t\t\t[Description(\"Unknown\")]\n\t\t\tUnknown = 0,\n\t\t\t[Description(\"In Progress\")]\n\t\t\tInprogress = 1,\n\t\t\t[Description(\"Success\")]\n\t\t\tSuccessful = 2,\n\t\t\t[Description(\"None\")]\n\t\t\tNone = 3,\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Enumeration for Delivery Types in the adexs system\n\t\t/// </summary>\n\t\tpublic enum DeliveryType\n\t\t{\n\t\t\t[Description(\"Unset\")]\n\t\t\tUnset = 0,\n\t\t\t[Description(\"Email PDF\")]\n\t\t\tEmailPDF = 1,\n\t\t\tMail = 2,\t// No longer used\n\t\t\t[Description(\"Fax\")]\n\t\t\tFax = 3,\n\t\t\tPrint = 4, // Not used in Atlas.\n\t\t\t/* Obsoleted eBinder = 5 , // This really means online.  Maybe we should change it someday.  2.0 terminology. */\n\t\t\t[Description(\"Email Native\")]\n\t\t\tEmailNative = 6,\n\t\t\t[Description(\"Email Native External\")]\n\t\t\tEmailNativeExternal = 7,\n\t\t\t[Description(\"Email Native and PDF\")]\n\t\t\tEmailNativeAndPdf = 8,\n\t\t}\n\t\tpublic enum DeleteRulesConfigAndMappingStatus\n\t\t{\n\t\t\tRulesConfigNotFound = -3,\n\t\t\tRulesConfigInUse = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum DigitGroupingStyle\n\t\t{\n\t\t\tAny = 0,\n\t\t\tCLM = 1,\n\t\t\tUpload = 2\n\t\t}\n\n\t\tpublic enum DistributionGroupCreationMode\n\t\t{\n\t\t\tUnknown = -1,\n\t\t\tNormal = 0,\n\t\t\tFolderSecurity\n\t\t}\n\n\t\tpublic enum DocToPdfConverterType\n\t\t{\n\t\t\tMicrosoftOffice = 0,\n\t\t\tLibreOffice = 1,\n\t\t\tAsposeNet = 2\n\t\t}\n\n\t\tpublic enum DocHistoryReportBucketType\n\t\t{\n\t\t\tMonthAndYear,\n\t\t\tTenDaysPeriod,\n\t\t\tDayOfTheYear\n\t\t}\n\n\t\tpublic enum DocHistoryReportSaveType\n\t\t{\n\t\t\tSpark,\n\t\t\tCassandra\n\t\t}\n\n\t\tpublic enum DocumentEmailStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tNotSent = 0,\n\t\t\tSent = 1\n\t\t}\n\n\t\tpublic enum DocumentAssemblyFollowupAction\n\t\t{\n\t\t\tNone = 0,\n\t\t\tWorkflow = 1,\n\t\t\tHumanActivityStep = 2\n\t\t}\n\n\t\tpublic enum DocumentBuilderOutputType\n\t\t{\n\t\t\tPdf = 0,\n\t\t\tDocx = 1\n\t\t}\n\n\t\tpublic enum DocumentLauncherLocation\n\t\t{\n\t\t\tDefault = 0,\n\t\t\t[Description(\"Salesforce\")]\n\t\t\tSalesforce = 1,\n\t\t\t[Description(\"SpringCM\")]\n\t\t\tSpringCM = 2\n\t\t}\n\n\t\tpublic enum DataTargetProviderType\n\t\t{\n\t\t\tCLM = 0,\n\t\t\tSalesforce = 1\n\t\t}\n\n\t\t[Flags]\n\t\tpublic enum DocumentBuilderDocsToSave\n\t\t{\n\t\t\tNotSpecified = 0x0, // default value\n\t\t\tMergedDocuments = 0x1,\n\t\t\tCombinedDocument = 0x2,\n\t\t\tAll = 0x3\n\t\t}\n\n\t\tpublic enum DocuSignSyncOperation\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\t[Description(\"Insert\")]\n\t\t\tI = 1,\n\t\t\t[Description(\"Update\")]\n\t\t\tU = 2,\n\t\t\t[Description(\"Delete\")]\n\t\t\tD = 3\n\t\t}\n\n\t\tpublic enum DocuSignNdnsSyncOperation\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tCreate = 1,\n\t\t\tUpdate = 2,\n\t\t\tDelete = 3\n\t\t}\n\n\t\tpublic enum DocuSignNdnsSyncEventType\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tDSGroup = 1,\n\t\t\tDSGroupUsers = 2\n\t\t}\n\n\t\tpublic enum CompareProvider\n\t\t{\n\t\t\tOffice = 1,\n\t\t\tAspose = 2\n\t\t}\n\n\t\tpublic enum CompareDocumentTypes\n\t\t{\n\t\t\tNone = 0,\n\t\t\tWord = 1,\n\t\t\tAll = 99\n\t\t}\n\n\t\t[Flags]\n\t\tpublic enum DocumentCompareSettings\n\t\t{\n\t\t\t[Description(\"None\")]\n\t\t\tNone = 0x00,\n\t\t\t[Description(\"Compare formatting\")]\n\t\t\tCompareFormatting = 0x01,\n\t\t\t[Description(\"Compare comments\")]\n\t\t\tCompareComments = 0x02,\n\t\t\t[Description(\"Compare headers/footers\")]\n\t\t\tCompareHeadersFooters = 0x04,\n\t\t\t[Description(\"Show text moves\")]\n\t\t\tShowTextMoves = 0x08,\n\t\t\t[Description(\"Show summary\")]\n\t\t\tShowSummary = 0x10,\n\t\t\t[Description(\"Show speaker notes\")]\n\t\t\tCompareSpeakerNotes = 0x20,\n\t\t\t[Description(\"Compare images\")]\n\t\t\tCompareImages = 0x40,\n\t\t\t[Description(\"All Word Processor\")]\n\t\t\tAllWordProcessor = CompareFormatting | CompareComments | CompareHeadersFooters | ShowTextMoves | ShowSummary\n\t\t}\n\n\t\tpublic enum DocumentCompareSpreadsheetImagesCodes\n\t\t{\n\t\t\tDoNotCompare = 0,\n\t\t\tCompare = 1,\n\t\t\tRemoveFromFiles = 2,\n\t\t\tCompareShowingInsertsDeletesOnly = 3\n\t\t}\n\n\t\t/// <summary>\n\t\t///\n\t\t/// </summary>\n\t\tpublic enum DocumentCompareResultType\n\t\t{\n\t\t\tNewDocument = 0,\n\t\t\tVersionOriginalDocument = 1,\n\t\t\tAdHoc = 2\n\t\t}\n\n\t\tpublic enum DocumentCompareSourceType\n\t\t{\n\t\t\t[Description(\"First\")]\n\t\t\tOriginal = 0,\n\t\t\t[Description(\"Previous\")]\n\t\t\tLatest = 1\n\t\t}\n\n\t\tpublic enum DocumentLinkAction\n\t\t{\n\t\t\tDownload,\n\t\t\tEdit,\n\t\t\tExplore, //Explore is the same as Edit but proiritizes DocExplorer over Preview instead of vice versa\n\t\t\tSForce,\n\t\t\tPopupWindow,\n\t\t\tPublicDownload,\n\t\t\tNone\n\t\t};\n\n\t\t/// <summary>\n\t\t/// Type of document list\n\t\t/// </summary>\n\t\tpublic enum DocumentListType\n\t\t{\n\t\t\tUpload,\n\t\t\tConfirmReceipt,\n\t\t\tConfirmUpload,\n\t\t\tQuery\n\t\t}\n\n\t\t[Flags]\n\t\tpublic enum DocumentLauncherFieldType\n\t\t{\n\t\t\tAny = 0,\n\t\t\tText = 1,\n\t\t\tDate = 2,\n\t\t\tCurrency = 4,\n\t\t\tNumber = 8,\n\t\t\tPickList = 17, //we want picklist to show up if we are looking for text, but not the other way around\n\t\t\tMultiSelectPickLst = 33,  //we want MultiSelectPickLst to show up if we are looking for text, but not the other way around\n\t\t\tAll = -1\n\t\t}\n\n\t\tpublic enum DocumentLauncherInputFieldType\n\t\t{\n\t\t\tText = 1,\n\t\t\tDate = 2,\n\t\t\tNumber = 3,\n\t\t\tDropdown = 4,\n\t\t\tCheckbox = 5,\n\t\t\tTextArea = 6,\n\t\t\tMultiSelectDropdown = 7\n\t\t}\n\n\t\tpublic enum DocumentMatchType\n\t\t{\n\t\t\t[Description(\"None\")]\n\t\t\tNone,\n\t\t\t[Description(\"Metadata\")]\n\t\t\tMetadata,\n\t\t\t[Description(\"Name\")]\n\t\t\tName,\n\t\t\t[Description(\"Manual\")]\n\t\t\tManual,\n\t\t}\n\n\t\t[Flags]\n\t\tpublic enum DocumentPermissionsFlags\n\t\t{\n\t\t\tNone = 0,\n\t\t\tPDFPrintAndSave = 1,\n\t\t\tPDFCopyAndSave = 2,\n\t\t\tForward = 4,\n\t\t\tAll = -1, // All bits set\n\n\t\t\tDummy1 = 3, // our persistence layer is kind of crappy here;\n\t\t\tDummy2 = 5, // it doesn't properly know how to handle flags\n\t\t\tDummy3 = 6, // enums; hence these fake values\n\t\t\tDummy4 = 7\n\t\t}\n\n\t\tpublic enum DocumentReceivedMethod\n\t\t{\n\t\t\tInboundFax = 0,\n\t\t\tInboundEmail = 1,\n\t\t\tPublish = 2,\n\t\t\tSharedFolder = 3\n\t\t}\n\n\t\t//Leave the actionscope as None unless user has completed the step\n\t\tpublic enum DocumentScopeActorAction\n\t\t{\n\t\t\tNone = 0,\n\t\t\tCompleted = 1,\n\t\t\t//Used explicitly when user is reassigned\n\t\t\tReAssigned = 2,\n\t\t\t//Used explicitly for unassigning the user from the interface\n\t\t\tUnAssigned = 3\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Stores document search information.\n\t\t/// There are three types of searches:\n\t\t/// 1) Show all documents (minus those deleted, in trash, or expired)\n\t\t/// 2) Show all documents in a folder (minus those deleted or expired)\n\t\t/// 3) Show all documents from a search (minus those deleted or expired)\n\t\t/// This holds the criteria used to do one of those searches.  Additionally, it\n\t\t/// either holds the results, or can fetch them.\n\t\t/// </summary>\n\t\tpublic enum DocumentSearchQuerySource\n\t\t{\n\t\t\tBrowse,\t\t\t\t// Browsing folders\n\t\t\tAdvancedSearch,\t\t// Advanced search\n\t\t\tBasicSearch,\t\t// Basic search\n\t\t}\n\n\t\tpublic enum DocumentStatus\n\t\t{\n\n\t\t\t[Description(\"Active\")]\n\t\t\tDefault = 0,\n\t\t\t[Description(\"Deleted\")]\n\t\t\tDeleted = -1, // Indicates the that document has been deleted marked as deleted\n\t\t\t[Description(\"Revised\")]\n\t\t\tRevised = -3, // The document has been superseded by another\n\t\t\t//[Description(\"Marked as record\")]\n\t\t\t//MarkedAsRecord = -10,\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Defines the error types for the document log.\n\t\t/// </summary>\n\t\tpublic enum DocumentLogErrorType\n\t\t{\n\t\t\tNone = 0,\n\t\t\tUpload = 1,\n\t\t\tReceive = 2,\n\t\t\tUnbundle = 3,\n\t\t\tConvert = 4,\n\t\t\tRepository = 5,\n\t\t\tInsert = 6,\n\t\t\tIndex = 7,\n\t\t\tOCR = 8\n\t\t}\n\n\t\tpublic enum DueDateRange\n\t\t{\n\t\t\t[Enums.StringValue(\"all\")]\n\t\t\tAll = 0,\n\t\t\t[Enums.StringValue(\"none\")]\n\t\t\tNone = 1,\n\t\t\t[Enums.StringValue(\"today\")]\n\t\t\tToday = 2,\n\t\t\t[Enums.StringValue(\"tomorrow\")]\n\t\t\tTomorrow = 3,\n\t\t\t[Enums.StringValue(\"future\")]\n\t\t\tFuture = 4,\n\t\t}\n\n\t\tpublic enum DuplicateHandling\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tAllow = 1,\n\t\t\tRename = 2,\n\t\t\tFail = 3,\n\t\t\tUpdateNoDuplicateCheck = 4\n\t\t}\n\n\t\tpublic enum DocuSignSfUserStatus\n\t\t{\n\t\t\tInactive,\n\t\t\tPending,\n\t\t\tActive\n\t\t}\n\n\t\t#endregion\n\t\t#region E\n\t\t[EnumJavaScriptResourceAttribute(false)]\n\t\tpublic enum ElectronicSignatureIntegrationType\n\t\t{\n\t\t\tNone = 0,\n\t\t\tMasterEchosignAccount = 1, // this is SpringCM's internal echosign account. we get billed for this.\n\t\t\tExternalEchosignAccount = 2, // this is to be used if they have an external echosign account.  we do not get billed for this.\n\t\t\tExternalDocuSignAccount = 3,\n\t\t\tExternalESignLiveAccount = 4,\n\t\t\tExternalProntoSignAccount = 5, // AlphaTrust's PRONTOSign\n\t\t\tDocuSignCLMAccount = 6\n\t\t}\n\n\t\tpublic enum ElectronicSignatureProvider\n\t\t{\n\t\t\tNone = 0,\n\t\t\tEchoSign = 1,\n\t\t\tDocuSign = 2,\n\t\t\tESignLive = 3,\n\t\t\tProntoSign = 4\n\t\t}\n\n\t\tpublic enum ESignatureCancelMessageEmailType\n\t\t{\n\t\t\tSendCancelled = 0,\n\t\t\tSentOnDifferentProvider = 1,\n\t\t\tSendAlreadyCompleted = 2\n\t\t}\n\n\t\tpublic enum ESignatureTransactionNotSignedEmailType\n\t\t{\n\t\t\tCancelled = 0,\n\t\t\tTimedOut = 1,\n\t\t\tRejected = 2,\n\t\t\tFailed = 3,\n\t\t\tCancelFailed = 4\n\t\t}\n\n\t\t/*\n\t\t * ATL-41097 - Move from ADEXS.ElectronicSignature.DomainModel.Enums\n\t\t */\n\t\tpublic enum ESignatureTaskAction\n\t\t{\n\t\t\tNone = 0,\n\t\t\tSend = 1,\n\t\t\tReminder = 2,\n\t\t\tRefresh = 3,\n\t\t\tPreviewCancel = 4,\n\t\t\tBulkRefresh = 5\n\t\t}\n\n\t\t/*\n\t\t * ATL-41097 - Move from ADEXS.ElectronicSignature.DomainModel.Enums\n\t\t */\n\t\tpublic enum ESignatureUserTaskAction\n\t\t{\n\t\t\tNone = 0,\n\t\t\tRetrieveAuditDocument = 1,\n\t\t\tCancel = 2,\n\t\t}\n\n\t\tpublic enum ErrorPageCodes\n\t\t{\n\t\t\t//One = 1,\n\t\t\t//Two = 2,\n\t\t\tSFBadLogin = 3,\n\t\t}\n\n\t\tpublic enum EtlType\n\t\t{\n\t\t\tNotSet = 0,\n\t\t\tAddressBook = 1,\n\t\t\tSmartRule = 2,\n\t\t\tSFDC = 3,\n\t\t\tDocuSign = 4,\n\t\t\tContact = 5,\n\t\t\tParties = 6,\n\t\t\tAttributes = 7\n\t\t}\n\n\t\tpublic enum ExtractFormOCRStatus\n\t\t{\n\t\t\tNotSet = 0,\n\t\t\tFailure = -1,\n\t\t\tSuccess = 1,\n\t\t\tPartialSuccess = 2,        // not all of the fields in the template were returned\n\t\t}\n\n\t\tpublic enum ExtractionsDataType\n\t\t{\n\t\t\tString = 0,\n\t\t\tDate = 1,\n\t\t\tInteger = 2,\n\t\t\tDouble = 3,\n\t\t\tBoolean = 4,\n\t\t\tDuration = 5,\n\t\t\tCurrency = 6,\n\t\t}\n\n\t\tpublic enum ExtractStatus\n\t\t{\n\t\t\tFailedToSaveDocument = -4,\n\t\t\tOcrExpired = -3, // Set when ABBYY complains that the number of pages has been exceeded.\n\t\t\tDeleted = -2,\n\t\t\tError = -1,\n\t\t\tPending = 0,\n\t\t\tSuccess = 1,\n\t\t\tSuccessNoContent = 2, // Binary converter\n\t\t\tSuccessOcrNoContent = 3, // Converted via OCR, but found no content.  If this is set, it's an indication that the file is not OCRable.\n\t\t\tSuccessOcr = 4, // Converted via OCR\n\t\t\tPendingFormOCR = 5, // Item back into the queue pending processing by a form OCR capable service\n\t\t\tPendingRegularOCR = 6,\n\t\t\tPendingPDFRendition = 7,\n\t\t\tNoConfidenceOCR = 8,\n\t\t}\n\n\t\tpublic enum ExternalAccountFlag\n\t\t{\n\t\t\tNone = 0,\n\t\t\tSFIntegrated = 0x0001, // 2 ^ 0\n\n\t\t}\n\n\t\tpublic enum ExternalReviewStatus\n\t\t{\n\t\t\tSent = 0,\n\t\t\t//Approved = 1, decided not to have approved/rejected\n\t\t\t//Rejected = 2, decided not to have approved/rejected\n\t\t\tCanceled = 3,\n\t\t\tComplete = 4,\n\t\t\tExpired = 5,\n\t\t\tError = 6,\n\t\t\tEmailBounced = 8,\n\t\t\tPreparing = 9, // used by workflow when the External Review is set up but has not yet been sent for the recipient\n\t\t\tPreparationComplete = 10,\n\t\t\tPendingManualDocumentMatching = 11, // used when reviewer emails back attachments but the system cannot map them to the appropriate document\n\t\t\tPendingEmailApproval = 12 // used while waiting for the xr recipient to approve/reject an unknown email address.\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum EmailAppearance\n\t\t{\n\t\t\tHtml = 0,\n\t\t\tPlainText = 1,\n\t\t\tDocuSignBranded = 2\n\t\t}\n\n\t\tpublic enum ExternalReviewEvent\n\t\t{\n\t\t\t[Description(\"XrSent\")]\n\t\t\tSent = 0,\n\t\t\t[Description(\"XrResent\")]\n\t\t\tResent = 1,\n\t\t\t[Description(\"XrCanceled\")]\n\t\t\tCanceled = 2,\n\t\t\t[Description(\"XrExpired\")]\n\t\t\tExpired = 3,\n\t\t\t[Description(\"XrMatchFailed\")]\n\t\t\tMatchFailed = 4,\n\t\t\t[Description(\"XrCompleted\")]\n\t\t\tCompleted = 5,\n\t\t\t[Description(\"ErrorEmailSent\")]\n\t\t\tErrorEmailSent = 6,\n\t\t\t[Description(\"ConfirmationEmailSent\")]\n\t\t\tConfirmationEmailSent = 7,\n\t\t\t[Description(\"EmailApproved\")]\n\t\t\tEmailApproved = 8\n\t\t}\n\n\t\tpublic enum ExternalReviewCompleteUserType\n\t\t{\n\t\t\t[Description(\"Internal\")]\n\t\t\tInternal,\n\t\t\t[Description(\"Receiver\")]\n\t\t\tReceiver,\n\t\t\t[Description(\"ThirdParty\")]\n\t\t\tThirdParty,\n\t\t}\n\n\t\tpublic enum ExternalReviewCancelReason\n\t\t{\n\t\t\t[Description(\"UserCancelled\")]\n\t\t\tUserCancelled,\n\t\t\t[Description(\"Security\")]\n\t\t\tSecurity,\n\t\t\t[Description(\"UnknownEmailRejected\")]\n\t\t\tUnknownEmailRejected\n\t\t}\n\t\tpublic enum ExternalReviewSource\n\t\t{\n\t\t\t[Description(\"Manual\")]\n\t\t\tManual,\n\t\t\t[Description(\"WF Send for XR\")]\n\t\t\tSendForXrWorkflow,\n\t\t\t[Description(\"WF Review & Send for XR\")]\n\t\t\tReviewAndSendForXrWorkflow,\n\t\t\t[Description(\"Public API\")]\n\t\t\tPublicApi\n\t\t}\n\t\tpublic enum ExternalReviewReturnMethod\n\t\t{\n\t\t\t[Description(\"Upload/Link\")]\n\t\t\tUpload,\n\t\t\t[Description(\"Email\")]\n\t\t\tEmail,\n\t\t\t[Description(\"Public API\")]\n\t\t\tPublicApi\n\t\t}\n\n\t\tpublic enum ExternalReviewApprovedEmailDomainType\n\t\t{\n\t\t\tEmail = 0,\n\t\t\tDomain = 1\n\t\t}\n\n\t\tpublic enum ExternalReviewCompletionMethod\n\t\t{\n\t\t\t[Description(\"Auto-Match\")]\n\t\t\tAutoMatch,\n\t\t\t[Description(\"WebPortal\")]\n\t\t\tWebPortal,\n\t\t\t[Description(\"PublicAPI\")]\n\t\t\tPublicApi\n\t\t}\n\n\t\tpublic enum ExternalReviewOnBehalfCompleteDocHistoryLogType\n\t\t{\n\t\t\tNewDocument,\n\t\t\tNewAttachment,\n\t\t\tReplaceDocument\n\t\t}\n\n\t\tpublic enum EmailPayloadSuppressBranding\n\t\t{\n\t\t\tInheritAccountValue = 0,\n\t\t\tDisable = -1,\n\t\t\tEnable = 1\n\t\t}\n\n\t\tpublic enum EmailLayout\n\t\t{\n\t\t\tSpringCmLegacy = 0,\n\t\t\tPolaris = 1,\n\t\t}\n\n\n\t\tpublic enum EmailErrorMessageType\n\t\t{\n\t\t\tNone = 0,\n\t\t\tAttachmentTooLarge = 1,\n\t\t\tEmailTooLarge = 2\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Use Enums.GetName utility instead of to ToString() method when\n\t\t/// saving these values as the System value in the ExternalDataMap\n\t\t/// </summary>\n\t\tpublic enum ExternalSystemType\n\t\t{\n\t\t\t[Description(\"\")]\n\t\t\tUnknown = int.MinValue,\n\t\t\t[Description(\"SalesForce\")]\n\t\t\tSalesForce = 0, /*Sync User*/\n\t\t\t[Description(\"SalesforceRefreshToken\")]\n\t\t\tSalesforceRefreshToken = 1,\n\t\t\t[Description(\"TwoFactorAuthentication\")]\n\t\t\tTwoFactorAuthentication = 2,\n\t\t\t[Description(\"salesforce\")]\n\t\t\tSalesforceIdentity = 3,\n\t\t\t[Description(\"onelogin\")]\n\t\t\tOneLogin = 4,\n\t\t\t[Description(\"okta\")]\n\t\t\tOkta = 5,\n\t\t\t[Description(\"docusign\")]\n\t\t\tDocuSign = 6,\n\t\t\t[Description(\"Seal\")]\n\t\t\tSeal = 7,\n\t\t\t[Description(\"ClauseIORefreshToken\")]\n\t\t\tClauseIORefreshToken = 8,\n\t\t\t[Description(\"AgreementObjectModelApi\")]\n\t\t\tAgreementObjectModelApi = 9,\n\t\t\t[Description(\"ClmCMAccountUid\")]\n\t\t\tClmCMAccountUid = 10,\n\t\t\t[Description(\"MSFShardId\")]\n\t\t\tMSFShardId = 11\n\t\t}\n\n\t\tpublic enum ExternalSystemSaveDataStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tStarted = 1,\n\t\t\tProcessingSalesforce = 101,\n\t\t\tProcessingCLMAttributes = 102,\n\t\t\tCompleted = 200\n\t\t}\n\n\t\tpublic enum ExternalSystemGetDataStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tStarted = 1,\n\t\t\tProcessingSalesforce = 101,\n\t\t\tProcessingCLMAttributes = 102,\n\t\t\tCompleted = 200\n\t\t}\n\n\t\tpublic enum ExternalDataType\n\t\t{\n\t\t\tnone = 0,\n\t\t\taccount = 1,\n\t\t\texternalidentity = 2,\n\t\t\tExternalUserid = 3,\n\t\t\tExternalGroupid = 4,\n\t\t\tFileItSecret = 5,\n\t\t\tAuthData = 6\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Enumeration for ExternalReviewReconciliationStatus.\n\t\t/// </summary>\n\t\tpublic enum ExternalReviewReconciliationStatus\n\t\t{\n\t\t\tValidationError = -1,\n\t\t\tUnknown = 0,\n\t\t\tAutoReconciled = 1,\n\t\t\tRequiresManualReconciliation = 2\n\t\t}\n\n\t\tpublic enum ExternalReviewReturnedEmailValidationStatus\n\t\t{\n\t\t\t[Description(\"Invalid Account\")]\n\t\t\tInvalidAccount,\n\t\t\t[Description(\"Invalid External Review\")]\n\t\t\tInvalidReview,\n\t\t\t[Description(\"Invalid User\")]\n\t\t\tInvalidUser,\n\t\t\t[Description(\"Cannot accept documents for this external review at this time\")]\n\t\t\tInvalidReviewStatus,\n\t\t\t[Description(\"Invalid Email Domain\")]\n\t\t\tInvalidEmailDomain,\n\t\t\t[Description(\"Invalid Access Key\")]\n\t\t\tInvalidAccessKey,\n\t\t\tSuccess,\n\t\t\t[Description(\"Insufficiant Account Storage Space Available\")]\n\t\t\tInvalidAccountStorageSpace,\n\t\t\t[Description(\"External Review email ingestion is not enabled for this account\")]\n\t\t\tEmailIngestionNotEnabled,\n\t\t\t[Description(\"Unknown Email Address\")]\n\t\t\tUnknownEmailDomain,\n\t\t}\n\t\t#endregion\n\t\t#region F\n\t\tpublic class FailureReason\n\t\t{\n\t\t\tpublic enum Base\n\t\t\t{\n\t\t\t\tUnset = 0,\t\t\t\t// Unset, of course.  This should never occur.\n\t\t\t\tException,\t\t\t\t// Some sort of exception -- nothing the user can really do about it\n\t\t\t\tExpiredTrial,\t\t\t// The user's trial account has expired\n\t\t\t\tFileTooLarge,\t\t\t// The user is not allowed to upload files this large.\n\t\t\t\tGuest,\t\t\t\t\t// The user is a guest (and thus cannot upload files)\n\t\t\t\tInsufficientSpace,\t\t// The user doesn't have sufficient space to upload this file (not currently used)\n\t\t\t\tInvalidCredentials,\t// The user failed to login with a valid username or password.\n\t\t\t\tInvalidDocument,\t\t// The document does not exist\n\t\t\t\tInvalidFolder,\t\t\t// The folder does not exist\n\t\t\t\tReadOnlyDocument,\t\t// The document exists, but is readonly\n\t\t\t\tReadOnlyFolder,\t\t// The folder exists, but is readonly\n\t\t\t\tResendChunk,\t\t\t// Part of the file needs to be resent.\n\t\t\t\tResendFile,\t\t\t// The entire file needs to be resent.\n\t\t\t\tTooManyFailures,\t\t// The server is aborting the upload because of too many failures\n\t\t\t\tTooManyFiles \t\t\t// The user has already uploaded too many files (not currently used)\n\t\t\t}\n\n\t\t\tpublic enum Legacy\n\t\t\t{\n\t\t\t\tUnset = 0,\t\t\t\t// Unset, of course.  This should never occur.\n\t\t\t\tException,\t\t\t\t// Some sort of exception -- nothing the user can really do about it\n\t\t\t\tExpiredTrial,\t\t\t// The user's trial account has expired\n\t\t\t\tFileTooLarge,\t\t\t// The user is not allowed to upload files this large.\n\t\t\t\tGuest,\t\t\t\t\t// The user is a guest (and thus cannot upload files)\n\t\t\t\tInsufficientSpace,\t\t// The user doesn't have sufficient space to upload this file (not currently used)\n\t\t\t\tInvalidCredentials,\t// The user failed to login with a valid username or password.\n\t\t\t\tResendChunk,\t\t\t// Part of the file needs to be resent.\n\t\t\t\tResendFile,\t\t\t// The entire file needs to be resent.\n\t\t\t\tTooManyFailures,\t\t// The server is aborting the upload because of too many failures\n\t\t\t\tTooManyFiles, \t\t\t// The user has already uploaded too many files (not currently used)\n\t\t\t\tNoPrivilege             // The user does not have enough privileges for the requested operation\n\t\t\t}\n\t\t}\n\n\t\tpublic enum FileDataStatus\n\t\t{\n\t\t\tDefault = 0,\n\t\t\tDeleted = -1, // Indicates the that file has been deleted from the SAN.\n\t\t\tMissing = -8\t// file was lost or quarentined\n\t\t}\n\n\t\tpublic enum FileMetaDataType\n\t\t{\n\t\t\tTrackedChangesStatus = 1,\n\t\t\tTrackedContentStatus = 2,\n\t\t\tGlyphExtractionStatus = 3,\n\t\t\tSealLabelExtractionStatus = 4,\n\t\t\tSealScorecardStatus = 5,\n\t\t\tAnalyzerDocumentStatus = 6,\n\t\t\tIntellegoExtractionStatus = 7,\n\t\t\tEncryptionStatus = 8,\n\t\t\tUnencryptedFileSize = 9,\n\t\t\tAPRExtractionStatus = 10,\n\t\t\tSearchablePdfGlyphExtractionStatus = 11,\n\t\t\tSearchablePdfStatus = 12,\n\t\t\tCommentsReconciliationCompleted = 13,\n\t\t\tAgreementSummaryStatus = 14,\n\t\t\tUnifiedRepositoryPermissionsIngestionStatus = 15,\n\t\t\tUnifiedRepositoryCustomAttributesIngestionStatus = 16,\n\t\t\tUnifiedRepositoryDocumentHistoryIngestionStatus = 17,\n\t\t\tUnifiedRepositoryIngestionCompletion = 18,\n\t\t\tUnifiedRepositoryDmsMetadataCreationStatus = 19,\n\t\t\tHasAttributeAiHistory = 20,\n\t\t\tHasAgreementSummaryAiHistory = 21\n\t\t}\n\n\t\tpublic enum AttributeFieldType\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tBoolean = 1,\n\t\t\tText = 2,\n\t\t\tDate = 3,\n\t\t\tNumber = 4,\n\t\t\tDropDown = 5,\n\t\t\tDuration = 6,\n\t\t\tCurrency  = 7,\n\t\t\tDecimal = 8\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum FilterType : short\n\t\t{\n\t\t\t[Description(\"\")]\n\t\t\tInvalid = 0,\n\t\t\t[Description(\"Equals\")]\n\t\t\tEquals = 1,\n\t\t\t[Description(\"Greater Than\")]\n\t\t\tGreaterThan = 2,\n\t\t\t[Description(\"Less Than\")]\n\t\t\tLessThan = 3,\n\t\t\t[Description(\"Greater Than or Equal\")]\n\t\t\tGreaterThanEqual = 4,\n\t\t\t[Description(\"Less Than or Equal\")]\n\t\t\tLessThanEqual = 5,\n\t\t\t[Description(\"Contains\")]\n\t\t\tContains = 6,\n\t\t\t[Description(\"Not Equal\")]\n\t\t\tNotEquals = 7,\n\t\t\t[Description(\"Doesn't Contain\")]\n\t\t\tNotContains = 8,\n\t\t\t[Description(\"Range\")]\n\t\t\tRange = 9,\n\t\t\t[Description(\"Is Null\")]\n\t\t\tIsNull = 10,\n\t\t\t[Description(\"Is Not Null\")]\n\t\t\tIsNotNull = 11,\n\t\t\t[Description(\"In\")]\n\t\t\tIn = 12,\n\t\t\t[Description(\"Not in\")]\n\t\t\tNotIn = 13,\n\t\t}\n\n\t\tpublic enum FolderContainerStatus\n\t\t{\n\t\t\tNormal,\n\t\t\tOverFull,\n\t\t\tIgnored\n\t\t}\n\n\t\tpublic enum FolderCreationMode\n\t\t{\n\t\t\tUnknown,\n\t\t\tCreate,\n\t\t\tEdit\n\t\t}\n\n\t\tpublic enum FolderLinkAction\n\t\t{\n\t\t\tBrowseDocuments,\n\t\t\tPublicBrowseDocuments,\n\t\t\tAjaxNavigate,\n\t\t\tNone\n\t\t}\n\n\t\t[EnumJavaScriptResource(true)]\n\t\tpublic enum FormContainerEvents\n\t\t{\n\t\t\tUnknown = 0,\n\n\t\t\t// Error events\n\t\t\tError = -1,\n\n\t\t\t// Client-side events\n\t\t\tReady = 10,\n\t\t\tCancel = 11,\n\t\t\tSubmit = 12,\n\n\t\t\t// Postback events\n\t\t\tComplete = 20\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum FormTask\n\t\t{\n\t\t\tFillForm,\n\t\t\tEditForm,\n\t\t}\n\n\t\t#endregion\n\t\t#region G\n\n\t\tpublic enum GlyphExtractionStatus\n\t\t{\n\t\t\tExpired = -3,\n\t\t\tFailed = -2,\n\t\t\tNotApplicable = -1,\n\t\t\tNotExtracted = 0,\n\t\t\tExtracted = 1\n\t\t}\n\n\t\tpublic enum GetAIExtractionsServiceStatus\n\t\t{\n\t\t\tBatchNotFound = -7,\n\t\t\tLogicAppsNotCompletedAfterMaxRetries = -6,\n\t\t\tLogicAppsNotCompleted = -5,\n\t\t\tUnableToGetDocumentUid = -4,\n\t\t\tInvalidTransactionUid = -3,\n\t\t\tAuthenticationFailed = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tBatchInCancelledStatus = 2,\n\t\t}\n\n\t\tpublic enum GetAvailableModelsStatus\n\t\t{\n\t\t\tUnknownProviderType = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1\n\t\t}\n\n\t\tpublic enum GetObjectMappingDetailStatus\n\t\t{\n\t\t\tMappingNotFound = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1\n\t\t}\n\n\t\tpublic enum GetRulesConfigBasicDetailsStatus\n\t\t{\n\t\t\tRulesConfigNotFound = -3,\n\t\t\tRulesConfigUidIsEmpty = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1\n\t\t}\n\n\t\tpublic enum GetRulesConfigUsageAnalyticsStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1\n\t\t}\n\n\t\tpublic enum GetAttributeGroupsStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1\n\t\t}\n\n\t\tpublic enum GridSelectionType\n\t\t{\n\t\t\t// corresponds to the valid value for the grid 'selection-type'\n\t\t\tNone = 0,\n\t\t\tSingle = 1,\n\t\t\tMulti = 2\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum GroupType\n\t\t{\n\t\t\tWorkflowQueue = -4,\n\t\t\tUserAccount = -3,\n\t\t\tContact = -2,\t\t// types that are not exactly group types are less than zero\n\t\t\tUnknown = -1,       // these types are used in Atlas.Angular.325.doc-explorer-attributes-controller.js to map actor attribtue type\n\t\t\t[Description(\"Group\")]\n\t\t\tSecurity = 0,       // please keep in sync\n\t\t\t[Description(\"Mailing List\")]\n\t\t\tDistribution = 1,\n\t\t}\n\t\t#endregion\n\n\t\t#region H\n\n\t\tpublic enum HistoryFilter\n\t\t{\n\t\t\tAllHistory = 0,\n\t\t\tVersions = 1,\n\t\t\tPreviews = 2,\n\t\t\tMetadataChanges = 3,\n\t\t\tSignatures = 4,\n\t\t\tWorkflows = 5,\n\t\t\tLegalHolds = 6,\n\t\t\tDownloads = 7,\n\t\t\tEMailActivity = 8,\n\t\t\tDocumentActivity = 9,\n\t\t\tFaxActivity = 10,\n\t\t\tShareActivity = 11,\n\t\t\tDocumentReminders = 12,\n\t\t\tExternalReview = 13,\n\t\t\t//Folder filters: if you add more, make sure to exclude them from the dropdownlist in DocumentHistoryControl.ascx.cs\n\t\t\tFolderAttributeChanges = 14,\n\t\t\tFolderActivity = 15,\n\t\t\tFolderSecurity = 16,\n\t\t\tFolderShareActivity = 17,\n\t\t\tObligations = 18\n\t\t}\n\n\t\tpublic enum HistoryLinkType\n\t\t{\n\t\t\tNone,\n\t\t\tDocumentVersion,\n\t\t\tSourceDocument,\n\t\t\tTargetDocument,\n\t\t\tHistory,\n\t\t\tExitedWorkflow\n\t\t}\n\n\t\tpublic enum HistoryObjectType\n\t\t{\n\t\t\tFolder = 1,\n\t\t\tDocument = 2,\n\t\t\tReport = 3,\n\t\t\tAccount = 10,\n\t\t\tTest = -1\n\t\t}\n\n\t\tpublic enum HistoryMessageIdentifiers\n\t\t{\n\t\t\tAdded,\n\t\t\tAddedWorkflow,\n\t\t\tAllUsers,\n\t\t\tAppliedADigitalSignature,\n\t\t\tBy,\n\t\t\tCancelledMultiple,\n\t\t\tCancelledSingle,\n\t\t\tCheckoutDocument,\n\t\t\tCommentNoUserMultipleResult,\n\t\t\tCommentNoUserSingleResult,\n\t\t\tCommentUserMultipleResult,\n\t\t\tCommentUserSingleResult,\n\t\t\tDataFieldNotReconciled,\n\t\t\tDataFieldNotReconciled__PLURAL,\n\t\t\tDataFieldReconciled,\n\t\t\tDataFieldReconciled_DataFieldNotReconciled,\n\t\t\tDataFieldReconciled_DataFieldNotReconciled__PLURAL,\n\t\t\tDataFieldReconciled__PLURAL,\n\t\t\tDataFieldReconciled__PLURAL_DataFieldNotReconciled,\n\t\t\tDataFieldReconciled__PLURAL_DataFieldNotReconciled__PLURAL,\n\t\t\tDataFieldReconciliationMismatch,\n\t\t\tDeleted,\n\t\t\tDocExplorerInteractivePreview,\n\t\t\tDocExplorerLwdp,\n\t\t\tDocExplorerNative,\n\t\t\tDocExplorerPreview,\n\t\t\tDocumentCompare,\n\t\t\tDocumentHasBeenReassignedTo,\n\t\t\tDocumentWasRemovedFromEnvelope,\n\t\t\tDraft,\n\t\t\tElectronicSignatureIsComplete,\n\t\t\tEmailMultipleDocument,\n\t\t\tEmailSingleDocument,\n\t\t\tExisting,\n\t\t\tExternalReviewManaulMatchAddAttachment,\n\t\t\tExternalReviewManaulMatchNewDocument,\n\t\t\tExternalReviewManaulMatchReplace,\n\t\t\tField,\n\t\t\tFieldWorkflow,\n\t\t\tFlagManualReviewMultipleAttachments,\n\t\t\tFlagManualReviewOneAttachment,\n\t\t\tFlagManualReview,\n\t\t\tFromTo,\n\t\t\tInboundEmailRemoved,\n\t\t\tInboundFaxRemoved,\n\t\t\tLink,\n\t\t\tMultiple,\n\t\t\tNative,\n\t\t\tNoChange,\n\t\t\tNoCommentNoUserMultipleResult,\n\t\t\tNoCommentNoUserSingleResult,\n\t\t\tNoCommentUserMultipleResult,\n\t\t\tNoCommentUserSingleResult,\n\t\t\tNoDocument, None,\n\t\t\tNoResultNoUser,\n\t\t\tNoResultWithUser,\n\t\t\tNoSenderAccount,\n\t\t\tOther,\n\t\t\tPDF,\n\t\t\tPinpointValueChanged,\n\t\t\tPrevents,\n\t\t\tPreviewAspxFormView,\n\t\t\tPreviewAspxLwdp,\n\t\t\tPreviewAspxNative,\n\t\t\tPreviewAspxPreview,\n\t\t\tPreviewSignatureCancelledBySender,\n\t\t\tPreviousDocumentOwnerHasBeenDeleted,\n\t\t\tPublic,\n\t\t\tRecipient,\n\t\t\tRuleLine,\n\t\t\tRuleXPath,\n\t\t\tRuleStartWorkflow,\n\t\t\tSender,\n\t\t\tSendForExtenralReviewPrepared,\n\t\t\tSendForExternalReviewPrepared,\n\t\t\tShareActionNew,\n\t\t\tSignatureCancelledBySender,\n\t\t\tSignatureOperationCancelledBy,\n\t\t\tSignatureRejected,\n\t\t\tSignatureSendTransactionFailure,\n\t\t\tSignatureSendWithDifferentProvider,\n\t\t\tSignatureTransactionTimedOut,\n\t\t\tSignedByRecipients,\n\t\t\tSingle,\n\t\t\tSpringIngest,\n\t\t\tSxTerm,\n\t\t\tTerminatedStatus,\n\t\t\tTheElectronicSignatureTransactionHasFailed,\n\t\t\tTo,\n\t\t\tUpdateFormDocAspx,\n\t\t\tUpload,\n\t\t\tViaWorkflow,\n\t\t\tWatchersMultipleDocs,\n\t\t\tWatchersSingleDocs,\n\t\t\tWithCCAndEmailMessage,\n\t\t\tWithEmailMessage,\n\t\t\tWithEmailSubject,\n\t\t\tWithEmailSubjectViaWorkflow,\n\t\t\tWorkflow,\n\t\t\tWorkflowActivity,\n\t\t\tWorkflowActivityCompleted,\n\t\t\tWorkflowActivityUserChoiceCompleted\n\t\t}\n\n\t\tpublic enum HistoryCommentIdentifiers\n\t\t{\n\t\t\tNoneOrUserEntry,\n\t\t\tEformPublic,\n\t\t\tEformSubmittedBy,\n\t\t\tShareAction,\n\t\t\tDocumentCompare,\n\t\t\tWorkflow,\n\t\t\tDocumentReminderScheduledUpdated,\n\t\t\tReminderEmailSentTo,\n\t\t\tReminderContactIgnored,\n\t\t\tReminderDeletedContactIgnored,\n\t\t\tReminderGroupIgnored,\n\t\t\tReminderMalformedEmailIgnored,\n\t\t\tReminderNoRecipients,\n\t\t\tSignatureReference,\n\t\t\tSignatureReferenceWithPassword,\n\t\t\tWorkflowAction,\n\t\t\tWorkflowActionWithComment,\n\t\t\tRuleExecution\n\t\t}\n\n\t\tpublic enum HistoricalDocumentsIngestionToIamTaskStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tNotEnabled = 2,\n\t\t\tDmsWritesNotEnabled = 3,\n\t\t\tDMSMigrationWorkerNotEnabled = 4\n\t\t}\n\n\t\t// bit flags\n\t\t[Flags]\n\t\tpublic enum HoldRelevanceType\n\t\t{\n\t\t\tNone = 0x0000,\n\t\t\tPertaining = 0x0001,\n\t\t\tResponsive = 0x0002,\n\t\t\tProducible = 0x0004,\n\t\t\tPrivileged = 0x0010,\n\t\t\tAll = Pertaining | Responsive | Producible | Privileged,\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum HumanActivityTaskType\n\t\t{\n\t\t\tInvalid = 0,\n\t\t\tChooseDocuments = 1,\n\t\t\tChooseUsers = 2,\n\t\t\tApproveDocuments = 3,\n\t\t\tChoice = 4,\n\t\t\tEditDocuments = 5,\n\t\t\tReviewAndSendForExternalReview = 6,\n\t\t\tReviewAndSendForSignature = 7,\n\t\t\tRouting = 8,\n\t\t\tReviewData = 9,\n\t\t\tForm = 10,\n\t\t\tFullPageForm = 11\n\t\t}\n\n\t\t#endregion\n\n\t\t#region I\n\n\t\t//IndexQueue.Priority (null is default, the higher int value, the higher the priority.  Use negative numbers for low priority 'background' processing e.g. -10)\n\n\t\tpublic enum ImplicitDistributionGroupIds\n\t\t{\n\t\t\tAdmin = -1,\n\t\t\tPublisher = -2,\n\t\t\tEnhancedGuest = -4,\n\t\t\tGuest = -99\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Acceptable values for the Document State property.\n\t\t/// </summary>\n\t\tpublic enum InboundFaxStatus\n\t\t{\n\t\t\tAvailable = 0,\n\t\t\tProvisioned = 1,\n\t\t\tDeactivated = -1,\n\t\t\tPending = -2,\n\t\t\tRemovedFromPool = -3\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Operation of an elastic index task\n\t\t/// </summary>\n\t\tpublic enum IndexOperation\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tIndex = 1,\n\t\t\tIndexBulk = 2,\n\t\t\tUpdate = 3,\n\t\t\tUpdateBulk = 4,\n\t\t\tDelete = 5,\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Target of document/folder for re-indexing\n\t\t/// </summary>\n\t\tpublic enum IndexTarget\n\t\t{\n\t\t\tAccountDefault = 0,\n\t\t\tAll = 1,\n\t\t\tAzure = 2,\n\t\t\tElasticSearch6 = 3,\n\t\t\tElasticSearch7 = 4,\n\n\t\t}\n\n\t\tpublic enum InputTextDataType\n\t\t{\n\t\t\tString = 0,\n\t\t\tInteger = 1,\n\t\t\tDecimal = 2,\n\t\t\tDate = 3\n\t\t}\n\n\t\tpublic enum IntellegoExtractionStatus\n\t\t{\n\t\t\tFailed = -2,\n\t\t\tNotApplicable = -1,\n\t\t\tNotExtracted = 0,\n\t\t\tExtracted = 1\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Collaborations: Used to differentiate between PinPoint, Check in/out and Combination (both)\n\t\t/// </summary>\n\t\t// TJM: I still think this is a dumb requirement\n\t\tpublic enum InteractionType\n\t\t{\n\t\t\tCombination = 0,\n\t\t\tCheckInOutOnly = 1,\n\t\t\tPinPointOnly = 2\n\t\t}\n\n\t\tpublic enum ImageRotation\n\t\t{\n\t\t\tNone = 0,\n\t\t\tClockwise = 90,\n\t\t\tCounterClockwise = -90,\n\t\t\tUpsideDown = 180,\n\t\t}\n\n\t\tpublic enum InvoiceMergeStatus\n\t\t{\n\t\t\tProcessing = 0,\n\t\t\tSuccess = 1,\n\t\t\tFailed = 2\n\t\t}\n\n\t\tpublic enum APRExtractionStatus\n\t\t{\n\t\t\tFailed = -2,\n\t\t\tNotApplicable = -1,\n\t\t\tNotExtracted = 0,\n\t\t\tExtracted = 1\n\t\t}\n\n\t\t#endregion\n\n\t\t#region J\n\t\tpublic enum JoinType\n\t\t{\n\t\t\t// These are the actual reserved SQL keywords. ToString() gets called on\n\t\t\t// the enum when emitting the sql statement.\n\t\t\tINNER = 0,\n\t\t\tLEFT = 1,\n\t\t\tRIGHT = 2,\n\t\t\tCROSS = 3, //!WATCH OUT! ;)\n\t\t}\n\t\t#endregion\n\t\t#region K\n\n\t\t#endregion\n\t\t#region L\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum LogicalOperator\n\t\t{\n\t\t\tAnd = 0,\n\t\t\tOr = 1\n\t\t}\n\n\t\tpublic enum LoginAccessPoint\n\t\t{\n\t\t\tTools = -3,\n\t\t\tUnitTest = -2,\n\t\t\tUnknown = -1,\n\t\t\tWebUI = 1,\n\t\t\tSSO = 2,\n\t\t\t//FTP = 3,\n\t\t\tSFTP = 4,\n\t\t\t//WebDAV = 5,\n\t\t\tWebSOAP = 6,\n\t\t\tSFAutoLogin = 7,\n\t\t\tRestAPI = 8,\n\t\t\tOpenSearch = 9,\n\t\t\tMergeAPI = 10,\n\t\t\tDocuSign = 11,\n\t\t\tDelegatedLogin = 12,\n\t\t\tSfSignedRequest = 13,\n\t\t\tSpringOAuth = 14,\n\t\t\tAccountSwitch = 15,\n\t\t\tApiAuth = 16,\n\t\t\tDocuSignInternalApi = 17\n\t\t}\n\t\tpublic enum LoginDelegationHours\n\t\t{\n\t\t\t[Description(\"1 hour\")]\n\t\t\t_1 = 1,\n\t\t\t[Description(\"2 hours\")]\n\t\t\t_2 = 2,\n\t\t\t[Description(\"4 hours\")]\n\t\t\t_4 = 4,\n\t\t\t[Description(\"8 hours\")]\n\t\t\t_8 = 8,\n\t\t\t[Description(\"12 hours\")]\n\t\t\t_12 = 12,\n\t\t\t[Description(\"24 hours\")]\n\t\t\t_24 = 24,\n\t\t\t[Description(\"2 days\")]\n\t\t\t_48 = 48,\n\t\t\t[Description(\"3 days\")]\n\t\t\t_72 = 72,\n\t\t\t[Description(\"1 week\")]\n\t\t\t_168 = 168,\n\t\t\t[Description(\"2 weeks\")]\n\t\t\t_336 = 336,\n\t\t\t[Description(\"4 weeks\")]\n\t\t\t_672 = 672\n\t\t}\n\n\t\tpublic enum LoginStatus\n\t\t{\n\t\t\t// Who knows?\n\t\t\tUnknown = 0,\n\n\t\t\t// The user has gone through the signup process and logged into the system\n\t\t\tActive = 1,\n\n\t\t\t// The user has been added to someone's address book, but has never logged into the system\n\t\t\tInactive = 2,\n\n\t\t\t// possible legit account but hasn't been authenticated yet.\n\t\t\tEmailNotAuthenticated = 3,\n\n\t\t\t// user failed to login with proper credentials over the limit, so until clear by an Admin that user is locked out\n\t\t\t//this has been changed so that the Locked status is actually a separate table of auto-expiring LoginLock\n\t\t\t//LockedOut = 4,\n\n\t\t\t//API only user\n\t\t\t//APIUser = 5,\n\n\t\t\t// The login is deleted\n\t\t\tDeleted = 8,\n\t\t\t// This login is for a different Site\n\t\t\tAtOtherSite = 9\n\t\t}\n\n\t\tpublic enum LogLevel\n\t\t{\n\t\t\tNone,\n\t\t\tDebug,\n\t\t\tInfo,\n\t\t\tWarning,\n\t\t\tError,\n\t\t\tFatal\n\t\t}\n\n\t\tpublic enum PreviewBehavior\n\t\t{\n\t\t\t[StringValue(\"\")]\n\t\t\tNotSet = 0,\n\t\t\t[StringValue(\"Preview\")]\n\t\t\tPreview = 1,\n\t\t\t[StringValue(\"Download\")]\n\t\t\tDownloadNative = 2,\n\t\t\t[StringValue(\"Download\")]\n\t\t\tDownloadPdf = 3,\n\t\t\t[StringValue(\"DownloadInline\")]\n\t\t\tDownloadInline = 4\n\t\t}\n\n\t\t#endregion\n\t\t#region M\n\n\t\tpublic enum MenuTagType\n\t\t{\n\t\t\tNone = 0,\n\t\t\tBeta = 1,\n\t\t\tTour = 2\n\t\t}\n\n\t\tpublic enum MergeEngine\n\t\t{\n\t\t\t[Description(\"Xml Merge\")]\n\t\t\tDocxXmlMergeProcessor = 1,\n\t\t\t[Description(\"Open Xml Merge\")]\n\t\t\tDocxOpenXmlMergeProcessor = 2,\n\t\t\t[Description(\"Document Assembler\")]\n\t\t\tDocumentAssemblerMergeProcessor = 3\n\t\t}\n\n\t\tpublic enum MessageType\n\t\t{\n\t\t\tNone = -1,\n\t\t\tExpiration = 0,\n\t\t\tReminder = 1,\n\t\t\tExpirationAndReminder = 2,\n\t\t}\n\n\t\tpublic enum MetadataMappingType\n\t\t{\n\t\t\t//Undefined = -1 ,\n\t\t\t//None = 0 ,\n\t\t\tCSV = 1,\n\t\t\tXML = 2,\n\t\t\t//Tagged = 3\n\t\t}\n\n\t\tpublic enum MvcPreferencePage\n\t\t{\n\t\t\tElectronicSignature = 2,\n\t\t\tDeviceManagement = 3,\n\t\t\tNotificationPreference = 4,\n\t\t\tSFConfiguration = 5,\n\t\t\tAutoNumbers = 6,\n\t\t\tAPIUserSetup = 7,\n\t\t\tSealConfiguration = 8,\n\t\t\tClauseConfiguration = 9\n\t\t}\n\n\t\tpublic enum MigrationEntityType\n\t\t{\n\t\t\tAccount = 1,\n\t\t\tGroup = 2,\n\t\t\tUser = 3\n\t\t}\n\n\t\t#endregion\n\t\t#region N\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum NavigationAndActionsType\n\t\t{\n\t\t\tDocumentActions = 0,\n\t\t\tNavigationActions = 1,\n\t\t\tNavigationHelp = 2,\n\t\t\tNavigation = 3,\n\t\t\tDocumentManagementActions = 4,\n\t\t\tDocumentManagementCustomActions = 5,\n\t\t\tFileItFolderWidget = 6,\n\t\t\tFileItFolderWidgetCustomActions = 7,\n\t\t\tAdvancedPartyUploadCustomActions = 8,\n\t\t\tBrowseDocumentsActions = 9,\n\t\t\tClassicPreviewActions = 10,\n\t\t\tClmFilesActions = 11,\n\t\t\tClmFilesCustomActions = 12\n\t\t}\n\n\t\tpublic enum NewAccountOption\n\t\t{\n\t\t\tNone = 0, // The user cannot create a new account\n\t\t\tPaid = 1, // The user can create a new paid account\n\t\t\tTrial = 2, // The user can create a new trial account\n\t\t\tAll = 3 // The user can create a new trial account or a new paid account\n\t\t}\n\n\t\t/// <summary>\n\t\t/// When to notify a person of new additions to a folder they're watching.\n\t\t/// </summary>\n\t\tpublic enum NotifyFrequencyType\n\t\t{\n\t\t\t[Description(\"Default\")]\n\t\t\tDefault = -1,\n\t\t\t[Description(\"None\")]\n\t\t\tNone = 0,\n\t\t\t[Description(\"Real-time\")]\n\t\t\tRealTime = 1,\n\t\t\t[Description(\"Daily\")]\n\t\t\tDaily = 2\n\t\t}\n\n\t\t[Flags]\n\t\tpublic enum NotificationPreference\n\t\t{\n\t\t\t[Description(\"None\")]\n\t\t\tNone = 0x00,\n\t\t\t[Description(\"Notification\")]\n\t\t\tNotification = 0x01,\n\t\t\t[Description(\"Email\")]\n\t\t\tEmail = 0x02,\n\t\t\t[Description(\"Digest\")]\n\t\t\tDigest = 0x04,\n\t\t\t[Description(\"All\")]\n\t\t\tAll = Notification | Email | Digest\n\t\t}\n\n\t\tpublic enum NotificationSubscriptionType\n\t\t{\n\t\t\tDoNotNotify = -1,\n\t\t\tNotify = 0,\n\t\t\tNotifyOnce = 1\n\t\t}\n\n\t\tpublic enum NotificationGroup\n\t\t{\n\t\t\tDocument = 0,\n\t\t\tAdmin = 1\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Used for the NotificationUser table\n\t\t/// </summary>\n\t\tpublic enum NotificationUserDeliveryMethod\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tNotification = 1,\n\t\t\tDigest = 2,\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Used for Determining which NPS Survey to display\n\t\t/// </summary>\n\t\tpublic enum NpsSurveyType\n\t\t{\n\t\t\tWootric = 0,\n\t\t\tQualtrics = 1\n\t\t}\n\n\t\t#endregion\n\t\t#region O\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum ObjectType\n\t\t{\n\t\t\tInvalid = 0,  // 0 is the default value when the data is null for enums.\n\t\t\tFolder = 1,\n\t\t\tDocument = 2,\n\t\t\tFolderLink = 3,\n\t\t\tSavedSearch = 4, /* CEM - Not currently a node type at all */\n\t\t\tMetadata = 5,\n\t\t\t//Workflow = 6,\n\t\t\t//Setting = 7,\n\t\t\t//Group = 8,\n\t\t\t//User = 9,\n\t\t\tAccount = 10,\n\t\t\t//Contact = 11,\n\t\t\tUserAccount = 12,\n\t\t\t//Security = 13,\n\t\t\t//RecordClass = 14,\n\t\t\t//Record = 15,\n\t\t\tSchedule = 16,\n\t\t\t//Case = 17,\n\t\t\t//CaseTask = 18,\n\t\t\t//CaseComment = 19,\n\t\t\tMetadataGroup = 20,\n\t\t\tExternalReview = 21,\n\t\t\tWorkflowWorkItem = 22,\n\t\t\tReportConfiguration = 23,\n\t\t\tBulkFolder = 31,\n\t\t\tBulkDocument = 32\n\t\t}\n\n\t\t[Flags]\n\t\tpublic enum OCRProcessingLevel  // bit field. Used to either specify service capability, or specific processing request\n\t\t{\n\t\t\tNone = 0x00,\n\t\t\tRegularOCR = 0x01, // inlcudes 1D barcode processing\n\t\t\tFormOCR = 0x02,\n\t\t\tOpenOCR = 0x04,\n\t\t\tBarcode2D = 0x08,\n\t\t}\n\n\t\tpublic enum AuthorizationScheme\n\t\t{\n\t\t\t[Description(\"Unknown\")]\n\t\t\tUnknown = 0,\n\t\t\t[Description(\"OAuth\")]\n\t\t\tOAuth = 1,\n\t\t\t[Description(\"Salesforce Impersonation\")]\n\t\t\tSalesforce = 2,\n\t\t\t[Description(\"Bearer token. Same as oauth\")]\n\t\t\tBearer = 3,\n\t\t\t[Description(\"Basic oauth used by Docusign to exchange authcode for accesstoken\")]\n\t\t\tBasic = 4,\n\t\t\t[Description(\"Authorization type used by Docusign Edit desktop applications\")]\n\t\t\tDsEdit = 5\n\t\t}\n\n\t\tpublic enum OAuthKeyType\n\t\t{\n\t\t\t[Description(\"Authorization\")]\n\t\t\tAuthorization = 0,\n\t\t\t[Description(\"Access\")]\n\t\t\tAccess = 1,\n\t\t\t[Description(\"Refresh\")]\n\t\t\tRefresh = 2\n\t\t}\n\n\t\t[Flags]\n\t\tpublic enum OAuthScope\n\t\t{\n\t\t\t// *NOTE* If new scopes are added for external use, add a description to atlas.resx with\n\t\t\t//    title OAuthScope_[name of enum all lowercase]. See OAuthScope_loggedinuser as an example.\n\t\t\t[Description(\"None\")]\n\t\t\tNone = 0x0000,\n\t\t\t[Description(\"Logged in user\")]\n\t\t\tLoggedInUser = 0x0001, // this one allows SOAP access, which gives them all the rights of the currently logged in user.\n\t\t\t[Description(\"Sync\")]\n\t\t\tSync = 0x0002,\n\t\t\t[Description(\"DocumentCreation\")]\n\t\t\tDocumentCreation = 0x0004,\n\t\t\t[Description(\"Access Salesforce Data\")]\n\t\t\tAccessSalesforceData = 0x0008,\n\t\t\t[Description(\"ContentControl\")]\n\t\t\tContentControl = 0x0010,\n\t\t\t[Description(\"Linked Account Administration\")]\n\t\t\tLinkedAccounts = 0x1000,\n\t\t\t[Description(\"Notification\")]\n\t\t\tNotification = 0x2000,\n\t\t\t[Description(\"System\")]\n\t\t\tSystem = 0xFFFF\n\t\t}\n\n\t\tpublic enum OauthAudience\n\t\t{\n\t\t\tGeneralApi = 0,\n\t\t\tOfficeAddIn = 1,\n\t\t\tSignalR = 2   //deprecated\n\t\t}\n\n\t\tpublic enum OcrGetSearchablePdfTaskProcessingStatus\n\t\t{\n\t\t\tFileNotFound = -1,\n\t\t\tFail = 0,\n\t\t\tSuccess = 1\n\t\t}\n\n\t\tpublic enum OpenIn\n\t\t{\n\t\t\tNewWindow,\n\t\t\tWindoid,\n\t\t\tSameWindow,\n\t\t\tNone\n\t\t}\n\n\t\t#endregion\n\t\t#region P\n\t\tpublic enum PartyOperation\n\t\t{\n\t\t\tcreate,\n\t\t\tupdate,\n\t\t\tdelete\n\t\t}\n\n\t\t// Party Source enums match value in resources/Parties.resx\n\t\tpublic enum PartySource\n\t\t{\n\t\t\tDocuSignCLM = 1,\n\t\t\tNetSuiteFinancial = 2,\n\t\t\tSAPAriba = 3,\n\t\t\tWorkdayFinancialManagement = 4,\n\t\t\tSalesforce = 5,\n\t\t\tCoupa = 6,\n\t\t}\n\n\t\tpublic enum PasteStatus\n\t\t{\n\t\t   Success = 0,\n\t\t\tFailure = 1,\n\t\t\tPartialSuccess = 2,\n\t\t\tTooLarge = 3\n\t\t}\n\n\t\tpublic enum PasswordUpgradeReason\n\t\t{\n\t\t\tUpgradeNotRequired,\n\t\t\tAdminRequired,\n\t\t\tPasswordStrengthInvalid,\n\t\t\tExpired\n\t\t}\n\n\t\tpublic enum ProcessSaveAndUpdateData\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tNoTrackedFieldStatuses = 2,\n\t\t\tSaveDataFailed = 3\n\t\t}\n\t\tpublic enum PageLocation\n\t\t{\n\t\t\tTopLeft,\n\t\t\tTopCenter,\n\t\t\tTopRight,\n\t\t\tMidLeft,\n\t\t\tMidCenter,\n\t\t\tMidRight,\n\t\t\tBottomLeft,\n\t\t\tBottomCenter,\n\t\t\tBottomRight\n\t\t}\n\n\t\tpublic enum PasswordStrength\n\t\t{\n\t\t\t// Legacy\n\t\t\tUnknown = 0,\n\t\t\tRegular = 1,\n\n\n\t\t\tStrong = 2,\n\t\t\tStrongPlusOne = 3,\n\t\t\tStrongPlusTwo = 4\n\t\t}\n\n\t\tpublic enum PdfConvertStatus\n\t\t{\n\t\t\tPending = 0,                // PDF does not exist. It's waiting to be converted to PDF.\n\t\t\tFailed = -1,\t\t\t\t// PDF does not exist. Conversion failed\n\t\t\tPasswordProtected = -2,\t// PDF *does* exist, but we can't read it (mangled PDFs also get assigned this status)\n\t\t\tNotApplicable = -3,     // PDF does not exist. Conversion will not attempted at all because we won't create PDF rendition for that document.\n\t\t\tSuccess = 1\t\t\t\t\t// PDF exists.  This is also used for documents that were uploaded as PDF.\n\t\t}\n\n\t\tpublic enum PdfManipulationPriority\n\t\t{\n\t\t\tPassive = -1,\n\t\t\tBackgroundProcessing = 100,\n\t\t\tWeb = 500,\n\t\t\tWebDownload = 1000,\n\t\t}\n\n\t\tpublic enum PreviewButtons\n\t\t{\n\t\t\tsaveNext = 0,\n\t\t\tsaveClose = 1\n\t\t}\n\n\t\t[EnumJavaScriptResource(true)]\n\t\tpublic enum PreviewAvailabilityReasonCode\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tAvailable = 1,\n\t\t\tNativeContent = 2,\n\n\t\t\tPdfConversionFailed = -1,\n\t\t\tInternalType = -2,\n\t\t\tUnsupportedType = -3,\n\t\t\tFileSizeZero = -4,\n\t\t\tFileSizeMax = -5,\n\t\t\tPasswordProtected = -6,\n\t\t\tPageCountZero = -7,\n\t\t\tPageCountUnsupported = -8\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum PreviewViewer\n\t\t{\n\t\t\tlwdp = 0,\n\t\t\tnative = 1,\n\t\t\tpreview = 4,\n\t\t\tinteractivePreview = 5,\n\t\t\tdocReview = 6\n\t\t}\n\n\t\tpublic enum ImageStatus\n\t\t{\n\t\t\tNotAvailable = 0,\n\t\t\tAvailable = 1,\n\t\t\tGenerating = 2\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Privileges that can be assigned to a custom role\n\t\t/// then used to verify if the current user can do a certain action\n\t\t/// </summary>\n\t\t[Flags]\n\t\tpublic enum PrivilegeTypes\n\t\t{\n\t\t\t// int.MinValue will convert into null in sql\n\t\t\tNone = int.MinValue,\n\n\t\t\t/// <summary>\n\t\t\t/// User administration\n\t\t\t/// Should not contain group\n\t\t\t/// membership or Role setting\n\t\t\t/// </summary>\n\t\t\tUserAdmin = 1 << 0,\n\n\t\t\t/// <summary>\n\t\t\t/// This person can edit and\n\t\t\t/// create roles\n\t\t\t/// Also can assign roles to a user\n\t\t\t/// </summary>\n\t\t\tRoleAdmin = 1 << 1,\n\n\t\t\t/// <summary>\n\t\t\t/// Workflow\n\t\t\t/// Smart Rules\n\t\t\t/// Schedules\n\t\t\t/// Forms\n\t\t\t/// Reminder Templates\n\t\t\t/// </summary>\n\t\t\tWorkflowAutomation = 1 << 2,\n\n\t\t\t/// <summary>\n\t\t\t/// Security groups\n\t\t\t/// </summary>\n\t\t\tGroupAdmin = 1 << 3,\n\n\t\t\t/// <summary>\n\t\t\t/// Used for setup setting stuff on an account\n\t\t\t/// Should not include things on the sec pref page\n\t\t\t/// </summary>\n\t\t\tAccountSetup = 1 << 4,\n\n\t\t\t/// <summary>\n\t\t\t/// Basically the things on the sec pref page\n\t\t\t/// </summary>\n\t\t\tSecuritySetup = 1 << 5,\n\n\t\t\t/// <summary>\n\t\t\t/// Allows report creation/editing/deletion\n\t\t\t/// </summary>\n\t\t\tReportAdmin = 1 << 6,\n\n\t\t\t/// <summary>\n\t\t\t/// Allow create, edit, and delete in the Document Generation tool\n\t\t\t/// </summary>\n\t\t\tDocLauncher = 1 << 7,\n\n\t\t\t/// <summary>\n\t\t\t/// Allow administration of the account's branding and custom toolbar actions\n\t\t\t/// </summary>\n\t\t\tUIPreferences = 1 << 8,\n\n\t\t\t/// <summary>\n\t\t\t/// Allow create, edit, and delete of attribute fields on documents. Note: All users that are not in the Guest role will be able to edit attribute values.\n\t\t\t/// </summary>\n\t\t\tAttributesAutoNumbers = 1 << 9, // note that MetadataGroupDelete and MetadataFieldDelete sql stored procedures rely on the value of this enum\n\n\t\t\t/// <summary>\n\t\t\t/// Allow administration of third-party integrations and configurations\n\t\t\t/// </summary>\n\t\t\tIntegrations = 1 << 10,\n\n\t\t\t/// <summary>\n\t\t\t/// Allows management of inbound email addresses and fax numbers\n\t\t\t/// </summary>\n\t\t\tInboundFolderContent = 1 << 11,\n\n\t\t\t/// <summary>\n\t\t\t/// Allow configuration and execution of AI analysis tools to automatically populate attributes\n\t\t\t/// </summary>\n\t\t\tAiAttributeAutofill = 1 << 12,\n\n\t\t\t/// <summary>\n\t\t\t/// Allow configuration and execution of AI analysis tools to automatically populate attributes\n\t\t\t/// </summary>\n\t\t\tObjectMapping = 1 << 13,\n\n\t\t\tAll = -1,\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Corresponds to the properties in the PrivilegeCard. Used in RequireAuthenticationAttribute.cs\n\t\t/// to determine access to MVC pages. Add to this enum if you need to use a privilegecard property in\n\t\t/// the RequireAuthenticationAttribute.\n\t\t/// Note: Enum member names need to match property names in RequireAuthenticationAttribute.\n\t\t/// Note: Reflection is used for mapping between the 2 structures.\n\t\t/// </summary>\n\t\t[Flags]\n\t\tpublic enum Privileges : long\n\t\t{\n\t\t\tUndefined = Int64.MinValue,\n\t\t\tHasSuperAdminRights = 1 << 0,\n\t\t\tHasUserAdminRights = 1 << 1,\n\t\t\tHasPublisherRights = 1 << 2,\n\t\t\tHasEnhancedGuestRights = 1 << 3,\n\t\t\tHasGuestRights = 1 << 4,\n\t\t\tCanSetupAttributes = 1 << 5,\n\t\t\tCanSetupUIPreferences = 1 << 6,\n\t\t\tCanParticipateInBPMWorkflow = 1 << 7,\n\t\t\tCanSetupIntegrations = 1 << 8,\n\t\t\tCanManageQueues = 1 << 9,\n\t\t\tCanSetupReminders = 1 << 10,\n\t\t\tCanSetupSalesforceIntegrations = 1 << 11,\n\t\t\tCanSetupSchedules = 1 << 12,\n\t\t\tCanDesignBPMWorkflow = 1 << 13,\n\t\t\tCanStartBPMWorkflow = 1 << 14,\n\t\t\tCanAdministerDocLauncher = 1 << 15,\n\t\t\tCanCheckInOut = 1 << 16,\n\t\t\tCanManageBPMWorkflow = 1 << 17,\n\t\t\tCanAdministerSecurityGroups = 1 << 18,\n\t\t\tCanSetupAccount = 1 << 19,\n\t\t\tCanManageFaxLines = 1 << 20,\n\t\t\tCanAddUser = 1 << 21,\n\t\t\tCanAddContacts = 1 << 22,\n\t\t\tCanSetSecurityPrefs = 1 << 23,\n\t\t\tCanManageForms = 1 << 24,\n\t\t\tCanProvisionInboundEmail = 1 << 25,\n\t\t\tCanDesignReports = 1 << 26,\n\t\t\tCanSetupSmartRules = 1 << 27,\n\t\t\tCanManageConnectedApps = 1 << 28,\n\t\t\tCanManageNotificationPreferences = 1 << 29,\n\t\t\tCanManageParties = 1 << 30,\n\t\t\tCanSetupSmartAgreement = 1L << 31,\n\t\t\tCanManageConnections = 1L << 32,\n\t\t\tCanSendDocuments = 1L << 33,\n\t\t\tCanSetupObjectMapping = 1L << 34,\n\t\t\tCanViewParties = 1L << 35,\n\t\t\tCanAccessContactsPage = 1L << 36,\n\t\t\tCanAddParties = 1L << 37\n\t\t} // Note: Avoid shifting more than 62 because 1L << 63 == Int64.MinValue. When shifting more than 30, use the L (long) suffix on the left side. Otherwise 1 << 31 == Int32.MinValue, 1 << 32 == 1 << 0, , 1 << 33 == 1 << 1, etc...\n\n\t\tpublic enum ProfileNotificationType\n\t\t{\n\t\t\tUnidentified = 0,\n\t\t\tAccountUpdated = 1,\n\t\t\tUserUpdated = 2\n\t\t}\n\n\t\tpublic enum PhysicalStorageOperationType\n\t\t{\n\t\t\tDefault = 0,\n\t\t\tStoreFromFile = 1,\n\t\t\tStoreFromStream = 2,\n\t\t\tDelete = 3,\n\t\t\tCheckExists = 4,\n\t\t\tGetContentLength = 5,\n\t\t\tGetFile = 6,\n\t\t\tGetStream = 7,\n\t\t\tGetStreamRange = 8,\n\t\t\tCreateDocument = 9,\n\t\t\tUpdateDocument = 10\n\t\t}\n\n\t\tpublic enum HybridStorageWritesType\n\t\t{\n\t\t\tAsync = 0,\n\t\t\tSync = 1\n\t\t}\n\n\t\t/// <summary>\n\t\t/// HybridStorageOverride account setting to determine hybrid storage configuration.\n\t\t/// </summary>\n\t\tpublic enum HybridStorageOverride\n\t\t{\n\t\t\tNone = 0, // No override, use feature flags\n\t\t\tDmsWritesDpsReads = 1, // Should only be used for existing accounts that have not migrated historical data to DMS\n\t\t\tDmsWritesAndReads = 2 // Should only be used for new accounts, or accounts where all historical data has been migrated to DMS\n\t\t}\n\n\t\t#region PublicUser Enums\n\n\t\tpublic enum PublicUserContext\n\t\t{\n\t\t\tExternalReview =1\n\t\t}\n\t\tpublic enum PublicUserAction\n\t\t{\n\t\t\tUpload = 1\n\t\t}\n\t\t#endregion\n\n\t\t#region print on demand enums\n\t\tpublic class PrintOnDemand\n\t\t{\n\t\t\tpublic enum OptionType\n\t\t\t{\n\t\t\t\tHandlingFee = 0,\n\t\t\t\tPaper = 1,\n\t\t\t\tTab = 2,\n\t\t\t\tBindingOption = 3,\n\t\t\t\tShipping = 4\n\t\t\t}\n\t\t\tpublic enum TabType\n\t\t\t{\n\t\t\t\tNone = 0,\n\t\t\t\tTabsBetweenDocuments = 1\n\t\t\t}\n\n\t\t\tpublic enum PaperType\n\t\t\t{\n\t\t\t\tBrilliantWhite = 0,\n\t\t\t\tBeige = 1,\n\t\t\t\tLightGray = 2\n\n\t\t\t}\n\n\t\t\tpublic enum BindingOption\n\t\t\t{\n\t\t\t\tNone = 0,\n\t\t\t\tStapled = 1,\n\t\t\t\tPendoflexBinding = 2\n\t\t\t}\n\n\t\t\tpublic enum ShipType\n\t\t\t{\n\t\t\t\tUSMail = 0,\n\t\t\t\tUPSGround = 1,\n\t\t\t\tUPSNextDayAir = 2\n\t\t\t}\n\t\t}\n\n\t\tpublic enum AllowPublicForms\n\t\t{\n\t\t\tNo = 0,\n\t\t\tYes = 1,\n\t\t\tAllowJS =2\n\t\t}\n\n\t\t#endregion\n\t\t#endregion\n\t\t#region Q\n\t\tpublic enum QueueStatus\n\t\t{\n\t\t\tFailure = -1,\n\t\t\tWaiting = 0,\n\t\t\tProcessing = 1,\n\t\t\tSuccess = 2\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Not used from code but is in a lookup table\n\t\t/// </summary>\n\t\tpublic enum QueuePriority\n\t\t{\n\t\t\tDefault = 0,\n\t\t\tBrowseUpload = 10,\n\t\t\tCheckInFile = 10,\n\t\t\tUpdateDocument = 10,\n\t\t\tDraftDocument = 10,\n\t\t\tOfficeUploaderEditInline = 10,\n\t\t\tCollaborationSave = 10,\n\t\t\tSpringCMService = 5,\n\t\t\t//WebDAVServer = 5,\n\t\t\tAtlasUploadService = 5,\n\t\t\tAtlasInboundEmail = 1,\n\t\t\tInboundFax = 1,\n\t\t\tSFTPServer = -10,\n\t\t\tSupport = -100,\n\t\t}\n\n\t\tpublic enum QueryWizard\n\t\t{\n\t\t\tAdvanced,\n\t\t\tDocumentMetadata,\n\t\t\tWorkflowsCompleted,\n\t\t\tWorkflowStepDuration,\n\t\t\tTimesThroughStep,\n\t\t\tExistingReport,\n\n\t\t}\n\t\t#endregion\n\t\t#region R\n\n\t\t/// <summary>\n\t\t/// Enumeration for Delivery Status in the adexs system\n\t\t/// </summary>\n\t\tpublic enum RecipientType\n\t\t{\n\t\t\tContact = 0,\n\t\t\tGroup = 1,\n\t\t\tAdHocEmailAddress = 2,\n\t\t}\n\n\t\tpublic enum ReindexingQueuePriority\n\t\t{\n\t\t\tLow = 0,\n\t\t\tNormal = 1,\n\t\t\tHigh = 2\n\t\t}\n\n\t\tpublic enum ReindexingStatus\n\t\t{\n\t\t\tPending = 0,\n\t\t\tProcessing = 1,\n\t\t\tSuccess = 2,\n\t\t\tFailed = 3\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Enumeration for ReplaceTrackedContentStatus.\n\t\t/// </summary>\n\t\tpublic enum ReplaceTrackedContentStatus\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tFailed = 2,\n\t\t\tDocumentNameNotFound = 3,\n\t\t\tFolderNotPresent = 4,\n\t\t\tDocumentNotFound = 5,\n\t\t\tNotSupportedFormat = 6,\n\t\t\tDocumentCheckedOut = 7,\n\t\t\tCorruptDocument = 8\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Enumeration for GetTrackedContentStatus.\n\t\t/// </summary>\n\t\tpublic enum GetTrackedContentStatus\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tFailed = 2,\n\t\t\tDocumentNotFound = 3,\n\t\t\tNotSupportedFormat = 4,\n\t\t\tCorruptDocument = 5\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Given role in the recman repository.\n\t\t///\n\t\t/// Note: Code in RecordsSecurityAttribute assumes that higher numbered roles have all\n\t\t/// the powers of lower numbered roles.\n\t\t/// </summary>\n\t\tpublic enum RecordsRoleType\n\t\t{\n\t\t\tNone = 0,\n\t\t\tViewer = 10,\n\t\t\tManager = 20,\n\t\t\tAdministrator = 40,\n\t\t}\n\n\t\tpublic enum RecordClassStatus\n\t\t{\n\t\t\tDeleted = -1,\n\t\t\tNormal = 0,\n\t\t}\n\n\t\tpublic enum RecordOrigination\n\t\t{\n\t\t\t[Description(\"Created Date\")]\n\t\t\tRecordCreatedDate = 0,\n\t\t\t[Description(\"Attribute Date\")]\n\t\t\tMetadataDate = 1,\n\t\t}\n\n\t\tpublic enum ReminderTemplateOffsetType\n\t\t{\n\t\t\tNotSet = int.MinValue,\n\t\t\tNone = 0,\n\t\t\tTemplateApplication = 1,\n\t\t\tMetadataField = 2\n\t\t}\n\n\t\tpublic enum ReminderTemplateOffsetIntervalType\n\t\t{\n\t\t\tNotSet = int.MinValue,\n\t\t\tDays = 1,\n\t\t\tWeeks = 2,\n\t\t\tMonths = 3,\n\t\t\tYears = 4\n\t\t}\n\n\t\tpublic enum ReportExecutionStatus\n\t\t{\n\t\t\tStarted,\n\t\t\tFinished,\n\t\t\tError\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum ReportDisplayType\n\t\t{\n\t\t\tReport = 0,\n\t\t\tColumn = 1,\n\t\t\tStacked = 2,\n\t\t\tStackedFull = 3,\n\t\t\tPie = 4\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum ReportFilterComparator\n\t\t{\n\t\t\tUnset = 0,\n\t\t\tEqualsAnyOf = 1,\n\t\t\tDoesNotEqualAnyOf = 2,\n\t\t\tContainsAnyOf = 3,\n\t\t\tDoesNotContainAnyOf = 4,\n\t\t\tIsEmpty = 5,\n\t\t\tIsNotEmpty = 6,\n\t\t\tEquals = 7,\n\t\t\tDoesNotEqual = 8,\n\t\t\tGreaterThanOrEqualTo = 9,\n\t\t\tLessThanOrEqualTo = 10,\n\t\t\tBetween = 11\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum ReportType : short\n\t\t{\n\t\t\t[Description(\"This is for the old style of custom reporting\")]\n\t\t\tNormal = 0,\t\t\t\t// these are the really old custom custom reports - tied to sprocs usually specific for a customer\n\t\t\tUserDefined = 2,\t\t// these are our Legacy design-able reports\n\t\t\tStandardOffering = 4,   // theses are usually our set of 6 Rdl based reports (e.g. Document Activity) but some that should be type 5 are here too\n\t\t\tAccount = 5,\t\t\t// another form of old custom custom report but tied to rdl\n\n\t\t\tAnalyticsWorkflow = 8,\t\t\t// analytics based workflow reports\n\t\t\tAnalyticsDocument = 9,\t\t\t// analytics document reports\n\t\t\tAnalyticsDocumentActivity = 10, // analytics document activity reports\n\t\t\tAnalyticsUsers = 11,\n\t\t\tAnalyticsAgreementsExpiring = 12,\n\t\t\tAnalyticsObligations = 13,\n\t\t\tAnalyticsAgreementsApproachingRenewal = 14,\n\n\t\t\tDisabled = 255, // can't make this a -1 because it is a tinyint in the db and it ggoes from 0-255\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum ReportExportFormat\n\t\t{\n\t\t\tCSV = 0,\n\t\t\tExcel = 1,\n\t\t\tPDF = 2,\n\t\t\tXML = 3,\n\t\t\tMHTML = 4,\n\t\t\tIMAGE = 5,\n\t\t\tWord = 6,\n\t\t}\n\n\t\tpublic enum ReportGroupStyle\n\t\t{\n\t\t\tNone = 0,\n\t\t\tDefault = 1,\n\n\t\t\t//DateTime grouping\n\t\t\tYear = 2,\n\t\t\tMonth = 3,\n\t\t\tDay = 4,\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum ReportLoadingState\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tLoading = 1,\n\t\t\tLoaded = 2,\n\t\t\tError = 3,\n\t\t\tTimeout = 4,\n\t\t\tQueueExceeded = 5,\n\t\t\tCanceled = 8,\n\t\t\tAbandonedQuery = 9,\n\t\t\tNetworkError = 10\n\t\t}\n\n\t\t//Ranges as well as groupings for use in an EnumComboBox\n\t\tpublic enum ReportRangeType\n\t\t{\n\t\t\t[Description(\"Day\")]\n\t\t\tDay = 0,\n\t\t\t[Description(\"Yesterday\")]\n\t\t\tYesterday = 1,\n\t\t\t[Description(\"Today\")]\n\t\t\tToday = 2,\n\t\t\t[Description(\"Tomorrow\")]\n\t\t\tTomorrow = 3,\n\t\t\t[Description(\"Last 7 Days\")]\n\t\t\tLast7Days = 4,\n\t\t\t[Description(\"Last 30 Days\")]\n\t\t\tLast30Days = 5,\n\n\t\t\t[Description(\"Week\")]\n\t\t\tWeek = 10,\n\t\t\t[Description(\"Last Week\")]\n\t\t\tLastWeek = 11,\n\t\t\t[Description(\"This Week\")]\n\t\t\tThisWeek = 12,\n\t\t\t[Description(\"Next Week\")]\n\t\t\tNextWeek = 13,\n\n\t\t\t[Description(\"Month\")]\n\t\t\tMonth = 20,\n\t\t\t[Description(\"Last Month\")]\n\t\t\tLastMonth = 21,\n\t\t\t[Description(\"This Month\")]\n\t\t\tThisMonth = 22,\n\t\t\t[Description(\"Next Month\")]\n\t\t\tNextMonth = 23,\n\n\t\t\t[Description(\"Quarter\")]\n\t\t\tQuarter = 30,\n\t\t\t[Description(\"Last Quarter\")]\n\t\t\tLastQuarter = 31,\n\t\t\t[Description(\"This Quarter\")]\n\t\t\tThisQuarter = 32,\n\t\t\t[Description(\"Next Quarter\")]\n\t\t\tNextQuarter = 33,\n\n\t\t\t[Description(\"Year\")]\n\t\t\tYear = 40,\n\t\t\t[Description(\"Last Year\")]\n\t\t\tLastYear = 41,\n\t\t\t[Description(\"This Year\")]\n\t\t\tThisYear = 42,\n\t\t\t[Description(\"Next Year\")]\n\t\t\tNextYear = 43,\n\t\t}\n\n\t\tpublic enum ReportQueryType\n\t\t{\n\t\t\tNormal,\n\t\t\tAggregate,\n\t\t\tTotalCounts\n\t\t}\n\n\n\t\tpublic enum ReportValueAggregate\n\t\t{\n\t\t\tNone,\n\t\t\tSum,\n\t\t\tAverage,\n\t\t\tCount,\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum ReportSubType\n\t\t{\n\t\t\tTabular = 0,\n\t\t\tTemplate = 1,\n\t\t\tChart = 2,\n\t\t}\n\n\t\tpublic enum ReserveLoginStatus\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tGranted = 1,\n\t\t\tTaken = 2\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Enumeration for Reset Password Request Status, this is used by both\n\t\t/// a user initiated reset password or the inital user verification to set password.\n\t\t/// </summary>\n\t\tpublic enum ResetPasswordRequestStatus\n\t\t{\n\t\t\tUnChanged = 0,\n\t\t\tChanged = 1,\n\t\t\tPendingVerification = 2,\n\t\t\tVerified = 3,\n\t\t\tApiSecretRequested = 4,\n\t\t\tApiSecretGranted = 5,\n\t\t\tResetAllowed = 6\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Only one unit of date can be input for a retention schedule\n\t\t/// </summary>\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum RetentionUnit\n\t\t{\n\t\t\tDays = 1,\n\t\t\tMonths = 0,\n\t\t\tYears = 2,\n\t\t\tForever = -1,\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Enumerates the modes of auto-refresh\n\t\t/// </summary>\n\t\tpublic enum RefreshMode\n\t\t{\n\t\t\tDashboard = 0,\n\t\t\tInbox = 1,\n\t\t\tFolder = 2,\n\t\t}\n\t\t/// <summary>\n\t\t/// Enumerates refresh intervals\n\t\t/// Not set will not refresh at all\n\t\t///\n\t\t/// Values are in seconds\n\t\t/// </summary>\n\t\tpublic enum RefreshInterval\n\t\t{\n\t\t\t[Description(\"No Refresh\")]\n\t\t\tNotSet = 0,\n\t\t\t[Description(\"1 minute\")]\n\t\t\tInterval1 = 60000,\n\t\t\t[Description(\"5 minutes\")]\n\t\t\tInterval2 = 300000,\n\t\t\t[Description(\"10 minutes\")]\n\t\t\tInterval3 = 600000,\n\t\t\t[Description(\"30 minutes\")]\n\t\t\tInterval4 = 1800000,\n\t\t}\n\t\t/// <summary>\n\t\t/// The action type for resending an email.\n\t\t/// </summary>\n\t\tpublic enum ResendEmailType\n\t\t{\n\t\t\tApproval = 0,\n\t\t\tExternalReview = 1\n\t\t}\n\n\t\tpublic enum RestTokenType\n\t\t{\n\t\t\tSpringCM_User = 1,\n\t\t\tDocuSign_User = 2,\n\t\t\tDocuSign_Application = 3,\n\t\t\tDocuSign_Resource = 4\n\t\t}\n\n\t\t/// <summary>\n\t\t/// PartySync Email Results Type\n\t\t/// </summary>\n\t\tpublic enum ResultsEmail\n\t\t{\n\t\t\tOnlySuccess,\n\t\t\tOnlyErrors,\n\t\t\tMixedResults,\n\t\t\tNoUpdates\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Acceptable values for the Document State property.\n\t\t/// </summary>\n\t\tpublic enum ReTrialInvitationStatus\n\t\t{\n\t\t\tPending = 0,\n\t\t\tAccepted = 1,\n\t\t\tDeclined = 2\n\t\t}\n\n\t\tpublic enum RevisionContextEnum\n\t\t{\n\t\t\tNone = 0,\n\t\t\tSelectOld = 1,\n\t\t\tSelectNew = 2\n\t\t}\n\n\t\tpublic enum RevisionStatus\n\t\t{\n\t\t\tDefault = 0,\n\t\t\tDeleted = -1 // Indicates the that this revision has been deleted; we don't need to keep the FileData around\n\t\t}\n\n\t\tpublic enum RequestSource\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tSCM = 1,\n\t\t\tSF = 2,\n\t\t\tAPI = 3,\n\t\t\tSFBILLING = 4\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum RoleType\n\t\t{\n\t\t\tSigner = 0,\n\t\t\tElectronicSeal = 1,\n\t\t\tInPersonSigner = 2\n\t\t}\n\n\t\tpublic enum RulesEngineConfigType\n\t\t{\n\t\t\tCustom = 0,\n\t\t\tSystemDefined = 1,\n\t\t}\n\n\t\t#endregion\n\t\t#region S\n\n\t\tpublic enum SAMLNameIdentifierType\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tUsername = 1,\n\t\t\tDSUserId = 2,\n\t\t\tEmail = 3\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Product Areas which can be given distinct language settings.\n\t\t/// </summary>\n\t\tpublic enum SettingAuthTier\n\t\t{\n\t\t\t/// <summary>\n\t\t\t/// This setting is the base default for a tiered setting whether at the Default, AccountType, Account, Persona, or User level.\n\t\t\t/// </summary>\n\t\t\tDefault,\n\t\t\t/// <summary>\n\t\t\t/// This setting is for authenticated users whether at the Default, AccountType, Account, Persona or User level.\n\t\t\t/// </summary>\n\t\t\tInternal,\n\t\t\t/// <summary>\n\t\t\t/// This setting is for non-authenticated contexts with an Account context, like Public Share or External Review.\n\t\t\t/// </summary>\n\t\t\tExternal,\n\t\t\t/// <summary>\n\t\t\t/// This setting is for non-authenticated contexts without an account context like Login.\n\t\t\t/// </summary>\n\t\t\tPublic\n\t\t}\n\n\t\tpublic enum SecurityCalcStatus\n\t\t{\n\t\t\tFailure = -1,\n\t\t\tSuccess = 1,\n\t\t\tWaiting = 2\n\t\t}\n\n\t\tpublic enum SignatureAlgorithm\n\t\t{\n\t\t\tnone,\n\t\t\tHS256,\n\t\t\tRSA256\n\t\t}\n\n\t\tpublic enum SourceProductName\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tEsign = 1,\n\t\t\tAdmin = 2,\n\t\t\tCLM = 3,\n\t\t\tGen = 4,\n\t\t\tNegotiate = 5\n\t\t}\n\n\t\tpublic enum SourceIndexType\n\t\t{\n\t\t\tReIndex = 0,\n\t\t\tDocumentChange = 1,\n\t\t\tMetadataChange = 2\n\t\t}\n\n\t\tpublic enum ValidateDocumentReminderStatus\n\t\t{\n\t\t\tInvalidSenderEmail = -13,\n\t\t\tInvalidTemplate = -12,\n\t\t\tInvalidDate = -11,\n\t\t\tDocumentIsTrashed = -10,\n\t\t\tInvalidAdHocEmailRecipient = -9,\n\t\t\tNotAuthorized = -8,\n\t\t\tDuplicateReminder = -7,\n\t\t\tReachedMaxReminders = -6,\n\t\t\tDateInPast = -5,\n\t\t\tMissingRecipient = -4,\n\t\t\tMissingSender = -3,\n\t\t\tMissingName = -2,\n\t\t\tInvalidDocument = -1,\n\t\t\tSuccess = 0,\n\t\t}\n\n\t\t//In anticipation of other types of selections for queries\n\t\tpublic enum CustomReportSelectionType\n\t\t{\n\t\t\tNone,\n\t\t\tMetadata,\n\t\t}\n\n\t\tpublic enum SearchContentFileTypes\n\t\t{\n\t\t\tAll = 0,\n\t\t\tText = 1,\n\t\t\tAudio = 2,\n\t\t\tVideo = 3,\n\t\t\tImage = 4,\n\t\t\tOther = 5\n\t\t}\n\n\t\tpublic enum SearchVersion\n\t\t{\n\t\t\t[Description(\"CLM Search\")]\n\t\t\tCLMSearch = 0,\n\n\t\t\t[Description(\"Modern Search\")]\n\t\t\tModernSearch = 1,\n\t\t}\n\n\t\tpublic enum SFSecurity\n\t\t{\n\t\t\tProfile = 0,\n\t\t\tRole = 1\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum SecurityAccessRuleValidationStatus\n\t\t{\n\t\t\tValid = 0,\n\t\t\tWarning = 1,\n\t\t\tError = 2\n\t\t}\n\n\t\tpublic enum SecurityAccessRuleValidationTrigger\n\t\t{\n\t\t\tNone = 0, // This should signal a full account validation\n\t\t\tGroupDeleted = 1,\n\t\t\tAttributeDeleted = 2,\n\t\t\tPartyDeleted = 3,\n\t\t\tSecurityMetadataDelete = 4,\n\t\t\tMetadataGroupDefinitionDeleted = 5,\n\t\t\tMetadataGroupDefinitionChanged = 6\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum SecurityTypes\n\t\t{\n\t\t\tUnset = 0,\n\t\t\tInheritFromParentFolder = 1,\n\t\t\tNoAccess = 2,\n\t\t\tView = 3,\n\t\t\tViewCreate = 4,\n\t\t\tViewEdit = 5,\n\t\t\tViewEditDelete = 6,\n\t\t\tViewEditDeleteSetAccess = 7,\n\t\t\tCustom = 8\n\t\t}\n\n\t\tpublic enum SecurityItemTable\n\t\t{\n\t\t\tUser = 1,\n\t\t\tFolder = 2,\n\t\t\tFolderRemoveSee = 3,\n\t\t\tDocument = 4\n\t\t}\n\n\t\tpublic enum SecurityLevel\n\t\t{\n\t\t\tNotSet = int.MinValue,\n\t\t\tDeny = 0,\n\t\t\tGrant = 1\n\t\t}\n\t\tpublic enum SecurityModel\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tHierarchical = 1,\n\t\t\tStatic = 2\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum SecurityPrincipalType\n\t\t{\n\t\t\tRole = 0,\n\t\t\tSecurityGroup = 1,\n\t\t\tUser = 2,\n\t\t}\n\n\t\tpublic enum SecurityEvalParallelizationMode\n\t\t{\n\t\t\tParallelForEach,\n\t\t\tThreadPool,\n\t\t\tAsyncTaskList,\n\t\t\tSerial\n\t\t}\n\n\t\tpublic enum SendEmailDocumentAs\n\t\t{\n\t\t\tLink = 1,\n\t\t\tAttachment = 2\n\t\t}\n\n\t\tpublic enum SealDigitalAppType\n\t\t{\n\t\t\tscorecardanalyzer = 1,\n\t\t\tcustom = 2\n\t\t}\n\n\t\tpublic enum ScorecardDatabagDocumentStatus\n\t\t{\n\t\t\tProcessed\n\t\t}\n\n\t\tpublic enum SealLabelExtractionStatus\n\t\t{\n\t\t\tFailed = -2,\n\t\t\tNotApplicable = -1,\n\t\t\tNotExtracted = 0,\n\t\t\tExtracted = 1\n\t\t}\n\n\t\tpublic enum SealScorecardStatus\n\t\t{\n\t\t\tFailed = -2,\n\t\t\tNotApplicable = -1,\n\t\t\tNotExtracted = 0,\n\t\t\tExtracted = 1\n\t\t}\n\n\t\tpublic enum AnalyzerDocumentStatus\n\t\t{\n\t\t\tFailed = -2,\n\t\t\tNotApplicable = -1,\n\t\t\tNotSaved = 0,\n\t\t\tSaved = 1\n\t\t}\n\n\t\tpublic enum ScorecardRiskLevel\n\t\t{\n\t\t\tNA,\n\t\t\tLow,\n\t\t\tMedium,\n\t\t\tHigh\n\t\t}\n\n\t\tpublic enum StagedMetadataStatus\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tVerified = 1,\n\t\t\tUnverified = 2,\n\t\t\tIgnored = 3\n\t\t}\n\n\t\tpublic enum AIExtractionStatus\n\t\t{\n\t\t\t[Description(\"Failed\")]\n\t\t\tFailed = -1,\n\n\t\t\t[Description(\"Unprocessed\")]\n\t\t\tUnProcessed = 0,\n\n\t\t\t[Description(\"Processing\")]\n\t\t\tProcessing = 1,\n\n\t\t\t[Description(\"Unreviewed\")]\n\t\t\tUnReviewed = 2,\n\n\t\t\t[Description(\"Reviewed\")]\n\t\t\tReviewed = 3\n\t\t}\n\n\t\tpublic enum NavigatorAIExtractionStatus\n\t\t{\n\t\t\t[Description(\"None\")]\n\t\t\tNone = -1,\n\n\t\t\t[Description(\"NotStarted\")]\n\t\t\tNotStarted = 0,\n\n\t\t\t[Description(\"InProgress\")]\n\t\t\tInProgress = 1,\n\n\t\t\t[Description(\"Done\")]\n\t\t\tDone = 2,\n\n\t\t\t[Description(\"Skipped\")]\n\t\t\tSkipped = 3,\n\n\t\t\t[Description(\"Failed\")]\n\t\t\tFailed = 7\n\t\t}\n\n\t\tpublic enum AgreementSummaryStatusReasonCode\n\t\t{\n\t\t\t/* Failure Status Updates */\n\t\t\t[Description(\"Callback With Non Retryable Error\")]\n\t\t\tCallbackWithNonRetryableError = -25,\n\n\t\t\t[Description(\"Exceeded Retry Threshold\")]\n\t\t\tExceededRetryThreshold = -24,\n\n\t\t\t[Description(\"Exceeded Processing Threshold\")]\n\t\t\tExceededProcessingThreshold = -23,\n\n\t\t\t[Description(\"Summary Retrieval Error\")]\n\t\t\tRetrievalError = -22,\n\n\t\t\t[Description(\"Summary Initiation Task Failure\")]\n\t\t\tTaskFailure = -21,\n\n\t\t\t[Description(\"Task Queuing Error\")]\n\t\t\tTaskQueuingError = -20,\n\n\t\t\t/* Not Applicable Status Updates */\n\t\t\t[Description(\"File Size Exceeded\")]\n\t\t\tFileSizeExceeded = -12,\n\n\t\t\t[Description(\"PDF Not Available\")]\n\t\t\tPDFUnavailable = -11,\n\n\t\t\t[Description(\"Unsupported Extension\")]\n\t\t\tUnsupported = -10,\n\n\t\t\t/* Unexpected Status Updates  */\n\t\t\t[Description(\"Unexpected Response on Summary Initiation\")]\n\t\t\tUnexpectedResponseOnInitiation = -2,\n\n\t\t\t[Description(\"Unexpected Response on Summary Retrieval\")]\n\t\t\tUnexpectedResponseOnRetrieval = -1,\n\n\t\t\t[Description(\"Unspecified\")]\n\t\t\tUnspecified = 0,\n\n\t\t\t/* Expected Status Updates */\n\t\t\t[Description(\"Retry\")]\n\t\t\tRetry = 1,\n\n\t\t\t[Description(\"Queued For Processing\")]\n\t\t\tQueued = 2,\n\n\t\t\t[Description(\"Callback Complete\")]\n\t\t\tCallback = 3,\n\n\t\t\t[Description(\"Summary Saved\")]\n\t\t\tSummarySaved = 4\n\t\t}\n\n\t\tpublic enum StagedMetadataReviewProcessResultStatus\n\t\t{\n\t\t\tPartyNotFound = -10,\n\t\t\tFailedToUpdateAgreementInAOM = -9,\n\t\t\tDocumentNotFound = -8,\n\t\t\tNoItemsProvided = -7,\n\t\t\tFailedToUpdateStagedMetadata = -6,\n\t\t\tFailedToUpdateMetadata = -5,\n\t\t\tFailedToNormalizeMetadataSelectedValue = -4,\n\t\t\tMetadataFieldNotFound = -3,\n\t\t\tStagedMetadataNotFound = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t}\n\n\t\tpublic enum AIStagedMetadataUpdateType\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tMetadataUpdated = 1,\n\t\t\tDocumentRenamed = 2,\n\t\t\tDocumentCheckedIn = 3,\n\t\t\tDocumentEliminated = 4,\n\t\t\tDocumentDeleted = 5,\n\t\t}\n\n\t\tpublic enum SharedStorageUseCase\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tMergeProcess = 1,\n\t\t\tDocCompare = 2,\n\t\t\tExternalReview = 3,\n\t\t\tSfMergeProcess = 4,\n\t\t\tDocPreview = 5\n\t\t}\n\n\t\tpublic enum DataReviewValidationStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t}\n\n\t\tpublic enum DataReviewValidationErrorType\n\t\t{\n\t\t\tIsRequired = -10,\n\t\t\tMaxChars = -9,\n\t\t\tOutsideNumberRange = -8,\n\t\t\tMaxNumber = -7,\n\t\t\tDateMinValue = -6,\n\t\t\tDateMaxValue = -5,\n\t\t\tUnknown = 0,\n\t\t}\n\n\t\tpublic enum WorkerPoolNotifyRecipients\n\t\t{\n\t\t\tAllMembers = 0,\n\t\t\tQueueOwnersOnly = 1,\n\t\t\tNoOne = 2\n\t\t}\n\n\t\t// There are potentially more levels that will be added as needed\n\t\t// These values should be synced with related stored procedures; the sprocs\n\t\t// use the literal values 'Application', 'Default', etc.\n\t\tpublic enum SettingLevel\n\t\t{\n\t\t\tApplication = 0, // No Heirarchy\n\t\t\tDefault = 10,\n\t\t\tAccountType = 15, // ATL-22122 - Do DB work to allow settings to be set on Account Type\n\t\t\tAccount = 20,\n\t\t\tUserAccount = 30,\n\t\t\tPersona = 40\n\t\t}\n\n\t\tpublic enum SortDirection\n\t\t{\n\t\t\tAscending,\n\t\t\tDescending,\n\t\t}\n\n\t\tpublic enum SqlErrorCodes\n\t\t{\n\t\t\tNoLockScanBroken = 601, // See http://support.microsoft.com/kb/815008\n\t\t\tDeadlock = 1205, // See http://www.windowsitpro.com/SQLServer/Articles/ArticleID/8412/pg/2/2.html\n\t\t\tUserDefined = 50000\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum StorageUnit\n\t\t{\n\t\t\tByte = 0,\n\t\t\tKilobyte = 1,\n\t\t\tMegabyte = 2,\n\t\t\tGigabyte = 3\n\t\t}\n\n\t\tpublic enum StartAIBulkAnalysisTransactionsTaskStatus\n\t\t{\n\t\t\tLockedBatch = -6,\n\t\t\tFailedToStartAllSubFolders = -5,\n\t\t\tBatchNotFound = -4,\n\t\t\tNoDocumentFound = -3,\n\t\t\tFailedInsertingAllTransactions = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tBatchInCancelledStatus = 2\n\t\t}\n\n\t\tpublic enum SyncProcessResult\n\t\t{\n\t\t\tError = 0,\n\t\t\tCreated = 1,\n\t\t\tUpdated = 2,\n\t\t\tDeleted = 3,\n\t\t\tNoChange = 4,\n\t\t}\n\n\t\tpublic enum SyncRuleType\n\t\t{\n\t\t\tAttribute = 0,\n\t\t\tFolder = 1\n\t\t}\n\n\t\tpublic enum DeviceApplicationStatus\n\t\t{\n\t\t\t[Description(\"Unknown\")]\n\t\t\tUnknown = -1,\n\t\t\t[Description(\"Active\")]\n\t\t\tActive = 0,\n\t\t\t[Description(\"Revoke Requested\")]\n\t\t\tRevokeRequested = 1,\n\t\t\t[Description(\"Revoke Sent\")]\n\t\t\tRevokeSent = 2,\n\t\t\t[Description(\"Revoked\")]\n\t\t\tRevoked = 3,\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Special system folders.  All system folder types\n\t\t/// should be negative numbers.  The Folder stored procs understand\n\t\t/// these as shortcuts, and can lookup the real folder for it.\n\t\t/// The idea here is a special identifier that be used to indicate\n\t\t/// the current user's inbox, without knowing the current user's inbox's\n\t\t/// folderId.\n\t\t/// </summary>\n\t\tpublic enum SystemFolderType\n\t\t{\n\t\t\tNormal = 0, // Not a system folder\n\t\t\tInbox = -1,\n\t\t\tTrash = -2,\n\t\t\tExpired = -3,\n\t\t\tRoot = -4,\n\t\t\tSF = -5,\n\t\t\tFinalizedWorkflows = -6,\n\t\t\tUsers = -7,\n\t\t\t// Case = -8, Retired type. No longer in use.\n\t\t\tEOS = -9, // external objects storage\n\t\t\tAllAccess = -10,\t// replacement for User Home/Inbox folders - single shared location\n\t\t\tStaticSecurity = -11  //Root folder having Static Security\n\t\t}\n\n\t\tpublic enum AllowPasswordLogin\n\t\t{\n\t\t\tNo = -1,\n\t\t\tDefault = 0,\n\t\t\tYes = 1\n\t\t}\n\n\t\tpublic enum SharedStorageOperationType\n\t\t{\n\t\t\tDefault = 0,\n\t\t\tSaveFileFromStream = 1,\n\t\t\tSaveFileFromStreamTtl = 2,\n\t\t\tDeleteFile = 3,\n\t\t\tFileExists = 4,\n\t\t\tGetChunk = 5,\n\t\t\tGetContentLength = 6,\n\t\t\tGetFileStream = 7,\n\t\t\tGetPartialStream =8\n\t\t}\n\n\t\tpublic enum SearchablePdfStatus\n\t\t{\n\t\t\tFailed = -2,\n\t\t\tNotApplicable = -1,\n\t\t\tNotSaved = 0,\n\t\t\tSaved = 1\n\t\t}\n\n\t\t#endregion\n\t\t#region T\n\t\tpublic enum Tabs\n\t\t{\n\t\t\t[Description(\"Default\"), RoleRequired(UserRole.Guest)]\n\t\t\tNone = 0,\n\t\t\t[Description(\"Dashboard\"), RoleRequired(UserRole.Guest)]\n\t\t\tDashboard = 1,\n\t\t\t[Description(\"My Workflows\"), RoleRequired(UserRole.Enhanced_Guest)]\n\t\t\tWorkflow = 2,\n\t\t\t[Description(\"Address Book\"), RoleRequired(UserRole.NotSet)]\n\t\t\tAddressBook = 4, //Obsolete\n\t\t\t[Description(\"Documents\"), RoleRequired(UserRole.Guest)]\n\t\t\tMyDocuments = 5,\n\t\t\t[Description(\"Reports\"), RoleRequired(UserRole.Enhanced_Guest)]\n\t\t\tReports = 6,\n\t\t\t[Description(\"Preferences\"), RoleRequired(UserRole.Guest)]\n\t\t\tMyAccount = 7,\n\t\t\t[Description(\"Meetings\"), RoleRequired(UserRole.NotSet)]\n\t\t\tMeetings = 8, //Obsolete\n\t\t\t[Description(\"Forms\"), RoleRequired(UserRole.Guest)]\n\t\t\tForms = 9,\n\t\t\t[Description(\"Search\"), RoleRequired(UserRole.Guest)]\n\t\t\tSearch = 10,\n\t\t\t//[Description(\"Records\"), RoleRequired(UserRole.Publishing)]\n\t\t\t//Records = 11,\n\t\t\t[Description(\"Dashboard\"), RoleRequired(UserRole.Guest)]\n\t\t\tNewDashboard = 12,\n\t\t\t[Description(\"Tasks\"), RoleRequired(UserRole.Enhanced_Guest)]\n\t\t\tTasks = 13,\n\t\t\t[Description(\"Admin\"), RoleRequired(UserRole.Admin)]\n\t\t\tAdmin = 14,\n\t\t\t[Description(\"Documents\"), RoleRequired(UserRole.Guest)]\n\t\t\tFiles = 15,\n\t\t\t[Description(\"Contacts\"), RoleRequired(UserRole.Enhanced_Guest)]\n\t\t\tContacts = 16,\n\t\t\t[Description(\"Parties\"), RoleRequired(UserRole.Publishing)]\n\t\t\tParties = 17,\n\t\t\t[Description(\"Agreements\"), RoleRequired(UserRole.Guest)]\n\t\t\tAgreements = 18,\n\t\t\t[Description(\"Sitemap\"), RoleRequired(UserRole.Guest)]\n\t\t\tSitemap = 19\n\t\t}\n\n\t\tpublic enum TabVisibility\n\t\t{\n\t\t\tShow = 0,\n\t\t\tMenuOnly = 1,\n\t\t\tHide = 2\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum TaskCompletionResult\n\t\t{\n\t\t\tCompleted,\n\t\t\tNoAccessError,\n\t\t\tAlreadyCompletedError,\n\t\t\tValidationError,\n\t\t\tOtherError\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum TaskManagementGridViews\n\t\t{\n\t\t\tMY_TASKS = 0,\n\t\t\tALL_TASKS = 1,\n\t\t\tTASK_GROUP_TASKS = 2,\n\t\t\tINDIVIDUAL_TASK_GROUP_TASKS = 3,\n\t\t\tMANAGED_USER_TASKS = 4,\n\t\t\tINDIVIDUAL_MANAGED_USER_TASKS = 5,\n\t\t\tORPHANED_TASKS = 6\n\t\t}\n\n\t\tpublic enum TaskInitiator\n\t\t{\n\t\t\tUI = 0,\n\t\t\tWorkflow = 1,\n\t\t\tApi = 2\n\t\t}\n\n\t\tpublic enum CounterType\n\t\t{\n\t\t\tUnkown = 0,\n\t\t\tApiRequests = 1,\n\t\t\tApiByEndpointRequests = 2\n\t\t}\n\n\t\tpublic enum TwoFactorAuthentication\n\t\t{\n\t\t\tDisabled = 1,\n\t\t\tGoogle = 2\n\t\t}\n\n\t\tpublic enum TlsProvider\n\t\t{\n\t\t\tLoadBalancer = 1,\n\t\t\tIIS = 2,\n\t\t\tSelfHost = 3\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum TrackedChangesStatus\n\t\t{\n\t\t\tNotApplicable = -1,\n\t\t\tUnknown = 0,\n\t\t\tNoRevisions = 1,\n\t\t\tRevisionsExist = 2,\n\t\t\tPasswordProtected = 3\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum TrackedContentStatus\n\t\t{\n\t\t\tFailed = -2,\n\t\t\tNotApplicable = -1,\n\t\t\tNotExtracted = 0,\n\t\t\tExtracted = 1\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum TranslationUpdateStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tDownloaded = 0,\n\t\t\tUploaded = 1,\n\t\t\tProcessingUpload = 2,\n\t\t\tImported = 3,\n\t\t\tPublishing = 4,\n\t\t\tPublished = 5\n\t\t}\n\n\t\tpublic enum TranslationUpdateLogAction\n\t\t{\n\t\t\tNoAction = 0,\n\t\t\tAdd = 1,\n\t\t\tEdit = 2,\n\t\t\tDelete = 3\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum TranslationExportFileType\n\t\t{\n\t\t\tXLF = 0,\n\t\t\tCSV = 1\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Int value matters for export/import. Database uses string.\n\t\t/// </summary>\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum TranslationNamespace\n\t\t{\n\t\t\tAll = -1,\n\t\t\tNone = 0,\n\t\t\tAttributes = 1,\n\t\t\tDocumentGeneration = 2\n\t\t}\n\n\t\t[EnumJavaScriptResource(true)]\n\t\t[JsonConverter(typeof(StringEnumConverter))]\n\t\tpublic enum TimeUnit\n\t\t{\n\t\t\tDays = 1,\n\t\t\tWeeks = 2,\n\t\t\tMonths = 3,\n\t\t\tYears = 4\n\t\t}\n\n\t\t#endregion\n\t\t#region U\n\n\t\tpublic enum UpdateBatchStatus\n\t\t{\n\t\t\tFailed = -2,\n\t\t\tBatchNotFound = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tEmptyBatchName = 2\n\t\t}\n\n\t\t/// <summary>\n\t\t/// DO NOT USE Enums.UserRole.ToString()  Use Enums.GetName instead.\n\t\t/// This allows us to play with the Enums.UserRole names without having to\n\t\t/// redo large portions of code all the time.\n\t\t///\n\t\t/// NOTE: EntitySelectionAttribute (and maybe others?) relies on the fact that roles with more privs have a\n\t\t///\t      lower number.\n\t\t///\n\t\t/// NOTE: SalesforceUserSync uses TryGetValueFromDescription() below to get enum from description attribute value\n\t\t/// </summary>\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum UserRole\n\t\t{\n\t\t\tNotSet = int.MinValue,\n\t\t\tDeleted = -1,\n\t\t\tPrimary = 0, // Super Admin\n\t\t\tAdmin = 1, // User Admin\n\t\t\tPublishing = 2, // Full Subscriber\n\t\t\tEnhanced_Guest = 4, // Limited Subscriber\n\t\t\tGuest = 99, // Guest\n\t\t}\n\n\t\tpublic enum UserRoleNameType\n\t\t{\n\t\t\tClassic = 0,\n\t\t\tCLM = 1,\n\t\t\tMixedMode = 2\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Status of Uploads\n\t\t/// </summary>\n\t\tpublic enum UploadStatus\n\t\t{\n\t\t\tFailure = 0,\n\t\t\tSuccess = 1,\n\t\t\tInProgress = 2\n\t\t}\n\n\t\tpublic enum UriType\n\t\t{\n\t\t\tSearch,\n\t\t\tRegular,\n\t\t\tBaseCollection\n\t\t}\n\n\t\tpublic enum RequestOriginListType\n\t\t{\n\t\t\tBlacklist = 1,\n\t\t\tWhitelist = 2\n\t\t}\n\n\t\tpublic enum RequestOriginRestrictionTarget\n\t\t{\n\t\t\tClickjackProtection = 1\n\t\t}\n\n\t\tpublic enum UserConsentType\n\t\t{\n\t\t\tIdeasPortal\n\t\t}\n\n\t\tpublic enum UxIconset\n\t\t{\n\t\t\tNone = 0,\n\t\t\tUX,\n\t\t\tAtlas,\n\t\t\tFiletypes,\n\t\t\tPrism,\n\t\t\tNorthstar\n\t\t}\n\n\t\tpublic enum UpsertRuleModelAndMappingResultStatus\n\t\t{\n\t\t\tMappingUidNotSpecified = -4,\n\t\t\tRuleModelUidNotSpecified = -3,\n\t\t\tRulesConfigInUse = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1\n\t\t}\n\n\t\tpublic enum UpsertGroupMappingResultStatus\n\t\t{\n\t\t\tRulesConfigNotFound = -3,\n\t\t\tRulesConfigInUse = -2,\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1\n\t\t}\n\n\t\tpublic enum UpsertRulesConfigErrorType\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tRulesConfigWithNameAlreadyExists = 1,\n\t\t\tEmptyRulesConfigName = 2,\n\t\t\tRulesConfigInUse = 3,\n\t\t\tRulesConfigNotFound = 4\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum UserGroupMigrationStatus\n\t\t{\n\t\t\tFailure = -1,\n\t\t\tNotSet = 0,\n\t\t\tInProgress = 2,\n\t\t\tDsMappingComplete = 3,\n\t\t\tComplete = 4,\n\t\t\tRollback = 5\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum UserGroupMigrationUserType\n\t\t{\n\t\t\tSfdc = 1, // SFDC Users\n\t\t\tClm = 2   //CLM only users\n\t\t}\n\n\t\tpublic enum UnifiedRepositoryIngestionReason\n\t\t{\n\t\t\tUnknown = 0,\n\t\t\tAttributeUpdated = 1,\n\t\t\tDocumentSigned = 2\n\t\t}\n\n\t\tpublic enum UnifiedRepositoryIngestionStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tInProgress = 2,\n\t\t\tNotEnabled = 3,\n\t\t\tDocumentNotIngestedInDms = 4,\n\t\t\tInValidDocumentVersionFound = 5,\n\t\t\tDmsWritesNotEnabled = 6,\n\t\t\tDocumentExtensionNotSupportedForIAMIngestion = 8,\n\t\t\tDocumentCopyProcessFailed = 9,\n\t\t\tUnlock = 10,\n\t\t\tFailedAfterUnlockMaxAttemptsReached = 11,\n\t\t\tInProgressHistoricalIngestionIsNotEnabled = 12,\n\t\t\tCompletionAttributeNotDefined = 13,\n\t\t\tDocumentNotFound = 14,\n\t\t\tFileDataNotFound = 15\n\t\t}\n\n\t\tpublic enum UnifiedRepositoryAttributeSyncStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t}\n\n\t\tpublic enum UnifiedRepositoryHistorySyncStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tHistorySyncDisabled = 2\n\t\t}\n\n\t\tpublic enum UnifiedRepositoryDmsMetadataCreationStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t}\n\n\t\tpublic enum UnifiedRepositoryDeletionStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tDeleted = 1,\n\t\t}\n\n\t\tpublic enum UnifiedRepositoryDocumentMoveProcessingStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccessDeletedFromUr = 1,\n\t\t\tSuccessQueuedForIngestion = 2,\n\t\t\tNotEnabled = 3,\n\t\t\tNotSupported = 4,\n\t\t\tNotCompleted = 5,\n\t\t\tAlreadyDeletedInUr = 6,\n\t\t\tNotPreviouslyCompleted = 7,\n\t\t\tNotUrDeleted = 8,\n\t\t\tNotFound = 9,\n\t\t\tUnableToTakeReservation = 10,\n\t\t}\n\n\t\tpublic enum DMSRuntimeSyncProcessingStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tNotEnabled = 2,\n\t\t\tNotFound = 3,\n\t\t\tNotApplicable = 4,\n\t\t\tUnableToTakeReservation = 5,\n\t\t}\n\n\t\tpublic enum UnifiedRepositoryFolderMoveProcessingStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tNotEnabled = 2,\n\t\t\tNoFolder = 3,\n\t\t\tUnableToTakeReservation = 4,\n\t\t}\n\n\t\t#endregion\n\t\t#region V\n\t\t/// <summary>\n\t\t/// These are virtual folders in the tree hierarchy.  They do not belong in the SystemFolderType enumeration\n\t\t/// though, because the sprocs don't know about them.  However, these values should probably not conflict with\n\t\t/// the values in SystemFolderType, so we start at -1000 and go lower.\n\t\t/// </summary>\n\t\tpublic enum VirtualFolderType\n\t\t{\n\t\t\tNormal = 0,\n\t\t\tRecentlyAccessedDocuments = -1000,\n\t\t\tLastSearchResults = -1001,\n\t\t\tError = -1002,\n\t\t\tRecordsRoot = -1003,\n\t\t}\n\n\t\tpublic enum ValidationTypes\n\t\t{\n\t\t\tEmail,\n\t\t\tPhoneNumber,\n\t\t\tURL,\n\t\t\tRegex\n\t\t}\n\t\t#endregion\n\n\t\t#region W\n\n\t\tpublic enum SealProcessingStatus\n\t\t{\n\t\t\tDocumentFailed = -5,\n\t\t\tJobFailed = -4,\n\t\t\tFileNotSupported = -3,\n\t\t\tUnknown = -2,\n\t\t\tFailed = -1,\n\t\t\tPending = 0,\n\t\t\tSuccess = 1,\n\t\t\tStarted = 2\n\t\t}\n\n\t\tpublic enum SealScorecardProcessingStatus\n\t\t{\n\t\t\tExtractionsNotFound = -6,\n\t\t\tInvalidTaskDetails = -5,\n\t\t\tFileNotSupported = -4,\n\t\t\tDigitalAppNotFound = -3,\n\t\t\tUnknown = -2,\n\t\t\tFailed = -1,\n\t\t\tPending = 0,\n\t\t\tSuccess = 1,\n\t\t\tStarted = 2,\n\t\t}\n\n\t\tpublic enum SealGetDatabagProcessingStatus\n\t\t{\n\t\t\tUnknown = -2,\n\t\t\tFailed = -1,\n\t\t\tPending = 0,\n\t\t\tSuccess = 1,\n\t\t\tNoSealBaseUrl = 2,\n\t\t\tNativeFileSizeGreaterThanMax = 3,\n\t\t}\n\n\t\tpublic enum ClauseSmartContractProcessingStatus\n\t\t{\n\t\t\tUnknown = -2,\n\t\t\tFailed = -1,\n\t\t\tPending = 0,\n\t\t\tSuccess = 1,\n\t\t\tUserNotFound = 2,\n\t\t\tDocumentNotFound = 3,\n\t\t\tContractAlreadySigned = 4,\n\t\t\tClauseOrganizationNotFound = 5,\n\t\t\tTemplateParameterNotFound = 6,\n\t\t\tUnableToParseTemplateParameterValue = 7\n\t\t}\n\n\t\tpublic enum TrackedContentExtractionProcessingStatus\n\t\t{\n\t\t\tUnknown = -2,\n\t\t\tFailed = -1,\n\t\t\tPending = 0,\n\t\t\tSuccess = 1,\n\t\t\tNativeFileSizeGreaterThanMax = 2,\n\t\t}\n\n\t\tpublic enum SfEmailProcessingStatus\n\t\t{\n\t\t\tUnknown = -2,\n\t\t\tFailed = -1,\n\t\t\tPending = 0,\n\t\t\tSuccess = 1\n\t\t}\n\n\t\tpublic enum CommentsReconcileProcessingStatus\n\t\t{\n\t\t\tUnknown = -2,\n\t\t\tFailed = -1,\n\t\t\tPending = 0,\n\t\t\tSuccess = 1,\n\t\t\tDocumentNotFound = 2,\n\t\t\tCommentSelectionsNotFound = 3,\n\t\t\tWaitingForPreviousReconcileTask = 4,\n\t\t}\n\n\t\tpublic enum GlyphReconciliationStatus\n\t\t{\n\t\t\tUnknown = -2,\n\t\t\tFailed = -1,\n\t\t\tPending = 0,\n\t\t\tSuccess = 1,\n\t\t\tNotApplicable = 2,\n\t\t\tDocumentNotFound = 3,\n\t\t\tInvalidSelectionType = 4\n\t\t}\n\n\t\tpublic enum GlyphExtractionTaskStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnknown = 0,\n\t\t\tSuccess = 1,\n\t\t\tWaitingForPdfCreation = 2,\n\t\t\tWaitingForTransientPdf = 3,\n\t\t\tWaitingForReservation = 4\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum NpsSurveySetting\n\t\t{\n\t\t\tDisable = 0,\n\t\t\tEnable = 1,\n\t\t\tDebug = 2\n\t\t}\n\n\t\tpublic enum WorkflowEngine\n\t\t{\n\t\t\tNone = 0,\n\t\t\tLegacyWasScarry = 1,\t\t// Boo!\n\t\t\tWINS = 2,\t\t\t// Yay!\n\t\t\tDefault = None\n\t\t}\n\n\t\tpublic enum WorkflowParentStatus\n\t\t{\n\t\t\tNone = 0,\n\t\t\tFailed = 1,\n\t\t\tAborted = 2,\n\t\t\tSuspended = 3\n\t\t}\n\n\t\tpublic enum WorkflowParseStatus\n\t\t{\n\t\t\tFailed = -1,\n\t\t\tUnparsed = 0,\n\t\t\tLiteral,\n\t\t\tExpression\n\t\t}\n\n\t\tpublic enum WorkflowRevisionStatus\n\t\t{\n\t\t\tDeleted = -1,\n\t\t\tUnpublished = 0,\n\t\t\tPublished = 1,\n\t\t\tSuspended = 2,\n\t\t}\n\n\t\tpublic enum WorkflowDefinitionType\n\t\t{\n\t\t\tUser = 0,\n\t\t\tPredefined = 1\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum DateRangeType\n\t\t{\n\t\t\tToday = 0,\n\t\t\tLastWeek = 1,\n\t\t\tThisWeek = 2,\n\t\t\tLastMonth = 3,\n\t\t\tThisMonth = 4,\n\t\t\tLastYear = 5,\n\t\t\tThisYear = 6,\n\t\t\tRolling = 7,\n\t\t\tCustom = 8,\n\t\t\tAllTime = 9,\n\t\t\tBeforeToday = 10,\n\t\t\tYearToDate = 11 // ThisYear except future\n\t\t}\n\n\t\t[EnumJavaScriptResource(false)]\n\t\tpublic enum WorkflowStatus\n\t\t{\n\t\t\tAborted = 0,\n\t\t\tExecuting = 1,\n\t\t\tCompleted = 2,\n\t\t\tFailed = 3,\n\t\t\tPaused = 4\n\t\t}\n\n\t\t// Used for approval workflows\n\t\tpublic enum WorkFlowStepActionType\n\t\t{\n\t\t\tEdit = 1,\n\t\t\tApprove = 2,\n\t\t\tUpdateVariable = 3,\n\t\t\tFinalize = 10\n\t\t}\n\n\t\tpublic enum WorkflowVariableType\n\t\t{\n\t\t\tUnknown = -1,\n\t\t\tString = 0,\n\t\t\tNumber = 1,\n\t\t\tDate = 2,\n\t\t\tList = 3,\n\t\t\tUser = 4,\n\t\t\tXml = 5,\n\t\t\tGuid = 6,\n\t\t}\n\n\t\tpublic enum WorkflowComment\n\t\t{\n\t\t\t[Description(\"Yes\")]\n\t\t\tYes = 0,\n\t\t\t[Description(\"No\")]\n\t\t\tNo = 1,\n\t\t\t[Description(\"Required\")]\n\t\t\tRequired = 2,\n\n\t\t\t//Existing workflows have true/false values\n\t\t\tTrue = Yes,\n\t\t\tFalse = No,\n\t\t}\n\n\t\tpublic enum WopiActionType\n\t\t{\n\t\t\tview,\n\t\t\tedit,\n\t\t\teditnew,\n\t\t\tconvert,\n\t\t\tgetinfo,\n\t\t\tinteractivepreview,\n\t\t\tmobileView,\n\t\t\tembedview,\n\t\t\tembededit,\n\t\t\timagepreview,\n\t\t\tformsubmit,\n\t\t\tformedit,\n\t\t\trest,\n\t\t\tpresent,\n\t\t\tpresentservice,\n\t\t\tattend,\n\t\t\tattendservice,\n\t\t\tsyndicate,\n\t\t\tlegacywebservice,\n\t\t\trtc,\n\t\t\tpreloadedit,\n\t\t\tpreloadview,\n\t\t\tcollab\n\t\t}\n\n\t\tpublic enum WopiRequirement\n\t\t{\n\t\t\tupdate,\n\t\t\tlocks,\n\t\t\tcobalt,\n\t\t\tcontainers\n\t\t}\n\n\t\tpublic enum WopiExtension\n\t\t{\n\t\t\tnone,\n\t\t\tods,\n\t\t\txls,\n\t\t\txlsb,\n\t\t\txlsm,\n\t\t\txlsx,\n\t\t\tone,\n\t\t\tonetoc2,\n\t\t\todp,\n\t\t\tpot,\n\t\t\tpotm,\n\t\t\tpotx,\n\t\t\tpps,\n\t\t\tppsm,\n\t\t\tppsx,\n\t\t\tppt,\n\t\t\tpptm,\n\t\t\tpptx,\n\t\t\tdoc,\n\t\t\tdocm,\n\t\t\tdocx,\n\t\t\tdot,\n\t\t\tdotm,\n\t\t\tdotx,\n\t\t\todt,\n\t\t\tpdf,\n\t\t\tonepkg,\n\t\t\twopitest,\n\t\t\tcsv\n\t\t}\n\n\t\tpublic enum WopiPlaceholderType\n\t\t{\n\t\t\tUNSUPPORTED,\n\t\t\tBUSINESS_USER,\n\t\t\tDC_LLCC,\n\t\t\tDISABLE_ASYNC,\n\t\t\tDISABLE_BROADCAST,\n\t\t\tEMBEDDED,\n\t\t\tFULLSCREEN,\n\t\t\tPERFSTATS,\n\t\t\tRECORDING,\n\t\t\tTHEME_ID,\n\t\t\tUI_LLCC\n\t\t}\n\n\t\tpublic enum WopiApp\n\t\t{\n\t\t\tExcel,\n\t\t\tOneNote,\n\t\t\tPowerPoint,\n\t\t\tVisio,\n\t\t\tWopiTest,\n\t\t\tWord,\n\t\t\tWordPdf\n\t\t}\n\n\t\tpublic enum RequestType\n\t\t{\n\t\t\tNone,\n\n\t\t\tCheckFileInfo,\n\t\t\tPutRelativeFile,\n\n\t\t\tLock,\n\t\t\tUnlock,\n\t\t\tRefreshLock,\n\t\t\tUnlockAndRelock,\n\t\t\tGetLock, //not yet used but will be added according to WOPI documentation\n\n\t\t\tExecuteCobaltRequest,\n\n\t\t\tDeleteFile,\n\t\t\tReadSecureStore,\n\t\t\tGetRestrictedLink,\n\t\t\tRevokeRestrictedLink,\n\n\t\t\tCheckFolderInfo,\n\n\t\t\tGetFile,\n\t\t\tPutFile,\n\t\t\tRenameFile,\n\t\t\tPutUserInfo,\n\t\t\tEnumerateAncestors,\n\t\t}\n\n\t\t#endregion\n\n\n\t\t#region WINS\n\t\t// workflow engine\n\n\t\t///<summary>\n\t\t/// This list is used for the status of both\n\t\t/// a workflow instance and a workflow step within such\n\t\t///</summary>\n\t\tpublic enum WorkflowStepStatus\n\t\t{\n\t\t\t[StringValue(\"Execution Pending\")]\n\t\t\tPending = 0,\t// -- 0: Pending start / unstarted\n\t\t\t[StringValue(\"Executing\")]\n\t\t\tExecuting = 1,\t// -- 1: Executing / in progress\n\t\t\t[StringValue(\"Waiting\")]\n\t\t\tWaiting = 2,\t// -- 2: Waiting\n\t\t\t[StringValue(\"Completed\")]\n\t\t\tCompleted = 3,\t// -- 3: Completed successfully\n\t\t\t[StringValue(\"Paused\")]\n\t\t\tPaused = 4,\t\t// -- 4: Paused\n\t\t\t[StringValue(\"Failed\")]\n\t\t\tFailed = -1,\t// -- -1: Failed with errors\n\t\t\t[StringValue(\"Aborted\")]\n\t\t\tAborted = -2,\t// -- -2: Aborted / killed\n\t\t}\n\n\t\tpublic enum WorkflowStepActivityStatus\n\t\t{\n\t\t\tWaitingAssigned = 0,\t\t// -- 0: Waiting, assigned (AssignedUserAccountUid must be non-NULL)\n\t\t\tWaitingUnassigned = 1,\t\t// -- 1: Waiting, unassigned (AssignedUserAccountUid must be NULL, SecurityGroupId must be non-NULL)\n\t\t\tOwnership = 2,\t\t\t\t// -- 2: Ownership / work started (we do not currently use this, but may in the future)\n\t\t\tCompletedByUser = 3,\t\t// -- 3: Completed by user\n\t\t\tCompletedByStep = 4,\t\t// -- 4: Completed by step (eg, if three people were assigned to a step, you get three activity records;\n\t\t\t//\t\t\tif the step completes after only one is done, the other two would receive this status)\n\t\t\tIncomplete = 5, // -- 5: Work not completed due to rate limiting\n\t\t\tInvalid = 6, // -- 6: Item invalid, should not be processed\n\t\t}\n\n\t\tpublic enum WorkflowAbortNotificationType\n\t\t{\n\t\t\tNone,\n\t\t\tFiftyPercent,\n\t\t\tTwentyFivePercent,\n\t\t\tTenPercent,\n\t\t\tOneMonth,\n\t\t\tOneWeek,\n\t\t\tOneDay\n\t\t}\n\n\t\tpublic enum WorkflowThrottledStatus\n\t\t{\n\t\t\tNotThrottled = 0,\n\t\t\tThrottledDueToExpressionRateLimit = 1,\n\t\t\tThrottledDueToSmallBenRateLimit = 2,\n\t\t}\n\n\t\t#endregion WINS\n\n\t\t#region XY\n\n\t\tpublic enum XMLDataSource\n\t\t{\n\t\t\tDocument = 0,\n\t\t\tDocumentContent = 1,\n\t\t\tFolder = 2,\n\t\t\tString = 3,\n\t\t\tSharedStorage = 4\n\t\t}\n\n\t\tpublic enum YesNoDefault\n\t\t{\n\t\t\tYes = 1,\n\t\t\tNo = 0,\n\t\t\tDefault = -1\n\t\t}\n\n\t\tpublic enum DefaultDocumentsView\n\t\t{\n\t\t\tGrid = 0,\n\t\t\tTiles = 1\n\t\t}\n\n\t\t#endregion\n\n\t\t#region helper functions\n\n\t\tpublic const string ENUM_RESOURCE_FORMAT = \"enum_{0}_{1}\"; // 0 is the name of the enum 1 is a member: enum_YesNoDefault_Yes\n\t\t/// <summary>\n\t\t/// Returns the string defined in the given resource manager as \"enum_EnumName_FieldName\". For example \"enum_UserRole_Primary\".\n\t\t/// Falls back to GetName(Enum).\n\t\t/// </summary>\n\t\tpublic static string GetLocalizedName(Enum e, ResourceManager rm)\n\t\t{\n\t\t\tstring enumResourceKeyName = string.Format(ENUM_RESOURCE_FORMAT, e.GetType().Name, e);\n\t\t\tstring loc = null;\n\t\t\tif (null != rm)\n\t\t\t{\n\t\t\t\tloc = rm.GetString(enumResourceKeyName);\n\t\t\t}\n\t\t\tif (string.IsNullOrEmpty(loc))\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\t// Other projects (reporting) can't really reference these resources, so the attempt will throw. We silently ignore it\n\t\t\t\t\t// and let it fall through and pick up the string from the description attribute of the enum.\n\t\t\t\t\tloc = Resources.CoreTypes.ResourceManager.GetString(enumResourceKeyName);\n\t\t\t\t}\n\t\t\t\tcatch\n\t\t\t\t{\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif (!string.IsNullOrEmpty(loc))\n\t\t\t\treturn loc;\n\n\t\t\t// Just adding a track of the enums not found, we should check the logs for '[I18N|Error]' instances\n\t\t\t// Default File: wherever/san/logs/atlas/{MachineName}/app.txt\n\t\t\t_log.WarnNoPII(\"[I18N|Error] EnumLocalizedName not found: \" + enumResourceKeyName);\n\t\t\treturn GetName(e);\n\t\t}\n\n\t\t//////public static SortedList<string, int> GetLocalizedNames(Type enumType, ResourceManager rm)\n\t\t//////{\n\t\t//////    SortedList<string, int> nv = new SortedList<string, int>();\n\t\t//////    MemberInfo[] members = enumType.GetMembers(BindingFlags.DeclaredOnly | BindingFlags.Public | BindingFlags.Static);\n\t\t//////    for(int ndx = 0; ndx < members.Length; ndx++)\n\t\t//////    {\n\t\t//////        Enum e = (Enum) Enum.Parse(enumType, members[ndx].Name);\n\t\t//////        nv.Add(GetLocalizedName(e, rm), Convert.ToInt32(e));\n\t\t//////    }\n\t\t//////    return nv;\n\t\t//////}\n\n\t\t/// <summary>\n\t\t/// Returns a sorted list all the constants defined in an enum. The key is the name, on which it is sorted\n\t\t/// and the value is the int for the constant.\n\t\t/// Can filter the return list on the enum value based on the predicate.\n\t\t/// Good for drop down list on the UI\n\t\t/// </summary>\n\t\tpublic static SortedList<string, int> GetLocalizedNames(Type enumType, ResourceManager rm, Func<int, bool> predicate = null)\n\t\t{\n\t\t\tSortedList<string, int> nv = new SortedList<string, int>();\n\t\t\tMemberInfo[] members = enumType.GetMembers(BindingFlags.DeclaredOnly | BindingFlags.Public | BindingFlags.Static);\n\t\t\tfor (int ndx = 0; ndx < members.Length; ndx++)\n\t\t\t{\n\t\t\t\tEnum e = (Enum)Enum.Parse(enumType, members[ndx].Name);\n\t\t\t\tint intval = Convert.ToInt32(e);\n\t\t\t\tif (null != predicate && !predicate.Invoke(intval))\n\t\t\t\t\tcontinue;\n\t\t\t\tnv.Add(GetLocalizedName(e, rm), intval);\n\t\t\t}\n\t\t\treturn nv;\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Use reflection to find if the Description attribute was made for this enum value.\n\t\t/// If one exists, return that value.  This is what allows us to rename Enums.UserRole\n\t\t/// members willynilly.\n\t\t/// If none exists, then we return the simple ToString.\n\t\t/// </summary>\n\t\tpublic static string GetName(Enum e)\n\t\t{\n\t\t\t// Use reflection to find the appropriate Description attribute.\n\t\t\t// If no description attribute exists, just return role.ToString().\n\t\t\t// Concept taken from here: http://blogs.msdn.com/abhinaba/archive/2005/10/20/483000.aspx\n\t\t\tMemberInfo[] memInfo = e.GetType().GetMember(e.ToString());\n\t\t\tif (memInfo != null && memInfo.Length > 0)\n\t\t\t{\n\t\t\t\tobject[] attrs = memInfo[0].GetCustomAttributes(typeof(DescriptionAttribute), false);\n\t\t\t\tif (attrs != null && attrs.Length > 0) return ((DescriptionAttribute)attrs[0]).Description;\n\t\t\t}\n\n\t\t\treturn e.ToString();\n\t\t}\n\n\t\tpublic static Dictionary<UserRoleNameType, List<string>> GetAllRoleStrings()\n\t\t{\n\t\t\tvar dictionary = new Dictionary<UserRoleNameType, List<string>>();\n\t\t\tdictionary.Add(UserRoleNameType.Classic, ClassicUserRoleStrings().Values.ToList());\n\t\t\tdictionary.Add(UserRoleNameType.CLM, ClmUserRoleStrings().Values.ToList());\n\t\t\treturn dictionary;\n\t\t}\n\n\t\tpublic static string GetUserRoleString(UserRole userRole, UserRoleNameType nameType, CultureInfo cultureInfo = null)\n\t\t{\n\t\t\tDictionary<UserRole, string> dictionary = new Dictionary<UserRole, string>();\n\t\t\tswitch (nameType)\n\t\t\t{\n\t\t\t\tcase UserRoleNameType.Classic:\n\t\t\t\t\tdictionary = ClassicUserRoleStrings(cultureInfo);\n\t\t\t\t\tbreak;\n\t\t\t\tcase UserRoleNameType.CLM:\n\t\t\t\t\tdictionary = ClmUserRoleStrings(cultureInfo);\n\t\t\t\t\tbreak;\n\t\t\t\tcase UserRoleNameType.MixedMode:\n\t\t\t\t\tdictionary = ClmMixedModeUserRoleStrings(cultureInfo);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (dictionary.ContainsKey(userRole))\n\t\t\t{\n\t\t\t\treturn dictionary[userRole];\n\t\t\t}\n\n\t\t\treturn string.Empty;\n\t\t}\n\n\t\tpublic static string GetUserRoleStringPlural(UserRole userRole, UserRoleNameType nameType)\n\t\t{\n\t\t\tDictionary<UserRole, string> dictionary = new Dictionary<UserRole, string>();\n\t\t\tswitch (nameType)\n\t\t\t{\n\t\t\t\tcase UserRoleNameType.Classic:\n\t\t\t\t\tdictionary = ClassicUserRoleStringsPlural();\n\t\t\t\t\tbreak;\n\t\t\t\tcase UserRoleNameType.CLM:\n\t\t\t\t\tdictionary = ClmUserRoleStringsPlural();\n\t\t\t\t\tbreak;\n\t\t\t\tcase UserRoleNameType.MixedMode:\n\t\t\t\t\tdictionary = ClmMixedModeUserRoleStringsPlural();\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (dictionary.ContainsKey(userRole))\n\t\t\t{\n\t\t\t\treturn dictionary[userRole];\n\t\t\t}\n\n\t\t\treturn string.Empty;\n\t\t}\n\n\t\tprivate static Dictionary<UserRole, string> ClassicUserRoleStrings(CultureInfo cultureInfo = null)\n\t\t{\n\t\t\treturn new Dictionary<UserRole, string>\n\t\t\t{\n\t\t\t\t{UserRole.Primary, Resources.CoreTypes.ResourceManager.GetString(\"ClassicPrimery\", cultureInfo ?? CultureInfo.CurrentUICulture) },\n\t\t\t\t{UserRole.Admin, Resources.CoreTypes.ResourceManager.GetString(\"ClassicAdmin\", cultureInfo ?? CultureInfo.CurrentUICulture)},\n\t\t\t\t{UserRole.Publishing, Resources.CoreTypes.ResourceManager.GetString(\"ClassicPublishing\", cultureInfo ?? CultureInfo.CurrentUICulture)},\n\t\t\t\t{UserRole.Enhanced_Guest, Resources.CoreTypes.ResourceManager.GetString(\"ClassicEnhancedGuest\", cultureInfo ?? CultureInfo.CurrentUICulture)},\n\t\t\t\t{UserRole.Guest, Resources.CoreTypes.ResourceManager.GetString(\"ClassicGuest\", cultureInfo ?? CultureInfo.CurrentUICulture)}\n\t\t\t};\n\t\t}\n\n\t\tprivate static Dictionary<UserRole, string> ClmUserRoleStrings(CultureInfo cultureInfo = null)\n\t\t{\n\t\t\treturn new Dictionary<UserRole, string>\n\t\t\t{\n\t\t\t\t{UserRole.Primary, Resources.CoreTypes.ResourceManager.GetString(\"CLMPrimery\", cultureInfo ?? CultureInfo.CurrentUICulture)},\n\t\t\t\t{UserRole.Publishing, Resources.CoreTypes.ResourceManager.GetString(\"CLMPublishing\", cultureInfo ?? CultureInfo.CurrentUICulture)},\n\t\t\t\t{UserRole.Guest, Resources.CoreTypes.ResourceManager.GetString(\"CLMGuest\", cultureInfo ?? CultureInfo.CurrentUICulture)}\n\t\t\t};\n\t\t}\n\n\t\tprivate static Dictionary<UserRole, string> ClmMixedModeUserRoleStrings(CultureInfo cultureInfo = null)\n\t\t{\n\t\t\treturn new Dictionary<UserRole, string>\n\t\t\t{\n\t\t\t\t{UserRole.Primary, Resources.CoreTypes.ResourceManager.GetString(\"CLMPrimery\", cultureInfo ?? CultureInfo.CurrentUICulture)},\n\t\t\t\t{UserRole.Admin, Resources.CoreTypes.ResourceManager.GetString(\"ClassicAdmin\", cultureInfo ?? CultureInfo.CurrentUICulture)},\n\t\t\t\t{UserRole.Publishing, Resources.CoreTypes.ResourceManager.GetString(\"CLMPublishing\", cultureInfo ?? CultureInfo.CurrentUICulture)},\n\t\t\t\t{UserRole.Enhanced_Guest, Resources.CoreTypes.ResourceManager.GetString(\"ClassicEnhancedGuest\", cultureInfo ?? CultureInfo.CurrentUICulture)},\n\t\t\t\t{UserRole.Guest, Resources.CoreTypes.ResourceManager.GetString(\"CLMGuest\", cultureInfo ?? CultureInfo.CurrentUICulture)}\n\t\t\t};\n\t\t}\n\n\t\tprivate static Dictionary<UserRole, string> ClassicUserRoleStringsPlural()\n\t\t{\n\t\t\treturn new Dictionary<UserRole, string>\n\t\t\t{\n\t\t\t\t{UserRole.Primary, Resources.CoreTypes.ClassicPrimeryPlural},\n\t\t\t\t{UserRole.Admin, Resources.CoreTypes.ClassicAdminPlural},\n\t\t\t\t{UserRole.Publishing, Resources.CoreTypes.ClassicPublishingPlural},\n\t\t\t\t{UserRole.Enhanced_Guest, Resources.CoreTypes.ClassicEnhancedGuestPlural},\n\t\t\t\t{UserRole.Guest, Resources.CoreTypes.ClassicGuestPlural}\n\t\t\t};\n\t\t}\n\n\t\tprivate static Dictionary<UserRole, string> ClmUserRoleStringsPlural()\n\t\t{\n\t\t\treturn new Dictionary<UserRole, string>\n\t\t\t{\n\t\t\t\t{UserRole.Primary, Resources.CoreTypes.CLMPrimeryPlural},\n\t\t\t\t{UserRole.Publishing, Resources.CoreTypes.CLMPublishingPlural},\n\t\t\t\t{UserRole.Guest, Resources.CoreTypes.CLMGuestPlural}\n\t\t\t};\n\t\t}\n\n\t\tprivate static Dictionary<UserRole, string> ClmMixedModeUserRoleStringsPlural()\n\t\t{\n\t\t\treturn new Dictionary<UserRole, string>\n\t\t\t{\n\t\t\t\t{UserRole.Primary, Resources.CoreTypes.CLMPrimeryPlural},\n\t\t\t\t{UserRole.Admin, Resources.CoreTypes.ClassicAdminPlural},\n\t\t\t\t{UserRole.Publishing, Resources.CoreTypes.CLMPublishingPlural},\n\t\t\t\t{UserRole.Enhanced_Guest, Resources.CoreTypes.ClassicEnhancedGuestPlural},\n\t\t\t\t{UserRole.Guest, Resources.CoreTypes.CLMGuestPlural}\n\t\t\t};\n\t\t}\n\n\t\tpublic static ActionType[] DocumentActionTypes = {\n\t\t\tActionType.AddWatchedDocuments,\n#pragma warning disable CS0618 // Type or member is obsolete\n\t\t\tActionType.AdvancedMarkup,\n#pragma warning restore CS0618 // Type or member is obsolete\n#pragma warning disable CS0618 // Type or member is obsolete\n\t\t\tActionType.AdvancedMarkupCreated,\n#pragma warning restore CS0618 // Type or member is obsolete\n#pragma warning disable CS0618 // Type or member is obsolete\n\t\t\tActionType.AdvancedMarkupUpdated,\n#pragma warning restore CS0618 // Type or member is obsolete\n\t\t\tActionType.ApprovalCanceledByUser,\n\t\t\tActionType.ApprovalCheckout,\n\t\t\tActionType.ApprovalCheckoutCanceled,\n\t\t\tActionType.ApprovalWorkflowInitiated,\n\t\t\tActionType.BPMWorkflowProcess,\n\t\t\tActionType.ChatterWorker,\n\t\t\tActionType.CheckinReassigned,\n\t\t\tActionType.CollaborationCheckout,\n\t\t\tActionType.CompletedHumanActivity,\n\t\t\tActionType.DocumentAccessJustification,\n\t\t\tActionType.DocumentActionPublish,\n\t\t\tActionType.DocumentAdded,\n\t\t\tActionType.DocumentAddedAsCopy,\n\t\t\tActionType.DocumentCheckIn,\n\t\t\tActionType.DocumentCopied,\n\t\t\tActionType.DocumentDeleted,\n\t\t\tActionType.DocumentEditInBrowserAutosave,\n\t\t\tActionType.DocumentEditInBrowserLock,\n\t\t\tActionType.DocumentEditInBrowserUnlock,\n\t\t\tActionType.DocumentExportToSalesforce,\n\t\t\tActionType.DocumentImportFromSalesforce,\n\t\t\tActionType.DocumentMoved,\n\t\t\tActionType.DocumentOpenWithGoogleDocs,\n\t\t\tActionType.DocumentReminderAdHocEmailIgnored,\n\t\t\tActionType.DocumentReminderContactIgnored,\n\t\t\tActionType.DocumentReminderDeleted,\n\t\t\tActionType.DocumentReminderDeletedContactIgnored,\n\t\t\tActionType.DocumentReminderGroupIgnored,\n\t\t\tActionType.DocumentReminderNoRecipients,\n\t\t\tActionType.DocumentReminderProcessed,\n\t\t\tActionType.DocumentReminderScheduled,\n\t\t\tActionType.DocumentReminderUpdated,\n\t\t\tActionType.DocumentSaveFromGoogleDocs,\n\t\t\tActionType.DocumentSent,\n\t\t\tActionType.DocumentShareDeleted,\n\t\t\tActionType.DocumentSupersede,\n\t\t\tActionType.DocumentTypeChanged,\n\t\t\tActionType.DocumentUndoCheckout,\n\t\t\tActionType.DocumentUndoOpenWithGoogleDocs,\n\t\t\tActionType.DocumentViaEchoSignAction,\n\t\t\tActionType.DownloadNative,\n\t\t\tActionType.DownloadPDF,\n\t\t\tActionType.DuplicateHandlingRename,\n\t\t\tActionType.EditUrl,\n\t\t\tActionType.ElectronicSignatureReminderAction,\n\t\t\tActionType.ExpirationNoticeSent,\n\t\t\tActionType.ExpirationSet,\n\t\t\tActionType.ExternalReviewCancelled,\n\t\t\tActionType.ExternalReviewCancelledAborted,\n\t\t\tActionType.ExternalReviewCancelledInvalidRecipient,\n\t\t\tActionType.ExternalReviewCancelledRejectedByWorflow,\n\t\t\tActionType.ExternalReviewCheckout,\n\t\t\tActionType.ExternalReviewCompletedCheckoutCancelled,\n\t\t\tActionType.ExternalReviewCompletedDocumentAndComments,\n\t\t\tActionType.ExternalReviewCompletedDocumentCheckin,\n\t\t\tActionType.ExternalReviewCompletedNoNewDocumentCheckin,\n\t\t\tActionType.ExternalReviewCompletedInternally,\n\t\t\tActionType.ExternalReviewErrored,\n\t\t\tActionType.ExternalReviewExpirationNew,\n\t\t\tActionType.ExternalReviewInitiated,\n\t\t\tActionType.ExternalReviewNativeDownload,\n\t\t\tActionType.ExternalReviewPreview,\n\t\t\tActionType.ExternalReviewReminderBounced,\n\t\t\tActionType.ExternalReviewResend,\n\t\t\tActionType.ExternalReviewWatcherRemoved,\n\t\t\tActionType.IntoWorkflow,\n\t\t\tActionType.KeywordsChanged,\n\t\t\tActionType.LWDPView,\n\t\t\tActionType.LegalHoldPlaced,\n\t\t\tActionType.LegalHoldReleased,\n\t\t\tActionType.LegalHoldUpdated,\n\t\t\tActionType.MetadataChanged,\n\t\t\tActionType.NativeView,\n\t\t\tActionType.NodeCopyAction,\n\t\t\tActionType.NodeRenameAction,\n\t\t\tActionType.ObligationAdded,\n\t\t\tActionType.ObligationDeleted,\n\t\t\tActionType.ObligationUpdated,\n\t\t\tActionType.OutboundFaxFailed,\n\t\t\tActionType.OutboundFaxSent,\n\t\t\tActionType.OutboundFaxSubmitted,\n\t\t\tActionType.OutofWorkflow,\n\t\t\tActionType.PDFView,\n\t\t\tActionType.PinPointMode,\n\t\t\tActionType.ReminderNoticeSent,\n\t\t\tActionType.ReminderSet,\n\t\t\tActionType.RemoveWatchedDocuments,\n\t\t\tActionType.SendEmailAction,\n\t\t\tActionType.SentSpringLink,\n\t\t\tActionType.ShareAction,\n\t\t\tActionType.ShareDownloadNativeAction,\n\t\t\tActionType.ShareDownloadPDFAction,\n\t\t\tActionType.SharePreviewAction,\n\t\t\tActionType.SharedFolderCheckout,\n\t\t\tActionType.SignatureCancelled,\n\t\t\tActionType.SignatureCheckout,\n\t\t\tActionType.SignatureClientCallback,\n\t\t\tActionType.SignatureFailed,\n\t\t\tActionType.SignatureRecipientApproved,\n\t\t\tActionType.SignatureRecipientBounced,\n\t\t\tActionType.SignatureRecipientDelegated,\n\t\t\tActionType.SignatureRecipientRejected,\n\t\t\tActionType.SignatureRecipientSealed,\n\t\t\tActionType.SignatureRecipientSent,\n\t\t\tActionType.SignatureRecipientSigned,\n\t\t\tActionType.SignatureRecipientViewed,\n\t\t\tActionType.SignatureRejected,\n\t\t\tActionType.SignatureSentForSigning,\n\t\t\tActionType.SignatureSigned,\n\t\t\tActionType.SignatureTimedOut,\n\t\t\tActionType.TitleChanged,\n\t\t\tActionType.TrashWorker,\n\t\t\tActionType.Unknown,\n\t\t\tActionType.WorkflowApproved,\n\t\t\tActionType.WorkflowCheckout,\n\t\t\tActionType.WorkflowEdited,\n\t\t\tActionType.WorkflowFinalized,\n\t\t\tActionType.WorkflowRejected,\n\t\t\tActionType.ExternalReviewEmailAttachmentDownload\n\t\t};\n\n\t\t/// <summary>\n\t\t/// Use reflection to find if the Description attribute was made for this enum value.\n\t\t/// If one exists, return that value.  This is what allows us to rename Enums.UserRole\n\t\t/// members willynilly.\n\t\t/// If none exists, then we return the simple ToString.\n\t\t/// Created by DK but basically made the above function return all of the members.\n\t\t/// </summary>\n\t\tpublic static string[] GetNames(Type enumType)\n\t\t{\n\t\t\t// Use reflection to find the appropriate Description attribute.\n\t\t\t// If no description attribute exists, just return role.ToString().\n\t\t\t// Concept taken from here: http://blogs.msdn.com/abhinaba/archive/2005/10/20/483000.aspx\n\n\t\t\t// Get static members declared on this class only; we don't want ToString(), CompareTo(), etc.\n\t\t\tMemberInfo[] members = enumType.GetMembers(BindingFlags.DeclaredOnly | BindingFlags.Public | BindingFlags.Static);\n\t\t\tList<string> arl = new List<string>();\n\t\t\tif (members != null && members.Length > 0)\n\t\t\t{\n\t\t\t\tforeach (MemberInfo memInfo in members)\n\t\t\t\t{\n\t\t\t\t\tobject[] attrs = memInfo.GetCustomAttributes(typeof(DescriptionAttribute), false);\n\t\t\t\t\tif (attrs != null && attrs.Length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tarl.Add(((DescriptionAttribute)attrs[0]).Description);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tarl.Add(memInfo.Name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn arl.ToArray();\n\t\t}\n\n\n\t\tpublic static Dictionary<long, string> GetUserRoleNameValues(UserRoleNameType nameType)\n\t\t{\n\t\t\tDictionary<long, string> values = new Dictionary<long, string>();\n\t\t\tDictionary<UserRole, string> dictionary = new Dictionary<UserRole, string>();\n\t\t\tswitch (nameType)\n\t\t\t{\n\t\t\t\tcase UserRoleNameType.Classic:\n\t\t\t\t\tdictionary = ClassicUserRoleStrings();\n\t\t\t\t\tbreak;\n\t\t\t\tcase UserRoleNameType.CLM:\n\t\t\t\t\tdictionary = ClmUserRoleStrings();\n\t\t\t\t\tbreak;\n\t\t\t\tcase UserRoleNameType.MixedMode:\n\t\t\t\t\tdictionary = ClmMixedModeUserRoleStrings();\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tforeach (KeyValuePair<UserRole, string> valuePair in dictionary)\n\t\t\t{\n\t\t\t\tvalues.Add((long) valuePair.Key, valuePair.Value);\n\t\t\t}\n\n\t\t\treturn values;\n\t\t}\n\n\n\t\t/// <summary>\n\t\t/// Use reflection to find the role required for this enum.\n\t\t/// If none exists, then we return not set... which will have to be handled\n\t\t/// in uses of this function.\n\t\t/// </summary>\n\t\tpublic static UserRole GetRoleRequired(Enum e)\n\t\t{\n\t\t\t//get the reflected member and then get the custom attribute of the member\n\t\t\tMemberInfo[] memInfo = e.GetType().GetMember(e.ToString());\n\t\t\tif (memInfo != null && memInfo.Length > 0)\n\t\t\t{\n\t\t\t\tobject[] attrs = memInfo[0].GetCustomAttributes(typeof(RoleRequired), false);\n\t\t\t\tif (attrs != null && attrs.Length > 0) return ((RoleRequired)attrs[0]).Required;\n\t\t\t}\n\n\t\t\t//RoleRequired attribute was not set\n\t\t\treturn UserRole.NotSet;\n\t\t}\n\n\t\t/// <summary>\n\t\t/// This makes things easier to lookup all of the values an enum has.\n\t\t///\n\t\t/// IMPORTANT the key is the value not the name of the enum.\n\t\t/// </summary>\n\t\t/// <param name=\"e\"></param>\n\t\t/// <returns></returns>\n\t\tpublic static NameValueCollection GetNVC(Enum e)\n\t\t{\n\t\t\t// create at the beginning so that it always send a NVC even if it is empty\n\t\t\tNameValueCollection nvc = new NameValueCollection();\n\n\t\t\t//Load all of the enum names Uses enum w/out the s\n\t\t\tstring[] names = Enum.GetNames(e.GetType());\n\n\t\t\t// put the roles in a namevaluecollection for easy access later\n\t\t\tforeach (string name in names)\n\t\t\t{\n\t\t\t\t//parse back from the name to the actual enum\n\t\t\t\tEnum next = (Enum)Enum.Parse(e.GetType(), name, true);\n\t\t\t\tif (next != null)\n\t\t\t\t\tnvc.Add(Convert.ToInt32(next).ToString(), GetName(next));\n\t\t\t}\n\n\t\t\treturn nvc;\n\t\t}\n\n\t\tprivate static readonly ConcurrentDictionary<Type, IReadOnlyDictionary<int, string>> EnumDictionaryCache = new ConcurrentDictionary<Type, IReadOnlyDictionary<int, string>>();\n\t\tpublic static IReadOnlyDictionary<int, string> ToDictionary<T>()\n\t\t{\n\t\t\tvar type = typeof(T);\n\t\t\tif (!type.IsEnum)\n\t\t\t\tthrow new ArgumentException(\"Type must be an enum\");\n\n\t\t\treturn EnumDictionaryCache.GetOrAdd(type, _ => Enum.GetValues(type)\n\t\t\t\t.Cast<T>()\n\t\t\t\t.ToDictionary(@enum => (int) (object) @enum, @enum =>\n\t\t\t\t\ttype.GetMember(@enum.ToString())[0].GetCustomAttributes(typeof(DescriptionAttribute), false)\n\t\t\t\t\t\t.OfType<DescriptionAttribute>()\n\t\t\t\t\t\t.FirstOrDefault()?.Description ?? @enum.ToString()));\n\t\t}\n\n\t\tpublic static bool TryGetValueFromDescription<T>(string description, out T value, StringComparison stringCompare = StringComparison.OrdinalIgnoreCase)\n\t\t{\n\t\t\tvar type = typeof(T);\n\t\t\tif (!type.IsEnum)\n\t\t\t\tthrow new ArgumentException();\n\n\t\t\tvalue = default(T);\n\t\t\tif (description == null)\n\t\t\t\treturn false;\n\n\t\t\tforeach (var field in type.GetFields())\n\t\t\t{\n\t\t\t\tvar attribute = Attribute.GetCustomAttribute(field,\n\t\t\t\t\ttypeof(DescriptionAttribute)) as DescriptionAttribute;\n\t\t\t\tif (attribute != null && attribute.Description.Equals(description, stringCompare))\n\t\t\t\t{\n\t\t\t\t\tvalue = (T) field.GetValue(null);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (field.Name == description)\n\t\t\t\t{\n\t\t\t\t\tvalue = (T) field.GetValue(null);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tpublic static bool TryGetUserRoleFromStringValue(string roleString, UserRoleNameType nameType, out UserRole role, CultureInfo cultureInfo = null)\n\t\t{\n\n\t\t\tDictionary<UserRole, string> dictionary = new Dictionary<UserRole, string>();\n\t\t\trole = UserRole.NotSet;\n\t\t\tswitch (nameType)\n\t\t\t{\n\t\t\t\tcase UserRoleNameType.Classic:\n\t\t\t\t\tdictionary = ClassicUserRoleStrings(cultureInfo);\n\t\t\t\t\tbreak;\n\t\t\t\tcase UserRoleNameType.CLM:\n\t\t\t\t\tdictionary = ClmUserRoleStrings(cultureInfo);\n\t\t\t\t\tbreak;\n\t\t\t\tcase UserRoleNameType.MixedMode:\n\t\t\t\t\tdictionary = ClmMixedModeUserRoleStrings(cultureInfo);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (dictionary.Any(x => x.Value.Equals(roleString, StringComparison.InvariantCultureIgnoreCase)))\n\t\t\t{\n\t\t\t\trole = dictionary\n\t\t\t\t\t.FirstOrDefault(x => x.Value.Equals(roleString, StringComparison.InvariantCultureIgnoreCase)).Key;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\n\t\tpublic static bool TryParse<T>(string value, out T result)\n\t\t{\n\t\t\tbool ok = false;\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tresult = (T)Enum.Parse(typeof(T), value, true);\n\t\t\t\tif (typeof(T).GetCustomAttributes(typeof(FlagsAttribute), false).Any())\n\t\t\t\t\tok = true; // no checking if invalid flags are set\n\t\t\t\telse\n\t\t\t\t\tok = Enum.IsDefined(typeof(T), result);\n\t\t\t}\n\t\t\tcatch\n\t\t\t{\n\t\t\t\tresult = default(T);\n\t\t\t}\n\n\t\t\treturn ok;\n\t\t}\n\n\t\tpublic static string GetStringValue(Enum linkBehavior)\n\t\t{\n\t\t\tstring output;\n\t\t\tType type = linkBehavior.GetType();\n\t\t\tFieldInfo fi = type.GetField(linkBehavior.ToString());\n\t\t\tStringValue[] attrs = fi.GetCustomAttributes(typeof(StringValue), false) as StringValue[];\n\t\t\tif (attrs.Length > 0)\n\t\t\t{\n\t\t\t\toutput = attrs[0].Value;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toutput = linkBehavior.ToString();\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\tpublic static Dictionary<string, int> ToStringIntDictionary<T>()\n\t\t{\n\t\t\tvar values = Enum.GetValues(typeof(T)).Cast<int>();\n\t\t\treturn values.ToDictionary(value => Enum.GetName(typeof(T), value));\n\t\t}\n\n\t\t#endregion\n\n\t\t#region attributes\n\t\t/// <summary>\n\t\t/// New attribute for enums to set roles\n\t\t/// on Enums.\n\t\t/// DK - Started off as a landing page need to turn off specific pages\n\t\t/// in the dropdown box.\n\t\t/// </summary>\n\t\tprivate class RoleRequired : Attribute\n\t\t{\n\t\t\tprivate readonly UserRole _required;\n\n\t\t\tpublic RoleRequired(UserRole ur)\n\t\t\t{\n\t\t\t\t_required = ur;\n\t\t\t}\n\n\t\t\t//no reason to allow setting\n\t\t\tpublic UserRole Required\n\t\t\t{\n\t\t\t\tget { return _required; }\n\t\t\t}\n\t\t}\n\n\t\tpublic class StringValue : System.Attribute\n\t\t{\n\t\t\tprivate string _value;\n\n\t\t\tpublic StringValue(string value)\n\t\t\t{\n\t\t\t\t_value = value;\n\t\t\t}\n\n\t\t\tpublic string Value\n\t\t\t{\n\t\t\t\tget { return _value; }\n\t\t\t}\n\n\t\t}\n\t\t#endregion\n\n\t\t/// <summary>\n\t\t/// Enums for different account types\n\t\t/// </summary>\n\t\tpublic enum AttributeEdition\n\t\t{\n\t\t\tEssentials = 1,\n\t\t\tCore = 2,\n\t\t\tMax = 3,\n\t\t\tPlus = 4\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Enums for Docusign-Request-Priority header\n\t\t/// </summary>\n\t\tpublic enum DocuSignRequestPriority\n\t\t{\n\t\t\tNone = -1,\n\t\t\tHighPriority = 0,\n\t\t\tLowPriority = 1\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Tracks the status of removing legacy Security rows for an account from the Atlas database.\n\t\t/// Used during JIT/SER migration.\n\t\t/// </summary>\n\t\tpublic enum SecurityPurgeTrackerStatus\n\t\t{\n\t\t\tNotStarted = 0,\n\t\t\tInProgress = 1,\n\t\t\tPaused = 2,\n\t\t\tDone = 3,\n\t\t\tError = 4,\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Enums for SecuritySeeReference types\n\t\t/// </summary>\n\t\tpublic enum EntityType\n\t\t{\n\t\t\tRole = 1,\n\t\t\tGroup = 2,\n\t\t\tUser = 3\n\t\t}\n\t}\n}\n",
      "relevance_score": 0.85
    },
    {
      "path": "/Users/shuaib.tabit/Documents/Atlas/src/WINS/Service/V1/WinsService.cs",
      "content": "#if NET\n#nullable enable\n\nusing System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Linq;\nusing System.Threading.Tasks;\n\nusing ADEXS.Core.Domain.Exceptions;\nusing ADEXS.Core.Domain.Repository.User;\nusing ADEXS.Core.Domain.Repository.Workflow;\nusing ADEXS.Core.Domain.Repository.Workflow.Interfaces;\nusing ADEXS.Core.Domain.Repository.Workflow.Mappers;\nusing ADEXS.Core.Types;\nusing ADEXS.Core.Workflow.Model;\nusing ADEXS.WINS.Telemetry;\nusing ADEXS.WINS.V1;\n\nusing DocuSign.Msf.AspNet.OpenTelemetry.SemanticConventions;\n\nusing Google.Protobuf.WellKnownTypes;\nusing Google.Rpc;\n\nusing Grpc.Core;\n\nusing Microsoft.Extensions.Logging;\n\nusing OpenTelemetry.Trace;\n\nusing Definition = ADEXS.Core.Domain.Model.Workflow.Definition;\nusing Design = DocuSign.CLM.Workflow.Core.Persistence.Model.Design;\nusing Revision = ADEXS.Core.Domain.Model.Workflow.Revision;\nusing StartParameters = ADEXS.Core.Domain.Model.Workflow.StartParameters;\nusing Status = Grpc.Core.Status;\nusing StatusCode = Grpc.Core.StatusCode;\nusing ValueExpressionOneOfCase = ADEXS.WINS.V1.VariableUpdate.ValueExpressionOneofCase;\nusing VariableUpdate = ADEXS.Core.Domain.Repository.Workflow.Types.VariableUpdate;\nusing Version = ADEXS.Core.Domain.Model.Workflow.Version;\n\nnamespace ADEXS.WINS.Service.V1;\n\npublic partial class WinsService : WINS.V1.WinsService.WinsServiceBase\n{\n\tprivate static readonly Status StatusInvalidArgumentInstanceUid = new(StatusCode.InvalidArgument, \"InstanceUid is malformed\");\n\n\tprivate static readonly Status StatusInvalidArgumentActivityUid = new(StatusCode.InvalidArgument, \"ActivityUid is malformed\");\n\n\tprivate static readonly Status StatusInvalidArgumentVersionUid = new(StatusCode.InvalidArgument, \"VersionUid is malformed\");\n\n\tprivate static readonly Status StatusInvalidArgumentRevisionUid = new(StatusCode.InvalidArgument, \"RevisionUid is malformed\");\n\n\tprivate readonly ILogger _logger;\n\n\tprivate readonly IServiceInstrumentation _serviceInstrumentation;\n\n\tprivate readonly IUserAccountRepository _userAccountRepository;\n\n\tprivate readonly IWorkflowClient _workflowClient;\n\n\tprivate readonly IWorkflowV1GrpcMapper _workflowV1GrpcMapper;\n\n\tpublic WinsService(\n\t\tIWorkflowClient workflowClient,\n\t\tIUserAccountRepository userAccountRepository,\n\t\tIWorkflowV1GrpcMapper workflowV1GrpcMapper,\n\t\tIServiceInstrumentation serviceInstrumentation,\n\t\tILogger<WinsService> logger)\n\t{\n\t\t_workflowClient = workflowClient;\n\t\t_userAccountRepository = userAccountRepository;\n\t\t_workflowV1GrpcMapper = workflowV1GrpcMapper;\n\t\t_serviceInstrumentation = serviceInstrumentation;\n\t\t_logger = logger;\n\t}\n\n\tpublic override Task<CreateNewWorkflowDefinitionResponse> CreateNewWorkflowDefinition(\n\t\t[NotNull] CreateNewWorkflowDefinitionRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\n\n\t\tValidateWorkflowName(request!.WorkflowName);\n\t\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.CreateNewWorkflowDefinition(_logger, request.User.AccountId);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar definitionModel = _workflowClient.CreateNewWorkflowDefinition(userAccount, request.WorkflowName);\n\n\t\t\tvar definition = _workflowV1GrpcMapper.Map<Definition, WINS.V1.Definition>(definitionModel);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new CreateNewWorkflowDefinitionResponse {Definition = definition});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.CreateNewWorkflowDefinitionInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.CreateNewWorkflowDefinitionFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.CreateNewWorkflowDefinitionFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<ExportWorkflowDefinitionResponse> ExportWorkflowDefinition(\n\t\t[NotNull] ExportWorkflowDefinitionRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\n\n\t\tValidateWorkflowName(request!.WorkflowName);\n\t\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.ExportWorkflowDefinition(_logger, request.User.AccountId);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar definitionXml = _workflowClient.ExportWorkflowDefinition(userAccount, request.WorkflowName);\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new ExportWorkflowDefinitionResponse {DefinitionXml = definitionXml});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.ExportWorkflowDefinitionInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.ExportWorkflowDefinitionFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.ExportWorkflowDefinitionFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<ImportWorkflowDefinitionResponse> ImportWorkflowDefinition(\n\t\t[NotNull] ImportWorkflowDefinitionRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\n\n\t\tValidateWorkflowName(request!.WorkflowName);\n\t\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.ImportWorkflowDefinition(_logger, request.User.AccountId);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar revisionModel = _workflowClient.ImportWorkflowDefinition(\n\t\t\t\tuserAccount,\n\t\t\t\trequest.WorkflowName,\n\t\t\t\trequest.DefinitionXml,\n\t\t\t\trequest.OverwriteExistingWorkflow,\n\t\t\t\trequest.Comment,\n\t\t\t\trequest.TemplateId,\n\t\t\t\trequest.TemplateVersion);\n\n\t\t\tvar revision = _workflowV1GrpcMapper.Map<Revision, WINS.V1.Revision>(revisionModel);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new ImportWorkflowDefinitionResponse {Revision = revision});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.ImportWorkflowDefinitionInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.ImportWorkflowDefinitionFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.ImportWorkflowDefinitionFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<PublishWorkflowResponse> PublishWorkflow(\n\t\t[NotNull] PublishWorkflowRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.VersionUid);\n\n\t\tif (!Guid.TryParse(request!.VersionUid, out var versionUid))\n\t\t{\n\t\t\tLogger.PublishWorkflowInvalidArgument(_logger, request.User.AccountId, ex: null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentVersionUid);\n\t\t}\n\n\t\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.PublishWorkflow(_logger, request.User.AccountId, request.VersionUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar revision = _workflowClient.PublishWorkflow(\n\t\t\t\tuserAccount,\n\t\t\t\tversionUid,\n\t\t\t\trequest.RevisionNumber,\n\t\t\t\trequest.Comment);\n\n\t\t\tvar revisionResponse = _workflowV1GrpcMapper.Map<Revision, WINS.V1.Revision>(revision);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new PublishWorkflowResponse {Revision = revisionResponse});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.PublishWorkflowInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.PublishWorkflowFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.PublishWorkflowFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<PublishWorkflowByNameResponse> PublishWorkflowByName(\n\t\t[NotNull] PublishWorkflowByNameRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\n\n\t\tValidateWorkflowName(request!.WorkflowName);\n\t\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.PublishWorkflowByName(_logger, request.User.AccountId);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar revision = _workflowClient.PublishWorkflow(\n\t\t\t\tuserAccount,\n\t\t\t\trequest.WorkflowName,\n\t\t\t\trequest.VersionNumber,\n\t\t\t\trequest.RevisionNumber,\n\t\t\t\trequest.Comment);\n\n\t\t\tvar revisionResponse = _workflowV1GrpcMapper.Map<Revision, WINS.V1.Revision>(revision);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new PublishWorkflowByNameResponse {Revision = revisionResponse});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.PublishWorkflowByNameInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.PublishWorkflowByNameFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.PublishWorkflowByNameFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<VersionWorkflowResponse> VersionWorkflow(\n\t\t[NotNull] VersionWorkflowRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.SourceVersionUid);\n\n\t\tif (!Guid.TryParse(request!.SourceVersionUid, out var sourceVersionUid))\n\t\t{\n\t\t\tLogger.VersionWorkflowInvalidArgument(_logger, request.User.AccountId, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentVersionUid);\n\t\t}\n\n\t\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.VersionWorkflow(_logger, request.User.AccountId, request.SourceVersionUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar version = _workflowClient.VersionWorkflow(\n\t\t\t\tuserAccount,\n\t\t\t\tsourceVersionUid,\n\t\t\t\trequest.SourceRevisionNumber,\n\t\t\t\trequest.NewVersionNumber,\n\t\t\t\trequest.Comment);\n\n\t\t\tvar versionResponse = _workflowV1GrpcMapper.Map<Version, WINS.V1.Version>(version);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new VersionWorkflowResponse {Version = versionResponse});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.VersionWorkflowInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.VersionWorkflowFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.VersionWorkflowFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<VersionWorkflowByNameResponse> VersionWorkflowByName(\n\t\t[NotNull] VersionWorkflowByNameRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\n\n\t\tValidateWorkflowName(request!.WorkflowName);\n\t\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.VersionWorkflowByName(_logger, request.User.AccountId);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar version = _workflowClient.VersionWorkflow(\n\t\t\t\tuserAccount,\n\t\t\t\trequest.WorkflowName,\n\t\t\t\trequest.SourceVersionNumber,\n\t\t\t\trequest.SourceRevisionNumber,\n\t\t\t\trequest.NewVersionNumber,\n\t\t\t\trequest.Comment);\n\n\t\t\tvar versionResponse = _workflowV1GrpcMapper.Map<Version, WINS.V1.Version>(version);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new VersionWorkflowByNameResponse {Version = versionResponse});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.VersionWorkflowByNameInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.VersionWorkflowByNameFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.VersionWorkflowByNameFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<KillWorkflowResponse> KillWorkflow(KillWorkflowRequest request, ServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\n\n\t\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))\n\t\t{\n\t\t\tLogger.KillWorkflowInvalidArgument(_logger, request.User.AccountId, request.InstanceUid, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentInstanceUid);\n\t\t}\n\n\t\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.KillWorkflow(_logger, request.User.AccountId, request.InstanceUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\t_workflowClient.KillWorkflow(userAccount, instanceUid, request.Comment);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new KillWorkflowResponse());\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.KillWorkflowInvalidArgument(_logger, request.User.AccountId, request.InstanceUid, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.KillWorkflowFailed(_logger, request.User.AccountId, request.InstanceUid, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.KillWorkflowFailed(_logger, request.User.AccountId, request.InstanceUid, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<PauseWorkflowResponse> PauseWorkflow(PauseWorkflowRequest request, ServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\n\n\t\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))\n\t\t{\n\t\t\tLogger.PauseWorkflowInvalidArgument(_logger, request.User.AccountId, request.InstanceUid, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentInstanceUid);\n\t\t}\n\n\t\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.PauseWorkflow(_logger, request.User.AccountId, request.InstanceUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\t_workflowClient.PauseWorkflow(userAccount, instanceUid, request.Comment);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new PauseWorkflowResponse());\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.PauseWorkflowInvalidArgument(_logger, request.User.AccountId, request.InstanceUid, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.PauseWorkflowFailed(_logger, request.User.AccountId, request.InstanceUid, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.PauseWorkflowFailed(_logger, request.User.AccountId, request.InstanceUid, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<ResumeWorkflowResponse> ResumeWorkflow(\n\t\tResumeWorkflowRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\n\n\t\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))\n\t\t{\n\t\t\tLogger.ResumeWorkflowInvalidArgument(_logger, request.User.AccountId, request.InstanceUid, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentInstanceUid);\n\t\t}\n\n\t\tLogger.ResumeWorkflow(_logger, request.User.AccountId, request.InstanceUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\t_workflowClient.ResumeWorkflow(userAccount, instanceUid, request.Comment);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new ResumeWorkflowResponse());\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.ResumeWorkflowInvalidArgument(_logger, request.User.AccountId, request.InstanceUid, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.ResumeWorkflowFailed(_logger, request.User.AccountId, request.InstanceUid, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.ResumeWorkflowFailed(_logger, request.User.AccountId, request.InstanceUid, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<ResumeFailedWorkflowResponse> ResumeFailedWorkflow(\n\t\tResumeFailedWorkflowRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\n\n\t\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))\n\t\t{\n\t\t\tLogger.ResumeFailedWorkflowInvalidArgument(_logger, request.User.AccountId, request.InstanceUid, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentInstanceUid);\n\t\t}\n\n\t\tLogger.ResumeFailedWorkflow(_logger, request.User.AccountId, request.InstanceUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\t_workflowClient.ResumeFailedWorkflow(userAccount, instanceUid, request.Comment);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new ResumeFailedWorkflowResponse());\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.ResumeFailedWorkflowInvalidArgument(_logger, request.User.AccountId, request.InstanceUid, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.ResumeFailedWorkflowFailed(_logger, request.User.AccountId, request.InstanceUid, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.ResumeFailedWorkflowFailed(_logger, request.User.AccountId, request.InstanceUid, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<SystemCallbackResponse> SystemCallback(\n\t\t[NotNull] SystemCallbackRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request.AccountId)\n\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid)\n\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid);\n\n\t\tif (!Guid.TryParse(request.InstanceUid, out var instanceUid))\n\t\t{\n\t\t\tthrow new RpcException(StatusInvalidArgumentInstanceUid);\n\t\t}\n\n\t\tif (!Guid.TryParse(request.ActivityUid, out var activityUid))\n\t\t{\n\t\t\tthrow new RpcException(StatusInvalidArgumentActivityUid);\n\t\t}\n\n\t\tif (string.IsNullOrEmpty(request.CallbackName))\n\t\t{\n\t\t\tthrow new RpcException(\n\t\t\t\tnew Status(StatusCode.InvalidArgument, $\"{nameof(request.CallbackName)} is null or empty\"));\n\t\t}\n\n\t\tLogger.SystemCallback(\n\t\t\t_logger,\n\t\t\trequest.AccountId,\n\t\t\trequest.InstanceUid,\n\t\t\trequest.ActivityUid,\n\t\t\trequest.CallbackName);\n\n\t\ttry\n\t\t{\n\t\t\t_workflowClient.SystemCallback(\n\t\t\t\trequest.AccountId,\n\t\t\t\tinstanceUid,\n\t\t\t\tactivityUid,\n\t\t\t\trequest.CallbackName,\n\t\t\t\trequest.CallbackData);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new SystemCallbackResponse());\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.SystemCallbackInvalidArgument(\n\t\t\t\t_logger,\n\t\t\t\trequest.AccountId,\n\t\t\t\trequest.InstanceUid,\n\t\t\t\trequest.ActivityUid,\n\t\t\t\trequest.CallbackName,\n\t\t\t\targEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.SystemCallbackFailed(\n\t\t\t\t_logger,\n\t\t\t\trequest.AccountId,\n\t\t\t\trequest.InstanceUid,\n\t\t\t\trequest.ActivityUid,\n\t\t\t\trequest.CallbackName,\n\t\t\t\tpublicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.SystemCallbackFailed(\n\t\t\t\t_logger,\n\t\t\t\trequest.AccountId,\n\t\t\t\trequest.InstanceUid,\n\t\t\t\trequest.ActivityUid,\n\t\t\t\trequest.CallbackName,\n\t\t\t\tex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<StartWorkflowResponse> StartWorkflow(StartWorkflowRequest request, ServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\n\n\t\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.StartWorkflow(_logger, request.User.AccountId);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar instanceUid = _workflowClient.StartWorkflow(\n\t\t\t\tuserAccount,\n\t\t\t\trequest.WorkflowName,\n\t\t\t\trequest.SourceType,\n\t\t\t\trequest.SourceId,\n\t\t\t\trequest.XmlParam);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok)\n\t\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, instanceUid);\n\t\t\treturn Task.FromResult(new StartWorkflowResponse {InstanceUid = instanceUid.ToString()});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.StartWorkflowInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.StartWorkflowFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.StartWorkflowFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<StartWorkflowFromSourceResponse> StartWorkflowFromSource(\n\t\tStartWorkflowFromSourceRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid);\n\n\t\tValidateWorkflowName(request!.WorkflowName);\n\t\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))\n\t\t{\n\t\t\tLogger.StartWorkflowFromSourceInvalidArgument(_logger, request.User.AccountId, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentInstanceUid);\n\t\t}\n\n\t\tLogger.StartWorkflowFromSource(_logger, request.User.AccountId, request.InstanceUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar newInstanceUid = _workflowClient.StartWorkflowFromSource(\n\t\t\t\tuserAccount,\n\t\t\t\trequest.WorkflowName,\n\t\t\t\trequest.SourceType,\n\t\t\t\trequest.SourceId,\n\t\t\t\trequest.XmlParam,\n\t\t\t\tinstanceUid);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok)\n\t\t\t\t?.AddTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, newInstanceUid);\n\t\t\treturn Task.FromResult(new StartWorkflowFromSourceResponse {InstanceUid = newInstanceUid.ToString()});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.StartWorkflowFromSourceInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.StartWorkflowFromSourceFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.StartWorkflowFromSourceFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<StartWorkflowWithParametersResponse> StartWorkflowWithParameters(\n\t\tStartWorkflowWithParametersRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\t\tValidateUser(request?.StartParameters?.Submitter);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid)\n\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.RevisionUid);\n\n\t\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))\n\t\t{\n\t\t\tLogger.StartWorkflowWithParametersInvalidArgument(_logger, request.User.AccountId, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentInstanceUid);\n\t\t}\n\n\t\tif (!Guid.TryParse(request!.RevisionUid, out var revisionUid))\n\t\t{\n\t\t\tLogger.StartWorkflowWithParametersInvalidArgument(_logger, request.User.AccountId, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentRevisionUid);\n\t\t}\n\n\t\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tValidateAndParseUserUid(request.StartParameters!.Submitter.Uid, request.StartParameters.Submitter.AccountId, out var submitterUserAccountUid);\n\n\t\tLogger.StartWorkflowWithParameters(_logger, request.User.AccountId, request.InstanceUid, request.RevisionUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar submitterUserAccount = LoadUserAccountSafe(request.StartParameters.Submitter.AccountId, submitterUserAccountUid);\n\n\t\t\tvar startParameters = new StartParameters(submitterUserAccount, null, null, null);\n\t\t\t_workflowV1GrpcMapper.Map(request.StartParameters, startParameters);\n\n\t\t\tvar newInstanceUid = _workflowClient.StartWorkflowWithParameters(\n\t\t\t\tuserAccount,\n\t\t\t\trevisionUid,\n\t\t\t\tstartParameters,\n\t\t\t\tinstanceUid);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok)\n\t\t\t\t?.AddTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, newInstanceUid);\n\t\t\treturn Task.FromResult(new StartWorkflowWithParametersResponse {InstanceUid = newInstanceUid.ToString()});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.StartWorkflowWithParametersInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.StartWorkflowWithParametersFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.StartWorkflowWithParametersFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<StartRoutingApprovalWorkflowResponse> StartRoutingApprovalWorkflow(\n\t\tStartRoutingApprovalWorkflowRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.RevisionUid);\n\n\t\tif (!Guid.TryParse(request!.RevisionUid, out var revisionUid))\n\t\t{\n\t\t\tLogger.StartRoutingApprovalWorkflowInvalidArgument(_logger, request.User.AccountId, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentRevisionUid);\n\t\t}\n\n\t\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.StartRoutingApprovalWorkflow(_logger, request.User.AccountId, request.RevisionUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar instanceUid = _workflowClient.StartRoutingApprovalWorkflow(\n\t\t\t\tuserAccount,\n\t\t\t\trevisionUid,\n\t\t\t\trequest.RoutingApprovalName,\n\t\t\t\trequest.SourceType,\n\t\t\t\trequest.SourceId,\n\t\t\t\trequest.XmlParam);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok)\n\t\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, instanceUid);\n\t\t\treturn Task.FromResult(new StartRoutingApprovalWorkflowResponse {InstanceUid = instanceUid.ToString()});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.StartRoutingApprovalWorkflowInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.StartRoutingApprovalWorkflowFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.StartRoutingApprovalWorkflowFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<SendStartWorkflowResponse> SendStartWorkflow(\n\t\tSendStartWorkflowRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\n\n\t\tValidateWorkflowName(request!.WorkflowName);\n\t\tValidateAndParseUserUid(request.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.SendStartWorkflow(_logger, request.User.AccountId);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar instanceUid = _workflowClient.SendStartWorkflow(\n\t\t\t\tuserAccount,\n\t\t\t\trequest.WorkflowName,\n\t\t\t\trequest.SourceType,\n\t\t\t\trequest.SourceId,\n\t\t\t\trequest.XmlParam);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok)\n\t\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, instanceUid);\n\n\t\t\treturn Task.FromResult(new SendStartWorkflowResponse {InstanceUid = instanceUid.ToString()});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.SendStartWorkflowInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.SendStartWorkflowFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.SendStartWorkflowFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<SubmitWorkItemResponse> SubmitWorkItem(\n\t\tSubmitWorkItemRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkItemUid, request.WorkItemUid);\n\n\t\tif (!Guid.TryParse(request!.WorkItemUid, out var workItemUid))\n\t\t{\n\t\t\tLogger.SubmitWorkItemInvalidArgument(_logger, request.User.AccountId, request.WorkItemUid, ex: null);\n\t\t\tthrow new RpcException(new Status(StatusCode.InvalidArgument, \"WorkItemUid is malformed\"));\n\t\t}\n\n\t\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.SubmitWorkItem(_logger, request.User.AccountId, request.WorkItemUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar updatedVariables = new Dictionary<string, object>();\n\n\t\t\tforeach (var wireVariable in request.UpdatedVariables)\n\t\t\t{\n\t\t\t\tvar workflowVariableType =\n\t\t\t\t\t_workflowV1GrpcMapper.Map<WorkflowVariableType, Enums.WorkflowVariableType>(wireVariable.Type);\n\n\t\t\t\tif (!WorkflowConversion.TryParseVariableValue(\n\t\t\t\t\t    request.User.AccountId,\n\t\t\t\t\t    workflowVariableType,\n\t\t\t\t\t    wireVariable.Value.ToStringUtf8(),\n\t\t\t\t\t    out var outputValue))\n\t\t\t\t{\n\t\t\t\t\tLogger.SubmitWorkItemInvalidArgument(_logger, request.User.AccountId, request.WorkItemUid, null);\n\t\t\t\t\tthrow new RpcException(\n\t\t\t\t\t\tnew Status(StatusCode.InvalidArgument, \"Unable to parse one of updated variables\"));\n\t\t\t\t}\n\n\t\t\t\tupdatedVariables[wireVariable.Name] = outputValue;\n\t\t\t}\n\n\t\t\t_workflowClient.SubmitWorkItem(\n\t\t\t\tuserAccount,\n\t\t\t\tworkItemUid,\n\t\t\t\trequest.Output,\n\t\t\t\trequest.Comments,\n\t\t\t\trequest.ActivityMessages,\n\t\t\t\tupdatedVariables);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new SubmitWorkItemResponse());\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.SubmitWorkItemInvalidArgument(_logger, request.User.AccountId, request.WorkItemUid, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.SubmitWorkItemFailed(_logger, request.User.AccountId, request.WorkItemUid, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.SubmitWorkItemFailed(_logger, request.User.AccountId, request.WorkItemUid, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<LoadDesignResponse> LoadDesign(LoadDesignRequest request, ServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.Version.Uid)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, request.Version.DefinitionUid);\n\n\t\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.LoadDesign(_logger, request.User.AccountId, request.Version.Uid, request.Version.DefinitionUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar version = _workflowV1GrpcMapper.Map<WINS.V1.Version, Version>(request.Version);\n\n\t\t\tvar design = _workflowClient.LoadDesign(userAccount, version);\n\n\t\t\tvar designResponse = _workflowV1GrpcMapper.Map<Design, WINS.V1.Design>(design);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new LoadDesignResponse {Design = designResponse});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.LoadDesignInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.LoadDesignFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.LoadDesignFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<LoadDesignByRevisionResponse> LoadDesignByRevision(\n\t\tLoadDesignByRevisionRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.Revision.Uid)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowVersionUid, request.Revision.VersionUid)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowDefinitionUid, request.Revision.DefinitionUid);\n\n\t\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.LoadDesignByRevision(_logger, request.User.AccountId, request.Revision.Uid, request.Revision.VersionUid, request.Revision.DefinitionUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar revision = _workflowV1GrpcMapper.Map<WINS.V1.Revision, Revision>(request.Revision);\n\n\t\t\tvar design = _workflowClient.LoadDesign(userAccount, revision);\n\n\t\t\tvar designResponse = _workflowV1GrpcMapper.Map<Design, WINS.V1.Design>(design);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new LoadDesignByRevisionResponse {Design = designResponse});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.LoadDesignByRevisionInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.LoadDesignByRevisionFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.LoadDesignByRevisionFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<ConvertLegacyDefinitionResponse> ConvertLegacyDefinition(\n\t\tConvertLegacyDefinitionRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\n\n\t\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tLogger.ConvertLegacyDefinition(_logger, request.User.AccountId);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar oldDesign = _workflowV1GrpcMapper.Map<WINS.V1.Design, Design>(request.OldDesign);\n\n\t\t\tvar newDesign = _workflowClient.ConvertLegacyDefinition(userAccount, oldDesign);\n\n\t\t\tvar designResponse = _workflowV1GrpcMapper.Map<Design, WINS.V1.Design>(newDesign);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new ConvertLegacyDefinitionResponse {Design = designResponse});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.ConvertLegacyDefinitionInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.ConvertLegacyDefinitionFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.ConvertLegacyDefinitionFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<CompileExpressionBuilderExpressionResponse> CompileExpressionBuilderExpression(\n\t\tCompileExpressionBuilderExpressionRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId);\n\n\t\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tif (string.IsNullOrWhiteSpace(request.Code))\n\t\t{\n\t\t\tLogger.CompileExpressionBuilderExpressionInvalidArgument(_logger, request.User.AccountId, null);\n\t\t\tthrow new RpcException(new Status(StatusCode.InvalidArgument, \"Code is null or empty\"));\n\t\t}\n\n\t\tLogger.CompileExpressionBuilderExpression(_logger, request.User.AccountId);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar output = _workflowClient.CompileExpressionBuilderExpression(\n\t\t\t\tuserAccount,\n\t\t\t\trequest.Code,\n\t\t\t\trequest.AdditionalCode,\n\t\t\t\trequest.ReturnType);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new CompileExpressionBuilderExpressionResponse {Output = output});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.CompileExpressionBuilderExpressionInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.CompileExpressionBuilderExpressionFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.CompileExpressionBuilderExpressionFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<UpdateVariablesResponse> UpdateVariables(\n\t\tUpdateVariablesRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceInstanceUid, request.SourceInstanceUid)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceActivityUid, request.SourceActivityUid);\n\n\t\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tif (!Guid.TryParse(request!.ActivityUid, out var activityUid))\n\t\t{\n\t\t\tLogger.UpdateVariablesInvalidArgument(_logger, request.User.AccountId, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentActivityUid);\n\t\t}\n\n\t\tif (!Guid.TryParse(request.SourceInstanceUid, out var sourceInstanceUid))\n\t\t{\n\t\t\tLogger.UpdateVariablesInvalidArgument(_logger, request.User.AccountId, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentInstanceUid);\n\t\t}\n\n\t\tif (!Guid.TryParse(request.SourceActivityUid, out var sourceActivityUid))\n\t\t{\n\t\t\tLogger.UpdateVariablesInvalidArgument(_logger, request.User.AccountId, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentActivityUid);\n\t\t}\n\n\t\tLogger.UpdateVariables(_logger, request.User.AccountId, request.ActivityUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar updatedVariables =\n\t\t\t\t_workflowV1GrpcMapper\n\t\t\t\t\t.Map<List<ADEXS.WINS.V1.VariableUpdate>, List<VariableUpdate>>(\n\t\t\t\t\t\trequest.VariableUpdates.ToList());\n\n\t\t\tvar result = _workflowClient.UpdateVariables(\n\t\t\t\tuserAccount,\n\t\t\t\tactivityUid,\n\t\t\t\tupdatedVariables,\n\t\t\t\tsourceInstanceUid,\n\t\t\t\tsourceActivityUid);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new UpdateVariablesResponse {Result = result});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.UpdateVariablesInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.UpdateVariablesFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.UpdateVariablesFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<UpdateVariablesWithResultResponse> UpdateVariablesWithResult(\n\t\tUpdateVariablesWithResultRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tValidateUser(request?.User);\n\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request!.User.AccountId)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowActivityUid, request.ActivityUid)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceInstanceUid, request.SourceInstanceUid)\n\t\t\t.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowSourceActivityUid, request.SourceActivityUid);\n\n\t\tValidateAndParseUserUid(request!.User.Uid, request.User.AccountId, out var userAccountUid);\n\n\t\tif (!Guid.TryParse(request!.ActivityUid, out var activityUid))\n\t\t{\n\t\t\tLogger.UpdateVariablesInvalidArgument(_logger, request.User.AccountId, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentActivityUid);\n\t\t}\n\n\t\tif (!Guid.TryParse(request.SourceInstanceUid, out var sourceInstanceUid))\n\t\t{\n\t\t\tLogger.UpdateVariablesInvalidArgument(_logger, request.User.AccountId, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentInstanceUid);\n\t\t}\n\n\t\tif (!Guid.TryParse(request.SourceActivityUid, out var sourceActivityUid))\n\t\t{\n\t\t\tLogger.UpdateVariablesInvalidArgument(_logger, request.User.AccountId, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentActivityUid);\n\t\t}\n\n\t\tLogger.UpdateVariablesWithResult(_logger, request.User.AccountId, request.ActivityUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar userAccount = LoadUserAccountSafe(request.User.AccountId, userAccountUid);\n\n\t\t\tvar updatedVariables =\n\t\t\t\t_workflowV1GrpcMapper\n\t\t\t\t\t.Map<List<ADEXS.WINS.V1.VariableUpdate>, List<VariableUpdate>>(\n\t\t\t\t\t\trequest.VariableUpdates.ToList());\n\n\t\t\tvar result = _workflowClient.UpdateVariablesWithResult(\n\t\t\t\tuserAccount,\n\t\t\t\tactivityUid,\n\t\t\t\tupdatedVariables,\n\t\t\t\tsourceInstanceUid,\n\t\t\t\tsourceActivityUid);\n\n\t\t\tvar resultResponse = _workflowV1GrpcMapper\n\t\t\t\t.Map<WorkflowEnums.UpdateParentVariableResult, UpdateParentVariableResult>(result);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new UpdateVariablesWithResultResponse {Result = resultResponse});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.UpdateVariablesWithResultInvalidArgument(_logger, request.User.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.UpdateVariablesWithResultFailed(_logger, request.User.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.UpdateVariablesWithResultFailed(_logger, request.User.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tpublic override Task<IsActivityExecutionLimitReachedResponse> IsActivityExecutionLimitReached(\n\t\t[NotNull] IsActivityExecutionLimitReachedRequest request,\n\t\tServerCallContext context)\n\t{\n\t\tusing var activity = StartActivity()\n\t\t\t?.SetTag(TraceSemanticConventions.AttributeDocuSignAccountId, request.AccountId)\n\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowInstanceUid, request.InstanceUid)\n\t\t\t?.SetTag(ServiceTraceSemanticConventions.AttributeDocuSignWorkflowRevisionUid, request.RevisionUid);\n\n\t\tif (!Guid.TryParse(request!.InstanceUid, out var instanceUid))\n\t\t{\n\t\t\tLogger.IsActivityExecutionLimitReachedInvalidArgument(_logger, request.AccountId, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentInstanceUid);\n\t\t}\n\n\t\tif (!Guid.TryParse(request!.RevisionUid, out var revisionUid))\n\t\t{\n\t\t\tLogger.IsActivityExecutionLimitReachedInvalidArgument(_logger, request.AccountId, null);\n\t\t\tthrow new RpcException(StatusInvalidArgumentRevisionUid);\n\t\t}\n\n\t\tLogger.IsActivityExecutionLimitReached(_logger, request.AccountId, request.InstanceUid, request.RevisionUid);\n\n\t\ttry\n\t\t{\n\t\t\tvar revisionCreatedDate = _workflowV1GrpcMapper.Map<Timestamp, DateTime>(request.RevisionCreatedDate);\n\n\t\t\tvar isLimitReached = _workflowClient.IsActivityExecutionLimitReached(\n\t\t\t\trequest!.AccountId,\n\t\t\t\tinstanceUid,\n\t\t\t\trevisionUid,\n\t\t\t\trevisionCreatedDate,\n\t\t\t\trequest.ActivityExecutionCount);\n\n\t\t\tactivity?.SetStatus(ActivityStatusCode.Ok);\n\t\t\treturn Task.FromResult(new IsActivityExecutionLimitReachedResponse {IsLimitReached = isLimitReached});\n\t\t}\n\t\tcatch (ArgumentException argEx)\n\t\t{\n\t\t\tLogger.IsActivityExecutionLimitReachedInvalidArgument(_logger, request.AccountId, argEx);\n\t\t\tthrow HandleArgumentException(activity, argEx);\n\t\t}\n\t\tcatch (PublicException publicEx)\n\t\t{\n\t\t\tLogger.IsActivityExecutionLimitReachedFailed(_logger, request.AccountId, publicEx);\n\t\t\tthrow HandlePublicException(activity, publicEx);\n\t\t}\n\t\tcatch (Exception ex) when (ex is not RpcException)\n\t\t{\n\t\t\tLogger.IsActivityExecutionLimitReachedFailed(_logger, request.AccountId, ex);\n\t\t\tthrow HandleUnknownException(activity, ex);\n\t\t}\n\t}\n\n\tprivate static RpcException HandleArgumentException(Activity? activity, ArgumentException argEx)\n\t{\n\t\tactivity?.AddException(argEx);\n\n\t\tvar status = new Google.Rpc.Status\n\t\t{\n\t\t\tCode = (int)StatusCode.InvalidArgument,\n\t\t\tMessage = string.Empty,\n\t\t\tDetails =\n\t\t\t{\n\t\t\t\tAny.Pack(argEx.ToRpcDebugInfo())\n\t\t\t}\n\t\t};\n\n\t\treturn status.ToRpcException();\n\t}\n\n\tprivate static RpcException HandleUnknownException(Activity? activity, Exception ex)\n\t{\n\t\tactivity?.AddException(ex);\n\n\t\tvar status = new Google.Rpc.Status\n\t\t{\n\t\t\tCode = (int)StatusCode.Internal,\n\t\t\tMessage = string.Empty,\n\t\t\tDetails =\n\t\t\t{\n\t\t\t\tAny.Pack(ex.ToRpcDebugInfo())\n\t\t\t}\n\t\t};\n\n\t\treturn status.ToRpcException();\n\t}\n\n\tprivate static RpcException HandlePublicException(Activity? activity, PublicException ex)\n\t{\n\t\tactivity?.AddException(ex);\n\t\tvar statusCode = GetStatusCodeFromFailReason(ex.Reason);\n\n\t\tvar status = new Google.Rpc.Status\n\t\t{\n\t\t\tCode = (int)statusCode,\n\t\t\tMessage = ex.Message,\n\t\t\tDetails =\n\t\t\t{\n\t\t\t\tAny.Pack(ex.ToRpcDebugInfo()),\n\t\t\t\tAny.Pack(new ErrorInfo\n\t\t\t\t{\n\t\t\t\t\tDomain = nameof(PublicException),\n\t\t\t\t\tReason = ex.Reason.ToString(),\n\t\t\t\t\tMetadata =\n\t\t\t\t\t{\n\t\t\t\t\t\t{ nameof(ex.Message), ex.Message },\n\t\t\t\t\t\t{ nameof(ex.InternalMessage), ex.InternalMessage }\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t};\n\n\t\treturn status.ToRpcException();\n\t}\n\n\tprivate static StatusCode GetStatusCodeFromFailReason(PublicException.FailReason failReason)\n\t{\n\t\treturn failReason switch\n\t\t{\n\t\t\tPublicException.FailReason.NonexistentObject => StatusCode.NotFound,\n\t\t\tPublicException.FailReason.InvalidArgument => StatusCode.InvalidArgument,\n\t\t\tPublicException.FailReason.InvalidState => StatusCode.FailedPrecondition,\n\t\t\tPublicException.FailReason.InternalError => StatusCode.Internal,\n\t\t\tPublicException.FailReason.TemporarilyUnavailable => StatusCode.Unavailable,\n\t\t\tPublicException.FailReason.PermissionDenied => StatusCode.PermissionDenied,\n\t\t\tPublicException.FailReason.ObjectAlreadyExists => StatusCode.AlreadyExists,\n\t\t\t_ => StatusCode.Internal, // Default case\n\t\t};\n\t}\n\n\tprivate static void ValidateUser(UserAccount? user)\n\t{\n\t\tif (user == null)\n\t\t{\n\t\t\tthrow new RpcException(new Status(StatusCode.InvalidArgument, \"User is null\"));\n\t\t}\n\t}\n\n\tprivate void ValidateAndParseUserUid(string userUid, int accountId, out Guid userAccountUid)\n\t{\n\t\tif (!Guid.TryParse(userUid, out userAccountUid))\n\t\t{\n\t\t\tLogger.UserUidFormatError(_logger, userUid, accountId);\n\t\t\tthrow new RpcException(\n\t\t\t\tnew Status(\n\t\t\t\t\tStatusCode.InvalidArgument,\n\t\t\t\t\t\"User.Uid is malformed\"));\n\t\t}\n\t}\n\n\tprivate void ValidateWorkflowName(string workflowName)\n\t{\n\t\tif (string.IsNullOrEmpty(workflowName))\n\t\t{\n\t\t\tLogger.WorkflowFormatError(_logger);\n\t\t\tthrow new RpcException(new Status(StatusCode.InvalidArgument, \"WorkflowName is null or empty\"));\n\t\t}\n\t}\n\n\tprivate Core.Domain.Model.UserAccount? LoadUserAccountSafe(int accountId, Guid userAccountUid)\n\t{\n\t\tvar userAccount = _userAccountRepository.LoadByUid(accountId, userAccountUid);\n\n\t\tif (userAccount == null)\n\t\t{\n\t\t\tLogger.UserAccountNotFound(_logger, userAccountUid, accountId);\n\t\t\tthrow new RpcException(\n\t\t\t\tnew Status(\n\t\t\t\t\tStatusCode.NotFound,\n\t\t\t\t\t$\"User {userAccountUid} not found in account {accountId}\"));\n\t\t}\n\n\t\treturn userAccount;\n\t}\n}\n\n#nullable restore\n#endif\n",
      "relevance_score": 0.85
    },
    {
      "path": "/Users/shuaib.tabit/Documents/Atlas/src/Core.Domain/GlobalSuppressions.cs",
      "content": "\ufeff// This file is used by Code Analysis to maintain SuppressMessage\n// attributes that are applied to this project.\n// Project-level suppressions either have no target or are given\n// a specific target and scoped to a namespace, type, member, etc.\n\nusing System.Diagnostics.CodeAnalysis;\n\n[assembly: SuppressMessage(\"Style\", \"IDE0007:Use implicit type\", Justification = \"initial effort to suppress warnings\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.PopulateResourceContexts``1(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.ABAC.Data.ResourceContext},System.Collections.Generic.Dictionary{System.String,ADEXS.Core.Domain.Model.Agreement},System.Collections.Generic.Dictionary{ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.Metadatas}},System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}@,System.Boolean,System.Collections.Generic.List{System.String})\")]\n[assembly: SuppressMessage(\"Style\", \"IDE0007:Use implicit type\", Justification = \"initial effort to suppress warnings\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.CreateAgreementDictionaryDedupMultipleExternalIdReferences(System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement})~System.Collections.Generic.Dictionary{System.String,ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Build\", \"CA1003:Change the event 'CompletedPage' to replace the type 'ADEXS.Core.Domain.FileOperations.Interfaces.CompletedDelegate' with a generic EventHandler, for example EventHandler<T>, where T is a valid EventArgs\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~E:ADEXS.Core.Domain.FileOperations.Interfaces.IOperation.CompletedPage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.CoreAisModelKeys\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.DefaultCoreAttributeKeys\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.DefaultEssentialsAttributeKeys\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.DefaultMaxAttributeKeys\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.DefaultPlusAttributeKeys\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.EssentialsAisModelKeys\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.MaxAisModelKeys\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Adm.AdmUtilities.ClauseFields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Aom.AomConstants.AmendmentTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Aom.AomConstants.PrimaryTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Aom.AomConstants.SecondaryTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Aom.AomConstants.StandaloneTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Aom.AomConstants.SupplementTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult.Errors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.Models.PartySaveResult.Errors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.DataReviewResultXml.ReviewedObjects\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CommonMetadataField._allowedValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Constants.PrestoConstants.StringColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Helpers.WorkflowStatusQueryHelper.AllStatuses\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Helpers.WorkflowStatusQueryHelper.FinishedStatuses\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Helpers.WorkflowStatusQueryHelper.RunningStatuses\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoQueryResults.columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoQueryResults.data\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReport.DefaultAggregateReportColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReport.DefaultReportColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReport.DefaultAggregateReportColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReport.DefaultReportColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.DefaultReportColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.CaseInsensitiveColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.DefaultReportColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReport.DefaultAggregateReportColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReport.DefaultReportColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReport.DefaultReportColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReport.ClmOnlyColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReport.DefaultColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport.DefaultReportColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.DefaultReportColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.DefaultReportColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyMetadataGroup.Sets\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyMetadataSet.Metadata\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIXmlAutofillAnalysis.StagedMetadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AnalyzedValueXml.Instances\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataXml.OtherAnalyzedValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataXml.RulesApplied\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.Messages\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper._outUserConversionTaskIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadatasResult.ResultItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Translation.Utilities.Converter.BaseTranslationConverter.ExportTranslations\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.PagingAndFiltering.SortColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AccountSettings.GetAiModelList(System.String,System.Collections.Generic.List{System.String})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AccountSettings.GetSettingListValue(System.String,System.Collections.Generic.List{System.String})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.AddDurationUnitColumn(System.Collections.Generic.Dictionary{System.String,LanguageExt.Option{System.String}},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.BuildAgreementRelationshipList(System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Adm.Model.AdmAgreement})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementRelationship}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.BuildPartyContacts(System.String,System.String,System.Guid)~System.Collections.Generic.List{DocuSign.Adm.Api.Models.PartyContact}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.ExpandAgreements(System.Collections.Generic.List{ADEXS.Core.Domain.Adm.Model.AdmAgreement})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.ModifyAgreementFields(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},ADEXS.Core.Domain.Model.UserAccount)~System.ValueTuple{System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},LanguageExt.Option{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.ModifyAgreementFields(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},ADEXS.Core.Domain.Model.UserAccount,System.Func{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter,System.Boolean})~System.ValueTuple{System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},LanguageExt.Option{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.ModifyDurationFilterQueries(System.Collections.Generic.Dictionary{System.String,LanguageExt.Option{System.String}},System.Collections.Generic.List{System.ValueTuple{System.String,System.Boolean}},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Models.GroupMappingResponse.#ctor(ADEXS.Core.Types.Enums.UpsertGroupMappingResultStatus,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Models.MetaDataProcessReviewItemResult.#ctor(ADEXS.Core.Types.Enums.StagedMetadataReviewProcessResultStatus,System.Guid,System.Collections.Generic.List{System.String},System.String,System.Nullable{System.DateTime})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Models.RulesConfigBasicDetails.IsValid(System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.ValidationError{ADEXS.Core.Types.Enums.UpsertRulesConfigErrorType}}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Models.RulesConfigBasicDetails.IsValid(System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.ValidationError{ADEXS.Core.Types.Enums.UpsertRulesConfigErrorType}}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.AIConfigurationUtilities.AnalyzersToLabelGroup(System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.Analyzer},System.Collections.Generic.List{System.ValueTuple{System.String,System.String}})~ADEXS.Core.Domain.AIConfiguration.Models.LabelGroup\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.DataTypeHelper.IsCustomAttributeSupported(ADEXS.Core.Domain.Model.MetadataField,ADEXS.Core.Types.Enums.AttributeFieldType@,RulesEngineAPIClient.Model.DataType@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.DataTypeHelper.IsStandardAttributeSupported(ADEXS.Core.Domain.Repository.AgreementRepository.AgreementField,ADEXS.Core.Types.Enums.AttributeFieldType@,RulesEngineAPIClient.Model.DataType@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.DataTypeHelper.IsSupported(ADEXS.Core.Types.Enums.DataType,ADEXS.Core.Types.Enums.AttributeFieldType@,RulesEngineAPIClient.Model.DataType@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.GetSystemMappings(System.Guid,ADEXS.Core.Domain.AIConfiguration.Models.LabelGroup,ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.RuleModelMapping}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.IAomRestClient.Get``1(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.String,System.String,System.Collections.Generic.List{System.String})~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbstractUrl.IsSpringCMUrl(System.String,System.Uri@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AdminUrl.DeleteAttributeGroupConfirmation(System.Collections.Generic.List{System.String},System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.IAttributesManagementFramework.GetAttributes(ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Attributes.AttributeRegistry}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.IAttributesManagementFramework.GetUnsupportedAttributes(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Attributes.AttributeRegistry}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult.#ctor(System.Boolean,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult.#ctor(System.Boolean,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError},ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadatasResult)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.Models.PartySaveResult.#ctor(System.Boolean,System.Guid,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.ValidationAttribute.#ctor(System.DateTime,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.ValidationAttribute.#ctor(System.Int64,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.ValidationAttribute.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.ValidationAttribute.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.Int64,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.ValidationAttribute.#ctor(System.TypeCode)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.IAccountMigrationHealthCheckService.GetAllGroupsMigrationHealth(System.Int32,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus})~System.Collections.Generic.IDictionary{System.Guid,System.Boolean}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.IUserGroupMigrationService.EnqueueGroupsForMigration(System.Collections.Generic.List{System.Guid},ADEXS.Core.Domain.Model.UserAccount)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.IUserGroupMigrationService.EnqueueUsersForMigration(System.Collections.Generic.List{System.Guid},ADEXS.Core.Domain.Model.UserAccount)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.IAccountConversionSnapshotHelper.GetEntitySettingNames(ADEXS.Core.Types.Enums.SettingLevel,ADEXS.Core.Domain.Model.Settings)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataProvider.CLMCustomAttributesDataReviewProvider.ParseAttributeUpdates(System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataProvider.IDataReviewProvider.ParseAttributeUpdates(System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataProvider.IDataReviewProvider.ParseAttributeUpdates(System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataProvider.IDataReviewProvider.Save(System.Guid,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataProvider.StandardFieldsDataReviewProvider.ParseAttributeUpdates(System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.IDataReviewService.GetStagedMetadata(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.IDataReviewService.LoadAiSuggestions(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata},System.String,System.Globalization.CultureInfo)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.IDataReviewStandardAttributeHelper.ParseUpdatedAttributeAndUpdateAgreement(ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError},System.Globalization.CultureInfo)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DacDocGenApiMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocumentAssemblerMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxOpenXmlMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.OpenPackagePartXml(System.IO.Packaging.PackagePart,System.Xml.XmlNamespaceManager@)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.IMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.IXmlMergeProcessorFactory.GetInstanceOfLatestMergeProcessor(System.String@)~ADEXS.Core.Domain.DocumentCreation.IXmlMergeProcessor\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.OpenXmlExtensions.GetTopLevelContentControls(DocumentFormat.OpenXml.Wordprocessing.SdtElement)~System.Collections.Generic.List{DocumentFormat.OpenXml.Wordprocessing.SdtElement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.PdfXmlMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMergeProcessorFactory.GetInstanceOfLatestMergeProcessor(System.String@)~ADEXS.Core.Domain.DocumentCreation.IXmlMergeProcessor\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.AbstractSyncRequestProcessor`1.DataIsValid(System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.AbstractSyncRequestProcessor`1.IsValid(System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.AccountSyncRequestProcessor.DataIsValid(System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.BaseGroupSyncRequestProcessor.DataIsValid(System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.GroupSyncRequestProcessor.DataIsValid(System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.GroupSyncRequestProcessor.IsValid(System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.GroupUsersSyncRequestProcessor.IsValid(System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.ISyncRequestProcessor.IsValid(System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.MemberShipSyncRequestProcessor.DataIsValid(System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.RoleSyncRequestProcessor.IsValid(System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.RoleUsersSyncRequestProcessor.DataIsValid(System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.RoleUsersSyncRequestProcessor.IsValid(System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.UserSyncRequestProcessor.DataIsValid(System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.GetEosMetadata(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String@,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.GetParentEosFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String,System.String@)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.IExternalObjectsStorage.GetEosMetadata(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String@,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.IExternalObjectsStorage.GetParentEosFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String,System.String@)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.FileOperationsUtil.TryParsePageNumbers(System.Int32,System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Int32}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.FileOperationsUtil.TryParsePageNumbers(System.Int32,System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Int32}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.Interfaces.IAtlasPdfOperations.ConcatenateIntoPDF(System.Collections.Generic.List{ADEXS.Core.Domain.FileOperations.PDF.ConcatDocItem},System.String,System.Boolean,System.String,DocuSign.CLM.ContentStorage.Shared.ISharedStorage,System.Int32,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.Interfaces.IAtlasPdfOperations.ConcatenateIntoPDF(System.Collections.Generic.List{ADEXS.Core.Domain.FileOperations.PDF.ConcatDocItem},System.String,System.Boolean,System.String,DocuSign.CLM.ContentStorage.Shared.ISharedStorage,System.Int32,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.Interfaces.IAtlasPdfOperations.MergeDocument(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.Interfaces.IFileSplitterPdf.SplitPage(System.String,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.String})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.Interfaces.IImagePdfOperationsPdf.GeneratePreviewImagePages(System.String,System.String,System.String,System.String,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.String}@)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.Interfaces.IImagePdfOperationsPdf.GeneratePreviewImagePages(System.String,System.String,System.String,System.String,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.String}@)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.Interfaces.IPdfEmbeddedDocumentProperties.GetPdfEmbeddedDocumentProperties(System.Collections.Generic.IEnumerable{System.String},System.IO.Stream)~System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.Interfaces.ITesseractExtractorPdf.SplitPdf(System.String,System.String,System.String,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Util.FileIO.TempFile}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.Interfaces.ITikaExtractorPdf.CheckPdfForImages(System.IO.Stream,ADEXS.Core.Domain.AccountSettings,System.Boolean@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.CheckPdfForImages(System.IO.Stream,ADEXS.Core.Domain.AccountSettings,System.Boolean@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.ConcatenateIntoPDF(System.Collections.Generic.List{ADEXS.Core.Domain.FileOperations.PDF.ConcatDocItem},System.String,System.Boolean,System.String,DocuSign.CLM.ContentStorage.Shared.ISharedStorage,System.Int32,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.GeneratePreviewImagePages(System.String,System.String,System.String,System.String,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.String}@)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.MergeDocument(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Pdf.PdfOperators.IPdfOperatorFactory.GetOperators``1(System.Int32,System.Int32,System.String)~System.Collections.Generic.List{``0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.DocumentGlyphsRepository.IsSupportedForGlyphExtraction(ADEXS.Core.Domain.Model.FileData,ADEXS.Core.Domain.GlyphProcessing.GlyphExtractionStatus@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.DocumentGlyphsRepository.IsSupportedForGlyphExtractionForTransient(System.Int32,System.Guid,System.Guid,ADEXS.Core.Domain.GlyphProcessing.GlyphExtractionStatus@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.IDocumentGlyphsRepository.InsertIntoGlyphExtractionQueue(System.Int32,System.Guid,System.Collections.Generic.List{System.Guid},System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.IDocumentGlyphsRepository.IsSupportedForGlyphExtraction(ADEXS.Core.Domain.Model.FileData,ADEXS.Core.Domain.GlyphProcessing.GlyphExtractionStatus@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.IDocumentGlyphsRepository.IsSupportedForGlyphExtractionForTransient(System.Int32,System.Guid,System.Guid,ADEXS.Core.Domain.GlyphProcessing.GlyphExtractionStatus@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.IDocumentGlyphsRepository.Load(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.IDocumentGlyphsRepository.LoadSearchablePdfGlyphs(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.IDocumentGlyphsRepository.LoadTransient(System.Int32,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.IDocumentGlyphsRepository.Save(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.IDocumentGlyphsRepository.Save(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage},ADEXS.Core.Types.Enums.GlyphExtractionStatus)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.IDocumentGlyphsRepository.SaveTransient(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.IDocumentGlyphsRepository.SaveTransient(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage},ADEXS.Core.Types.Enums.GlyphExtractionStatus)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.GlyphsPersistenceBase.CompressAndSave(System.Int32,System.String,System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage},System.TimeSpan)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.IDocumentGlyphsPersistence.LoadTransient(System.Int32,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.IDocumentGlyphsPersistence.SaveTransient(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage},System.TimeSpan)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.IDocumentGlyphsPersistence.SaveTransient(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage},System.TimeSpan,ADEXS.Core.Types.Enums.GlyphExtractionStatus)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.IGlyphsPersistence.Load(System.Int32,System.Guid,ADEXS.Core.Domain.Model.FileData)~System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.IGlyphsPersistence.Save(System.Int32,System.Guid,ADEXS.Core.Domain.Model.FileData,System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage},System.TimeSpan)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.IGlyphsPersistence.Save(System.Int32,System.Guid,ADEXS.Core.Domain.Model.FileData,System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage},System.TimeSpan,ADEXS.Core.Types.Enums.GlyphExtractionStatus)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.IGlyphProcessingService.ReconcileDocumentSelectionOffsetsWithGlyphs(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelectionData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.IGlyphProcessingService.ReconcileOffsetsWithGlyphs(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelectionData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.IGlyphProcessingService.ReconcileOffsetsWithGlyphs(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelectionData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.IGlyphProcessingService.ReconcileOffsetsWithGlyphs(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelectionData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.IGlyphProcessingService.ReconcileOffsetsWithGlyphs(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelectionData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Javelin.IJavelinService.GetSalesforceGenTemplates(ADEXS.Core.Domain.Javelin.SalesForceRequestSchema,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Javelin.SalesforceGenTemplate}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Lookup.DefaultActions.FlattenActionItem(System.Collections.Generic.List{ADEXS.Core.Domain.Model.ActionItem},System.String,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Model.ActionMenuItem},ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Lookup.DefaultActions.GetDefaultActions(ADEXS.Core.Domain.Model.ActionScope,ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ActionMenuItem}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Lookup.Pager.GetNextPager~ADEXS.Core.Domain.Lookup.Pager\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.Interfaces.IEmailService.FireEmailFailedEvent(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.Interfaces.IEmailService.FireEmailSucceededEvent(System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.BasePayloadBuilder.FormatEmailLinks(System.Collections.Generic.List{System.String},System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.BuildErrorMessageList(ADEXS.Core.Domain.Model.QueueTasks.PartySync.PartySyncValidationCounts,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailResourceManager)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.BuildUpdateMessageList(System.Int32,System.Int32,System.Int32,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailResourceManager)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.DuplicateExternalId(ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.NoChangeUpdate(ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.PartyIdError(ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.PartyNameNotUniqueOrEmpty(ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party},ADEXS.Core.Types.Enums.PartyOperation)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.SalesforcePartyUpdateError(ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.ValidateParties(System.Collections.Generic.List{System.Tuple{ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation}},System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party},ADEXS.Core.Domain.Model.QueueTasks.PartySync.PartySyncValidationCounts@)~System.Collections.Generic.List{System.Tuple{ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CompleteExternalReviewReviewerEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.String,System.DateTime,System.Boolean,ADEXS.Core.Domain.Model.Documents,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document},System.DateTime,System.Boolean,System.DateTime,System.String,ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Model.ExternalReviewParticipant)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CompleteExternalReviewSenderEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.String,System.DateTime,System.Boolean,ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Model.Documents,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document},ADEXS.Core.Domain.Model.ExternalReviewParticipant)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CompleteExternalReviewWatcherEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.DateTime,ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Model.Documents,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document},ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Model.ExternalReviewParticipant)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CompleteExternalReviewWatcherEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.DateTime,ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Model.Documents,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document},ADEXS.Core.Domain.Model.ExternalReviewParticipants,ADEXS.Core.Domain.Model.ExternalReviewParticipant)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewFailedAutoMatchEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String,System.String,System.DateTime,System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewAttachment},System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewFailedAutoMatchEmailOnBehalf.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String,System.String,System.DateTime,System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewAttachment},System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewWatcherEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.DateTime,ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Model.Documents,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document},ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Model.UserAccount,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewWatcherEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.DateTime,ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Model.Documents,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document},ADEXS.Core.Domain.Model.ExternalReviewParticipants,ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Model.UserAccount,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.IGetReformatters.GetReformatters~System.Collections.Generic.List{ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.IWorkflowVariableReformatter}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Messaging.SendDeliveryAttachedEmail(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents,System.Collections.Generic.List{System.Net.Mail.Attachment})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.SendDsEmailServiceHelper.SendSeparateEmailsToRecipients(ADEXS.Core.Domain.Messaging.ISendDsEmailService,DSEmailAPIClient.Model.PostEmailRequest,System.Int32,System.Int32,System.Boolean,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Guid},System.Int32)~System.Collections.Generic.List{System.ValueTuple{DSEmailAPIClient.Model.EmailAddress,System.Boolean,System.String}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.IMetadataLoader.AddAdditionalSetFields(System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance})~System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.IMetadataLoader.Get(ADEXS.Core.Domain.MetadataLoader.Models.Field)~System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.Metadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.IMetadataLoader.OrderFields(System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.Configuration})~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.Configuration}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.IMetadataLoaderService.Get(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.MetadataConfigurationCollection,System.Collections.Generic.Dictionary{ADEXS.Core.Domain.MetadataLoader.Models.ValidationReasonCode,System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.Value}}@)~System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.IMetadataLoaderService.Get(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.MetadataConfigurationCollection,System.Collections.Generic.Dictionary{ADEXS.Core.Domain.MetadataLoader.Models.ValidationReasonCode,System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.Value}}@)~System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.MetadataLoaderService.Get(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.MetadataConfigurationCollection,System.Collections.Generic.Dictionary{ADEXS.Core.Domain.MetadataLoader.Models.ValidationReasonCode,System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.Value}}@)~System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Account.AllowDeleteRoles~System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Account.SetAllowDeleteRoles(System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Agreement.IsValid(System.Collections.Generic.List{System.String}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Agreement.IsValid(System.Collections.Generic.List{System.String}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch.IsValid(ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatchValidationErrors@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.ValueInstance},System.Double)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.ICheckoutable.CanCheckin(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.ICheckoutable.CanCheckin(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.ISearchable.ShouldDeleteFromIndex(System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.ModelCollection`1.GetUidList~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus.GetUserAssignedGroupUids~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportDataField.ActionExpression(System.String@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportDataFieldAggregate.ActionExpression(System.String@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportDataFieldGrouping.ActionExpression(System.String@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig.GetSalesforceObjectIdFormula~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCancelExternalReview(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCheckin(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCheckin(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCheckout(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~ADEXS.Core.Types.Enums.CheckOutAllowed\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCompare(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCompleteExternalReview(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanDelete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanDownload(ADEXS.Core.Domain.Model.UserAccount,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,ADEXS.Core.Domain.Exceptions.PublicException@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanDraft(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanResendExternalReview(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanSendExternalReview(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanUndoCheckout(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.UndoCheckoutContext,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanUndoCheckout(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanUpdate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.ShouldDeleteFromIndex(System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DynamicDropDownManager.GetValues(System.Collections.Generic.List{System.String},ADEXS.Core.Domain.Model.UserAccount,System.Nullable{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.IDynamicDropDownDataSource.GetValues(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Nullable{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ElasticFacade.ElasticFacadeTaskPayloadHelper.GenerateTaskBulk(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.ElasticFacade.ClmEntityType,System.Collections.Generic.List{System.String},ADEXS.Core.Domain.Model.ElasticFacade.EventScenario)~CLM.MessageDefines.Tasks.ElasticFacadeTask\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ElasticFacade.ElasticFacadeTaskPayloadHelper.Serialize(System.Collections.Generic.List{ADEXS.Core.Domain.Model.ElasticFacade.PostClmEventRequest})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Folder.ShouldDeleteFromIndex(System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.IDocTypesValidationRule.IsValid(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.IMetadataField.AllowedDropDownValues~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.IMetadataField.LocalizedAllowedDropDownValues~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Intellego.AnalyzeOptions.#ctor(System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.Analyzer},System.Collections.Generic.List{System.Int32},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.IPaginatable`1.GetCollection~System.Collections.Generic.List{`0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataField.CanChangeDataType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataField.CanDelete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataField.CanRename(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataField.SetAllowedValues(System.Collections.Generic.List{System.String})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataGroup.CanRename(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Metadatas.GetMetadataGroupUids~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Metadatas.SegregateByGroup(System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Metadatas}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataSet.CanDelete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataSet.CanRename(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.PartyAgreementTrees.GetAllStandaloneIndependentSecondaryAndTypelessNodes(System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementNode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.PartyAgreementTrees.LoadDocumentSecurity(System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementNode})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.SyncParty.PartySyncTemplateAttribute.#ctor(System.String,System.Boolean,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Reporting.ReportData`1.GetData(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.PrestoQueryResults,ADEXS.Core.Domain.Model.Reporting.ReportQueryContext)~LanguageExt.EitherAsync{LanguageExt.Common.Error,ADEXS.Core.Domain.Presto.PrestoQueryResults}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Reporting.ReportData`1.GetQueryInitiators~LanguageExt.Seq{System.Func{ADEXS.Core.Domain.Model.Reporting.ReportQueryContext,ADEXS.Core.Domain.Presto.PrestoQueryResults}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Reporting.ReportData`1.GetQueryInitiators~LanguageExt.Seq{System.Func{ADEXS.Core.Domain.Model.Reporting.ReportQueryContext,ADEXS.Core.Domain.Presto.PrestoQueryResults}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Reporting.ReportData`1.TryParse(ADEXS.Core.Domain.Model.Reporting.ReportDataContainer)~LanguageExt.Option{`0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SavedSearchV2.DeserializeColumns~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SavedSearchV2.SerializeColumns(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SecurityTable.addGroup(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.String}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SecurityTable.addGroup(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.String}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SecurityTable.addUser(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.String}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SecurityTable.addUser(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.String}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.UserAccounts.GetEnabledUserAccounts~System.Collections.Generic.List{ADEXS.Core.Domain.Model.UserAccount}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Workflow.Instance.GetNextLocalContextId~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Workflow.WebServices.ToList~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Workflow.WebService}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Workflow.WorkerPools.GetNames~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Workflow.WorkItem.ShouldDeleteFromIndex(System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NewsActionTypeBase.GetNewsSubscribers(ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NewsActionTypeBase.ObjectTypeCastfromIModel``1(ADEXS.Core.Domain.Model.Base.IModel,``0@)~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Organization.IDSOrganizationManagementService.GetMultiUserInfo(System.Guid,System.String,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DSUserProfileInfo}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.GetInstance(ADEXS.Core.Domain.Model.Account)~`0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.GetInstance(ADEXS.Core.Domain.Model.UserAccount)~`0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.GetInstance(System.Int32)~`0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.GetInstance``1(``0)~`0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.ObjectMetadataValuesDataTable~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.TranslateSortExpressionToSortColumnAndDirection(System.String,System.String@,System.Boolean@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.TranslateSortExpressionToSortColumnAndDirection(System.String,System.String@,System.Boolean@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainWorkflowObjectPersistence`1.WorkflowInstance(System.Int32)~`0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.IExternalDataMapPersistence.LoadAllExternalSystemsByScmKey(System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.Model.ExternalDataMap}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ISfInvoiceMergeStatusPersistence.LoadAllByTransactionId(System.Guid,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.SfInvoiceMergeStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ISfInvoiceMergeStatusPersistence.SaveBatch(System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.SfInvoiceMergeStatus},System.TimeSpan)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountPersistence.AccountStat(System.Int32,System.Int32@,System.Int32@,System.Int32@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowPersistence.LoadApprovalTemplateParticipantsByStepUid(System.Guid,System.Guid)~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomMenuItemPersistence.GetUidFromItemId(System.String,System.String@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomRulePersistence.DeleteActionMultiple(System.Int32,System.Guid,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomRulePersistence.DeleteFilterMultiple(System.Int32,System.Guid,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentAssemblyFormFieldPersistence.SaveBatch(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{System.String,System.String}})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FileCheckupQueuePersistence.LoadNext(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.Model.FileCheckupQueuePersistence.FileCheckupQueueItem}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.SanityCheckCopy(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,System.Guid,System.Int32@,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAccountPersistence.GetCanDeleteRoles(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAccountPersistence.SetCanDeleteRoles(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAgreementPersistence.LoadByExternalId(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAgreementPersistence.LoadByExternalIds(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAgreementPersistence.LoadByPartyId(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.String})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAgreementRelationshipPersistence.LoadByAgreementId(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementRelationship}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAIDocumentBatchPersistence.LoadMany(System.Int32,ADEXS.Core.Domain.SmartAgreement.Models.Enums.AnalysisTriggerSource)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAIDocumentBatchPersistence.LoadMany(System.Int32,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentStatus})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAIDocumentBatchPersistence.LoadMany(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAIDocumentBatchPersistence.LoadManyByCreator(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAIDocumentBatchPersistence.LoadManyByParentUid(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAIDocumentStatisticsPersistence.DecrementCounters(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentStatisticsCounterType})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAIDocumentStatisticsPersistence.DeleteMany(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentStatisticsCounterType})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAIDocumentStatisticsPersistence.LoadMany(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentStatisticsCounterType})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentStatistics}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAIDocumentTransactionPersistence.LoadMany(System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentSubStatus},System.Collections.Generic.List{System.String},ADEXS.Core.Types.Enums.AIProviderType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAIDocumentTransactionPersistence.LoadMany(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAIDocumentTransactionPersistence.LoadMany(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentSubStatus})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAIDocumentTransactionPersistence.LoadManyByBatchUid(System.Int32,System.Guid,System.Nullable{System.Int32})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAIRulesEngineMappingPersistence.LoadMany(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ICounterpartyPersistence.LoadByAccount(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ICustomMenuItemPersistence.GetUidFromItemId(System.String,System.String@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDelegationAccessPersistence.LoadAll~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DelegationAccess}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocLauncherConfigPersistence.Load(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentPersistence.FilterOutTrashedDocumentUids(System.Int32,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentSelectionPersistence.LoadByAccountIdAndDocumentUid(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentSelectionPersistence.LoadByAccountIdAndDocumentUidAndFileDataUid(System.Int32,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentSelectionPersistence.LoadByAccountIdAndDocumentUidAndFileDataUidAndAndWorkflowInstanceUidAndUserAccountUid(System.Int32,System.Guid,System.Guid,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentSelectionPersistence.LoadByAccountIdAndDocumentUidAndFileDataUidAndWorkflowInstanceUid(System.Int32,System.Guid,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentSelectionPersistence.LoadByAccountIdAndDocumentUidAndType(System.Int32,System.Guid,ADEXS.Core.Types.Enums.DocumentSelectionType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentSelectionPersistence.LoadByAccountIdAndDocumentUidAndTypeAndFileDataUid(System.Int32,System.Guid,ADEXS.Core.Types.Enums.DocumentSelectionType,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentSelectionPersistence.LoadByAccountIdAndDocumentUidAndTypeAndFileDataUidAndWorkflowInstanceUid(System.Int32,System.Guid,ADEXS.Core.Types.Enums.DocumentSelectionType,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentSelectionPersistence.LoadByAccountIdAndDocumentUidAndTypeAndFileDataUidAndWorkflowInstanceUidAndUserAccountUid(System.Int32,System.Guid,ADEXS.Core.Types.Enums.DocumentSelectionType,System.Guid,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentSelectionPersistence.Save(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentTypesPersistence.Load(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentTypesPersistence.Update(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IExternalSecurityMapPersistence.LoadAll``1(System.Int32,System.String)~System.Collections.Generic.List{``0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IFileMetaDataPersistence.LoadByFileDataUid(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FileMetaData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IFolderPersistence.LoadAncestorsAndChildrenByFolderUids(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IFolderPersistence.LoadSecurityDescendants(System.Int32,System.Guid)~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IFolderPersistence.SanityCheckCopy(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,System.Guid,System.Int32@,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IFormConfigurationPersistence.LoadAllByAccountId(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FormConfiguration}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IFormConfigurationPersistence.LoadAllVersions(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FormConfiguration}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IMetadataGroupPersistence.LoadDisplayGroupNamesByAccountIdAndFolderUid(System.Int32,System.Guid)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IMetadataPersistence.LoadByFieldUidAndObjectUids(System.Guid,System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{System.Guid,ADEXS.Core.Types.Enums.ObjectType}})~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IMetadataPersistence.LoadFromAncestorsWithMatchingMetadata(System.Int32,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String,System.Collections.Generic.List{System.String})~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IMetadataPersistence.MetadataLoadByObjectUids(System.Int32,System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{System.Guid,System.Int32}})~System.Collections.Generic.Dictionary{ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.Metadatas}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IMetadataPersistence.MetadataLoadMinimalSelectionByObjectUids(System.Int32,System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{System.Guid,System.Int32}},System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{System.Guid,System.Int32}})~System.Collections.Generic.Dictionary{ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.Metadatas}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.InboundFaxPersistence.Provision(ADEXS.Core.Domain.Model.UserAccount,System.Int32,System.Guid,System.Int32@)~ADEXS.Core.Domain.Model.InboundFaxes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IndexQueuePersistence.LoadNext(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.Model.IndexQueuePersistence.IndexQueueItem}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.INotificationPersistence.DeleteDigestRows(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IObjectDestructionCertificatePersistence.DeleteFromList(System.Int32,System.Collections.Generic.List{ADEXS.Core.Domain.Model.ObjectDestructionCertificate})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IObjectDestructionCertificatePersistence.LoadByAccountBeforeDate(System.Int32,System.DateTime,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ObjectDestructionCertificate}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IObjectHistoryPersistence.LoadByObjectIdentifier(ADEXS.Core.Types.Enums.HistoryObjectType,System.String,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ObjectHistory}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IObligationPersistence.LoadByAgreementId(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Obligation}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IObligationPersistence.LoadByPartyId(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Obligation}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IOfficeWebAppsHistoryPersistence.GetEditors(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.OfficeWebAppsHistory}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IOfficeWebAppsLockPersistence.GetCurrentLocks(System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.OfficeWebAppsLock}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IOfficeWebAppsLockPersistence.GetExpiredLocks(System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.OfficeWebAppsLock}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IPublicShareLinkPersistence.GetSharedFolders(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISealExtractionsPersistence.CheckIfSealExtractionsExist(System.Int32,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISealExtractionsPersistence.Load(System.Int32,System.String)~System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISealExtractionsPersistence.Save(System.Int32,System.Guid,System.String,System.String,System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISealScorecardsPersistence.Load(System.Int32,System.String)~System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.ScorecardResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISealScorecardsPersistence.Save(System.Int32,System.Guid,System.String,System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.ScorecardResponse})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISecurityAccessRulePersistence.LoadByAccountId(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISecurityAccessRulePersistence.LoadByFilter(System.Int32,System.String,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISecurityMetadataPersistence.LoadByAccountId(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.SecurityMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISecurityPersistence.Load(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole},System.Int32)~ADEXS.Core.Domain.Model.ExplicitSecurities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISlidingWindowPersistence.Load(System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.SlidingWindowEntry}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISlidingWindowPersistence.Load(System.String,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.SlidingWindowEntry}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISlidingWindowPersistence.Load(System.String,System.Int32,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.SlidingWindowEntry}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISlidingWindowPersistence.Save(System.Collections.Generic.List{ADEXS.Core.Domain.Model.SlidingWindowEntry},System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IStagedMetadataReviewPersistence.LoadMany(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IStagedMetadataReviewPersistence.LoadMany(System.Int32,System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IStagedMetadataReviewPersistence.LoadMany(System.Int32,System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IStagedMetadataReviewPersistence.LoadMany(System.Int32,System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IStagedMetadataReviewPersistence.LoadMany(System.Int32,System.Guid,System.String,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IStagedMetadataReviewPersistence.LoadManyWithAIDocumentBatchUid(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IStagedMetadataReviewPersistence.LoadManyWithoutDataObjectByBatchUid(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IStagedMetadataReviewPersistence.LoadManyWithoutDataObjectByBatchUidAndAttributeUid(System.Int32,System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IStagedMetadataReviewPersistence.UpdateStatusMany(System.Int32,System.Collections.Generic.List{System.Guid},System.Guid,System.Guid,System.String,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,ADEXS.Core.Types.Enums.StagedMetadataStatus,System.DateTime)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IStaticSecurityPersistence.Load(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole},System.Int32)~ADEXS.Core.Domain.Model.StaticSecurities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IStaticSecurityPersistence.LoadGrid(System.Int32,System.Guid,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole},System.Int32)~ADEXS.Core.Domain.Model.SecurityTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISyncPersistence.DeleteFoldersFromSyncFolderProfiles(System.Int32,System.Guid,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISyncPersistence.ExpireProfileManifest(System.Int32,System.Guid,System.DateTime,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ITrackedContentPersistence.Load(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ITrackedContentPersistence.Save(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ITrackedFieldPersistence.LoadAll(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ITrackedFieldStatusPersistence.LoadAll(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ITrackedFieldStatusPersistence.LoadAll(System.Int32,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ITrackedFieldStatusPersistence.LoadAll(System.Int32,System.Guid,System.Guid,System.Nullable{ADEXS.Core.Domain.Model.DocLauncherConfig.ReviewStatus},System.Nullable{ADEXS.Core.Domain.Model.DocLauncherConfig.SyncStatus})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ITranslationPersistence.DeleteTranslationUpdateLog(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ITranslationPersistence.SaveTranslationUpdateLog(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ITwoFactorKeysPersistence.Load(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TwoFactorKey}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IUserGroupMigrationStatusPersistence.LoadByAccountId(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IUserGroupMigrationStatusPersistence.LoadByEntityType(System.Int32,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IWatchedDocumentsPersistence.LoadDocumentWatchers(System.Int32,System.Guid)~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IWatchedDocumentsPersistence.LoadWatchedDocuments(System.Int32,System.Guid)~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.LoadCalculated(System.Int32,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ScheduledCustomRulePersistence.LoadNext(System.Int32,System.Int32,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.CustomRuleTask}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SealExtractionsPersistence.CheckIfSealExtractionsExist(System.Int32,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityPersistence.LoadGrid(System.Int32,System.Guid,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole},System.Int32,System.Boolean)~ADEXS.Core.Domain.Model.SecurityTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityQueuePersistence.LoadNext(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.Model.SecurityQueuePersistence.SecurityQueueItem}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SupportPersistence.GetExpiringPrimaryAccountHolder(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.Model.SupportPersistence.ExpiringAccountRecord}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.DefinitionPersistence.LoadNames(System.Int32,System.Guid,System.Boolean,System.Boolean)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.ExecuteWithParameters(System.Int32,System.Guid,ADEXS.Core.Domain.Model.CustomReport,ADEXS.Core.Domain.Lookup.Pager,System.Int32@)~System.Data.DataTableCollection\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.ExecuteWithParameters(System.Int32,System.Guid,ADEXS.Core.Domain.Model.CustomReport,ADEXS.Core.Domain.Model.CustomReportParameters,ADEXS.Core.Domain.Lookup.Pager,System.Int32@)~System.Data.DataTableCollection\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.AddAttributeGroupBy(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetActorTypeAttributes(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetAttributeColumnNames(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetAttributeSelectionForAdmins(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetAttributeSelectionForFullSubs(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetUserTableJoinConditions(System.Int32,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.ModifyAgreementFields(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},ADEXS.Core.Domain.Model.UserAccount)~System.ValueTuple{System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},LanguageExt.Option{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.ModifyAgreementFields(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},ADEXS.Core.Domain.Model.UserAccount,System.Func{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter,System.Boolean})~System.ValueTuple{System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},LanguageExt.Option{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.ParseOutAttributeFilters(ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.DateQueryHelper.FillInEmptyDates(ADEXS.Core.Domain.Presto.PrestoQueryResults,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.DateRange},System.String,System.Int32,System.Int32)~System.Collections.Generic.List{System.Collections.Generic.List{System.Object}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.EscapeAndStringify(System.Collections.Generic.List{System.String})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetMultipleSortCols(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.String,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetPrestoAdmConnector~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetPrestoClmSecurityConnector~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetPrestoClmSerConnector~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.GetComparator(System.Collections.Generic.List{System.String},System.Nullable{ADEXS.Core.Types.Enums.ReportFilterComparator},System.Nullable{System.Boolean})~ADEXS.Core.Types.Enums.ReportFilterComparator\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.TryGetActorClauseInJsonColumn(ADEXS.Core.Domain.Model.ActorReportFilter,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.TryGetActorClauseInJsonColumn(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.ActorReportFilter},System.String,ADEXS.Core.Domain.Model.UserAccount,System.ValueTuple{System.String,System.Boolean}[]@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.WorkflowStatusQueryHelper.AdjustStatuses(System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus})~System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.WorkflowStatusQueryHelper.GetRunningStatusClause(System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.WorkflowStatusQueryHelper.GetStatusClause(System.String,System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.WorkflowStatusQueryHelper.ShouldQueryFinishedScopes(System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus},System.String[],System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.StringListReportFilter},System.Boolean,ADEXS.Core.Types.Enums.LogicalOperator)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.WorkflowStatusQueryHelper.ShouldQueryRunningScopes(System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.ExpandRows(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Column})~LanguageExt.Option{System.Collections.Generic.List{System.Collections.Generic.List{System.Object}}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.IsRepeatingAttr(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Column},System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.FormatCurrency(ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Collections.Generic.List{System.ValueTuple{System.String,System.Object}})~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.GetLinkUrl(ADEXS.Core.Domain.Model.UserAccount,System.Object,System.String,System.String,System.String,System.Collections.Generic.List{System.ValueTuple{System.String,System.Object}})~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.GetObjectUrl(ADEXS.Core.Domain.Model.UserAccount,System.Object,System.String,System.String,System.Collections.Generic.List{System.ValueTuple{System.String,System.Object}})~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.NestedRepeatingAttributePipeSeparator(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid},System.Object,System.String,System.Collections.Generic.List{System.ValueTuple{System.String,System.Object}},System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Object},System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.RepeatingAttributePipeSeparator(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid},System.Object,System.Collections.Generic.List{System.ValueTuple{System.String,System.Object}},System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Object},System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Object},System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoFunctions.ColumnInValues(System.String,System.Collections.Generic.List{System.String},System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoFunctions.ColumnNotInValues(System.String,System.Collections.Generic.List{System.String})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoFunctions.LowerLikeMultiple(System.String,System.Collections.Generic.List{System.String},System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoFunctions.LowerNotLikeMultiple(System.String,System.Collections.Generic.List{System.String})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.CommonSelections.FinalAttributeColumnsSelect(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.CommonSelections.FinalAttributeColumnsSelect(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.CommonSelections.FinalDocumentColumnsSelect(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.CommonSelections.FinalDocumentNameSelect(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.CommonSelections.FinalDocumentNameSort~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.CommonSelections.FinalDocumentUidSelect(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsSubQueries.DocumentAttributeColumns(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsSubQueries.DocumentAttributeFilters(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},ADEXS.Core.Types.Enums.LogicalOperator)~System.ValueTuple{System.String,System.Boolean}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsSubQueries.DocumentEmptyAttributeFilters(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter})~LanguageExt.Option{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsSubQueries.DocumentUidToAttributeMap(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReportHelper.ConsolidateActivityNames(System.Collections.Generic.List{System.Collections.Generic.List{System.Object}})~System.Collections.Generic.List{System.Collections.Generic.List{System.Object}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Selections.DocumentActorAttributesFinalSelect(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Selections.DocumentAttributesAllDocsSelectPerfQuery(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.String)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Selections.DocumentAttributesColumns(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Int32)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Selections.DocumentAttributeSetNumbers(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Selections.DocumentAttributesFinalSelect(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.String,System.Int32)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Selections.DocumentAttributesFinalSelectPerfQuery(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.String)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Selections.DocumentNullPlaceHolderAttributeColumns(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.String)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.ConditionallyCreateInitialAttrFilter(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},ADEXS.Core.Types.Enums.LogicalOperator)~LanguageExt.Option{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.ContainsFolderColumns(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.FilterFolderColumns(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.GeneratePerformanceImprovedQueries(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.LogicalOperator,System.Boolean,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.String,System.String[],System.String[],System.Boolean,System.String[],System.String[],System.String[],System.String[])~System.ValueTuple{System.String[],System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentWhereConditions.DocumentAttributes(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String},System.Boolean)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentWhereConditions.Documents(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters,System.String,System.String[]@,System.String[]@,System.String[]@,System.String[]@,System.Boolean,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentWhereConditions.Folders(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters,System.String[]@,System.String[]@,System.String[]@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.AddSortToColumns(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.ClearOutCurrentSort(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.GetCustomReportType~ADEXS.Core.Types.Enums.ReportType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReport.GetDefaultReportColumns(System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport.Selections.FinalGroupByDetailsSelect(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReport.Selections.FinalGroupBySelect(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.Selections.ExpandedRowGroupedBy(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.Selections.FinalGroupByStepDetailsSelect(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReportWhereConditions.GenerateWhereConditions(ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus},System.ValueTuple{System.String,System.Boolean}[],System.ValueTuple{System.String,System.Boolean}[],System.ValueTuple{System.String,System.Boolean}[],System.Boolean)~System.ValueTuple{System.String[],System.String[]}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryWhereConditions.Finished(ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReportConfiguration,ADEXS.Core.Domain.Model.UserAccount,System.String[],System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.DateRange})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryWhereConditions.Running(ADEXS.Core.Domain.Model.UserAccount,System.String[],System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.DateRange})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryWhereConditions.Stages(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Provisioning.AccountProvisioningService.GetAccountRolesByProduct(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.SourceProductName)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Provisioning.Role}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyCommon.AppendCustomFormFields(System.Xml.XmlDocument,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.FormRepository.FormInputFieldEx},System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Reporting.Interfaces.IEntityField.ActionExpression(System.String@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AccountIsActive(ADEXS.Core.Domain.Model.Account,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AccountIsActive(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.CreateLinkedAccount(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,ADEXS.Core.Types.Enums.AccountStatus,System.String@)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.FireAccountChangedEvent(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.FireAccountStatusEvent(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.GetHttpCleint~System.Net.Http.HttpClient\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SaveAccountStatusChange(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.AccountStatus,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SetAccountPaid(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.IAccountRepository.CreateLinkedAccount(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,ADEXS.Core.Types.Enums.AccountStatus,System.String@)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.IAccountRepository.GetCanDeleteRoles(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.IAccountRepository.SaveAccountStatusChange(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.AccountStatus,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.IAccountRepository.SetAccountPaid(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.IAccountRepository.SetCanDeleteRoles(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AddressBook.AddressBookSearch.GetSingleRole~ADEXS.Core.Types.Enums.UserRole\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementField.#ctor(System.String,ADEXS.Core.Types.Enums.DataType,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.AgreementRepository.Tag},System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementField.#ctor(System.String,ADEXS.Core.Types.Enums.DataType,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.AgreementRepository.Tag},System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementService.CreateOrUpdateAgreementAndAddParent(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.AgreementProperties,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{System.String}@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementService.CreateOrUpdateAgreementAndRelationships(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementRelationship},System.Collections.Generic.List{System.String}@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement})~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementRepository.GetChildDocumentTypes~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementRepository.GetTimeUnitsAndLocalizedName~System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,System.String}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementRepository.LoadByExternalIds(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementRepository.LoadByPartyId(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean,System.Collections.Generic.List{System.String})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementRepository.LoadRelationshipsByAgreementId(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementRelationship}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementRepository.Update(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement},System.Boolean)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementService.CreateOrUpdateAgreementAndAddParent(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.AgreementProperties,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{System.String}@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementService.CreateOrUpdateAgreementAndAddParent(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.AgreementProperties,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{System.String}@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementService.CreateOrUpdateAgreementAndRelationships(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementRelationship},System.Collections.Generic.List{System.String}@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementService.CreateOrUpdateAgreementAndRelationships(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementRelationship},System.Collections.Generic.List{System.String}@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IElasticAgreementRepository.LoadAgreements(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IPartyAgreementTreesHelper.FilterOutTrashedAgreements(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.IPartyAgreementTreesHelper.LoadDocumentsFromAgreements(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementNode})~System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.Document}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentBatchRepository.Save(ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatchValidationErrors@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentUploadService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IAIDocumentUploadTask,ADEXS.Core.Domain.Model.Document@)~ADEXS.Core.Types.Enums.AIDocumentUploadStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIRulesEngineApiService.GetRuleModelApi(ADEXS.Core.Domain.Model.UserAccount,System.Guid@)~RulesEngineAPIClient.Api.IRuleModelApi\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIRulesEngineApiService.GetRulesConfigApi(ADEXS.Core.Domain.Model.UserAccount,System.Guid@)~RulesEngineAPIClient.Api.IRulesConfigApi\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIRulesEngineApiService.GetRulesConfigExecApi(ADEXS.Core.Domain.Model.UserAccount,System.Guid@)~RulesEngineAPIClient.Api.IRulesConfigExecApi\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentBatchRepository.LoadByParentUid(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentBatchRepository.LoadByRulesConfigUid(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentBatchRepository.LoadMany(System.Int32,ADEXS.Core.Domain.SmartAgreement.Models.Enums.AnalysisTriggerSource)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentBatchRepository.LoadMany(System.Int32,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentStatus})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentBatchRepository.LoadManyByCreator(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentBatchRepository.Save(ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatchValidationErrors@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentStatisticsRepository.DecrementCounters(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentStatisticsCounterType})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentStatisticsRepository.DeleteMany(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentStatisticsCounterType})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentStatisticsRepository.LoadMany(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentStatisticsCounterType})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentStatistics}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionProvider.GetExtractionsByLabelName(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.List{RulesEngineAPIClient.Model.Label})~System.Collections.Generic.Dictionary{System.String,System.Tuple{RulesEngineAPIClient.Model.LabelExtraction,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext}}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionProvider.GetLogicAppsToRun(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.LogicApp}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionProvider.PostBulkFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeFeedbackData},System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.LabelGroupType},System.Guid,System.Guid,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionProvider.PostFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.List{System.String},System.Guid,System.String,ADEXS.Core.Types.Enums.StagedMetadataStatus,ADEXS.Core.Types.Enums.AttributeFieldType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionRepository.LoadAllBatchUidIncludingMirroredTransactions(System.Int32,System.Guid,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionRepository.LoadAllIncludingMirroredTransactions(System.Int32,System.Guid,ADEXS.Core.Types.Enums.AIDocumentStatus,ADEXS.Core.Types.Enums.AIDocumentSubStatus)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionRepository.LoadMany(System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentSubStatus},System.Collections.Generic.List{System.String},ADEXS.Core.Types.Enums.AIProviderType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionRepository.LoadMany(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionRepository.LoadMany(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentSubStatus})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionRepository.LoadMany(System.Int32,System.Guid,System.Nullable{System.Guid},ADEXS.Core.Types.Enums.AIDocumentStatus,ADEXS.Core.Types.Enums.AIDocumentSubStatus)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionRepository.LoadManyByBatchUid(System.Int32,System.Guid,System.Nullable{System.Int32})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionRepository.SaveMany(System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentUploadService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IAIDocumentUploadTask,ADEXS.Core.Domain.Model.Document@)~ADEXS.Core.Types.Enums.AIDocumentUploadStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIRulesEngineApiService.GetRuleModelApi(ADEXS.Core.Domain.Model.UserAccount,System.Guid@)~RulesEngineAPIClient.Api.IRuleModelApi\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIRulesEngineApiService.GetRulesConfigApi(ADEXS.Core.Domain.Model.UserAccount,System.Guid@)~RulesEngineAPIClient.Api.IRulesConfigApi\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIRulesEngineApiService.GetRulesConfigExecApi(ADEXS.Core.Domain.Model.UserAccount,System.Guid@)~RulesEngineAPIClient.Api.IRulesConfigExecApi\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIRulesEngineMappingRepository.LoadMany(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIRulesEngineMappingRepository.SaveMany(System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIRulesEngineRepository.GetRuleModels(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{RulesEngineAPIClient.Model.RuleModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIXmlHelper.GenerateXml(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch,ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata},System.String)~System.Xml.XmlElement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IAIXmlHelper.SaveDataReviewResultXml(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata})~ADEXS.Core.Domain.DataReview.Models.DataReviewResultXml\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IStagedMetadataRepository.LoadByBatchUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IStagedMetadataRepository.LoadByBatchUidAndAttributeUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IStagedMetadataRepository.LoadByFileDataUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IStagedMetadataRepository.LoadByFileDataUidAndAttributeUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IStagedMetadataRepository.LoadWithoutDataObjectByBatchUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IStagedMetadataRepository.LoadWithoutDataObjectByBatchUidAndAttributeUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IStagedMetadataRepository.UpdateStatusMany(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid},System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String,ADEXS.Core.Types.Enums.StagedMetadataStatus,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IStagedMetadataRepository.UpdateStatusMany(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid},System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String,ADEXS.Core.Types.Enums.StagedMetadataStatus,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IStartAIBulkAnalysisTransactionsService.InsertTaskIntoQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,ADEXS.Core.Types.Enums.AIProviderType,System.Collections.Generic.List{System.Guid},System.Collections.Generic.List{System.Guid},System.Guid,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataRepository.UpdateStatusMany(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid},System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String,ADEXS.Core.Types.Enums.StagedMetadataStatus,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.IAIMockedDataHelper.TryGetMockedData(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.AnalysisResult}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.IAIMockedDataHelper.TryGetMockedData(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.AnalysisResult}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.IIntellegoExtractionsRepository.Load(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.IIntellegoExtractionsRepository.Save(System.Int32,System.Guid,System.String,System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.AnalysisResult})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.LogFeedbackItems(System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.FeedbackItem},ADEXS.Core.Util.Loggers.IDiscreetLogger)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.IAISFeedbackProcessor.PostFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.String},System.Guid,ADEXS.Core.Util.Loggers.IDiscreetLogger,System.String,System.Guid,ADEXS.Core.Types.Enums.AttributeFieldType,ADEXS.Core.Types.Enums.StagedMetadataStatus,System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.APILicenseRepository.FireAPILicenseChangedEvent(ADEXS.Core.Domain.Model.APILicense,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Approval.ApprovalWorkflowRepository.BuildAndStartApprovalWorkflow(ADEXS.Core.Domain.Model.ApprovalWorkflow,ADEXS.Core.Domain.Model.UserAccount,System.Int64@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.IAsposeContentReplacementRepository.ReplaceText(ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.OfficeContentReplacementModel})~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.IAsposeTrackedContentRepository.RetrieveContentControlsWithLocationsFromDocument(Aspose.Words.Document)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.ContentControlPositionModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.IAsposeTrackedContentRepository.RetrieveTrackedContent(ADEXS.Core.Domain.Model.Document)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.OperableDocument.GetFilePath~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AutoNumberRepository.IAutoNumberRepository.Save(ADEXS.Core.Domain.Model.AutoNumber,System.Boolean)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AutoNumberRepository.IAutoNumberRepository.Validate(ADEXS.Core.Domain.Model.AutoNumber)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.BaseRepository`1.ValidateAttributes(`0,System.Collections.Generic.List{System.String})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractMetadataService.Load(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Clause.ClauseSmartContractMetadata@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.IClauseFlowsService.CreateFlow(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.Collections.Generic.List{ADEXS.ClauseIOClient.Models.Common.FlowStep})~System.Threading.Tasks.Task{ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.Responses.FlowResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.IClauseFlowsService.UpdateFlow(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.String,System.Collections.Generic.List{ADEXS.ClauseIOClient.Models.Common.FlowStep})~System.Threading.Tasks.Task{ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.Responses.FlowResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.IClauseSmartContractMetadataService.Load(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Clause.ClauseSmartContractMetadata@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.FirstAndLastCharacterIsValid(System.String,ADEXS.Core.Types.Enums.ObjectType,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.IsNodeNameDuplicate(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.IsNodeNameValid(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String@,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.UserGroup.IUserGroupMigrationStatusRepository.LoadAllUserGroupMigrationStatusByAccountId(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.UserGroup.IUserGroupMigrationStatusRepository.LoadByEntityType(System.Int32,ADEXS.Core.Types.Enums.MigrationEntityType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.UserGroup.IUserGroupMigrationStatusRepository.LoadByEntityTypeAndStatus(System.Int32,ADEXS.Core.Types.Enums.MigrationEntityType,System.Collections.Generic.List{System.Int32})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}@)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.LoadByAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Utilities.PagingAndFiltering,System.Int32@)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.Update(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}@,System.Boolean)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.VerifyUniqueExternalIdField(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.VerifyUniqueNameField(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.String@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.ICounterpartyRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}@)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.ICounterpartyRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}@)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.ICounterpartyRepository.FindParties(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.ICounterpartyRepository.IsExternalIdUniqueOrEmpty(ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.ICounterpartyRepository.IsNameNonEmptyAndUnique(ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party},System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.ICounterpartyRepository.LoadByAccount(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.ICounterpartyRepository.LoadByAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Utilities.PagingAndFiltering,System.Int32@)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.ICounterpartyRepository.LoadByAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Utilities.PagingAndFiltering,System.Int32@)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.ICounterpartyRepository.Update(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}@,System.Boolean)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.ICounterpartyRepository.Update(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}@,System.Boolean)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.ICounterpartyRepository.VerifyUniqueExternalIdField(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.ICounterpartyRepository.VerifyUniqueFields(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.Boolean)~System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.ICounterpartyRepository.VerifyUniqueNameField(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.String@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.GetStarterDashboardTab~ADEXS.Core.Domain.Model.DashboardTab\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Dashboard.IDashboardRepository.CreateNewCommandCenterTab(System.String,System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{ADEXS.Core.Types.Enums.DashboardViewerType,System.Guid}},ADEXS.Core.Types.Enums.DashboardViewerType)~ADEXS.Core.Domain.Model.DashboardTab\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Dashboard.IDashboardRepository.SaveTab(ADEXS.Core.Domain.Model.DashboardTab,ADEXS.Core.Domain.Model.DashboardWidgets,System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{ADEXS.Core.Types.Enums.DashboardViewerType,System.Guid}})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.AddElementToListIfFlagIsSet(System.Collections.Generic.List{System.String},Newtonsoft.Json.Linq.JToken,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.IsNameValid(System.String,System.Guid,System.Int32,System.Boolean,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.Helper.IDocLauncherCsvParseHelper.GetCsvCellValuesForSelectedCellHeaders(ADEXS.Core.Domain.Model.Document,System.Collections.Generic.HashSet{System.String})~System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.String}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.IDocLauncherCsvRowLookupRepository.FindMatchingRows(System.Int32,ADEXS.Core.Domain.Model.Document,System.String,System.String,System.Int32,System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.DropdownPosition}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.IDocLauncherCsvRowLookupRepository.LoadRowByName(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.Cell}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.IDocLauncherCsvRowLookupRepository.LoadRowByRowNumber(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.Cell}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.IDocLauncherCsvRowLookupRepository.ParseHeader(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.IFormConfigurationRepository.IsNameValid(System.String,System.Guid,System.Int32,System.Boolean,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.IFormConfigurationRepository.LoadAllByAccountId(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FormConfiguration}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.IFormConfigurationRepository.LoadAllVersions(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FormConfiguration}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.IFormConfigurationRepository.ParseConfigFull(System.String,System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.FormConfiguration.FormConfigurationPropertyMap)~System.Collections.Generic.List{Newtonsoft.Json.Linq.JObject}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.ITrackedFieldRepository.LoadAll(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.ITrackedFieldRepository.Save(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.ITrackedFieldStatusRepository.LoadAll(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.ITrackedFieldStatusRepository.LoadAll(System.Int32,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.ITrackedFieldStatusRepository.LoadAll(System.Int32,System.Guid,System.Guid,System.Nullable{ADEXS.Core.Domain.Model.DocLauncherConfig.ReviewStatus},System.Nullable{ADEXS.Core.Domain.Model.DocLauncherConfig.SyncStatus})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.ITrackedFieldStatusRepository.Save(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentAttachmentSet.Attach(System.Collections.Generic.List{System.Guid})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.DocumentContainsTrackedChanges(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@)~ADEXS.Core.Types.Enums.TrackedChangesStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CanManipulateDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Boolean,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.ListFolderContentsPaged(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.Boolean,System.Boolean,System.Boolean,System.Int32@,System.Int32@,System.Int32@,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.ListFolderContentsPaged(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.Boolean,System.Boolean,System.Boolean,System.Int32@,System.Int32@,System.Int32@,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.ListFolderContentsPaged(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.Boolean,System.Boolean,System.Boolean,System.Int32@,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.ListFolderContentsPaged(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.Boolean,System.Boolean,System.Boolean,System.Int32@,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.ListFolderContentsWithPager(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.Boolean,System.Boolean,System.Boolean,System.Int32@,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadSearchResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Search.SearchResults,System.Boolean,ADEXS.Core.Domain.Lookup.Pager,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Search.SearchResult}@,System.Boolean)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoggedSave(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.MoveMultipleToFolderDetailedErrors(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.Folder,System.String,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},Newtonsoft.Json.Linq.JObject)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FailedPasteResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.MoveMultipleToTrashWithDetailedErrors(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FailedPasteResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@,ADEXS.Core.Domain.Model.Document,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.IsDocumentInMotion(System.Int32,System.Guid,ADEXS.Core.Domain.Model.DocumentScopes@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentSearchQuery.GetSearchSnippets(System.Guid)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.DoDuplicateHandling(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.FailOnDuplicate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.IsDocumentNameDuplicate(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.IsDocumentNameDuplicateBasedOnDuplicateHandlingSetting(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.Guid,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.NoDuplicateCheck(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.RenameDuplicate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.UpdateNoDuplicateCheck(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder@,ADEXS.Core.Domain.Model.Metadatas,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.GetFolderIdPath(System.Int32,System.Guid,System.Boolean@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.MoveFoldersToTrash(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.SanityCheckPaste(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,ADEXS.Core.Domain.Model.Folder,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.SanityCheckPaste(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,ADEXS.Core.Domain.Model.Folder,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.ICombineDocumentRepository.MergeDocuments(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.DocumentMergeItem},System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentCompareRepository.DocumentContainsTrackedChanges(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@)~ADEXS.Core.Types.Enums.TrackedChangesStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.ClearWatchedDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.ClearWatchedDocuments(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.ClearWatchedDocumentsForAllUsers(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.FilterDocumentUidsByTrashAndSecurity(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.FilterDocumentUidsByTrashAndSecurityFromAgreements(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement})~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.FilterOutTrashedDocumentUids(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.IsTooLargeForInProcessClipboardOperation(ADEXS.Core.Domain.Model.UserAccount,System.Int32,System.Collections.Generic.List{System.Guid})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.ListFolderContentsWithPager(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.Boolean,System.Boolean,System.Boolean,System.Int32@,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.ListFolderContentsWithPager(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.Boolean,System.Boolean,System.Boolean,System.Int32@,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.LoadListFromAgreements(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement},System.Boolean,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.LoadSearchResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Search.SearchResults,System.Boolean,ADEXS.Core.Domain.Lookup.Pager,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Search.SearchResult}@,System.Boolean)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.LoggedSave(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.MoveMultipleToFolderDetailedErrors(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.Folder,System.String,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FailedPasteResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@,ADEXS.Core.Domain.Model.Document,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.SaveWatchedDocuments(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentScopeRepository.IsDocumentInMotion(System.Int32,System.Guid,ADEXS.Core.Domain.Model.DocumentScopes@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDuplicateHandlingRepository.DoDuplicateHandling(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDuplicateHandlingRepository.IsDocumentNameDuplicate(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDuplicateHandlingRepository.IsDocumentNameDuplicateBasedOnDuplicateHandlingSetting(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.Guid,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IFolderRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder@,ADEXS.Core.Domain.Model.Metadatas,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IFolderRepository.GetFolderIdPath(System.Int32,System.Guid,System.Boolean@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IFolderRepository.LoadAncestorsAndChildrenByFolderUids(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IFolderRepository.LoadSecurityDescendants(System.Int32,System.Guid)~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IFolderRepository.MoveFoldersToTrash(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IFolderRepository.MoveMultipleToFolderDetailedErrors(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FailedPasteResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IFolderRepository.SanityCheckPaste(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,ADEXS.Core.Domain.Model.Folder,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IFolderRepository.SanityCheckPaste(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,ADEXS.Core.Domain.Model.Folder,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IFolderRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.ILogicalFileSystem.CreateFolderWrapper(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Boolean,System.Boolean,System.Int32@)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.ILogicalFileSystem.GetPartialFolderPaths(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{ADEXS.Core.Domain.Model.Folder,System.String}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IMoveNodeRepository.MoveNodesToFolderDetailedErrors(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.Base.INode},System.Guid,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.IMoveNodeValidator})~ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodesResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IXDocumentReader.GetXDocument(ADEXS.Core.Domain.Model.Base.IUserContext,System.String,System.Guid@)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.CreateFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Boolean,System.Boolean,System.Int32@)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.CreateFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Boolean,System.Boolean,System.Int32@,ADEXS.Core.Domain.Model.Metadatas)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.CreateFolderWrapper(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Boolean,System.Boolean,System.Int32@)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.IMoveNodeValidator.Validate(System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode},ADEXS.Core.Domain.Model.Folder)~ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodeValidatorResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.ValidateDocumentReminderResult.#ctor(ADEXS.Core.Types.Enums.ValidateDocumentReminderStatus,System.Collections.Generic.List{System.String})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.XDocumentReader.GetXDocument(ADEXS.Core.Domain.Model.Base.IUserContext,System.String,System.Guid@)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.IDocumentSelectionRepository.LoadAllForAllVersions(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.IDocumentSelectionRepository.LoadAllForCurrentVersion(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.IDocumentSelectionRepository.LoadForAllVersionsByType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Types.Enums.DocumentSelectionType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.IDocumentSelectionRepository.LoadForCurrentVersion(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Nullable{System.Guid},ADEXS.Core.Types.Enums.DocumentSelectionType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.IDocumentSelectionRepository.LoadForCurrentVersionByInstanceUid(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.IDocumentSelectionRepository.LoadForCurrentVersionByType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Types.Enums.DocumentSelectionType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.IDocumentSelectionRepository.LoadForCurrentVersionByUserAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Nullable{System.Guid},ADEXS.Core.Types.Enums.DocumentSelectionType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.IDocumentSelectionRepository.LoadForPreviousVersion(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Types.Enums.DocumentSelectionType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.IDocumentSelectionRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelectionData},System.Nullable{System.Guid},ADEXS.Core.Types.Enums.DocumentSelectionType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentTypes.DocumentTypesRepository.Update(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType},System.Boolean@)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentTypes.IDocumentTypesRepository.Load(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentTypes.IDocumentTypesRepository.Update(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType},System.Boolean@)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentTypes.IDocumentTypesRepository.Update(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType},System.Boolean@)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.DecodeWorkflowRegistrationInfo(System.String,System.Guid@,System.Guid@,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.DecodeWorkflowRegistrationInfo(System.String,System.Guid@,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.SelfRegisterForEventByQueueName(ADEXS.Core.Domain.Model.EventRegistration,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.IEventRepository.FireEvent(ADEXS.Core.Domain.Model.Account,CLM.MessageDefines.CommonEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.IEventRepository.FireEvent(ADEXS.Core.Domain.Model.UserAccount,CLM.MessageDefines.CommonEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.IEventRepository.FireEvent(System.Int32,CLM.MessageDefines.CommonEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.IEventRepository.FireEventWithPacing(ADEXS.Core.Domain.Model.Account,CLM.MessageDefines.CommonEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.IEventRepository.SelfRegisterForEventByQueueName(ADEXS.Core.Domain.Model.EventRegistration,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.LoadDsAccountAndDsGroupFromGroup(System.Int32,System.Guid,System.Guid@,System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.LoadDsAccountAndDsUserFromUser(ADEXS.Core.Domain.Model.UserAccount,System.Guid@,System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.LoadDsAccountAndDsUserFromUser(System.Int32,System.Guid,System.Guid@,System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.LoadUserAccountUidFromDsIds(System.String,System.String,System.Int32@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.IExternalDataMapRepository.LoadDsAccountAndDsGroupFromGroup(System.Int32,System.Guid,System.Guid@,System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.IExternalDataMapRepository.LoadDsAccountAndDsUserFromUser(ADEXS.Core.Domain.Model.UserAccount,System.Guid@,System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.IExternalDataMapRepository.LoadDsAccountAndDsUserFromUser(System.Int32,System.Guid,System.Guid@,System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.IExternalDataMapRepository.LoadUserAccountUidFromDsIds(System.String,System.String,System.Int32@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper.EnqueueConversionRequest(System.String,ADEXS.Core.Domain.Model.ExternalReviewEmailAttachment,System.TimeSpan,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.ExternalReviewDocumentMatchingService.CanAutoMatch(ADEXS.Core.Domain.Model.ExternalReview,System.Collections.Generic.IList{ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewAttachment},System.Collections.Generic.IList{ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.MatchedDocumentInfo}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.IExternalReviewDocumentMatchingService.CanAutoMatch(ADEXS.Core.Domain.Model.ExternalReview,System.Collections.Generic.IList{ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewAttachment},System.Collections.Generic.IList{ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.MatchedDocumentInfo}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.IExternalReviewEmailAttachmentBuilder.BuildAttachments(System.Int32,System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.Document})~System.Collections.Generic.List{ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailAttachment}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.IExternalReviewRepository.IsExternalReviewInvalid(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.IExternalReviewRepository.LoadExternalReviewDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalReview)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.IExternalReviewRepository.Send(ADEXS.Core.Domain.Model.UserAccount,System.DateTime,System.String,System.String,ADEXS.Core.Domain.Model.ExternalReviewParticipant,System.Collections.Generic.List{ADEXS.Core.Domain.Model.ExternalReview.Document},ADEXS.Core.Domain.Model.ExternalReviewParticipants,System.Boolean,System.Boolean,ADEXS.Core.Types.Enums.EmailAppearance)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.IExternalReviewRepository.WorkflowSend(ADEXS.Core.Domain.Model.UserAccount,System.DateTime,System.String,System.String,ADEXS.Core.Domain.Model.ExternalReviewParticipant,System.Collections.Generic.List{ADEXS.Core.Domain.Model.ExternalReview.Document},ADEXS.Core.Domain.Model.ExternalReviewParticipants,System.Boolean,System.Boolean,System.Boolean,ADEXS.Core.Types.Enums.EmailAppearance)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalSecurityMapRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ExternalSystemType,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalSecurityMapRepository.DeleteAll(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ExternalSystemType,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalSecurityMapRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalSecurityMap,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormDocumentRepository.CheckIn(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.FormRepository.FormInputField},ADEXS.Core.Domain.Model.Form,ADEXS.Core.Types.Constants.FileDataSource)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormDocumentRepository.GetCustomFormData(ADEXS.Core.Domain.Model.Document)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.FormRepository.FormInputField}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormDocumentRepository.GetExtendedCustomFormData(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Metadatas)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.FormRepository.FormInputFieldEx}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormDocumentRepository.TryParseFormData(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.FormRepository.FormInputField}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.IAccessControlRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AccessControl})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.IApiWhiteListedUriRepository.LoadByAccountId(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ApiWhiteListedUri}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.IExternalSecurityMapRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ExternalSystemType,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.IExternalSecurityMapRepository.DeleteAll(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ExternalSystemType,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.IExternalSecurityMapRepository.LoadAll``1(System.Int32,ADEXS.Core.Types.Enums.ExternalSystemType)~System.Collections.Generic.List{``0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.IExternalSecurityMapRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalSecurityMap,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.RemoveVanityEmailDomain(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.SetVanityEmailDomain(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.IQueueItemStateRepository.Status(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~ADEXS.Core.Types.Enums.QueueStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.RetrievePageImageBaseFolderFiles(System.String)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.CascadeNode.GetItems(System.Collections.Generic.List{System.String})~System.Collections.Generic.SortedList{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSetProcessor.Load~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSetProcessor.VerifySchema~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataFieldRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataField,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataGroupRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataGroup,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.AddOn(ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas)~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.GetCascadingTypeAheadValues(System.Guid,System.Guid,System.Collections.Generic.List{System.String},System.Int32)~System.Collections.Generic.SortedList{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.GetCascadingTypeAheadValues(System.Guid,System.Guid,System.Collections.Generic.List{System.String},System.Int32,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSet})~System.Collections.Generic.SortedList{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.GetMetadataFieldAllowedValues(System.Int32,System.Guid)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.IsValidCascadeValue(System.Int32,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},ADEXS.Core.Domain.Model.Metadata,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.LoadFromAncestorsWithMatchingMetadata(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String,System.Collections.Generic.List{System.String})~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.MergeMetadataFromParent(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.MetadataLoadByObjectUids(System.Int32,System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{System.Guid,System.Int32}})~System.Collections.Generic.Dictionary{ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.Metadatas}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.MetadataLoadMinimalSelectionByObjectUids(System.Int32,System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{System.Guid,System.Int32}},System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{System.Guid,System.Int32}})~System.Collections.Generic.Dictionary{ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.Metadatas}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.QueueForMetadataMerge(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.RefreshCascadingTypeAheadCache(System.Guid,System.Int32,System.Collections.Generic.List{System.String}@,System.Boolean,ADEXS.Core.Domain.Utilities.Language)~ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSet\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.RefreshCascadingTypeAheadCache(System.Guid,System.Int32,System.Collections.Generic.List{System.String}@,System.Boolean,ADEXS.Core.Domain.Utilities.Language)~ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSet\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.Validate(ADEXS.Core.Domain.Model.Metadatas,System.Globalization.CultureInfo,System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataValidationError}@,ADEXS.Core.Types.Enums.ObjectType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.Validate(ADEXS.Core.Domain.Model.Metadatas,System.Globalization.CultureInfo,System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataValidationError}@,ADEXS.Core.Types.Enums.ObjectType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataSetRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataSet,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataFieldRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataField,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataGroupRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataGroup,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.IsValidCascadeValue(System.Int32,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},ADEXS.Core.Domain.Model.Metadata,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Parse(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataPlaceHolder},ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ParseOptions)~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.RefreshCascadingTypeAheadCache(System.Guid,System.Int32,System.Collections.Generic.List{System.String}@,System.Boolean,ADEXS.Core.Domain.Utilities.Language)~ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSet\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Validate(ADEXS.Core.Domain.Model.Metadatas,System.Globalization.CultureInfo,System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataValidationError}@,ADEXS.Core.Types.Enums.ObjectType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(ADEXS.Core.Domain.Model.Metadata,System.Globalization.CultureInfo,System.String@,ADEXS.Core.Types.Enums.ObjectType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(System.String@,ADEXS.Core.Domain.Model.IMetadataField,System.Boolean,System.Globalization.CultureInfo,System.String@,ADEXS.Core.Types.Enums.ObjectType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(System.String@,ADEXS.Core.Domain.Model.Metadata,System.Globalization.CultureInfo,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(System.String@,ADEXS.Core.Domain.Model.MetadataField,System.Globalization.CultureInfo,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(System.String@,System.String,ADEXS.Core.Types.Enums.DataType,System.Boolean,System.Globalization.CultureInfo,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataSetRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataSet,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.Object}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse.#ctor(System.Guid,System.String,System.Collections.Generic.List{System.Guid},System.DateTimeOffset,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient},System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Negotiation.Model.Watcher},System.Boolean,System.DateTime,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest.#ctor(System.Collections.Generic.List{System.Guid},System.DateTimeOffset,System.String,System.String,System.String,System.String,System.String,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient},System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Negotiation.Model.Watcher},System.Boolean,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.UpdateReviewRequest.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient},System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Negotiation.Model.Watcher},System.DateTime,System.String,System.String,System.Nullable{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.INotificationRepository.IsSubscribedToObject(ADEXS.Core.Domain.Model.NotificationSubscription,System.Collections.Generic.List{ADEXS.Globals.ScmEnums.ActionType})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.IOAuthRepository.SaveApiRegistration(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Persistence.Model.APIRegistration,System.String@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.FireAPIRegistrationChangedEvent(ADEXS.Core.Domain.Persistence.Model.APIRegistration,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.SaveApiRegistration(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Persistence.Model.APIRegistration,System.String@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.IObjectHistoryRepository.LoadByObjectIdentifier(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.HistoryObjectType,System.String,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ObjectHistory}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.IObligationRepository.LoadByAgreementId(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Obligation}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.IObligationRepository.LoadByDocumentUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Obligation}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.IObligationRepository.LoadByPartyId(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Obligation}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.IOfficeWebAppsHistoryRepository.GetEditors(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.OfficeWebAppsHistory}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.IOfficeWebAppsHistoryRepository.ListOfEditors(System.Collections.Generic.List{ADEXS.Core.Domain.Model.OfficeWebAppsHistory})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.ProcessDsUserAccount(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Types.Enums.UserRole,System.Guid,ADEXS.Core.Domain.Model.DSGroupUser,System.Collections.Generic.List{System.Guid},ADEXS.Core.Domain.Model.UserAccount@,System.String@)~ADEXS.Core.Types.Enums.SyncProcessResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.SaveDsGroup(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.IDSGroup,ADEXS.Core.Domain.Model.Group@,System.String@)~ADEXS.Core.Types.Enums.SyncProcessResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.IDocuSignSyncRepository.GetSpringCmRole(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DSGroup})~System.ValueTuple{System.String,ADEXS.Core.Types.Enums.UserRole}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.IDocuSignSyncRepository.ProcessDsUserAccount(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Types.Enums.UserRole,System.Guid,ADEXS.Core.Domain.Model.DSGroupUser,System.Collections.Generic.List{System.Guid},ADEXS.Core.Domain.Model.UserAccount@,System.String@)~ADEXS.Core.Types.Enums.SyncProcessResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.IDocuSignSyncRepository.ProcessDsUserAccount(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Types.Enums.UserRole,System.Guid,ADEXS.Core.Domain.Model.DSGroupUser,System.Collections.Generic.List{System.Guid},ADEXS.Core.Domain.Model.UserAccount@,System.String@)~ADEXS.Core.Types.Enums.SyncProcessResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.IDocuSignSyncRepository.SaveDsGroup(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.IDSGroup,ADEXS.Core.Domain.Model.Group@,System.String@)~ADEXS.Core.Types.Enums.SyncProcessResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.IDSAccountsServerRepository.GetUserInfosFromRSAKey(System.Byte[],System.Byte[])~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DSUserInfo}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.IProvisioningAppDataRepository.GetAccountSettingsByPlanIdAndModuleIds(System.String,System.Collections.Generic.List{System.String})~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.QueueItemStateRepository.Status(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~ADEXS.Core.Types.Enums.QueueStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IAnalyticsReportRepository.LoadAllScopeNames(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IAnalyticsReportRepository.LoadAllStageNames(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ValueScopeNames}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IAnalyticsReportRepository.LoadAllStepDisplayNames(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ValueScopeNames}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IAnalyticsReportRepository.LoadAllStepNames(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ValueScopeNames}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IAnalyticsReportRepository.LoadAllWorkflowNames(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IAnalyticsReportRepository.LoadStageNames(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ValueScopeNames}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IReportConfigurationRepository.DeleteByCustomReportUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IReportConfigurationRepository.GetDefaultProcessInsightsReportConfiguration(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String},System.Guid)~ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IReportConfigurationRepository.LoadDefaultModernReportConfigs(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Reports.ReportConfiguration}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IReportConfigurationRepository.LoadStandardReportConfigs(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Reports.ReportConfiguration}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IReportConfigurationRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IReportConfigurationRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AccessControl},System.String,System.String,System.String@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IReportConfigurationRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AccessControl},System.String,System.String,System.String@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.IReportConfigurationRepository.SaveCopyWithCurrentUsersAccess(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.String,System.String,System.String@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.DeleteByCustomReportUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AccessControl},System.String,System.String,System.String@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.SaveCopyWithCurrentUsersAccess(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.String,System.String,System.String@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.RequestOriginRestrictionRepository.IRequestOriginRestrictionRepository.Save(ADEXS.Core.Domain.Model.RequestOriginRestriction,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.RequestOriginRestrictionRepository.IRequestOriginRestrictionRepository.ValidateAndFormatRequestOrigin(System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.RequestOriginRestrictionRepository.RequestOriginRestrictionRepository.Save(ADEXS.Core.Domain.Model.RequestOriginRestriction,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.RequestOriginRestrictionRepository.RequestOriginRestrictionRepository.ValidateAndFormatRequestOrigin(System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ScheduleRepository.ScheduleRepository.NextOccurrence(ADEXS.Core.Domain.Model.Schedule,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ScheduleRepository.ScheduleRepository.NextOccurrence(ADEXS.Core.Domain.Model.Schedule,System.Int64,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.IAnalyzerInsightsIngestionService.InitiateAnalyzerInsightsTask(System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataPlaceHolder},ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.IInsightsMetadataAggregationService.SelectMatchingDocumentMetadatas(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.MetadataPlaceHolder})~System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Requests.MetadataItem}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.ISealExtractionsRepository.CheckIfSealExtractionsExist(System.Int32,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.ISealExtractionsRepository.HasLogicAppsExtractionsCompleted(System.Collections.Generic.IList{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem},System.Collections.Generic.IList{System.String},System.Collections.Generic.IEnumerable{System.String}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.ISealExtractionsRepository.LoadSealExtractionPositions(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.ISealExtractionsRepository.LoadSealExtractions(ADEXS.Core.Domain.Model.Account,System.Guid)~System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.ISealExtractionsRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.ISealScorecardsRepository.GetScorecards(ADEXS.Core.Domain.Model.Account,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Seal.ScorecardModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.ISealScorecardsRepository.Load(ADEXS.Core.Domain.Model.Account,System.Guid,ADEXS.Core.Domain.Model.FileData)~System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.ScorecardResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.CheckIfSealExtractionsExist(System.Int32,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.HasLogicAppsExtractionsCompleted(System.Collections.Generic.IList{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem},System.Collections.Generic.IList{System.String},System.Collections.Generic.IEnumerable{System.String}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.ISecurityAccessRuleRepository.LoadRulesByAccountId(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.ISecurityAccessRuleRepository.LoadRulesByFilter(System.Int32,System.String,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.ISecurityAccessRuleRepository.SaveRule(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.ISecurityAccessRuleRepository.ValidateAndSetErrorState(ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule,ADEXS.Core.Domain.Model.Groups,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party},System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataField})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.ISecurityMetadataRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.ISecurityMetadataRepository.DeleteAll(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.ISecurityMetadataRepository.LoadByAccountId(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.SecurityMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.ISecurityMetadataRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.ISecurityMetadataRepository.SaveAll(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.SecurityMetadata},System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.ISecurityMetadataRepository.SaveAll(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.SecurityMetadata},System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityAccessRuleRepository.SaveRule(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityMetadataRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityMetadataRepository.DeleteAll(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityMetadataRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityMetadataRepository.SaveAll(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.SecurityMetadata},System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ValidateSamlResponse(System.Xml.XmlElement,ADEXS.Core.Domain.Model.Account,System.String,System.String@,System.String@,System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ValidCertDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ValidSigningCertDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.IContentReplacementRepository.ReplaceContent(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.OfficeContentReplacementModel})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.ISealContentTypeHelper.GetExtractionContentFromMetadataValue(ADEXS.SealAPIClient.Models.Responses.Objects.MetadataValue,System.String@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.ISealExtractionsHelper.FilterExtractions(System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem},System.Collections.Generic.IList{System.String})~System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.ISealExtractionsHelper.OrderExtractionsByStartOffset(System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem})~System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.ITrackedContentExtractionRepository.RetrieveTrackedContent(System.Int32,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.ITrackedContentExtractionRepository.TrackedContentExists(System.Int32,System.Guid,ADEXS.Core.Domain.Model.FileMetaDataTypes.TrackedContentExtractionData@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.SealContentTypeHelper.GetExtractionContentFromMetadataValue(ADEXS.SealAPIClient.Models.Responses.Objects.MetadataValue,System.String@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.CompareTrackedContentTaskService.InitiateAsyncProcess(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Types.Enums.DocumentCompareSourceType,System.Guid,ADEXS.Core.Domain.Model.Document@)~ADEXS.Core.Types.Enums.CompareTrackedContentTaskInitiateResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.ICompareTrackedContentTaskService.InitiateAsyncProcess(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Types.Enums.DocumentCompareSourceType,System.Guid,ADEXS.Core.Domain.Model.Document@)~ADEXS.Core.Types.Enums.CompareTrackedContentTaskInitiateResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.ITrackedContentExtractionTaskService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.TrackedContentExtractionsTask,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}@)~ADEXS.Core.Types.Enums.TrackedContentExtractionProcessingStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.ITrackedContentExtractionTaskService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.TrackedContentExtractionsTask,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}@)~ADEXS.Core.Types.Enums.TrackedContentExtractionProcessingStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.ITrackedContentWritebackService.GetTrackedFieldStatusViewModels(System.Int32,System.Guid,System.Guid,ADEXS.Core.Domain.Model.UserAccount,System.Nullable{ADEXS.Core.Domain.Model.DocLauncherConfig.ReviewStatus},System.Nullable{ADEXS.Core.Domain.Model.DocLauncherConfig.SyncStatus})~System.Collections.Generic.List{ADEXS.Web.DocExplorer.Models.PanelModels.TrackedFieldStatusViewModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.ITrackedContentWritebackService.ProcessTrackedContentModels(System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel},System.Int32,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TrackedContentExtractionTaskService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.TrackedContentExtractionsTask,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}@)~ADEXS.Core.Types.Enums.TrackedContentExtractionProcessingStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.IGetDataProvider.ClearPickListCache(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.IGetDataProvider.GetData(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}},Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.ISalesforceHelper.BuildSFMultiSelectPickListValues(System.Collections.Generic.List{System.String})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.WritebackHelper.GenerateGetExternalSystemDataCacheKey(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{System.Guid})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.WritebackHelper.GenerateSaveExternalSystemDataCacheKey(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{System.Guid})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.IWritebackProcessingService.GetExternalSystemGetDataStatus(System.Int32,System.Guid,System.Guid,System.Guid,System.Collections.Generic.List{System.Guid})~ADEXS.Core.Types.Enums.ExternalSystemGetDataStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.IWritebackProcessingService.ProcessGetAndUpdateData(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{System.Guid},System.String,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.IWritebackProcessingService.ProcessSaveAndUpdateData(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{System.Guid},System.String)~ADEXS.Core.Types.Enums.ProcessSaveAndUpdateData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.IWritebackProcessingService.ResolveEqualityAndUpdateReviewStatus(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{System.Guid})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.IWritebackProcessingService.SendGetExternalSystemDataTask(System.Int32,System.Guid,System.Guid,System.Guid,System.Collections.Generic.List{System.Guid},System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.IWritebackProcessingService.SendSaveExternalSystemDataTask(System.Int32,System.Guid,System.Guid,System.Guid,System.Collections.Generic.List{System.Guid})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.IWritebackProcessingService.TriggerSaveExternalSystemData(System.Int32,System.Guid,System.Guid,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.SaveExternalDataModel})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.ISaveDataProvider.SaveData(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}},Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.TrackedContentExtractionRepository.TrackedContentExists(System.Int32,System.Guid,ADEXS.Core.Domain.Model.FileMetaDataTypes.TrackedContentExtractionData@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.ITermRepository.LoadTermOptionsByDocument(ADEXS.Core.Domain.Model.Document)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TermOption}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.ITermRepository.TermDocumentNameIsValid(System.Int32,System.Guid,System.String,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.ITermRepository.ValidateClause(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.TermDocument,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Term.SaveTermValidationResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.ITermRepository.ValidateOptions(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.TermDocument)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Term.SaveTermValidationResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.TermDocumentNameIsValid(System.Int32,System.Guid,System.String,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Throttling.AbstractThrottlingRepository.Save(System.Collections.Generic.List{ADEXS.Core.Domain.Model.SlidingWindowEntry},System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Throttling.EmailThrottlingRepository.ShouldThrottle(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Throttling.IEmailThrottlingRepository.ShouldThrottle(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TrackedContent.IReplaceTrackedContentService.GetReplacedContentOutput(System.Guid,ADEXS.Core.Domain.Model.Account)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TrackedContent.IReplaceTrackedContentService.InsertIntoReplaceTrackedContentQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.ResultType,System.Guid,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel},System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.TransactionHistory.GetAllInprogressDeliveryUids~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.ITranslationRepository.GetExportTranslations(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.TranslationNamespace,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.ITranslationRepository.GetExportTranslations(System.Int32,ADEXS.Core.Types.Enums.TranslationNamespace,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.ExpandGroups(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.LoadByIds(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IContactRepository.LoadByIds(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String})~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IContactRepository.LoadByUids(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ICustomUserRoleRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ICustomUserRoleRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IDelegationAccessRepository.LoadAll(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DelegationAccess}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IGroupRepository.EventGroupMembershipChanged(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IGroupRepository.LoadMemberUserAccountUidsAcrossGroupUids(System.Int32,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IGroupRepository.SetDistributionGroupMembership(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IGroupRepository.SetGroupMembership(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact,System.Collections.Generic.List{System.Guid},ADEXS.Core.Domain.Model.Groups)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IGroupRepository.SetSecurityGroupMembership(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ILoginDelegateRepository.FireLoginDelegateChangedEvent(ADEXS.Core.Domain.Model.LoginDelegate,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ILoginDelegationRepository.FireLoginDelegationChangedEvent(ADEXS.Core.Domain.Model.LoginDelegation,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ILoginRepository.CanRequestPasswordReset(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Repository.User.RequestPasswordResetResult@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ILoginRepository.IsLoginCorrectFormat(System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ILoginRepository.IsLoginNameInUse(System.String,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ILoginRepository.IsLoginNameValid(System.String,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ILoginRepository.LoginPasswordHasExpired(ADEXS.Core.Domain.Model.Login,System.String@,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ILoginRepository.SaveAllocation(System.String,System.String,System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ILoginRepository.SetLoginPassword(ADEXS.Core.Domain.Model.Login,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ILoginRepository.ValidateNewUserLogin(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ITwoFactorRepository.EnableTwoFactorAuthentication(ADEXS.Core.Domain.Model.Login)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TwoFactorKey}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ITwoFactorRepository.EnableTwoFactorAuthentication(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TwoFactorKey}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IUserAccountRepository.AccountAllowsLoginHours(ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Nullable{System.DateTime}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IUserAccountRepository.LoadByUids(System.Int32,System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IUserAccountRepository.LoadByUids(System.Int32,System.Collections.Generic.List{System.Guid},System.Boolean)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IUserAccountRepository.LoadUserAccountUidsByManagerUserAccountUids(System.Int32,System.Collections.Generic.List{System.Guid},System.Boolean)~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.CanRequestPasswordReset(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Repository.User.RequestPasswordResetResult@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.IsLoginCorrectFormat(System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.IsLoginNameInUse(System.String,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.IsLoginNameValid(System.String,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.LoginPasswordHasExpired(ADEXS.Core.Domain.Model.Login,System.String@,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.SaveAllocation(System.String,System.String,System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.SetLoginPassword(ADEXS.Core.Domain.Model.Login,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.SetUserLoginAndPassword(ADEXS.Core.Domain.Model.Login,System.String,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.ValidateNewUserLogin(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ResetPasswordRequestRepository.VerifyResetPasswordRequest(System.String,ADEXS.Core.Domain.Model.ResetPasswordRequest@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.AccountAllowsLoginHours(ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Nullable{System.DateTime}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1030:Use events where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.FireUserAccountChangedEvent(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.IWorkerPoolRepository.LoadUserAccountUidsAcrossWorkerPools(System.Int32,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.IWorkerPoolRepository.LoadUserAccountUidsOfFellowQueueMembers(System.Int32,System.Guid)~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.EvaluateEmailStringForGroups(System.String,ADEXS.Core.Domain.Model.Contacts@)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.EvaluateEmailStringForGroups(System.String,ADEXS.Core.Domain.Model.Contacts@)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.LoadExistingRunTimeRecipientsData~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ElectronicSignatureRecipient}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.CanAssign(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.CanAssignToUser(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.CanComplete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.CanUnassign(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.IResourceCompatibility.GetPropertyValue(System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceHandlerCompatibility.QueryResourceIds(ADEXS.Core.Domain.Model.Account,System.String,System.Object[])~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceWrapper.GetPropertyValue(System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicVariable.IsXmlDocument(System.Object,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IContactLoader.EvaluateEmailStringForGroups(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.Collections.Generic.List{System.String}@)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IContactLoader.EvaluateEmailStringForGroups(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.Collections.Generic.List{System.String}@)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IPropertyExpression.TryEvaluate(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.Object@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IPropertyExpression.TryEvaluate(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IPropertyExpression.TryEvaluateWithoutContext(System.Object@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IPropertyExpression.TryEvaluateWithoutContext(System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IRevisionRepository.LoadByDefinitionUid(System.Int32,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Workflow.Revision}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IVariableHandler.GetNames~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowClient.UpdateVariables(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Workflow.Types.VariableUpdate},System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowClient.UpdateVariablesWithResult(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Workflow.Types.VariableUpdate},System.Guid,System.Guid)~ADEXS.Core.Workflow.Model.WorkflowEnums.UpdateParentVariableResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem.CanAssign(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem.CanAssignToUser(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem.CanUnassign(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem.GetAssignmentTargets(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Workflow.Compatibility.IResourceCompatibility}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.IWorkItemRepository.GetOutputCounts(ADEXS.Core.Domain.Model.Workflow.WorkItems,System.Int32@,System.Int32@)~System.Collections.Generic.Dictionary{System.String,System.Int32}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.ContactLoader.EvaluateEmailStringForGroups(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.Collections.Generic.List{System.String}@)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LegacyGenerateSqlFilter(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String@,System.String@,System.Collections.ArrayList@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.PropertyExpressions.CompiledPropertyExpression.TryEvaluate(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.Object@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.PropertyExpressions.CompiledPropertyExpression.TryEvaluate(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.PropertyExpressions.CompiledPropertyExpression.TryEvaluateWithoutContext(System.Object@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.PropertyExpressions.CompiledPropertyExpression.TryEvaluateWithoutContext(System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.PropertyExpressions.StringPropertyExpression.TryEvaluate(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.Object@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.PropertyExpressions.StringPropertyExpression.TryEvaluate(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.PropertyExpressions.StringPropertyExpression.TryEvaluateWithoutContext(System.Object@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.PropertyExpressions.StringPropertyExpression.TryEvaluateWithoutContext(System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.VariableUpdate.EvaluateName(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String@)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.VariableUpdate.TryEvaluate(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionType@,System.String@,System.Object@,System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ParseXPath(System.String,System.String@,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.LoadWorkflowNames(System.Int32,System.Guid,System.Boolean,System.Boolean)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.ValidateWorkflowName(System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkItemRepository.GetOutputCounts(ADEXS.Core.Domain.Model.Workflow.WorkItems,System.Int32@,System.Int32@)~System.Collections.Generic.Dictionary{System.String,System.Int32}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.PasswordRules.IsValid(System.String,ADEXS.Core.Domain.Model.Account,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.PasswordRules.IsValid(System.String,ADEXS.Core.Types.Enums.PasswordStrength,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.ISearchRepository.GetSnippets(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Search.SearchQuery,System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Search.SearchResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.SearchResults.#ctor(System.Int64,System.Collections.Generic.List{ADEXS.Core.Domain.Search.SearchResult})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.GetSecurityMap``1(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}@,ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.ListSecurities(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Base.INode)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.ABACPolicyListResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.AbstractSecurityProvider`1.GetHttpClient~System.Net.Http.HttpClient\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.AbstractSecurityProvider`1.MakeRequest(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Object,System.Int32,System.String,ADEXS.Core.Util.Core.LoggedStopWatch,System.Int32@,System.Boolean@)~`0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityProvider.GetSecurityMap``1(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}@,ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ISecurityProviderList.Get~System.Collections.Generic.List{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityProvider}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.JustInTime.JITSecurityProvider.GetSecurityMap``1(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}@,ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.GetSecurityMap``1(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}@,ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.SecurityFilter.FilterSecurity``1(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Base.ModelCollection{``0},System.Collections.Generic.List{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityProvider},ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.SecurityFilter.GetPagerOverWrite(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Lookup.Pager,System.Collections.Generic.List{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityProvider})~ADEXS.Core.Domain.Lookup.Pager\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.SecurityFilter.GetPossibleProviders(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityProvider}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.SecurityFilter.GetSecurityMap``1(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Base.ModelCollection{``0},System.Collections.Generic.List{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityProvider},ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)~System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AISTransactionProviderBase.GetContext(System.Guid,System.Boolean,System.Int32,System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactGlyph},System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AISTransactionProviderBase.GetLogicAppsToRun(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.LogicApp}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchReportService.BatchReportExists(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchReportService.CheckBatchReportStatus(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~ADEXS.Core.Types.Enums.AIBatchReportStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchReportService.ExportToCsv(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentSubStatus},System.Int32,System.String@,System.Int32@)~ADEXS.Core.Domain.SmartAgreement.TransactionsCsvExportStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.BatchHelper.IsBackground(System.Int32,System.Collections.Generic.List{System.Guid},System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.CacheHelper.LoadPageNumber(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Boolean@)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.IBatchHelper.IsBackground(System.Int32,System.Collections.Generic.List{System.Guid},System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.IBatchHelper.IsBackground(System.Int32,System.Collections.Generic.List{System.Guid},System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.ICacheHelper.LoadPageNumber(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Boolean@)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IADMInsightsClient.Save(System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.ADMInsightRequest})~System.Threading.Tasks.Task\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IBatchReportService.BatchReportExists(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IBatchReportService.CheckBatchReportStatus(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~ADEXS.Core.Types.Enums.AIBatchReportStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IBatchReportService.ExportToCsv(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentSubStatus},System.Int32,System.String@,System.Int32@)~ADEXS.Core.Domain.SmartAgreement.TransactionsCsvExportStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IBatchReportService.ExportToCsv(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentSubStatus},System.Int32,System.String@,System.Int32@)~ADEXS.Core.Domain.SmartAgreement.TransactionsCsvExportStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.ISmartAgreementExecutionService.CreateBatch(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String,ADEXS.Core.Domain.SmartAgreement.Models.Enums.AnalysisTriggerSource,ADEXS.Core.Types.Enums.AIProviderType,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatchValidationErrors@,System.Nullable{System.Int32})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.ISmartAgreementExecutionService.CreateTransaction(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid},System.Int32,ADEXS.Core.Types.Enums.AIProviderType,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatchValidationErrors@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.ISmartAgreementExecutionService.CreateTransaction(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid},System.Int32,ADEXS.Core.Types.Enums.AIProviderType,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatchValidationErrors@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.ISmartAgreementExecutionService.TriggerBulkAnalysisJob(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String,System.Collections.Generic.List{System.Guid},System.Collections.Generic.List{System.Guid},System.Guid,ADEXS.Core.Domain.SmartAgreement.Models.Enums.AnalysisTriggerSource)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IStagedMetadataApplicationService.GroupAiExtractedValues(ADEXS.Core.Domain.Model.AIDocument.StagedMetadata,ADEXS.Core.Domain.SmartAgreement.Helpers.IAIExtractionValueHelper)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IStagedMetadataApplicationService.LoadByBatchUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IStagedMetadataApplicationService.LoadStagedMetadatasForFileDataUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IStagedMetadataApplicationService.UpdateStagedMetadatasForDocumentByFileDataUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadataItem})~ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadatasResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IStagedMetadataApplicationService.UpdateStagedMetadatasStatusOnly(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultRequest,ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultResponse,System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.MetaDataReviewResultItem})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Models.AllowedValuesResult.#ctor(ADEXS.Core.Types.Enums.AllowedValueResultStatus,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.MetadataValue})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.IADMInsightsRepository.Save(System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.ADMInsightRequest})~System.Threading.Tasks.Task{System.Boolean}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.IAPRExtractionsRepository.Load(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.IAPRMockedDataHelper.TryGetMockedData(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.CreateBatch(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String,ADEXS.Core.Domain.SmartAgreement.Models.Enums.AnalysisTriggerSource,ADEXS.Core.Types.Enums.AIProviderType,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatchValidationErrors@,System.Nullable{System.Int32})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.CreateTransaction(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid},System.Int32,ADEXS.Core.Types.Enums.AIProviderType,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatchValidationErrors@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.ITermSyncRepository.CompareTrackedTerms(ADEXS.Core.Domain.Model.TrackedTerms,ADEXS.Core.Domain.Model.TrackedTerms)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermComparisonResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.ITermSyncRepository.GetComparisonXml(System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermComparisonResult})~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.ITermSyncRepository.IsSupported(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.Document@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.ITermSyncRepository.ReplaceTrackedTerms(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.ResultType,System.Guid,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel},System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel}@)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.ITermSyncRepository.ReplaceTrackedTerms(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.ResultType,System.Guid,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel},System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel}@)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.ITermSyncRepository.Sync(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermComparisonResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.IsSupported(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.Document@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.ReplaceTrackedTerms(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.ResultType,System.Guid,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel},System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel}@)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationDisplayAttribute.#ctor(System.String,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationExportAttribute.#ctor(System.String,System.String,System.Boolean,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs.Add(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogModel})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs.GetAllUpdateLogs~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationUpdates.Add(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateModel})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.GetExportTranslationGroups(ADEXS.Core.Domain.Translation.Models.TranslationRegistries)~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.GetUpdateLogSource(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog},ADEXS.Core.Domain.Translation.Models.TranslationRegistries)~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.OrderTranslations(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations})~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.TranslationGrouping(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations},System.Guid)~ADEXS.Core.Domain.Translation.Models.ExportTranslations\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ITranslationTaskUtility.GetErrorMessages~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.AIDocumentUtilities.GenerateDateRange(System.DateTime,System.Int32)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CurrencyCodeCultureMap.GetCultures(System.String)~System.Collections.Generic.List{System.Globalization.CultureInfo}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.DocumentUtilities.Rename(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.DSAuthTokenUtilities.Verify(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.DSTokenVerificationResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.FolderUtilities.Rename(ADEXS.Core.Domain.Model.Folder,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.IAIBulkJobContentComposer.Parse(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid},System.Collections.Generic.List{System.Guid},System.Guid,System.Func{ADEXS.Core.Domain.Model.Document,System.Boolean},System.Action)~ADEXS.Core.Domain.Utilities.AIBulkJobContentComposerResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ICssDefinitionGenerator.GetCssDefinitions~System.Collections.Generic.List{ADEXS.Core.Domain.Utilities.CssDefinitionModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ICssKeyframeGenerator.GetCssKeyframes~System.Collections.Generic.List{ADEXS.Core.Domain.Utilities.CssKeyframeModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.IDocuSignAuthTokenVerifier.Verify(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.DSTokenVerificationResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ILegacyCssDefinitionGenerator.GetLegacyCssDefinitions(System.String,System.String,System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Utilities.LegacyCssDefinitionModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.NodeUtilities.GetWarningStringsIfUserDoesNotHaveAccessToNodes``1(System.Linq.ILookup{``0,ADEXS.Core.Domain.Model.UserAccount},ADEXS.Core.Domain.Model.Contacts,ADEXS.Core.Domain.Model.Base.ModelCollection{``0})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.NodeUtilities.Rename(ADEXS.Core.Domain.Model.Base.INode,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.PagingAndDynamicFiltering.FilterSortAndPage``1(System.Collections.Generic.IEnumerable{``0},System.Func{ADEXS.Core.Domain.Utilities.Filter,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}},System.Int32@)~System.Collections.Generic.List{``0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.PagingAndDynamicFiltering.FilterSortAndPage``1(System.Collections.Generic.IEnumerable{``0},System.Func{ADEXS.Core.Domain.Utilities.Filter,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}},System.Int32@)~System.Collections.Generic.List{``0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.PagingAndFiltering.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{ADEXS.Core.Domain.Utilities.PagingAndFiltering.SortColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.PagingAndFiltering.Page``1(System.Collections.Generic.List{``0})~System.Collections.Generic.List{``0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.PagingAndFiltering.Search``1(System.Collections.Generic.List{``0},System.Func{System.Collections.Generic.List{``0},System.String,System.Collections.Generic.List{``0}},System.Int32@)~System.Collections.Generic.List{``0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.PagingAndFiltering.Search``1(System.Collections.Generic.List{``0},System.Func{System.Collections.Generic.List{``0},System.String,System.Collections.Generic.List{``0}},System.Int32@)~System.Collections.Generic.List{``0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.PagingAndFiltering.SearchAndPage``1(System.Collections.Generic.List{``0},System.Func{System.Collections.Generic.List{``0},System.String,System.Collections.Generic.List{``0}},System.Int32@)~System.Collections.Generic.List{``0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1021:Avoid out parameters\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.PagingAndFiltering.SearchAndPage``1(System.Collections.Generic.List{``0},System.Func{System.Collections.Generic.List{``0},System.String,System.Collections.Generic.List{``0}},System.Int32@)~System.Collections.Generic.List{``0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ResourceUtilities.GetLanguageItems(ADEXS.Core.Domain.AccountSettings,ADEXS.Core.Types.Enums.SettingAuthTier,System.Boolean,System.Boolean)~System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ResourceUtilities.GetSharedLanguageOrDefault(System.Collections.Generic.List{System.String},System.String)~ADEXS.Core.Domain.Utilities.Language\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ResourceUtilities.LanguagesFromCodes(System.Collections.Generic.List{System.String},System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Utilities.Language}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ResourceUtilities.LanguagesFromCodes(System.String[],System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Utilities.Language}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1024:Use properties where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.RestApiClientUtilities.GetHttpRetryDelegatingHandler~System.Net.Http.DelegatingHandler\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.SimpleCsvWriter.WriteRow(System.Collections.Generic.List{System.String})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.AbstractCrossValidator`1.Validate(`0,System.Collections.Generic.List{`0})~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.IValidationRepository.Validate(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Validation.ValidationInput},ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Validation.ValidationResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.IValidator.Initialize(System.Collections.Generic.List{System.String},Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.ValidationResult.#ctor(System.String,System.Boolean,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Validation.ValidationError})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.ApprovalSnapshot(System.Guid,System.Int32,ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Wins.WorkflowSnapshot.ActivitySnapshot}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.IApprovalWorkflowSnapshot.WorkflowHistorySnapshot(System.Guid,System.Int32,ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Wins.WorkflowSnapshot.ActivitySnapshot}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.GetStandardAttribute(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.MetadataLoader.Models.Type,System.Globalization.CultureInfo,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.IAttributeManagementService.GetAllGroups(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.MetadataLoader.Models.Type,System.Globalization.CultureInfo)~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.IAttributeManagementService.GetAttributeReviewGroup(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.MetadataLoader.Models.Type,System.Nullable{System.Guid},System.Globalization.CultureInfo)~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.IAttributeManagementService.GetAttributeReviewGroups(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance},System.Globalization.CultureInfo)~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.IAttributeManagementService.Save(ADEXS.Core.Domain.Model.UserAccount,System.Globalization.CultureInfo,System.Guid,ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,System.Nullable{System.Guid},System.Guid,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance},ADEXS.Core.Domain.DataReview.DataReviewValidationContext)~ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.IAttributeManagementService.SendFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata},ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,System.Globalization.CultureInfo)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.IAttributeManagementService.SetAISuggestions(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup})~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.IAttributePanelService.GetCustomAttributeGroupsNotInDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.IAttributePanelService.GetCustomAttributes(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Nullable{System.Guid})~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.IAttributePanelService.GetStandardAttributes(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.IAttributePanelService.UpdateAttributes(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData},System.String,System.String,System.Nullable{System.Guid})~ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.AllowedUserRoles\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.CoreAttributeList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.DefaultCurrencies\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.ElasticsearchKeywordOnlySearchForAttrTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.EssentialsAttributeList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.ExportSearchAttributeFieldList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.MaxAttributeList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.PlusAttributeList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.SuppressedAisExtractions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.SuppressedAttributeList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.UpdatableUserProperties\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.AttributeDetailAnalytics.LinkedAttributes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.AttributeDetailAnalytics.ValueContexts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.AttributeGroupsResponse.AttributeFields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.BatchAnalyticsResponse.BatchAnalytics\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.CreateGroupMappingRequest.groupMappings\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.DocumentReviewDetails.DocumentAnalytics\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.GroupMappingResponse.MappingUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.JobReviewDetails.AttributeAnalytics\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.MetaDataProcessReviewItemResult.Errors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultRequest.ResultItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultResponse.ResultItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.Result`2.Errors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.RulesConfigurationUsageAnalyticsResponse.RulesConfigurationUsageAnalytics\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Aom.AomApiCollection`1.items\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AllowedClientIds_ProfileNotification\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AllowedRequestSources\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AllowUnsupportedBrowserClientIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DocumentTypesNotAllowedToBeDisplayedInline\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.InternalEmailDomains\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.BusinessModel.OAuth.OAuthClient.CallbackUrls\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.Model.AccountChange.Info\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.Model.AccountChange.Settings\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Models.BaseMigrationModel.Notes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Models.GroupMigrationResponseModel.Records\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Models.MigrationRequestModel.RoleNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Models.MigrationRequestModel.Status\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Models.MigrationRequestModel.UserTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Models.UserMigationResponseModel.Records\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.AttributeReviewData.AiSuggestions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.AttributeReviewData.Children\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup.Attributes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.DataReviewModel.AttributeReviewGroups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.DataReviewTask.AttributeReviewGroups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel.UpdatedAttributes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.SaveDataReviewResult.SupportedAttributes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.SaveDataReviewResult.UpdatedAttributes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.SaveDataReviewResult.ValidationErrors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DocuSignSync.GroupModel.Users\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ExpressionService.Internal.Model.WorkflowExpressionServiceRequestContent.Variables\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.FileOperations.PDF.PDFMergeProcessor.MergeItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Javelin.SalesForceMergeField.Children\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Lookup.DefaultActions.DocumentActions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload.Attachments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload.BccRecipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload.CcRecipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload.ToRecipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailTemplateNames.BodyTemplateName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailTemplateNames.ComponentTemplateName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailTemplateNames.StylesheetTemplateName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.MailMessageDto.Bcc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.MailMessageDto.Cc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.MailMessageDto.To\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.WorkflowApprovalActivitiesTokens.PreviousActivities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.BaseShareObjectEmail.Bcc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.BaseShareObjectEmail.Cc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.BaseShareObjectEmail.To\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CompleteExternalReviewReviewerEmail.UpdatedDocuments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CompleteExternalReviewSenderEmail.UpdatedDocuments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.DocumentReminderEmail.RecipientList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewEmail.DocumentTokens\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewFailedAutoMatchEmail.AttachmentList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewFailedAutoMatchEmailOnBehalf.AttachmentList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewWatcherEmail.UpdatedDocuments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.GenericNonTemplatedEmail.CcRecipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.PackageNotificationEmail.ErrorMessages\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.PackageNotificationEmail.InfoMessages\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.PackageNotificationEmail.WarningMessages\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SecurityAccessRuleValidationEmail.AffectedRules\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SecurityAccessRuleValidationEmail.AttributeFields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendEmailActionEmail.Recipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendEmailActivityEmail.Bcc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendEmailActivityEmail.Cc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendEmailActivityEmail.ToRecipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendForExternalReviewEmailNew.Recipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ShareDocumentAttachmentEmail.Attachments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ShareObjectLinkEmail.DocumentUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ShareObjectLinkEmail.FolderUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.TranslationImportEmail.ErrorMessages\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.UserSyncEmail.Added\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.UserSyncEmail.Deactivated\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.UserSyncEmail.Deleted\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.UserSyncEmail.Reactivated\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.UserSyncEmail.Updated\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.WorkflowPauseActivityExecutionLimitExceededNotificationEmail.EmailRecipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.WorkflowRevisionSuspensionNotificationEmail.EmailRecipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.WorkflowSendDocumentAttachmentEmail.Attachments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.WorkflowSendDocumentAttachmentEmail.Bcc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.WorkflowSendDocumentAttachmentEmail.Cc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.WorkflowSendDocumentAttachmentEmail.Recipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.OutputCommentsDto.Comments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.Assignees.MoreAssignees\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseShareShard.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseShareShard.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ABAC.ABACSecurityEvaluationResponse.Results\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ABAC.Condition.FieldChoices\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ABAC.Rule.AllowedGroups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ABAC.Rule.Conditions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ABAC.Rule.SecurityAttributeSelections\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ActionItem.ChildActions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ActorAttributeRestriction.Groups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ActorReportFilter.EmailUsers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ActorReportFilter.Groups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ActorReportFilter.Queues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ActorReportFilter.Users\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AgreementNode.Amendments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AgreementNode.Ancestors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AgreementNode.Descendants\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AgreementNode.RelatedAgreements\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AgreementNode.SecondaryAgreements\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AgreementNode.Supplements\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Agreements.AgreementData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.Data.AIRulesEngineMappingData.LabelGroups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.Data.AIRulesEngineMappingData.LogicApps\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.Data.AITransactionData.LogicApps\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.Data.StagedMetadataData.SelectionRules\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.Data.StagedMetadataData.ValueContexts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext.Instances\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext.MatchedExtractions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.StagedMetadata.OtherValuesList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ApprovalWorkflowSteps.RemovedStepUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Base.INamedProperty.ValidEnumeration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Contact.AddressForUI\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Conversion.Common.MigrationMetaData.Notes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Conversion.Common.MigrationMetaData.NotesLabel\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Conversion.Group.GroupMigrationMetaData.ErroredUsers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Conversion.User.UserMigrationMetaData.GroupUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CopyResults.FailedDocuments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CopyResults.FailedFolders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReportColumns.RemovedColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReportParameters.RemovedParameters\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReportSelections.RemovedSelections\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig.LaunchActions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig.MetadataFieldFilters\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig.TemplateGroups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig.Templates\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.MergeData.MergeDataSources\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.MergeDataSource.MergeDataValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.TemplateGroup.Templates\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldSchema.AllowedValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocumentWorkflowHistoryData.Approvers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSGroups.Groups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSGroupUser.Groups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSGroupUsers.Users\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSOrgAdmins.Admins\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSTokenVerificationResult.Scopes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserApps.Apps\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserInfo.Accounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserInfoAccountOrganization.Links\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserProfile.Users\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserProfileInfo.Memberships\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserProfileInfoV2.Memberships\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserProfileV2.Users\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ElectronicSignatureDocument.ElectronicSignatureTemplates\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ExternalReview.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.IMetadataField.AllowedValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.IMetadataField.DependentFields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.IMetadataField.LocalizedAllowedValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Intellego.AnalyzeOptions.Analyzers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Intellego.AnalyzeOptions.Pages\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.OfficeWebApps.WOPIAction.Requires\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.OfficeWebApps.WopiConfiguration.WopiActions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Parties.CLMPartyData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.PartyAgreementTrees.RootAgreements\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.AddProductGroupRequest.DsUserIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.AddUpdateUserRequestV1.Accounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSCreateUpdateUserResponse.accounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.DsGetUserResponseV1.Memberships\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.DSGetUsersResponseV1.Users\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.GetDSGroupsResponse.Groups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.UserAccountMembershipResponse.Groups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.UserAccountMembershipResponse.PermissionProfiles\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DsGroupUsersAddRequest.UserIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.GetRolesResponse.RolesCollection\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.NewMultiProductUserAddRequest.DsGroups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.NewMultiProductUserAddRequest.ProductPermissionProfiles\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.ProductPermissionProfileResponse.PermissionProfiles\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.ProductPermissionProfilesResponse.ProductPermissionProfiles\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.UpdateUserRequest.Memberships\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.UpdateUsersRequest.Users\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.UserAccountMembership.PermissionProfiles\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueState.WorkingSetIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.AbstractMergeTask.MergeItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ContentReplacementTask.ReplacementModels\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ContentReplacementTaskPayload.ReplacementModels\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ElasticWorkItemIndexTask.RefDocumentIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewReconciliationTask.Attachments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewReconciliationTaskPayload.Attachments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.GetExternalSystemDataTask.TrackedFieldUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.GetExternalSystemDataTaskPayload.TrackedFieldUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.IAbstractMergeTaskPayload.MergeItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.IElasticWorkItemIndexTaskPayload.RefDocumentIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ISplitTaskPayload.DestinationDocuments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.IStartAIBulkAnalysisTransactionTaskPayload.DocumentUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.IStartAIBulkAnalysisTransactionTaskPayload.FolderUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.MetadataPropagationTask.DocumentUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.MetadataPropagationTask.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.MetadataPropagationTask.MetadatasToDelete\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.MetadataPropagationTaskPayload.DocumentUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.MetadataPropagationTaskPayload.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.MetadataPropagationTaskPayload.MetadatasToDelete\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SalesforceInvoice.Bcc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SalesforceInvoice.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SalesforceInvoice.To\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SaveExternalSystemDataTask.TrackedFieldUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SaveExternalSystemDataTaskPayload.TrackedFieldUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfCreateObjectTask.Fields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfCreateObjectTaskPayload.Fields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfEmailTask.Bcc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfEmailTask.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfEmailTask.To\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfEmailTaskPayload.Bcc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfEmailTaskPayload.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfEmailTaskPayload.To\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceIngestionTask.Invoices\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceIngestionTaskPayload.Invoices\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTask.Bcc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTask.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTask.To\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTaskPayload.Bcc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTaskPayload.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTaskPayload.To\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfUpdateObjectTask.UpdateFields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfUpdateObjectTaskPayload.UpdateFields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.StartAIBulkAnalysisTransactionsTaskPayload.DocumentUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.StartAIBulkAnalysisTransactionsTaskPayload.FolderUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SyncParty.PartySyncTemplateAttribute.IncludeInExport\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SyncParty.PartySyncTemplateAttribute.IncludeInTemplate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.RequestOriginRestriction.RequestOriginList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.SalesforceActions.SalesforceActionMenu.StandardActionGroup.Actions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ScopeEventData.Assignees\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ScopeEventData.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ScopeEventData.NotifiedAssignees\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.DigitalAppRule.ScorecardRules\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ScorecardAnalytic.Values\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ScorecardElement.Analytics\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ScorecardModel.RiskMaps\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ScorecardModel.ScorecardElements\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.UserViewModel.MetadataItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ViewMetadataItem.Subgroups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ViewSubgroup.MetadataItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.SFSecurityModel.GroupNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.TermDocument.Options\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.TrackedTerm.CustomAttributes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.TrackedTerm.Value\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.TrackedTermComparisonResult.CustomAttributes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.TrackedTermComparisonResult.OriginalValue\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.TrackedTermComparisonResult.RevisedValue\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Transaction.Deliveries\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UploadInfo.ErrorMessages\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAccount.GroupUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserChangeRecord.Changes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ValueScopeNames.ScopeNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.News.NewsActionTypeFactory.SupportedNotificationActions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.BaseAuthenticationPersistence`1.AuthenticationInstance\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.DefaultInstance\")]\n[assembly: SuppressMessage(\"Design\", \"CA1000:Do not declare static members on generic types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.BaseDomainWorkflowObjectPersistence`1.WorkflowServiceInstance\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult.ExtractionLocation\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult.MatchedMetadata\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.APIRegistration.Callbacks\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.CustomRuleEventParameters.MetadataFields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.CustomRuleEventParameters.MetadataGroups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.CustomRuleEventParameters.NativeProperties\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Model.ReportFilter.DropdownReportFilter.AllowedValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Model.ReportFilter.DropdownReportFilter.Value\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Model.ReportFilter.GuidListReportFilter.Value\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter.DependentFields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataSearchFieldLite.AllowedValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Model.ReportFilter.StringListReportFilter.Value\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportFilters.AgreementType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportFilters.BusinessType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportFilters.ExpirationDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportFilters.NoticeDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportFilters.PartyNameAlias\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportFilters.AgreementType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportFilters.BusinessType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportFilters.ExpirationDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportFilters.PartyNameAlias\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReportFilters.ActivityDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReportFilters.ActivityName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReportFilters.User\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.Attributes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.CheckedOutBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.CheckedOutDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.CreatedBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.CreatedDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.Description\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.DocumentName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.FolderUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.IsInTrash\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationCreatedBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationCreatedDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationDescription\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationIsInboundFax\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationModifiedBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationModifiedDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationPath\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.ModifiedBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.ModifiedDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.NativeFileSize\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.Source\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.TotalFileSize\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportFilters.AgreementType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportFilters.DueDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportFilters.ObligationNameAlias\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportFilters.PartyNameAlias\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReportFilters.CreatedBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReportFilters.ObjectName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.Columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.SelectedFilters\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.ActiveDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.AssignedTo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.Attributes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.CreatedDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.ExpectedCompletionDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.FinishedDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.InitiatedBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.ScopeNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.StageNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.WasAssignedTo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.WorkflowStatuses\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.Attributes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.CurrentlyAssignedTo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.CurrentStages\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.Duration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.InitiatedBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.LastUpdatedDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.StartDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.Statuses\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.WorkflowName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.AssignedTo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.Attributes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.Comment\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.CompletedBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.CreatedDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.DueDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.InitiatedBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.Output\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.ScopeInitiatedBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.ScopeLastUpdatedDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.ScopeNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.ScopeStartDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.ScopeUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.StageNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.StepDisplayNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.StepLastUpdatedDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.StepNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.StepStartDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.WorkflowNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.WorkflowStatuses\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReportFilters.ActiveDateRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReportFilters.ScopeNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Proxy.IdListHelpers.IIdList.Ids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBrandingSaveResult.Errors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AccountRepository.UpdateAccountSecurityResult.FailureReasons\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementField.Tags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AgreementRepository.ElasticAgreementFilters.AgreementTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AgreementRepository.ElasticAgreementFilters.PartyIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AgreementRepository.ElasticAgreementFilters.TaskGroupIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionProvider.LabelGroupTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AIDocument.StartAIBulkAnalysisTransactionsResult.LogicAppsToRequest\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AIExtractions.MockedDataResponseItem`1.Extractions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.CustomRuleRepository.IRuleAnalyzer.Suggestions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigSaveResult.ValidationErrors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.DropdownDefinition.values\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataSaveResult.ErrorList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodesResult.FailedNodeResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.ValidateDocumentReminderResult.InvalidRecipientEmails\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewWorkload.DocumentTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSetProcessor.MetadataFields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse.Recipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse.Watchers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest.Recipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest.Watchers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Negotiation.Model.UpdateReviewRequest.Recipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Negotiation.Model.UpdateReviewRequest.Watchers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.SaveResult.Errors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.SaveResult.InvalidToEmails\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Seal.SendDocumentUploadParams.CustomDocumentMetadata\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.StructuredDocument.Models.OfficeContentReplacementModel.TextOccurenceInstances\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.IEqualityComparer.DataSourceTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.IEqualityComparer.FieldTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Term.SaveTermResult.ValidationResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.DataReconciliationClient.TrackedNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.CCEmails\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.ESignatureDocuments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.ESignatureRecipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.ESignatureTemplates\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.RecipientEmails\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Types.Conditions.Items\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.MetadataConfigurationCollection.Values\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.ContentSearch.UpdatedByList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.ExportSearchRequest.OutputMetadataFieldUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.FieldData.Values\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.LocationSearch.FolderUids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.MetadataSearch.Groups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.MetadataSearchFields.Fields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.MetadataSearchFieldSet.Rows\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.MetadataSearchGroup.Fields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.MetadataSearchGroup.FieldSets\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.MetadataSearchGroup.RepeatFields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.SearchQuery.SearchResultFields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.SearchResult.FieldValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.SearchResult.Snippets\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.SearchResults.Results\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.Telemetry.SearchExecutedTelemetryProperties.AdmFieldsApplied\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.Telemetry.SearchExecutedTelemetryProperties.ParametersApplied\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.Telemetry.SearchItemsTelemetryProperties.ItemsSelected\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData.Agreements\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.AISTransactionProviderBase.LabelGroupTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction.MatchedMetadata\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction.MatchedText\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.ADMInsightsResponse.Items\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.AllowedValuesResult.AllowedValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.AttributeDetailsCollection.AttributeDetailAnalytics\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.AttributeDetailsCollection.StatusCounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.InsightType.MetadataSpecification\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.PdfLocation.Glyphs\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.SyncProcessorOptions.DisallowedRoles\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.SyncTemplateAttribute.DisplayName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.SyncTemplateAttribute.IncludeInEssentialsTemplate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.SyncTemplateAttribute.IncludeInExport\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.SyncTemplateAttribute.IncludeInLimitedTemplate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.SyncTemplateAttribute.IncludeInTemplate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Models.ImportTranslationFile.Units\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Models.TranslatableAttribute.DynamicNameProperty\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Models.TranslatableAttribute.Field\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Models.TranslatableAttribute.MultipleEntries\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Models.TranslatableAttribute.Position\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Models.TranslatableAttribute.UidProperty\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Models.TranslationDisplayAttribute.Field\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Models.TranslationDisplayAttribute.ObjectType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Models.TranslationExportAttribute.IncludeInExport\")]\n[assembly: SuppressMessage(\"Design\", \"CA1019:Define accessors for attribute arguments\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Models.TranslationExportAttribute.Order\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Utilities.AIBulkJobContentComposerResult.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Utilities.AIBulkJobContentComposerResult.SubFolders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Utilities.AIBulkJobContentComposerResult.SkippedDocuments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Utilities.FilterWrapper.Filters\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Utilities.FilterWrapper.FilterWrappers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Validation.AbstractCrossValidator`1.TriggerField\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Validation.ValidationInput.ValidationParameters\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Validation.ValidationResult.Errors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Wins.DesignerAction.Links\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Wins.DesignerDefinition.Actions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Web.DocExplorer.Models.PanelModels.TrackedFieldStatusViewModel.AllowedValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1018:Mark attributes with AttributeUsageAttribute\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Attributes.ValidationAttribute\")]\n[assembly: SuppressMessage(\"Design\", \"CA1012:Abstract types should not have public constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DocuSignSync.BaseGroupSyncRequestProcessor\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.PublicException.FailReason\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Lookup.Countries\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Lookup.ProvinceStates\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.AccountActivities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.AccountDocumentCounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Accounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.AccountStatistics\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Alerts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1001:Types that own disposable fields should be disposable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.APILicenses\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.APILicenses\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Base.IModelCollection\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.BPMExecutionDetails\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.BPMExecutions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.CollaborationComments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.CustomGridColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.CustomGrids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Deliveries\")]\n[assembly: SuppressMessage(\"Design\", \"CA1001:Types that own disposable fields should be disposable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.DependentAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ExternalSystemUsers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.GroupMembers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1001:Types that own disposable fields should be disposable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.InboundEmails\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.InboundEmails\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.InboundFaxes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1001:Types that own disposable fields should be disposable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.InboundFaxes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.KeyState\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.LoginDelegates\")]\n[assembly: SuppressMessage(\"Design\", \"CA1001:Types that own disposable fields should be disposable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.LoginDelegates\")]\n[assembly: SuppressMessage(\"Design\", \"CA1001:Types that own disposable fields should be disposable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.LoginDelegations\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.LoginDelegations\")]\n[assembly: SuppressMessage(\"Design\", \"CA1001:Types that own disposable fields should be disposable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.MetadataImportMappingElementPlaceHolders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.PortalType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.QueueStates\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.QueueTasks.Direction\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.QueueTasks.DocumentCompareTask.ProcessingResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.QueueTasks.DocxMergeTask.ProcessingResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.QueueTasks.PdfMergeTask.ProcessingResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1018:Mark attributes with AttributeUsageAttribute\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.QueueTasks.SyncParty.PartySyncTemplateAttribute\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.SyncFolder.SubscriptionStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.TaskPayload.AssignmentDeleteTaskType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.TimeZoneDatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.TrackedTerms\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Transactions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1001:Types that own disposable fields should be disposable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Transactions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess.WorkerPoolAccessType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.APIRegistrations\")]\n[assembly: SuppressMessage(\"Design\", \"CA1001:Types that own disposable fields should be disposable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.APIRegistrations\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.InviteLoginInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence.MetadataQueueItem.RequestedOperation\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence.MetadataQueueItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.ObjectTrashQueuePersistence.ObjectTrashQueueItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.ScheduledCustomRulePersistence.CustomRuleQueueItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1001:Types that own disposable fields should be disposable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AIExtractions.AISApiFactory\")]\n[assembly: SuppressMessage(\"Design\", \"CA1012:Abstract types should not have public constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.BaseRepository`1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ImageCreation.Barcode.BarcodeType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1001:Types that own disposable fields should be disposable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldUtil\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.SaveErrorCode\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.User.TwoFactorStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Client.ClientContentHandler\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Client.ClientVariableHandler\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IBookmarkHandler\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IContentHandler\")]\n[assembly: SuppressMessage(\"Design\", \"CA1010:Generic interface should also be implemented\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IVariableHandler\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1001:Types that own disposable fields should be disposable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.ServiceProtection.ClientConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SmartAgreement.Models.Enums.AISuggestionTypeFilterConditions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1008:Enums should have zero value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SmartAgreement.Models.Enums.AttributeEdition\")]\n[assembly: SuppressMessage(\"Design\", \"CA1018:Mark attributes with AttributeUsageAttribute\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Sync.SyncTemplateAttribute\")]\n[assembly: SuppressMessage(\"Design\", \"CA1018:Mark attributes with AttributeUsageAttribute\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Translation.Models.TranslatableAttribute\")]\n[assembly: SuppressMessage(\"Design\", \"CA1018:Mark attributes with AttributeUsageAttribute\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Translation.Models.TranslationExportAttribute\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.AddElementToListIfFlagIsSet(System.Collections.Generic.List{System.String},Newtonsoft.Json.Linq.JToken,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.IFormConfigurationRepository.ParseConfigFull(System.String,System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.FormConfiguration.FormConfigurationPropertyMap)~System.Collections.Generic.List{Newtonsoft.Json.Linq.JObject}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.MoveMultipleToFolderDetailedErrors(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.Folder,System.String,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},Newtonsoft.Json.Linq.JObject)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FailedPasteResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.IGetDataProvider.GetData(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}},Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.ISaveDataProvider.SaveData(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}},Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.IValidator.Initialize(System.Collections.Generic.List{System.String},Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AbstractSettings._memoryBacking\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Aom.AomRestClientBase.ApiName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Aom.AomRestClientBase.patchMethod\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.AttributeRegistry.IsPersisted\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.AttributeRegistry.Label\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.AttributeRegistry.Name\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.AttributesManagementFramework.AttributesRegistries\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult.Errors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult.IsSuccessful\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult.UpdateStagedMetadatasResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.Models.PartySaveResult.Errors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.Models.PartySaveResult.IsSuccessful\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.Models.PartySaveResult.PartyId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.NamedPropertyAttribute.DataType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.NamedPropertyAttribute.Name\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.NamedPropertyAttribute.ReadOnly\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.NamedPropertyAttribute.Required\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.ValidationAttribute._beginDateTime\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.ValidationAttribute._endDateTime\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.ValidationAttribute._endRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.ValidationAttribute._maxLen\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.ValidationAttribute._minLen\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.ValidationAttribute._options\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.ValidationAttribute._Regex\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.ValidationAttribute._startRange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.BaseLoggingInfo.ApplicationSettings\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Helper.UserMigrationException.ResourceLabelKey\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DatabaseConnectionSwitch._prevThreadConnectionStore\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.DataReviewResultXml.Message\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.DataReviewResultXml.ReviewedObjects\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.DataReviewResultXml.UpdatedBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.ReviewedObjectXml.AiAssisted\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.ReviewedObjectXml.ExistingValue\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.ReviewedObjectXml.IsDeleted\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.ReviewedObjectXml.ObjectDataType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.ReviewedObjectXml.ObjectId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.ReviewedObjectXml.ObjectName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.ReviewedObjectXml.ObjectType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.ReviewedObjectXml.ParentObjectId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.ReviewedObjectXml.SavedValue\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.Models.ReviewedObjectXml.StagedMetadata\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCompare.ComparisonStyles.DocumentStyleOverride.CompareImages\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocumentAssemblerMergeProcessor._mergeDataSanitizer\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.FileOperations.PDF.PdfOperation._startPage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.GlyphProcessing.Models.GlyphExtractionWorkload.CompactPagesGenerationMs\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.GlyphProcessing.Models.GlyphExtractionWorkload.FileDataUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.GlyphProcessing.Models.GlyphExtractionWorkload.FileSize\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.GlyphProcessing.Models.GlyphExtractionWorkload.GlyphCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.GlyphProcessing.Models.GlyphExtractionWorkload.IsTransient\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.GlyphProcessing.Models.GlyphExtractionWorkload.OriginalFileDataUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.GlyphProcessing.Models.GlyphExtractionWorkload.PageCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.GlyphProcessing.Models.GlyphExtractionWorkload.TargetFile\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.GlyphProcessing.Models.GlyphExtractionWorkload.TaskCreatedDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.GlyphProcessing.Models.GlyphExtractionWorkload.TaskType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.GlyphProcessing.Models.GlyphExtractionWorkload.TimeTakenToExtractGlyphsFromDocumentStreamInMs\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailResourceManager.Messaging\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailResourceManager.MessagingPolaris\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailResourceManager.MessagingPrism\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.BaseReformatter.EmailService\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.BaseReformatter.WorkflowVariableWrap\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.WorkflowVariableWrap\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.ApprovalWorkflowStep.CanSkip\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.ApprovalWorkflowStep.RepeatReminder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CommonMetadataField._allowedValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CommonMetadataField._metadataGroupName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CommonMetadataField._metadataGroupPosition\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CommonMetadataField._metadataGroupUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CommonMetadataField._metadataSetName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CommonMetadataField._metadataSetRepeating\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._accountStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._fullName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._groupType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._isApiUser\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._isLoginLocked\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._lastLoginDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._loginName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._loginStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._middleName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._name\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._role\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._suffix\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._uid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Conversion.Common.MigrationMetaData.RequestToken\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomRuleAF._customRuleUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomRuleAF._params\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomRuleAF._uid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataPlaceHolder.DataType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataPlaceHolder.FieldName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataPlaceHolder.GroupName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataPlaceHolder.Value\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Provisioning.ApplicationData.PropertiesBag\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.QueueTasks.ExternalDataMapSyncTask.ExternalKey\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.QueueTasks.ExternalDataMapSyncTask.ExternalSystem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.QueueTasks.ExternalDataMapSyncTask.ScmKey\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.QueueTasks.ExternalDataMapSyncTask.Site\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.QueueTasks.ExternalDataMapSyncTask.TtlSeconds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.QueueTasks.ExternalDataMapSyncTask.Type\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.QueueTasks.ExternalDataMapSyncTaskPayload.ExternalKey\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.QueueTasks.ExternalDataMapSyncTaskPayload.ExternalSystem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.QueueTasks.ExternalDataMapSyncTaskPayload.ScmKey\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.QueueTasks.ExternalDataMapSyncTaskPayload.Site\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.QueueTasks.ExternalDataMapSyncTaskPayload.TtlSeconds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.QueueTasks.ExternalDataMapSyncTaskPayload.Type\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Reporting.ReportQueryContext.analyticsReportPersistence\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Reporting.ReportQueryContext.correlationId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Reporting.ReportQueryContext.forExpandedRows\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Reporting.ReportQueryContext.forExport\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Reporting.ReportQueryContext.generateTotalCounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Reporting.ReportQueryContext.previewMode\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Reporting.ReportQueryContext.reportConfig\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Reporting.ReportQueryContext.userAccount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Reporting.ReportQueryContext.userFilters\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityEvaluationCacheRevocationResponse.AuthenticationTimeInMs\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityEvaluationCacheRevocationResponse.Message\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityEvaluationCacheRevocationResponse.Success\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.UserInformationHistory.Email\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.UserInformationHistory.FirstName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.UserInformationHistory.FriendlyName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.UserInformationHistory.LastName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.UserInformationHistory.Uid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.UserInformationHistory.UserName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.OfficeWebApps.WopiDiscoveryService.CacheRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.AIExtractionsPersistence`1.Format\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.AIExtractionsPersistence`1.PhysicalStorageFactory\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.FileCheckupQueuePersistence.FileCheckupQueueItem.AccountId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.FileCheckupQueuePersistence.FileCheckupQueueItem.FileDataUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.IndexQueuePersistence.IndexQueueItem.AccountId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.IndexQueuePersistence.IndexQueueItem.Id\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.IndexQueuePersistence.IndexQueueItem.ObjectType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.IndexQueuePersistence.IndexQueueItem.ObjectUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.IndexQueuePersistence.IndexQueueItem.Priority\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence.MetadataQueueItem.AccountId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence.MetadataQueueItem.ErrorCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence.MetadataQueueItem.ObjectType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence.MetadataQueueItem.ObjectUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence.MetadataQueueItem.Operation\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.ObjectTrashQueuePersistence.ObjectTrashQueueItem.AccountId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.ObjectTrashQueuePersistence.ObjectTrashQueueItem.ObjectType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.ObjectTrashQueuePersistence.ObjectTrashQueueItem.ObjectUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.ObjectTrashQueuePersistence.ObjectTrashQueueItem.TrashBagFolderUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.SecurityQueuePersistence.SecurityQueueItem.AccountId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.SecurityQueuePersistence.SecurityQueueItem.ItemTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.SecurityQueuePersistence.SecurityQueueItem.ItemUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.SecurityQueuePersistence.SecurityQueueItem.Priority\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.SettingStruct.AllowOverride\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.SettingStruct.Inherited\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.SettingStruct.Value\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedStorage._atlasPersistenceFactory\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedStorage._encryptionClient\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedStorage._fileMetaDataPersistence\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedStorage.StorageType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.PhysicalStorage.AtlasHybridPhysicalStorage.PrimaryStorage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.PhysicalStorage.AtlasHybridPhysicalStorage.SecondaryStorage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Column.name\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Column.type\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Column.typeSignature\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoQueryResults.columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoQueryResults.data\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoQueryResults.error\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoQueryResults.id\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoQueryResults.infoUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoQueryResults.nextUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoQueryResults.partialCancelUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoQueryResults.stats\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoQueryResults.totalResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoQueryResults.updateCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoQueryResults.updateType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.QueryError.errorCode\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.QueryError.errorType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.QueryError.message\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.QueryError.sqlState\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.completedSplits\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.cpuTimeMillis\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.nodes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.processedBytes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.processedRows\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.queued\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.queuedSplits\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.rootStage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.runningSplits\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.scheduled\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.state\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.totalSplits\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.userTimeMillis\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.StatementStats.wallTimeMillis\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Provisioning.PlanDefaults.AccountType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Provisioning.PlanDefaults.StorageGb\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Provisioning.PlanDefaults.UserLimit\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyCommon.CreatedBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyCommon.CreatedDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyCommon.Description\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyCommon.Id\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyCommon.Metadata\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyCommon.MetadataGroups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyCommon.Name\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyCommon.ParentFolderId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyCommon.TermOption\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.CustomData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.EditDocumentURL\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.IsCheckedOut\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.IsFormDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.IsTermDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.MIMEType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.PageCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.ParentFolderName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.UpdatedBy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.UpdatedDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocumentReminder.EmailBody\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocumentReminder.EmailFromAddress\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocumentReminder.EmailSubject\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocumentReminder.Recipients\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocumentReminder.ReminderDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyFolder.BrowseFolderURL\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyMetadata.Field\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyMetadata.Group\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyMetadata.SetName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyMetadata.SetNumber\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyMetadata.Value\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyMetadataGroup.Sets\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyMetadataSet.Metadata\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyTermOption.Content\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyTermOption.Id\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyTermOption.Name\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyTermOption.Notes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyUserAccount.Email\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyUserAccount.FirstName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyUserAccount.Language\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyUserAccount.LastName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyUserAccount.ManagerUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyUserAccount.Region\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyUserAccount.Role\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyUserAccount.Uid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AccountDefaultContractStorage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AccountDefaultContractUserLimit\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AddressBook.AddressBookSearch.Company\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AddressBook.AddressBookSearch.Email\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AddressBook.AddressBookSearch.FirstName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AddressBook.AddressBookSearch.HideSearch\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AddressBook.AddressBookSearch.IsAdvancedSearch\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AddressBook.AddressBookSearch.LastName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AddressBook.AddressBookSearch.Name\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AddressBook.AddressBookSearch.SearchStyle\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIAutofillErrorCsvCreationWorkload.Status\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIAutofillErrorCsvCreationWorkload.TaskCreatedDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIBatchWorkloadBase.TaskCreatedDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentUploadWorkload.FileDataUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentUploadWorkload.FileSize\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentUploadWorkload.OriginalFileType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentUploadWorkload.PageCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentUploadWorkload.Status\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentUploadWorkload.TaskCreatedDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentUploadWorkload.TaskType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIStagedMetadataSyncWorkload.Status\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIStagedMetadataSyncWorkload.TaskCreatedDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIStartBulkAnalysisTransactionsWorkload.DocumentsEnteredByTask\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIStartBulkAnalysisTransactionsWorkload.IsTopLayer\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIStartBulkAnalysisTransactionsWorkload.SubFoldersToProcess\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIStartBulkAnalysisTransactionsWorkload.TotalNumberOfDocuments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIXmlAutofillAnalysis.BatchUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIXmlAutofillAnalysis.MapName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIXmlAutofillAnalysis.StagedMetadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIXmlAutofillAnalysis.TransactionUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIXmlBase.DocumentUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIXmlBase.DocumentVersion\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AIXmlBase.Status\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AnalyzedValueInstanceXml.ConfidenceScore\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AnalyzedValueInstanceXml.ModelName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AnalyzedValueInstanceXml.OriginalValue\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AnalyzedValueXml.HighestConfidence\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AnalyzedValueXml.Instances\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.AnalyzedValueXml.Text\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataXml.CurrentValue\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataXml.ObjectDataType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataXml.ObjectId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataXml.ObjectName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataXml.ObjectType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataXml.OtherAnalyzedValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataXml.RulesApplied\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataXml.SuggestedValue\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIExtractions.AIGetExtractionsWorkload.ExtractionsCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIExtractions.AIGetExtractionsWorkload.FileDataUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIExtractions.AIGetExtractionsWorkload.Status\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIExtractions.AIGetExtractionsWorkload.TaskCreatedDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIS.AISIngestionWorkload.FileDataUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIS.AISIngestionWorkload.IsMirrored\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIS.AISIngestionWorkload.MirroredTransactionId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIS.AISIngestionWorkload.PageCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIS.AISIngestionWorkload.TimeTakenByAIS\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIS.AISIngestionWorkload.TotalNumberOfExtractions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.BaseRepository`1._delAccessDenied\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.BaseRepository`1._delCreatePermDenied\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.BaseRepository`1._delDeletePermDenied\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.BaseRepository`1._delFieldInvalid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.BaseRepository`1._delObjNotExists\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.BaseRepository`1._delUnknownError\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.BaseRepository`1._delUpdatePermDenied\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleExecutionContext.ErrorCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleExecutionContext.Logger\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleExecutionContext.RuleTransaction\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleExecutionContext.SubTran\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.ActionsExecuted\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.Dispose\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.Exception\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.IsGood\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.Messages\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.RecursionDetected\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.WithWarning\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReader._document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReader._user\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewAttachmentRepository._queueItemStateRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper._accountId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper._accountSharedStorage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper._attachmentUidToPdfPath\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper._externalReview\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper._externalReviewId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper._outUserConversionTaskIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper._tempFilePath\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper._user\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.FormRepository.FormInputField.CustomDataReference\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.FormRepository.FormInputField.HtmlId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.FormRepository.FormInputField.HtmlValue\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.FormRepository.FormInputFieldEx.SetName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.FormRepository.FormInputFieldEx.SetNumber\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.LWDPDibs.Machine\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSet.AllFieldValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionWorkload.ContractId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionWorkload.FailedReconciliationExtractionCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionWorkload.FileDataUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionWorkload.FileSize\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionWorkload.IsDuplicateUpload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionWorkload.OriginalFileType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionWorkload.PageCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionWorkload.RetrieveDocumentElapsedMilliseconds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionWorkload.SendDocumentElapsedMilliseconds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionWorkload.Status\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionWorkload.TaskCreatedDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Security.SecCalcWorkload.Database\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Security.SecCalcWorkload.ErrorMessage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Security.SecCalcWorkload.IsLastAttempt\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Security.SecCalcWorkload.ItemIdentifier\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Security.SecCalcWorkload.ItemTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Security.SecCalcWorkload.Status\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Security.SecCalcWorkload.TaskCreatedDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Security.SecCalcWorkload.TotalTaskDurationMilliseconds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Security.SecCalcWorkload.UserMatchFound\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Throttling.AbstractThrottlingRepository._cacheRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.TrackedContent.GetTrackedContentWorkload.DocExtension\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.TrackedContent.GetTrackedContentWorkload.DocumentUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.TrackedContent.GetTrackedContentWorkload.MimeType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.TrackedContent.GetTrackedContentWorkload.RequestId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.TrackedContent.GetTrackedContentWorkload.Status\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.TrackedContent.GetTrackedContentWorkload.TaskCreatedDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.TrackedContent.ReplaceTrackedContentWorkload.DocExtension\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.TrackedContent.ReplaceTrackedContentWorkload.MimeType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.TrackedContent.ReplaceTrackedContentWorkload.SourceDocumentUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.TrackedContent.ReplaceTrackedContentWorkload.Status\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.TrackedContent.ReplaceTrackedContentWorkload.TargetDocumentUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.TrackedContent.ReplaceTrackedContentWorkload.TaskCreatedDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.User.ApiCredential.AccountId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.User.ApiCredential.Password\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.User.ApiCredential.UserName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.User.PublicUserAuthorization.AllowedActions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.User.PublicUserAuthorization.AllowedContext\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.User.UserAccountRepository._delUserExisted\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.User.UserAccountRepository._specialUserIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient._ctx\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.EMAIL_DELIMITER\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.RemoteWorkflowClient._maxAttempts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.RemoteWorkflowClient._timeoutMilliseconds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.RemoteWorkflowClient._winsSlowUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.RemoteWorkflowClient._winsUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal.DynamicVariables._ctx\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal.DynamicXmlVariables._ctx\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Loaders.ContactLoader.EMAIL_DELIMITER\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canAddContacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canAddParties\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canAddUser\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canAdministerBilling\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canAdministerDocLauncher\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canAdministerSecurityGroups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canChangeRole\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCheckInOut\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCreateForms\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCreateGroup\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCreatePrivateFolder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCreatePublicFolder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCreateSFComunityUsers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCreateSharedFolder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canDelete\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canDeleteUser\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canDesignBPMWorkflow\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canDesignReports\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canDoLegalHold\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canDownloadDocuments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canEditAccountSettings\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canEditExpirationAndReminder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canEditSavedSearch\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canEditUser\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageAbacPolicies\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageBPMWorkflow\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageConnectedApps\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageConnections\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageForms\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageInboundFax\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageParties\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageQueues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canMangeInboundEmail\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canParticipateInBPMWorkflow\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canPinPoint\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canPrintOnDemand\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canReceiveFax\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canReceiveInboundEmail\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSendDocuments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSendFax\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetSecurityPrefs\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupAccount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupAttributes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupIntegrations\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupMenuToolbar\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupObjectMapping\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupPersonaSettings\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupReminders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupRoles\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupSalesforceIntegration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupSchedules\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupSmartAgreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupSmartRules\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupUIPreferences\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canStartBPMWorkflow\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canStartPredefinedWorkflow\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canStartWorkflow\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canUploadDocuments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canViewInbox\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._hasAdminPrivs\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._hasSuperAdminPrivs\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._isEnhancedGuest\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._IsGuest\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.MetadataSearchFields._junction\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResult.Score\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResult.Uid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResults.NativeHitCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResults.QueriedMaxHits\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResults.RequestedMaxHits\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResults.RequestedStartHitIndex\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResults.SearchMilliseconds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResults.SearchType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResults.TotalMilliseconds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SharedStorage.AtlasHybridSharedStorage._asyncSecondarySharedStorage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SharedStorage.AtlasHybridSharedStorage.PrimarySharedStorage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SharedStorage.AtlasHybridSharedStorage.SecondarySharedStorage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.ADMInsightRequest.Op\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.BatchReport.AccountId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.BatchReport.BatchUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.BatchReport.FilePath\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadataItem.ObjectId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadataItem.ObjectType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadataItem.Status\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadatasResult.ResultItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadatasResultItem.ErrorMessage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadatasResultItem.ObjectId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadatasResultItem.ObjectType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadatasResultItem.Status\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadatasResultItem.UpdatedDate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadatasResultItem.UpdatedValue\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Translation.Utilities.Converter.BaseTranslationConverter.AccountDefaultDateFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Translation.Utilities.Converter.BaseTranslationConverter.ExportTranslations\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Translation.Utilities.Converter.BaseTranslationConverter.TranslationUpdate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility._account\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Translation.Utilities.RetrieveTranslationUtility.TranslationRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.CsvFileCommon.SpecialChars\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Filter.PropertyName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Filter.Value\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.PagingAndFiltering.FilterText\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.PagingAndFiltering.IsZeroBasedPaging\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.PagingAndFiltering.PageNumber\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.PagingAndFiltering.PageSize\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.PagingAndFiltering.SkipCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.PagingAndFiltering.SortColumn.IsDescending\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.PagingAndFiltering.SortColumn.PropertyName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.PagingAndFiltering.SortColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Validation.AdvancedNumberFormatValidatorModel.MaximumDigitCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1051:Do not declare visible instance fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Validation.BaseValidator.SubValidators\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.Delete(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.ApiUrl(System.String,ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,System.Guid,ADEXS.Adm.Model.AdmFiltering)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.ApiUrl(System.String,ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,System.Guid,ADEXS.Adm.Model.AdmFiltering)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.DeleteRuleMapping(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.SaveRuleModelMapping(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.AIConfiguration.Models.RuleModelMapping,ADEXS.Core.Domain.AIConfiguration.Models.RuleModel)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomRestClientBase.DeserializeErrorResponse(System.Net.Http.HttpResponseMessage)~ADEXS.Core.Domain.Aom.AomApiErrorResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomRestClientBase.DeserializeResponse``1(System.Net.Http.HttpResponseMessage)~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ApplicationSettings.GetRestAuthRootUrlSiteSpecific(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasContext.PopulateFeatureFlagContext(System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIDownloadUrl(ADEXS.Core.Types.Enums.APIVersion)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIUploadUrl(ADEXS.Core.Types.Enums.APIVersion)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIUrl(ADEXS.Core.Types.Enums.APIVersion)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.DocuSignApiCallbackUrl(System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.DocusignProfileNotificationSyncUrl(System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.GenAPIUrl(ADEXS.Core.Types.Enums.APIVersion)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.GetAccountRolesForProductUrl(ADEXS.Core.Types.Enums.AccountType)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.OpenSearchUrl(ADEXS.Core.Types.Enums.APIVersion)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbstractUrl.IsSpringCMUrl(System.String,System.Uri@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.BpmUrl.AdvancedPreviewScreenStepUrl(System.Object,ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Int32)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.BpmUrl.StepUrl(System.Object,System.Object,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.BpmUrl.TaskScreensStepUrl(System.Object,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentLauncherUrl.GetDocumentLauncherUrl(ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig,ADEXS.Core.Domain.Model.Account,System.Nullable{System.Guid})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentLauncherUrl.GetDocumentLauncherUrl(ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentLauncherUrl.GetDocumentLauncherUrl(System.Int32,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.CheckIn(System.Object,System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.RequestCheckIn(System.Object,System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.IUrlProvider.LoginAccountReturnUrl(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.GetLearnMoreUrl(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.PortalUrl.IsFolderPortalUrl(System.String,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.SSOUrl.SwitchAccount(System.Int32,System.String,System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.UrlBuilder.#ctor(System.String,System.String[])\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.WorkflowUrl.MonitorWorkflowActivity(System.Guid,System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.Authentication.Authenticate(System.String,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Types.Enums.LoginAccessPoint,System.Boolean,System.String)~ADEXS.Core.Domain.Authentication.AuthenticationInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.IAuthenticationResponseGenerator.CreateSamlTransferForm(System.String,System.String,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.SamlResponseGenerator.CreateSamlTransferForm(System.String,System.String,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.BaseLoggingInfo.Log\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CacheObjects.UploadTokenRepository.UpsertToken(System.String,ADEXS.Core.Domain.CacheObjects.FileUploadInfo,System.TimeSpan)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.EntityChangeManager.AccountChanges(System.Int32,ADEXS.Core.Types.Enums.AccountConversionStatus)~ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.Model.AccountChange\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationStatus.AccountMigrationStatusManager.EnableMarkAccountComplete(System.Int32)~System.ValueTuple{System.Boolean,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationStatus.AccountMigrationStatusManager.IsAccountReadyForCompletion(System.Int32)~System.ValueTuple{System.Boolean,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationStatus.AccountMigrationStatusManager.IsConversionPagesEnabled(System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationStatus.AccountMigrationStatusManager.MarkAccountMigrationComplete(System.Int32)~System.ValueTuple{System.Boolean,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.GroupManagement.GroupConversionService.ConvertGroup(System.Net.Http.HttpClient,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,ADEXS.Core.Domain.Model.Group,System.Collections.Generic.IList{ADEXS.Core.Domain.Model.DSGroup})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.GroupManagement.GroupConversionService.MapGroupsFromAccountServer(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.DSGroup,System.Int32,ADEXS.Core.Domain.Model.Group)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Helper.AccountConversionStatusHelper.IsUserConverted(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Helper.ConversionJsonSanitizer.SanitizePiiFields(System.String,System.Guid,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Helper.UserMigrationHelper.LoadGroupMemberIds(System.Int32,System.Guid,ADEXS.Core.Domain.Repository.User.IGroupRepository,ADEXS.Core.Domain.Repository.Conversion.IAccountConversionSnapshotRepository)~System.Collections.Generic.HashSet{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Helper.UserMigrationHelper.SendRequestToDSServer(System.Net.Http.HttpClient,System.String,System.Object,System.Net.Http.HttpMethod,System.Guid,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Helper.UserMigrationHelper.SendRequestToDSServer(System.Net.Http.HttpClient,System.String,System.Object,System.Net.Http.HttpMethod,System.Guid,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.MixedMode.MixedModeSettingUtility.DeleteMixedModeSettings(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.MixedMode.MixedModeSettingUtility.SaveMixedModeSettings(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.AccountMigrationHealthCheckService.GetAccountMigrationHealth(System.Int32)~ADEXS.Core.Domain.Model.Conversion.Common.AccountHealthCheckModel\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.AccountMigrationHealthCheckService.GetAllGroupsMigrationHealth(System.Int32,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus})~System.Collections.Generic.IDictionary{System.Guid,System.Boolean}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.AccountMigrationHealthCheckService.GetAllUsersMigrationHealth(System.Int32,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus})~System.Collections.Generic.Dictionary{System.Guid,System.Boolean}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.AccountMigrationHealthCheckService.GetEnabledMarkAccountCompleteUsersMigrationHealth(System.Int32,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Validation.AccountConversionAdminValidator.GetUserGroupInfo(ADEXS.Core.Domain.Model.CreateAccountData,System.Int32)~ADEXS.Core.Domain.Model.DSGroupUser\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CodeRunner.CodeRunner.ExecuteCodeSnippet``2(ADEXS.Core.Domain.CodeRunner.CodeSnippet{``0,``1},ADEXS.Core.Domain.CodeRunner.ICodeRunnerData)~``1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DacDocGenApiMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocumentAssemblerMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ProcessElement(System.IO.Packaging.PackagePart,System.Xml.XmlNamespaceManager,System.Xml.Linq.XContainer,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,System.String,System.Int32,System.Int32@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource.GetStream(System.String,System.String@)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource.GetStreamFromLogicalPath(System.String,System.String@)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeDataSanitizer.SanitizeXmlString(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DacDocGenApiClientExceptionFactoryService.TryParseErrorCode(System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DacDocGenApiService.CreateDacDocGenApiClient(System.Net.Http.HttpClient,ADEXS.MergeEngine.DocumentAssembler.MergeSettings,System.String,System.String,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource)~DacDocGenApiClient.Api.IGenApi\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DacDocGenApiService.CreateLearningModeDacDocGenApiClient(System.Net.Http.HttpClient,ADEXS.MergeEngine.DocumentAssembler.MergeSettings,System.String,System.String,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource)~DacDocGenApiClient.Api.ILearningModeGenApi\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DSApiConfigurationService.GetEmailApiConfiguration(System.String)~DSEmailAPIClient.Client.Configuration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DSApiConfigurationService.GetGenApiConfiguration(ADEXS.Core.Domain.Model.UserAccount,System.String)~DSGenAPIClient.Client.Configuration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DSApiConfigurationService.GetGenApiConfiguration(System.Int32,System.String)~DSGenAPIClient.Client.Configuration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.GenTemplateApiService.ConvertDocument(System.Int32,DSGenAPIClient.Model.EnvelopeGenAndSend,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.GenTemplateApiService.GenAndArchive(ADEXS.Core.Domain.Model.UserAccount,DSGenAPIClient.Model.EnvelopeGenAndSend,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.GenTemplateApiService.GenAndConvert(ADEXS.Core.Domain.Model.UserAccount,DSGenAPIClient.Model.EnvelopeGenAndSend,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.GenTemplateApiService.PostGenTemplateDocument(ADEXS.Core.Domain.Model.UserAccount,DSGenAPIClient.Model.GenerateTemplateDocument,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.IDacDocGenApiService.CreateDacDocGenApiClient(System.Net.Http.HttpClient,ADEXS.MergeEngine.DocumentAssembler.MergeSettings,System.String,System.String,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource)~DacDocGenApiClient.Api.IGenApi\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.IDacDocGenApiService.CreateLearningModeDacDocGenApiClient(System.Net.Http.HttpClient,ADEXS.MergeEngine.DocumentAssembler.MergeSettings,System.String,System.String,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource)~DacDocGenApiClient.Api.ILearningModeGenApi\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.IDSApiConfigurationService.GetEmailApiConfiguration(System.String)~DSEmailAPIClient.Client.Configuration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.IDSApiConfigurationService.GetGenApiConfiguration(ADEXS.Core.Domain.Model.UserAccount,System.String)~DSGenAPIClient.Client.Configuration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.IDSApiConfigurationService.GetGenApiConfiguration(System.Int32,System.String)~DSGenAPIClient.Client.Configuration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.IGenTemplateApiService.ConvertDocument(System.Int32,DSGenAPIClient.Model.EnvelopeGenAndSend,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.IGenTemplateApiService.GenAndArchive(ADEXS.Core.Domain.Model.UserAccount,DSGenAPIClient.Model.EnvelopeGenAndSend,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.IGenTemplateApiService.GenAndConvert(ADEXS.Core.Domain.Model.UserAccount,DSGenAPIClient.Model.EnvelopeGenAndSend,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.IGenTemplateApiService.PostGenTemplateDocument(ADEXS.Core.Domain.Model.UserAccount,DSGenAPIClient.Model.GenerateTemplateDocument,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.SfMerge.AttachDocumentToPartySafe(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.Document)~System.Nullable{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.SfMerge.StartWorkflowSafe(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,ADEXS.Core.Domain.Model.Party,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.Document)~System.Nullable{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMergeDataSource.EvaluateXPath(System.String)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMergeDataSource.GetValue(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuMonitor.DocuMonitorUtility.CatchBlockException(System.Exception,DocuSign.Monitoring.DocuMonitorEventType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuMonitor.DocuMonitorUtility.LogDocuMonitorEvent(ADEXS.Core.Domain.Model.UserAccount,DocuSign.Monitoring.DocuMonitorEventType,DocuSign.Monitoring.DocuMonitorParamKey,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuMonitor.DocuMonitorUtility.LogDocuMonitorEvent(ADEXS.Core.Domain.Model.UserAccount,DocuSign.Monitoring.DocuMonitorEventType,System.String,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.CallExpressionService(System.Uri,ADEXS.Core.Domain.ExpressionService.Internal.Model.WorkflowExpressionServiceRequestContent,ADEXS.Core.Domain.Model.Account,System.Guid,System.Guid,System.Guid,System.Int32@,System.String@,System.Boolean@)~ADEXS.Core.Workflow.Expressions.Model.ApiExpressionServiceResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.CallExpressionServiceApi(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.Boolean,System.Guid,System.Guid@,System.Boolean)~ADEXS.Core.Workflow.Expressions.Model.WorkflowExpressionResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.CallExpressionServiceApi(System.String,DocuSign.CLM.API.ExpressionService.Client.WorkflowExecutionRequest,System.Int32,System.Guid,System.Guid,System.Guid,System.Int32,System.Int32,System.Boolean,System.Int32@,System.String@,System.Boolean@,System.String)~ADEXS.Core.Workflow.Expressions.Model.ApiExpressionServiceResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.EvaluateOrCompileExpression(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Guid,System.Guid)~ADEXS.Core.Workflow.Expressions.Model.ExpressionServiceResponseDetails\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.RemoteWorkflowEvaluateExpression(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Guid)~ADEXS.Core.Workflow.Expressions.Model.WorkflowExpressionResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:Uri return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.IExpressionServiceClient.GetExpressionServiceApiBaseUrl()~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:Uri return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.GetExpressionServiceApiBaseUrl()~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1033:Interface methods should be callable by child types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FeatureFlags.AtlasFeatureFlagsConfiguration.ADEXS#FeatureFlags#IFeatureFlagsConfiguration#GetRegisteredSettingTypes~System.Collections.Generic.HashSet{System.Type}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PageCountOnDemand.EnsureDocumentPageCount(ADEXS.Core.Domain.Model.Document)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PDFMergeProcessor.MergeDocuments(ADEXS.Core.Types.Enums.SharedStorageUseCase)~ADEXS.Core.Domain.Model.QueueTasks.PdfMergeTask.ProcessingResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperation.GetPageCount~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.ConcatenateIntoPDF(System.Collections.Generic.List{ADEXS.Core.Domain.FileOperations.PDF.ConcatDocItem},System.String,System.Boolean,System.String,DocuSign.CLM.ContentStorage.Shared.ISharedStorage,System.Int32,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.GetDegreeRotated(WebSupergoo.ABCpdf12.Doc,System.Int32,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.ImagePdfOperationsPdf.GeneratePreviewImagePages(System.String,System.String,System.String,System.String,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.String}@)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.WatermarkServicePdf.GetDegreeRotated(WebSupergoo.ABCpdf12.Doc,System.Int32,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfUtility.GetPageCount(System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.DocumentGlyphsRepository.GetDocumentCompactPages(ADEXS.Core.Domain.Model.FileData,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.Int64@)~System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.DocumentGlyphsRepository.GetTransientDocumentCompactPages(System.String)~System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.DocumentGlyphsPersistence.GetCompressedStreamTransient(System.Int32,System.Guid,System.Guid)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.DocumentGlyphsPersistence.Save(System.Int32,System.Guid,ADEXS.Core.Domain.Model.FileData,System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage},System.TimeSpan,ADEXS.Core.Types.Enums.GlyphExtractionStatus)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.DocumentGlyphsPersistence.SaveTransient(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{ADEXS.InteractivePreview.Models.CompactPage},System.TimeSpan,ADEXS.Core.Types.Enums.GlyphExtractionStatus)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.GlyphsPersistenceBase.GetCompressedStream(System.Int32,System.Guid,ADEXS.Core.Domain.Model.FileData)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Javelin.SfGenQueryFactoryService.DataWritebackLogs(Javelin.SalesForce.Package.Utility.SalesForceWriteBack.ISFLoggingSchema)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.CheckUser(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Lookup.IEmailInfo,System.Boolean@,System.Boolean@,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.AddCustomFooter(ADEXS.Core.Domain.Messaging.Framework.Core.Interfaces.ITokenModifier,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.AddCustomLogo(ADEXS.Core.Domain.Messaging.Framework.Core.Interfaces.ITokenModifier,System.Net.Mail.MailMessage,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.OverrideColors(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.OverrideColors(ADEXS.Core.Domain.Messaging.Framework.Core.Interfaces.ITokenModifier,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.MailMessageComposer.GetFrom(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~System.Net.Mail.MailAddress\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.MailMessageComposer.RetrievePlainTextView(System.Guid,System.String)~System.Net.Mail.AlternateView\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.ComposeAndSendEmail(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.SendEmailResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.SafelyLogInEmailHistory(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.Net.Mail.MailMessage,System.Exception)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.SafelyRunPostProcessing(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.Net.Mail.MailMessage)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.BasePayloadBuilder.SafelyGetTime(System.String,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.GenericFailureEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.ValidateParties(System.Collections.Generic.List{System.Tuple{ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation}},System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party},ADEXS.Core.Domain.Model.QueueTasks.PartySync.PartySyncValidationCounts@)~System.Collections.Generic.List{System.Tuple{ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadValidator.ComposeAndValidateEmail(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ValidateEmailResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.AutofillAnalysisReadyEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.AutofillAnalysisStartedEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CompleteExternalReviewReviewerEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.String,System.DateTime,System.Boolean,ADEXS.Core.Domain.Model.Documents,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document},System.DateTime,System.Boolean,System.DateTime,System.String,ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Model.ExternalReviewParticipant)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CreateClientSecretEmail.#ctor(System.Int32,System.Guid,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewFailedAutoMatchEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String,System.String,System.DateTime,System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewAttachment},System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewFailedAutoMatchEmailOnBehalf.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String,System.String,System.DateTime,System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewAttachment},System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendForEmailDomainApproval.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendForExternalReviewEmailNew.#ctor(ADEXS.Core.Domain.Model.EmailAction,System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Messaging.Framework.Core.EmailType,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendForExternalReviewEmailWithAttachments.#ctor(ADEXS.Core.Domain.Model.EmailAction,System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Messaging.Framework.Core.EmailType,System.Boolean,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.NotifySender.SendGenericFailureEmail(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.BaseReformatter.ParseOneOutputComment(System.String)~ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.OneCommentDto\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractShareShardBuilder.DocumentMobileUrl(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractShareShardBuilder.DocumentWebUrl(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractShareShardBuilder.FolderMobileUrl(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractShareShardBuilder.FolderWebUrl(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendDocumentRuleNotify(ADEXS.Core.Domain.Repository.CustomRuleRepository.ICustomRule,System.String,System.String,ADEXS.Core.Domain.Repository.CustomRuleRepository.ICustomRuleTrigger)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendEmail(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Messaging.SendEmail(ADEXS.Core.Domain.Persistence.Model.EmailPersistence.EmailContext,System.String,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Net.Mail.Attachment},System.Boolean,System.Boolean,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.SendDsEmailServiceHelper.SendSeparateEmailsToRecipients(ADEXS.Core.Domain.Messaging.ISendDsEmailService,DSEmailAPIClient.Model.PostEmailRequest,System.Int32,System.Int32,System.Boolean,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Guid},System.Int32)~System.Collections.Generic.List{System.ValueTuple{DSEmailAPIClient.Model.EmailAddress,System.Boolean,System.String}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.SendDsEmailServiceHelper.ToPostEmailRequest(System.Net.Mail.MailMessage,System.String,System.Guid,ADEXS.Core.Domain.Messaging.Framework.Core.EmailType,System.Boolean)~DSEmailAPIClient.Model.PostEmailRequest\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.ModelCollection`1.Remove(`0)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Clause.ClauseSmartClauseMetadata.#ctor(System.String,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Clause.ClauseSmartClauseMetadata.#ctor(System.String,System.String,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.PDFIconURL(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DocumentContent.GetValuesFromSourceFile(ADEXS.Core.Domain.Model.Document,System.Int32)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DocumentContent.SaveValuesToCache(ADEXS.Core.Domain.Model.Document,System.Int32,System.Collections.Generic.List{System.String})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DocumentContent.TryGetValuesFromCache(ADEXS.Core.Domain.Model.Document,System.Int32,System.Collections.Generic.List{System.String}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DynamicDropDownManager.GetValues(System.Collections.Generic.List{System.String},ADEXS.Core.Domain.Model.UserAccount,System.Nullable{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ExternalSystemUsers.Remove(ADEXS.Core.Domain.Model.ExternalSystemUser)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.FileData.SetFileAttributes(System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.UploadInfo.Delete\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Workflow.WebService.#ctor(System.Guid,System.String,System.String,System.Byte[],System.Boolean,System.String,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentCheckIn.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentCompareAction.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteComplete.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteFailed.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PastePartialSuccess.SendPasteProcessorPartialSuccessEmail(ADEXS.Core.Domain.Model.UserAccount,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteToLarge.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NewsActionTypeBase.GetObjectUrl(System.Int32,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.AddLink(System.String,System.Int32,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.OfficeWebApps.WopiDiscoveryService.BuildConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.GetDataTableFromGuidList(System.Collections.Generic.IEnumerable{System.Guid})~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.GetObjectDataTableFromGuidList(System.Collections.Generic.IEnumerable{ADEXS.Core.Util.Core.Pair{System.Guid,System.Int32}})~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountPersistence.AccountStat(System.Int32,System.Int32@,System.Int32@,System.Int32@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AlertPersistence.LoadAlertsFromTime(System.Int32,System.Guid,System.DateTime,ADEXS.Core.Domain.Lookup.Pager,System.Int32@,System.Type,System.Type)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AlertPersistence.LoadAlertsFromTime(System.Int32,System.Guid,System.DateTime,System.Int64,System.Int32,System.String,System.Boolean,System.Int32@)~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AlertPersistence.LoadMessagesFromTime(System.Int32,System.Guid,System.DateTime,System.Int64,System.Int32,System.String,System.Boolean,System.Int32@)~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AutoNumberPersistence.Delete(System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomRulePersistence.Save(ADEXS.Core.Domain.Model.CustomRuleLog)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentHistoryPersistence.LogDocumentAction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Globals.ScmEnums.ActionType,System.Guid,System.String,System.Guid,System.String,System.DateTime,Newtonsoft.Json.Linq.JObject,System.Nullable{System.Guid},ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,ADEXS.Core.Types.Enums.HistoryCommentIdentifiers)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.SaveDocumentScopeHistory(System.Int32,System.Guid,ADEXS.Core.Domain.Model.DocumentScopes)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.SaveDocumentScopeHistory(System.Int32,System.Guid,System.Guid,ADEXS.Core.Domain.Model.DocumentScopes)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.SaveDocumentScopes(ADEXS.Core.Domain.Model.DocumentScopes)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.UpdateDocumentScopes(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.DocumentScope},ADEXS.Core.Types.Enums.DocumentScopeActorAction,System.String,System.DateTime,System.Nullable{System.DateTime},System.String,ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.UpdateDocumentScopes(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.DocumentScope},ADEXS.Core.Types.Enums.DocumentScopeActorAction,System.String,System.DateTime,System.Nullable{System.DateTime},System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FileDataContentHashPersistence.Save(ADEXS.Core.Domain.Model.FileDataContentHash)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1033:Interface methods should be callable by child types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FileMetaDataPersistence.ADEXS#Core#Domain#Persistence#Model#IFileMetaDataPersistence#LoadByFileDataUid(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FileMetaData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FileMetaDataPersistence.Save(ADEXS.Core.Domain.Model.FileMetaData,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentPersistence.LoadMatchByUidAndMetadata(System.Guid,System.Guid,System.String,System.String,System.Int32@)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentPersistence.LoadMatchByUidAndMetadata(System.Guid,System.Guid,System.String,System.String,System.Int32@,System.Boolean)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SAMLTokenPersistence.Save(ADEXS.Core.Domain.Model.SAMLToken)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ScheduledCustomRulePersistence.ScheduleCustomRule(System.Int32,System.Guid,System.String,System.DateTime,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ScheduledCustomRulePersistence.Unlock(System.String,System.Boolean,System.String,System.DateTime)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SftpPublicKeyPersistence.DeleteSftpPublicKey(System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SftpPublicKeyPersistence.SaveSftpPublicKey(System.Byte[],System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserAPIAuthenticationKeyPersistence.Save(ADEXS.Core.Domain.Model.UserAPIAuthenticationKey)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.WatchedDocumentsPersistence.Clear(System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.WatchedDocumentsPersistence.RemoveDocumentFromWatchLists(System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.WatchedDocumentsPersistence.StopWatchingDocument(System.Int32,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.WatchedDocumentsPersistence.WatchDocument(System.Int32,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceHistoryPersistence._ValidateValue(System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceHistoryPersistence.DeleteVariableHistory(System.Int32,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceHistoryPersistence.DoSave(System.Int32,System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.String,System.Boolean,System.String,System.DateTime,System.String,ADEXS.Core.Domain.Model.Workflow.HistoryEntryValueType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceHistoryPersistence.SaveVariableHistory(System.Int32,System.Guid,System.Guid,ADEXS.Core.Domain.Model.Workflow.InstanceVariables,System.String,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ThrottlingPersistence.Add(System.String,System.Int32)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ThrottlingPersistence.GetValue(System.Int32,System.String)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.UploadPersistence.Delete(System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.UploadPersistence.Save(ADEXS.Core.Domain.Model.UploadInfo)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.UploadPersistence.UpdateFailure(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasBlobStorageSettings.BlobPhysicalStorageDataPlaneAppIdUri(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasBlobStorageSettings.BlobPhysicalStorageUrl(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasBlobStorageSettings.BlobSharedStorageDataPlaneAppIdUri(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasBlobStorageSettings.BlobSharedStorageUrl(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedStorage.DeleteBlobMetaData(System.Int32,System.String,ADEXS.Core.Types.Enums.FileMetaDataType,System.Nullable{DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasHybridPhysicalStorage.LogFileSize(System.Func{System.Int64},System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasHybridPhysicalStorage.StoreFromFile(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.String,System.String,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasHybridPhysicalStorage.StoreFromStream(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasSwiftSettings.AuthUrl(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasSwiftSettings.TransientAuthUrl(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.CheckExists(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.Boolean,System.Boolean,System.String,System.Int64)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.GetContentLength(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.Boolean,System.String,System.Int64)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.GetFile(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.String,System.Boolean,System.String,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.GetStream(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.Boolean,System.String,System.Int64)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.GetStreamRange(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.Int64,System.Int64,System.Boolean,System.String,System.Int64)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.StoreFromFile(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.String,System.String,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.StoreFromStream(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.IO.Stream,System.String,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.CreateDocument(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.String)~DocuSign.CLM.ContentStorage.DocumentInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.UpdateDocument(System.Int32,System.String,System.Int64,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.String)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.CreateDocument(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.IO.Stream)~DocuSign.CLM.ContentStorage.DocumentInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.UpdateDocument(System.Int32,System.String,System.Int64,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.IO.Stream)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.CopyDocument(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.String,System.String,System.Int64)~DocuSign.CLM.ContentStorage.DocumentInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.BlobExists(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.GetBlob(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.GetBlobRange(System.Int32,System.String,System.Int64,System.Int64,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.PutBlob(System.Int32,System.String,System.IO.Stream,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.FormatInitiator(ADEXS.Core.Domain.Model.UserAccount,System.Object)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.TryParseJArray(System.Object,Newtonsoft.Json.Linq.JArray@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.GetDocumentUrl(ADEXS.Core.Domain.Model.Account,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.GetFolderUrl(ADEXS.Core.Domain.Model.Account,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.GetPropertyFromJson(System.String,System.String)~LanguageExt.Option{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailConfiguration.IsEmptyRow(System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Profiler.AppLog(ADEXS.Core.Domain.Model.ProfileEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Profiler.DbLog(ADEXS.Core.Domain.Model.ProfileEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountBranding.AccountBrandingRepository.LoadByAccountId(System.Int32)~ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBranding\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountBranding.AccountBrandingRepository.SaveImage(System.Int32,System.String,System.Byte[],ADEXS.Core.Types.Enums.AccountBrandingImageType,ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBrandingSaveResult@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AccountStatusChangedCleanup(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.InstallNewAccountPackage(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SaveCulture(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.CreateAccountData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SaveTimeZone(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.CreateAccountData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SetAccountStorage(ADEXS.Core.Domain.Model.Account@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.IAccountRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.LoadByExternalId(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementService.CreateOrUpdateAgreementAndRelationships(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementRelationship},System.Collections.Generic.List{System.String}@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIStagedMetadataSyncService.UpdateStandardAttributesStagedMetadata(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata},ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.UserAccount)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIStatusNotificationService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.AIStatusNotificationTask)~ADEXS.Core.Domain.Repository.AIDocument.AINotificationServiceTaskStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIXmlHelper.SafeDeleteFile(DocuSign.CLM.ContentStorage.Shared.ISharedStorage,System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StartAIBulkAnalysisTransactionsService.InsertTransactions(ADEXS.Core.Domain.Model.QueueTasks.IStartAIBulkAnalysisTransactionTaskPayload,System.Action,ADEXS.Core.Domain.Utilities.AIBulkJobContentComposerResult,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.LogicApp},ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionProvider,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch@,ADEXS.Core.Types.Enums.StartAIBulkAnalysisTransactionsTaskStatus@)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StartAIBulkAnalysisTransactionsService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IStartAIBulkAnalysisTransactionTaskPayload,System.Action)~ADEXS.Core.Domain.Repository.AIDocument.StartAIBulkAnalysisTransactionsResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.AisMockedDataHelper.PopulateFeatureFlagContext(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISIngestionService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IAISIngestionTask)~ADEXS.Core.Types.Enums.AISIngestionStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Approval.ApprovalWorkflowRepository.DeleteApprovalTemplate(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AutoNumberRepository.AutoNumberRepository.EvalVar(System.Text.RegularExpressions.Match)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AutoNumberRepository.AutoNumberRepository.Save(ADEXS.Core.Domain.Model.AutoNumber,System.Boolean)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.BaseRepository`1.Delete(ADEXS.Core.Domain.Model.UserAccount,`0,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.BaseRepository`1.Save(ADEXS.Core.Domain.Model.UserAccount,`0,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.BaseRepository`1.Validate(`0,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseContractsService.AddSmartClause(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.Int32)~System.Threading.Tasks.Task{ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.Responses.ContractResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractMetadataService.CreateAndSaveSetField(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Int32)~ADEXS.Core.Domain.Model.MetadataField\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractMetadataService.CreateClauseGroup(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataField@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractMetadataService.SaveClauseMap(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Clause.ClauseSmartContractMetadata,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractMetadataService.SaveContractId(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractRepository.InsertIntoClauseSmartContractQueue(ADEXS.Core.Domain.Model.QueueTasks.ClauseSmartContractTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractRepository.TryGetClauseResultFromCache``1(System.String,System.Int32,System.Guid,System.String,``0@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.CacheRepositorySave(System.String,System.Object,System.Int64,ADEXS.Core.Domain.Model.QueueTasks.ClauseSmartContractTask,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.TryUpdateWorkflowName(System.Collections.Generic.List{ADEXS.ClauseIOClient.Models.Common.FlowStep},System.String,System.Boolean@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.IClauseContractsService.AddSmartClause(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.Int32)~System.Threading.Tasks.Task{ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.Responses.ContractResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.TryParseDate(System.String,System.Globalization.CultureInfo,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.CheckForSave(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,System.Object,ADEXS.Core.Types.Enums.MigrationEntityType,System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.Setting},System.Func{System.String,System.Boolean})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.DeleteAccountConversionSnapshot(System.Int32,ADEXS.Core.Types.Enums.AccountConversionStatus,ADEXS.Core.Types.Enums.MigrationEntityType,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.DeleteAllAccountConversionSnapshot(System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.GetParsedEntitySettingsFromDb(ADEXS.Core.Types.Enums.SettingLevel,System.Int32,System.Guid,System.String)~ADEXS.Core.Domain.Model.Settings\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.Load(System.Int32,ADEXS.Core.Types.Enums.AccountConversionStatus,ADEXS.Core.Types.Enums.MigrationEntityType,System.Guid)~ADEXS.Core.Domain.Model.Conversion.AccountConversionSnapshot\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.Revert(ADEXS.Core.Types.Enums.MigrationEntityType,System.Int32,System.Guid,ADEXS.Core.Types.Enums.AccountConversionStatus,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.Snapshot(ADEXS.Core.Types.Enums.MigrationEntityType,System.Int32,System.Guid,ADEXS.Core.Types.Enums.AccountConversionStatus,ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.UpdateAccountSettings(System.Collections.Generic.Dictionary{System.String,System.String},ADEXS.Core.Domain.Model.UserAccount,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionStatusRepository.LoadAccountConversionStatusByAccountId(System.Int32)~ADEXS.Core.Domain.Model.Conversion.Account.AccountConversionStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleRepository.InsertIntoCustomRuleQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,ADEXS.Core.Types.Enums.CustomRuleEventType,System.Guid,ADEXS.Core.Domain.Persistence.Model.CustomRuleEventParameters)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleRepository.SendMessages(System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.CustomRuleTask},ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration.convertInputFile(System.String,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Documents,System.Int32,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigEventEmitter.EmitEvent(ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRule.CustomRuleEventEmitter.EmitEvent(ADEXS.Core.Domain.Repository.CustomRule.CustomRuleEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.ParseHeader(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataRepository.ValidateContentAndContentType(ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataModel,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataSaveResult.ErrorTypes})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.CombineDocumentRepository.SendDocxMergeTask(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.Guid,System.String,System.Guid,System.Action)~ADEXS.Core.Domain.Repository.DocumentRepository.DocumentMergeRequestResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.InsertTaskIntoCompareQueue(ADEXS.Core.Domain.Model.UserAccount,CLM.MessageDefines.Interfaces.IUserTask)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRelatedText(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.String,System.Guid,System.String,System.Guid,System.Boolean,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.LoadGroupRecipients(ADEXS.Core.Domain.Model.DocumentReminder,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.DocumentReminderEmail.Recipient}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.LoadRecipients(ADEXS.Core.Domain.Model.DocumentReminder)~System.Collections.Generic.List{ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.DocumentReminderEmail.Recipient}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository._RecursiveFolderTreeCopy(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder,ADEXS.Core.Domain.Model.Folder,ADEXS.Core.Domain.Model.CopyResults,System.Action)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.AsyncPasteMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.Guid,ADEXS.Core.Types.Enums.ClipboardOperation,ADEXS.Core.Types.Enums.TaskInitiator,System.Nullable{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CopyMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,ADEXS.Core.Domain.Model.Documents,System.Guid,ADEXS.Core.Types.Constants.FileDataSource,System.Boolean,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},System.Boolean,System.Action)~ADEXS.Core.Domain.Model.CopyResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoDetectTypeQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoExtractQueue(ADEXS.Core.Domain.AccountSettings,System.String,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.FileData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoPdfManipulation(System.Guid,System.String,System.Int64,ADEXS.Core.Domain.AccountSettings,ADEXS.Core.Domain.LWDP.ImageScale[],System.String,System.Int32[],ADEXS.Core.Types.Enums.SharedStorageUseCase)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoQueues(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.DocumentRepository.IAddDocumentConfiguration,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoSANfileCheckup(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoSearchIndex(ADEXS.Core.Domain.Model.QueueTasks.ElasticIndexTask)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertPdfRenditionIntoExtractQueue(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.FileData,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.ListFolderContents(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.Folders@,ADEXS.Core.Domain.Model.Documents@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadContent(ADEXS.Core.Domain.AccountSettings,ADEXS.Core.Domain.Model.Document,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LogDocumentCopyAction(ADEXS.Core.Domain.Model.DocumentCopyResult,ADEXS.Core.Domain.Model.UserAccount,System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Types.Enums.HistoryCommentIdentifiers)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.MergeDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Action)~ADEXS.Core.Domain.Repository.DocumentRepository.DocumentMergeRequestResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.SubmitOCRTask(ADEXS.Core.Domain.Model.QueueTasks.IExtractTask,ADEXS.Core.Types.Enums.OCRProcessingLevel)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UpdatePDFConversion(ADEXS.Core.Domain.Model.FileData,System.String,System.Guid,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.CompleteStep(System.Int32,System.Guid,System.Guid,ADEXS.Core.Domain.Model.Documents,System.String,ADEXS.Core.Types.Enums.WorkflowStepStatus,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.Save(System.Int32,ADEXS.Core.Domain.Model.DocumentScopes)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.Save(System.Int32,ADEXS.Core.Domain.Model.Scope,ADEXS.Core.Domain.Model.DocumentScopeActivity,System.String,ADEXS.Core.Domain.Model.Contact,ADEXS.Core.Domain.Model.Workflow.WorkerPool,System.String,ADEXS.Core.Domain.Model.Documents,System.DateTime,System.Nullable{System.DateTime})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.UpdateActorOutput(System.Int32,ADEXS.Core.Domain.Model.DocumentScopes,System.String,System.String,ADEXS.Core.Domain.Model.Contact,System.String,System.Guid,System.DateTime,System.Nullable{System.DateTime})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.UpdateActorOutput(System.Int32,ADEXS.Core.Domain.Model.Scope,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.Workflow.WorkItem,System.String,System.String,ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.UpdateOwnership(System.Int32,System.Guid,ADEXS.Core.Domain.Model.Workflow.WorkItem,System.Guid,System.DateTime,ADEXS.Core.Domain.Model.Contact,ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.LoadMatchByUidAndMetadata(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String,System.Int32@,System.Boolean)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IFolderRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder@,ADEXS.Core.Domain.Model.Metadatas,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IFolderRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.VerifyPathDoesNotExist(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,ADEXS.Core.Domain.Repository.DocumentRepository.ILogicalFileSystemParseResult@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.PhysicalStorageTransaction.Rollback(System.Exception)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.EventRegistration,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.FireEvent(ADEXS.Core.Domain.Model.Account,CLM.MessageDefines.CommonEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.RegisterEvent(ADEXS.Core.Domain.Model.UserAccount,CLM.MessageDefines.Constants.ScmEnums.EventType,System.Guid,System.String,System.String,System.Boolean,System.Nullable{System.Int32},System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.RegisterWorkflowCallbackEvent(ADEXS.Core.Domain.Model.UserAccount,CLM.MessageDefines.Constants.ScmEnums.EventType,System.Guid,System.Guid,System.Guid,System.String,System.String,System.Int32,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.IEventRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.EventRegistration,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.IEventRepository.RegisterWorkflowCallbackEventWrapper(ADEXS.Core.Domain.Model.UserAccount,CLM.MessageDefines.Constants.ScmEnums.EventType,System.Guid,System.Guid,System.Guid,System.String,System.String,System.Int32,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.IEventRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.EventRegistration,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SyncToSite(ADEXS.Core.Domain.Persistence.Model.ExternalDataMap,System.String,System.Int64)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper.EnqueueConversionRequest(System.String,ADEXS.Core.Domain.Model.ExternalReviewEmailAttachment,System.TimeSpan,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.SafeToReplyEmailDomainRepository.IsApprovedEmailDomain(System.Int32,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundFaxRepository.InboundFaxRepository.TransferFaxAssignment(System.Guid,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.LWDPDibs.MakeReservation~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSetProcessor.ProcessDocument(ADEXS.Core.Domain.Repository.MetadataRepository.ICascadingFieldUtil,ADEXS.Core.Domain.Model.Document@,System.Boolean,ADEXS.Core.Domain.Model.MetadataSet,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.GetCascadingTypeAheadValues(System.Guid,System.Guid,System.Collections.Generic.List{System.String},System.Int32,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSet})~System.Collections.Generic.SortedList{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ApplyMetadata(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CopyResults,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MergeMetadataFromParent(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MergeMetadataFromParent(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.QueueForMetadataMerge(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.QueueForMetadataPropagation(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas,System.Boolean,System.Boolean,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(System.String@,ADEXS.Core.Domain.Model.IMetadataField,System.Boolean,System.Globalization.CultureInfo,System.String@,ADEXS.Core.Types.Enums.ObjectType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(System.String@,ADEXS.Core.Domain.Model.Metadata,System.Globalization.CultureInfo,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(System.String@,ADEXS.Core.Domain.Model.MetadataField,System.Globalization.CultureInfo,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(System.String@,System.String,ADEXS.Core.Types.Enums.DataType,System.Boolean,System.Globalization.CultureInfo,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.ProtobufCachingRepository.GetFromCache``1(System.String)~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.UrlEncode(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient.#ctor(System.String,System.String,System.String,System.DateTimeOffset,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.InsertIntoNewsQueue(ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.InsertIntoNotificationDigestEmailQueue(ADEXS.Core.Domain.Model.QueueTasks.NotificationDigestEmailTaskPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.FormatTemplateForDisplay(ADEXS.Core.Domain.Model.ObjectHistory,ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.FormatTemplateWithPlaceholders(ADEXS.Core.Domain.Model.UserAccount,System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository.LoadByAgreementId(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Obligation}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository.LoadByDocumentUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Obligation}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.CleanupExpiredLocks(System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.VersionInactiveDrafts(System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.IOutboundHttpRepository.InsertRequestIntoQueue(System.Int32,System.Guid,System.Guid,System.Version,ADEXS.Core.Util.Core.Pair{System.String,System.String}[],System.String,System.String,System.Int32,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpRepository.InsertRequestIntoQueue(System.Int32,System.Guid,System.Guid,System.Version,ADEXS.Core.Util.Core.Pair{System.String,System.String}[],System.String,System.String,System.Int32,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpRepository.InsertRequestIntoQueue(System.Int32,System.Guid,System.Guid,System.Version,ADEXS.Core.Util.Core.Pair{System.String,System.String}[],System.String,System.String,System.Int32,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.RetrieveDSLanguageRegionSettings(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.UpdateLocalizationSettings(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.Dictionary{System.String,System.String})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetDocuSignAccountBaseUrl(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.IsDsOrgAdmin(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.RegisterDownloadResourceToken(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)~ADEXS.Core.Domain.Model.RegisterResourceTokenResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.RegisterResourceToken(System.String,System.Object,System.Boolean,System.Int32,System.String)~ADEXS.Core.Domain.Model.RegisterResourceTokenResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.AddProductGroup(System.Net.Http.HttpClient,System.Guid,System.String,ADEXS.Core.Domain.Model.Provisioning.AddProductGroupRequest)~ADEXS.Core.Domain.Repository.ProvisioningRepository.AddProductGroupResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.IDocuSignSyncRepository.ProcessDsUserAccount(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Types.Enums.UserRole,System.Guid,ADEXS.Core.Domain.Model.DSGroupUser,System.Collections.Generic.List{System.Guid},ADEXS.Core.Domain.Model.UserAccount@,System.String@)~ADEXS.Core.Types.Enums.SyncProcessResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.IDocuSignSyncRepository.SaveDsGroup(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.IDSGroup,ADEXS.Core.Domain.Model.Group@,System.String@)~ADEXS.Core.Types.Enums.SyncProcessResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.IDSAccountsServerRepository.GetDocuSignAccountBaseUrl(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.IDSAccountsServerRepository.RegisterDownloadResourceToken(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)~ADEXS.Core.Domain.Model.RegisterResourceTokenResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.IDSAccountsServerRepository.RegisterResourceToken(System.String,System.Object,System.Boolean,System.Int32,System.String)~ADEXS.Core.Domain.Model.RegisterResourceTokenResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.GetInviteEmailTemplateBody(ADEXS.Core.Domain.Model.Provisioning.ApplicationData)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.Save(System.Int32,System.Guid,ADEXS.Core.Domain.Model.ReminderTemplate)~ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.SaveResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsQueryLogRepository.SaveQueryInfo(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.String)~LanguageExt.Either{System.Exception,LanguageExt.Unit}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.GetAndMapData``1(System.String,ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Func{System.String,``0})~LanguageExt.Either{System.Exception,LanguageExt.Option{``0}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.GetQueryId(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,LanguageExt.Option{ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters},ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~LanguageExt.Either{System.Exception,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.GetReportConfig(System.String,ADEXS.Core.Domain.Model.UserAccount,System.Guid)~LanguageExt.Either{System.Exception,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,System.Boolean,System.Boolean,System.Boolean)~LanguageExt.Either{System.Exception,LanguageExt.Unit}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.SetQueryId(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,System.Boolean,System.Boolean)~LanguageExt.Either{System.Exception,LanguageExt.Unit}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.SetReportLoadingState(ADEXS.Core.Types.Enums.ReportLoadingState,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,System.Boolean,System.Boolean,System.Boolean)~LanguageExt.Either{System.Exception,LanguageExt.Unit}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.LoadFolderByName(ADEXS.Core.Domain.Model.UserAccount,System.String)~LanguageExt.Option{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.TrySaveCustomReportAndValidateDuplicateName(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomReport,System.Boolean,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportUserConfigurationRepository.GetAndParseData``1(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Func{System.String,``0})~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportUserConfigurationRepository.UpdateReportUserConfiguration(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Presto.Reports.ReportUserConfiguration)~LanguageExt.Either{System.Exception,LanguageExt.Unit}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportUserFiltersRepository.GetAndParseData``1(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Func{System.String,``0})~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportUserFiltersRepository.UpdateReportUserFilters(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters)~LanguageExt.Either{System.Exception,LanguageExt.Unit}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.RequestOriginRestrictionRepository.IRequestOriginRestrictionRepository.ValidateAndFormatRequestOrigin(System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.RequestOriginRestrictionRepository.RequestOriginRestrictionRepository.ValidateAndFormatRequestOrigin(System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ScheduleRepository.ScheduleRepository.NextOccurrence(ADEXS.Core.Domain.Model.Schedule,System.Int64,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.ISealCredentialRepository.ValidateCredentials(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.String)~ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.AuthResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.ISealExtractionsRepository.GetContractData(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.Int32)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.ContractsResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.ISealExtractionsRepository.GetJobStatus(ADEXS.Core.Domain.Model.Account,System.String,System.String)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.JobResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.ISealExtractionsRepository.GetLogicAppsModelList(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.SealDigitalAppType,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.List{ADEXS.Core.Domain.Model.Seal.DigitalAppRule}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.ISealExtractionsRepository.GetModelList(ADEXS.Core.Domain.Model.Account,System.String)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.SystemMetadataResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.ValidateCredentials(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.String)~ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.AuthResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.ValidateCredentials(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.String)~ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.AuthResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.GetContractData(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.Int32)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.ContractsResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.GetJobStatus(ADEXS.Core.Domain.Model.Account,System.String,System.String)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.JobResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.GetLogicAppsModelList(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.SealDigitalAppType,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.List{ADEXS.Core.Domain.Model.Seal.DigitalAppRule}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.GetModelList(ADEXS.Core.Domain.Model.Account,System.String)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.SystemMetadataResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.InsertIntoSealExtractionQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealScorecardsRepository.InsertIntoSealGetDatabagQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealScorecardsRepository.InsertIntoSealScorecardQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealScorecardsRepository.WriteScorecardDatabag(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.Document,ADEXS.SealAPIClient.Models.Responses.ScorecardResponseData,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.KickstartSecurity(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.Int32,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.RevokeJitSecurityCatch(System.Int32,ADEXS.Core.Types.Enums.SecurityItemTable,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SessionRepository.ISessionRepository.ExchangeApiTokenForUISession(System.String,System.String,System.Guid,ADEXS.Core.Domain.Model.UserAuthorizationData,System.String)~ADEXS.Core.Domain.Model.GateKeeper.ExchangeApiTokenForUISessionResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SessionRepository.SessionRepository.ExchangeApiTokenForUISession(System.String,System.String,System.Guid,ADEXS.Core.Domain.Model.UserAuthorizationData,System.String)~ADEXS.Core.Domain.Model.GateKeeper.ExchangeApiTokenForUISessionResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1033:Interface methods should be callable by child types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ADEXS#Core#Domain#Repository#SSO#ISSORepository#TakeSpringCMVerifyCert~System.Security.Cryptography.X509Certificates.X509Certificate2\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.SAMLToken,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.RealValidateSignature(System.Xml.XmlElement,System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ValidateSamlResponse(System.Xml.XmlElement,ADEXS.Core.Domain.Model.Account,System.String,System.String@,System.String@,System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ValidCertDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ValidSigningCertDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1033:Interface methods should be callable by child types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Aspose.CustomReplaceEvaluator.Aspose#Words#Replacing#IReplacingCallback#Replacing(Aspose.Words.Replacing.ReplacingArgs)~Aspose.Words.Replacing.ReplaceAction\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TaskServiceXmlStorageHelper.Get(System.Guid,ADEXS.Core.Domain.Model.Account,System.String,System.Boolean)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TaskServiceXmlStorageHelper.SafeDelete(ADEXS.Core.Domain.Model.Account,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TrackedContentExtractionTaskService.#cctor\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TrackedContentExtractionTaskService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.TrackedContentExtractionsTask,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}@)~ADEXS.Core.Types.Enums.TrackedContentExtractionProcessingStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.SalesforceGetDataProvider.GetData(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}},Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.SalesforceGetDataProvider.GetTrackedFieldSchema(ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField,System.Boolean)~ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldSchema\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.DataManipulationHelper.StripHtml(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.SalesforceHelper.GetSFAuthorizationFromRefreshToken(ADEXS.Core.Domain.AccountSettings)~ADEXS.Salesforce.DTO.SFAuthorization\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.SalesforceHelper.GetSFAuthorizationFromSyncUser(ADEXS.Core.Domain.AccountSettings)~ADEXS.Salesforce.DTO.SFAuthorization\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.SaveData(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}},Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Throttling.AbstractThrottlingRepository.GetCount(System.Int32)~System.Collections.Generic.Dictionary{System.Object,System.Int32}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Throttling.EmailThrottlingRepository.ShouldThrottle(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.TransactionHistory.SendEmailDeliveryTask(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.TransactionHistory.SendFaxDeliveryTask(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.SaveGroup(ADEXS.Core.Domain.Model.Group,ADEXS.Core.Domain.Model.Group,ADEXS.Core.Domain.Model.GroupMembers,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.ValidateMembers(ADEXS.Core.Domain.Model.GroupMembers,ADEXS.Core.Types.Enums.GroupType,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IContactRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IGroupRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IGroupRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IUserAccountRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IUserAccountRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IUserAccountRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Boolean,ADEXS.Core.Domain.Model.Login)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.IUserAccountRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginLockRepository.SyncLoginLockToWithSite(ADEXS.Core.Domain.Model.LoginLock,ADEXS.Core.Domain.AtlasUrl.AllocationUrl.ForwardingType,System.Int32,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.RemoveLogin(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Validate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserActionRepository.LogPublicUserAction(System.Int32,ADEXS.Globals.ScmEnums.ActionType,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserActionRepository.LogUserAction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.CanViewDispatchedItems(System.Int32,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter.DoConversion(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.DynamicContextHelper.VerifyXmlName(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItemHelper.EvaluateWaitForNextStepBeforeTaskCompletion(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItemHelper.ReloadWorkItemAndRemoveActivityProperties(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem@,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.GetXmlNode(System.Object)~System.Xml.XmlNode\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.TryParseVariableValue(System.Int32,ADEXS.Core.Types.Enums.WorkflowVariableType,System.Object,System.Object@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository._TryLocalWINSClient(ADEXS.Core.Domain.Model.Account)~ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowClient\")]\n[assembly: SuppressMessage(\"Design\", \"CA1033:Interface methods should be callable by child types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.ADEXS#Core#Domain#Repository#Workflow#IWorkflowRepository#LoadDefinitions(System.Int32,System.Guid)~ADEXS.Core.Domain.Model.Workflow.Definitions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.SendHumanActivityTaskNotification(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.SendEmailResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.SendStartWorkflow(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.UnassignWorkFromUser(System.Int32,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.UpdateOwnership(ADEXS.Core.Domain.Model.Workflow.WorkItem,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.ValidateWorkflowName(System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.AbstractSecurityProvider`1.DoTheCall(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Object,System.String,System.Threading.CancellationToken)~System.Net.Http.HttpResponseMessage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.AbstractSecurityProvider`1.MakeRequest(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Object,System.Int32,System.String,ADEXS.Core.Util.Core.LoggedStopWatch,System.Int32@,System.Boolean@)~`0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasHybridSharedStorage.LogFileSize(System.Func{System.Int64},System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasHybridSharedStorage.SaveFileFromStream(System.Int32,System.String,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasHybridSharedStorage.SaveFileFromStream(System.Int32,System.String,System.IO.Stream,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AISInitiateTransactionService.CreateTransaction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIIngestionService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IAPRAIIngestionTask)~ADEXS.Core.Types.Enums.APRAIIngestionStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRService.InitiateProcessing(Grpc.Core.Metadata,System.String,System.String,System.String,Google.Protobuf.ByteString,System.String,System.String,System.String,System.String,ADEXS.Core.Domain.SmartAgreement.Models.Enums.Priority)~Docusign.Apr.Service.V1.SubmitDocumentForProcessingResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IAPRService.InitiateProcessing(Grpc.Core.Metadata,System.String,System.String,System.String,Google.Protobuf.ByteString,System.String,System.String,System.String,System.String,ADEXS.Core.Domain.SmartAgreement.Models.Enums.Priority)~Docusign.Apr.Service.V1.SubmitDocumentForProcessingResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.ADMInsightsRepository.Exists(System.Guid,System.Guid)~System.Threading.Tasks.Task{System.Boolean}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1033:Interface methods should be callable by child types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.MockedAPRExtractionsRepository.ADEXS#Core#Domain#SmartAgreement#Repositories#IAPRExtractionsRepository#Delete(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.LoadReviewJobDetail(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Utilities.PagingAndDynamicFiltering,System.Boolean,System.String)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.JobReviewDetails}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.ProcessReviewResultCLMAttributes(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultRequest,ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultResponse)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.ProcessStandardAttributes(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultRequest,ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultResponse)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.StagedMetadataApplicationService.UpdateStagedMetadatasForDocumentByFileDataUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadataItem})~ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadatasResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.TransactionCheckStatusService.ProcessTransaction(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction,ADEXS.Core.Domain.SmartAgreement.Models.Enums.AnalysisTriggerSource,System.Int32@,System.Int32@,System.Int32@,System.Int32@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.CsvConverter.GetHeaderInfo(ADEXS.Core.Domain.Model.Account,System.IO.Stream)~ADEXS.Core.Domain.Translation.Models.ImportTranslationFile\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.CsvConverter.ParseDocument(ADEXS.Core.Domain.Model.Account,System.IO.Stream)~ADEXS.Core.Domain.Translation.Models.ImportTranslationFile\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.XliffConverter.GetHeaderInfo(ADEXS.Core.Domain.Model.Account,System.IO.Stream)~ADEXS.Core.Domain.Translation.Models.ImportTranslationFile\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.RetrieveTranslationUtility.GetTranslationByProperty(System.String,System.String,System.Guid,System.String,ADEXS.Core.Types.Enums.TranslationNamespace)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.RetrieveTranslationUtility.GetTranslationByProperty``1(System.Reflection.PropertyInfo,``0,ADEXS.Core.Types.Enums.TranslationNamespace)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.RetrieveTranslationUtility.GetTranslationCollectionByProperty``1(System.Reflection.PropertyInfo,``0,ADEXS.Core.Types.Enums.TranslationNamespace)~System.Collections.Generic.IEnumerable{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ApplicationInfo.GetApplicationName~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CaptchaVerification.Verify(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HttpClientExtensions.PostAsyncRetry(System.Net.Http.HttpClient,System.String,System.String,System.Int32,System.Int32,ADEXS.Core.Util.Loggers.IDiscreetLogger)~System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HttpClientExtensions.PostForwardingEventRegistration(System.Net.Http.HttpClient,System.String,System.String,ADEXS.Core.Util.Loggers.IDiscreetLogger)~System.Net.Http.HttpResponseMessage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HttpClientExtensions.PostForwardingEventRegistrationAsync(System.Net.Http.HttpClient,System.String,System.String,ADEXS.Core.Util.Loggers.IDiscreetLogger)~System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HttpClientExtensions.PostGateKeeper(System.Net.Http.HttpClient,System.String,System.String,ADEXS.Core.Util.Loggers.IDiscreetLogger)~System.Net.Http.HttpResponseMessage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HttpClientExtensions.PostGateKeeperAsync(System.Net.Http.HttpClient,System.String,System.String,ADEXS.Core.Util.Loggers.IDiscreetLogger)~System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HttpClientExtensions.PostRetry(System.Net.Http.HttpClient,System.String,System.String,System.Int32,System.Int32,ADEXS.Core.Util.Loggers.IDiscreetLogger)~System.Net.Http.HttpResponseMessage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.IPRestriction.IsOutboundHostAllowed(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.NpsUtilities.GetPlanIdName(ADEXS.Core.Domain.Model.Account)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.PeriodParser.TryParsePeriod(System.String,NodaTime.Period@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.Retry.Do(System.Func{System.Boolean},System.TimeSpan,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.SalesforceUtilities.GetSfAuthorization(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Salesforce.DTO.SFAuthorization\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.SalesforceUtilities.UpdateSfUserIdFromDsId(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.TaskExtensions.Forget(System.Threading.Tasks.Task)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.UrlUtilities.HasAllowedDomains(System.String,System.String[])~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.UrlUtilities.HasAllowedProtocols(System.String,System.String[])~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.UrlUtilities.ReplaceWithSiteSpecificDomain(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.UrlUtilities.HasHttpProtocol(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.VerifyXmlName(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Workload.Log\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.GetRemoteObject``1(System.String)~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.InterruptRemote(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.InterruptRemote(System.String,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.TryRemoteRequest``2(System.String,ADEXS.Core.Util.Net.RemoteCommon.RetryableRemoteRequest{``0,``1},System.Int32)~``1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.TryRemoteRequest``2(System.String,ADEXS.Core.Util.Net.RemoteCommon.RetryableRemoteRequest{``0,``1},System.Int32,System.Int32)~``1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.TryRemoteRequest``2(System.String,ADEXS.Core.Util.Net.RemoteCommon.RetryableRemoteRequest{``0,``1},System.Int32,System.Int32,System.Int32)~``1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.RemoveAttributeGroupFromDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.SendFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata},ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,System.Globalization.CultureInfo)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1045:Do not pass types by reference\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.IAttributeManagementService.SetAllowedValues(ADEXS.Core.Domain.DataReview.Models.AttributeReviewData,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSet}@,ADEXS.Core.Domain.Model.AIDocument.StagedMetadata)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasContext.ContextProvider\")]\n[assembly: SuppressMessage(\"Design\", \"CA1044:Properties should not be write only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.ExternalUrlBuilder.UserKeyUser\")]\n[assembly: SuppressMessage(\"Design\", \"CA1044:Properties should not be write only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Alert.AlertIconDelegate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1044:Properties should not be write only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Alert.AlertItemTextDelegate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1044:Properties should not be write only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Alert.AlertTextDelegate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ConversionTask.FileSize\")]\n[assembly: SuppressMessage(\"Design\", \"CA1041:Provide ObsoleteAttribute message\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.UserConversionTask.UserId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1041:Provide ObsoleteAttribute message\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.UserConversionTaskPayload.UserId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1044:Properties should not be write only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.FailMsg\")]\n[assembly: SuppressMessage(\"Design\", \"CA1044:Properties should not be write only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.SuccessMsg\")]\n[assembly: SuppressMessage(\"Design\", \"CA1044:Properties should not be write only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.WarningMsg\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Attributes.AttributeManagementService.Agreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.ABAC.ABACPolicyService.PIIStringConverter\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.AccountSettingsConstants\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Aom.AomConstants.AgreementRelationship\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Aom.AomConstants.AgreementTypeKeys\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.AtlasTimingPhase\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.InternalApiCommentUrls\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.InternalApiWorkItemUrls\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.AtlasUrl.UrlBuilder.QueryDictionary\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.CLMAccountConversion.Helper.ConversionJsonSanitizer\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.CLMAccountConversion.Helper.UserMigrationException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.CLMAccountConversion.Logging.AccountConversionLoggingHelper\")]\n[assembly: SuppressMessage(\"Design\", \"CA1040:Avoid empty interfaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DocumentCompare.ComparisonStyles.IStyleOverride\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DocumentCreation.MergeTaskDataSourceLimitException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorMessages\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.AccountReplicationException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.AdexsDisplayException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.AdmApiException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.AomApiException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.DelegateRaceConditionException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.DSApiException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.DSErrorString\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.EmailValidationException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.PublicException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.AccountConversionFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.AccountProvisioningFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.AgreementAnalysisFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.AISIntegrationFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.AtlasFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.AtlasHybridStorageFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.AuthenticationFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.CollaborationCommentsFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.DataReconciliationFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.DocumentActionsFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.DocumentAttributesFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.GlobalHeaderFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.DocumentCompareFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.DocumentIngestionFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.DocumentPreviewFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.DocumentReviewFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.ESignatureFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.EventSubscriberFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.ExtractFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.GoogleFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.MergeEngineFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.ModernSearchFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.MonitoringFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.PartiesFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.Remoting.FeatureFlagsRemoteCallWrapperFactory\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"SealIntegrationFeatureFlags does not need to be static\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.SealIntegrationFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.SlackNotificationsFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.TwoFactorRepositoryFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.WorkflowActivitiesFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.WorkflowDesignApiFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.WorkflowFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FileOperations.OperationFactory\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FileOperations.PDF.FileManipulation\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FileOperations.PDF.PdfUtility\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Lookup.DefaultActions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Lookup.FileDataFilenameLookup\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Core.AttachmentsBuilder.AttachmentTooLargeException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Core.AttachmentsBuilder.AttachmentTooLargeException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.PayloadValidationFailedException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.WorkflowApprovalActivitiesTokens.Activities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Core.PreDefinedDataSets\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.DocumentReminderEmail.Recipient\")]\n[assembly: SuppressMessage(\"Design\", \"CA1040:Avoid empty interfaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.GlobalMessaging\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Messaging\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Messaging.EmailSentLoggingInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.NoRetryException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1036:Override methods on comparable types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.DashboardTab\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.DynamicDropDown.DynamicDropDownManager\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ElasticFacade.ElasticFacadeTaskPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ElasticFacade.PostClmEventRequest\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ExternalReview.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ExternalReview.DocumentMatchInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ExternalReview.UploadResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.FormConfiguration.ConstantValue\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.FormConfiguration.ContainerDisplayTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.FormConfiguration.ExtractionSourceIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.FormConfiguration.FormConfigurationPropertyMap\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.FormConfiguration.ObjectTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.FormConfiguration.Operators\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.FormConfiguration.Sizes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.FormConfiguration.TableAddInTypes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.FormConfiguration.TargetIdentifiers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.FormConfiguration.TemplateIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.FormConfiguration.Types\")]\n[assembly: SuppressMessage(\"Design\", \"CA1036:Override methods on comparable types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.MetadataGroup\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Provisioning.AppDataFieldNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.DsGetUserResponseV1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.DSGetUsersResponseV1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.GetDSGroupResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.GetDSGroupsResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.GetUserGroupsResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.GetUserPermissionProfileResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.UserAccountMembershipResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Reporting.ReportDataContainer.QueryResultProcessing\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Reporting.ReportingModel\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.SalesforceActions.SalesforceActionMenu\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.SalesforceActions.SalesforceActionMenu.CustomAction\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.SalesforceActions.SalesforceActionMenu.SalesforceActions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.SalesforceActions.SalesforceActionMenu.StandardAction\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.SalesforceActions.SalesforceActionMenu.StandardActionGroup\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.SfOrganizationDetails.Result\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.UserChangeRecord.Change\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Workflow.Event.ControlNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.News.NotificationData.LinkAttributes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.News.NotificationData.LinkAttributesList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.AtlasPersistenceFactory.DBConnectInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.BPMPersistence.BPMWorkItemInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.DocumentCheckinNotificationPersistence.QueueItem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.EmailPersistence.EmailContext\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.FileCheckupQueuePersistence.FileCheckupQueueItem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.IndexQueuePersistence.IndexQueueItem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.MetadataFieldPersistence.AllowedValue\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.MetadataFieldPersistence.AllowedValues\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence.MetadataQueueItem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence.MetadataQueueItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.ObjectTrashQueuePersistence.ObjectTrashQueueItem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.ObjectTrashQueuePersistence.ObjectTrashQueueItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.ScheduledCustomRulePersistence.CustomRuleQueueItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.SecurityQueuePersistence.SecurityQueueItem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.SupportPersistence.ExpiringAccountRecord\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.PersonaSettings.PersonaSettingConstants\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.PersonaSettings.PersonaSettingConstants\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Constants.DataTypes.ProcessingStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Constants.PrestoConstants\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Constants.QuerySyntax\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Constants.WorkflowStatuses\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.JsonConverter.JsonConverters\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.JsonConverter.JsonConverters.MetadataFilterConverter\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.JsonConverter.JsonConverters.ReportConfigurationConverter\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.JsonConverter.JsonConverters.ReportFilterConverter\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.JsonConverter.JsonConverters.ReportUserConfigurationConverter\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.JsonConverter.JsonConverters.SingleOrArrayConverter`1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoAbandonedQueryException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoCancelQueryException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoGetFailedException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoInvalidSqlException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoNoFollowupUriProvidedException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoPostFailedException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoQueryQueueFullException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoQueryTimeoutException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoUnconfiguredErrorException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoUserErrorException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReport.Columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReport.Selections\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReport.Columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReport.Selections\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.CommonColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.CommonSelections\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.CommonSubQueryNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.Common.AgreementObjectModelHelpers.AgreementColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.Common.AgreementObjectModelHelpers.SubQueryNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.Catalogs\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.Columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsHelpers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsSubQueries\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsSubQueries.SubQueryNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.Columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.SubQueryNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Selections\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.SubQueryNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentWhereConditions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReport.Columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReport.Selections\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReport.Columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReport.Selections\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.StandardReport.StandardReportHelper\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReport.Columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReport.SubQueryNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport.Columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport.Selections\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport.SubQueryNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewWhereConditions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReport.Columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReport.Selections\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.Columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.Selections\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.SubQueryNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReportWhereConditions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Columns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Selections\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.SubQueryNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryWhereConditions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Profiler\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementFieldService.ObjectIds\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementFieldService.StandardFieldNames\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AgreementRepository.Exceptions.AgreementCreateException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AgreementRepository.Exceptions.StandardFieldNotFoundException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.APILicenseRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleContext\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigEvent.ConfigTemplate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.Cell\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.CsvRowChooser\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.DropdownDefinition\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.DropdownDefinition.PossibleValue\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.DropdownPosition\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocumentRepository.FolderArchiveRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocumentRepository.UrlRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.EmailBlockList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.LWDPDibs\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MetadataSaveContext\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Negotiation.NegotiationApiClient.NegotiationApiException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ProvisioningRepository.MagnumErrors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.SaveResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.ReportCacheUtilities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.ReportCacheUtilities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.ReportCacheUtilities.CacheKey\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.ReportCacheUtilities.CacheKey\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ScheduleRepository.ScheduleRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.WritebackHelper\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.User.ResetPasswordRequestRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicContents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicVariable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicVariables\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariables\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.ReferencedDynamicContext\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal.DynamicContents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal.DynamicVariable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal.DynamicVariables\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal.DynamicXmlVariable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal.DynamicXmlVariables\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Helper.WorkflowHelper\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.Configuration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.MetadataConfigurationCollection\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.MetadataConfigurationOptions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.Value\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Rules.PasswordRules\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Rules.Validation\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Search.SearchQuery.QuerySettings\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Search.Telemetry.SearchTelemetryConstants\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.ABACSecurityResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.ABACWorkload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SecurityFiltering.JustInTime.JITSecurityProvider.JITWorkload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.SalesforceSecurityWorkload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SecurityFiltering.SecurityFilter\")]\n[assembly: SuppressMessage(\"Design\", \"CA1032:Implement standard exception constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SynchronousWork.SynchronousWorkException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Translation.Utilities.Converter.CsvConverter.ExportTranslationAutoMap`1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Translation.Utilities.Converter.CsvConverter.ExportTranslationTemplateAutoMap`1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.UserSettings.UserSettingConstants\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.UserSettings.UserSettingConstants\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Utilities.ApplicationInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Utilities.IPRestriction\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Utilities.OCRAppSettings\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Utilities.PagingAndFiltering.SortColumn\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Utilities.SalesforceUtilities.DsSfUserRecord\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Utilities.SalesforceUtilities.DsSfUserResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Validation.CrossValidatorFactory\")]\n[assembly: SuppressMessage(\"Design\", \"CA1040:Avoid empty interfaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Validation.ICrossValidator\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Validation.ValidatorType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Util.Net.RemoteCommon\")]\n[assembly: SuppressMessage(\"Design\", \"CA1050:Declare types in namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Attributes.AttributeManagementService\")]\n[assembly: SuppressMessage(\"Design\", \"CA1050:Declare types in namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Attributes.AttributePanelService\")]\n[assembly: SuppressMessage(\"Design\", \"CA1050:Declare types in namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Attributes.IAttributeManagementService\")]\n[assembly: SuppressMessage(\"Design\", \"CA1050:Declare types in namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Attributes.IAttributePanelService\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AbstractSettings._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.DocGen_MaxRecursionCount\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.DocGen_MaxTagCount\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_CustomerTranslation\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_CustomerTranslation_Admin\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_CustomerTranslation_Attributes\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_CustomerTranslation_DocumentGeneration\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_EnableClassicDashboard\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_EnableCoilDashboard\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_EnableCoilSprocket_Dashboard_UseNewActions\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_EnableCoilSprocket_Folder\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_EnableCoilSprocket_FolderWatchlist\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_EnableCoilSprocket_MyWatchlist\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_EnableCoilSprocket_Preview\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_EnableCoilSprocket_RecentDocuments\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_EnableCoilSprocket_WorkflowInbox\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_EnableCoilSprocket_WorkflowQueue\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettingsConstants.Feature_EnableEOSFolderUsesFolderWidget\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.ApplicationSettings._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasContext.ATLAS_CACHE_NAME_DEFAULT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.UrlBuilder.DELIMITER_PATH_ELEMENT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.UrlBuilder.DELIMITER_QUERY_ELEMENT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.UrlBuilder.DELIMITER_QUERY_STRING\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.UrlBuilder.DELIMITER_QUERY_VALUE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.UrlBuilder.DELIMITER_TARGET\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.UrlBuilder.MAX_LENGTH\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.BaseDataConnection._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.MergeWorkload._simplePropBagEventSource\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.XmlMapping.XML_ATTRIBUTE_EXPRESSION\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.XmlMapping.XML_ATTRIBUTE_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.XmlMapping.XML_ATTRIBUTE_WIDTH\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.XmlMapping.XML_TAG_BARCODE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.XmlMapping.XML_TAG_FIELD\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.XmlMapping.XML_TAG_IMAGE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.XmlMergeDataSource._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.XOBJECT_META_FIELD_ID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.XOBJECT_META_FIELD_TYPE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Exceptions.DSErrorString.AccountIdSpecified_IsInvalid\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Exceptions.DSErrorString.InvalidAdminUserId_\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Exceptions.DSErrorString.SiteDoesNotMatchServiceLocation_\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.FileOperations.OperationFactory.MAX_OUTPUT_PAGENUM\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.FileOperations.OperationFactory.OUTPUT_PAGENUM_FORMAT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.FileOperations.PDF.FileManipulation._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.FileOperations.PDF.PageCountOnDemand._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.FileOperations.PDF.PdfUtility._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Lookup.Country.COUNTRY_ID_USA\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Lookup.Pager.NO_PAGING\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Lookup.ProvinceState.STATE_ID_ALASKA\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Lookup.ProvinceState.STATE_ID_HAWAII\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.CUSTOM_FOOTER\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.CUSTOM_LOGO\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.CUSTOM_LOGO_ALT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.PRIMARY_COLOR\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.PRIMARY_COLOR_DARK\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.SECONDARY_COLOR\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.GlobalMessaging.BRAND_CITY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.GlobalMessaging.BRAND_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.GlobalMessaging.BRAND_PARTNER_SUPPORT_EMAIL\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.GlobalMessaging.BRAND_SITE_URL\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.GlobalMessaging.BRAND_STATE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.GlobalMessaging.BRAND_STREET\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.GlobalMessaging.BRAND_SUPPORT_EMAIL\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.GlobalMessaging.BRAND_ZIP\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.MetadataLoader.CustomAttributesMetadataLoader._fieldPredicate\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.MetadataLoader.CustomAttributesMetadataLoader._setPredicate\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.AutoNumber.MAX_FORMAT_LENGTH\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CommonMetadataField.CUSTOM_DATA_REF_FIELDNAME_PREFIX\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Document._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.FileData.SAN_FILENAME_MAX_LEN\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MessageAction.ON_CLICK\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Metadata.DB_FORMAT_DECIMAL\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Metadata.DB_FORMAT_NUMBER\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Metadata.LENGTH_OBJECTMETADATAVALUES_VALUE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Metadata.LENGTH_OBJECTMETADATAVALUESBYNAME_METADATAFIELDNAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Metadata.LENGTH_OBJECTMETADATAVALUESBYNAME_METADATAGROUPNAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Metadata.LENGTH_OBJECTMETADATAVALUESBYNAME_VALUE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup.NAMETEMPLATE_ENVTAG_DOC_CREATED_DATE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup.NAMETEMPLATE_ENVTAG_DOC_CREATED_TIME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup.NAMETEMPLATE_ENVTAG_DOC_ID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup.NAMETEMPLATE_ENVTAG_DOC_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup.NAMETEMPLATE_FIELD_BEGIN\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup.NAMETEMPLATE_FIELD_END\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup.NAMETEMPLATE_FIELD_LEN\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup.NAMETEMPLATE_FIELD_STARTNDX\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.QueueTasks.ExecuteReportTask.ExecuteReportTask_FinishedPathFormat\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityMaskTable.COLUMN_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityMaskTable.COLUMN_REQUIRED_ROLES\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityMaskTable.COLUMN_ROW_ID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityMaskTable.TABLE_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_CLEAR_DESCENDANTS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_CREATE_SECURITY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_DISTRIBUTION_GROUP_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_HAS_EXPLICIT_SECURITY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_MOVE_SECURITY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_READ_SECURITY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_REQUIRED_ROLE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_ROW_ID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_SECURITY_GROUP_UID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_SECURITY_MASK_ID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_SET_ACCESS_SECURITY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_SORT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_USER_EMAIL\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_USER_FIRST_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_USER_ID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_USER_LAST_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_USER_ROLE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.COLUMN_WRITE_SECURITY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.SECURITY_COLUMNS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.SORT_GROUP\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.SORT_USER\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable.TABLE_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.OfficeWebApps.WopiDiscoveryService._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.AtlasPersistenceFactory.DBConnectInfo.DEFAULT_INFOEXPIRATION_MINUTES\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.DocumentAssemblyFormFieldPersistence.LENGTH_DocumentAssemblyFormFieldObject_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.DocumentAssemblyFormFieldPersistence.LENGTH_DocumentAssemblyFormFieldObject_VALUE\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.DocumentSelectionPersistence.SelectionInsertCommand\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.DocumentSelectionPersistence.SelectionViewInsertCommand\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.MetadataFieldPersistence.LENGTH_ALLOWEDMETADATAFIELD_VALUE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceHistoryPersistence.TYPE_ACTION\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceHistoryPersistence.TYPE_CONTROL\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedStorage._timingEvent\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Constants.PrestoConstants.QueryMaxRunTime_\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.EMPTY_PLACEHOLDER\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReport.ProcessesUnnestedDocuments\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Columns.Account_Id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Columns.End_Date\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Columns.Scope_Name\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Columns.Scope_Uid\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Columns.Stage_Name\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Columns.Start_Date\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyCommon.RGX_VALID_ELEMENT_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Approval.ApprovalWorkflowRepository.EMPTY_INSTANCE_PARAMS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleExecutionContext.KEY_EVENT_PARAMETERS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleExecutionContext.KEY_FAX_DELIVERY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleExecutionContext.KEY_OUTCOME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleExecutionContext.KEY_TRIGGER_OBJECT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.COLUMN_BREAK_CHAR\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.SETTING_PAIR_SPLIT_CHAR\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.SETTING_SPLIT_CHAR\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.SETTING_TYPE_SPLIT_CHAR\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.SETTING_TYPE_SPLIT_CHAR_ARRAY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.TAB_VALUE_CHARS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.VALUE_SPLIT_CHAR\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentAttachmentSet.SYSTEM_METAFIELD_ATTACHMENT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DocumentTypes.DocumentTypesRepository._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewAttachmentRepository._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ImageCreation.Barcode.DEFAULT_WIDTH\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.EMAIL_VALID_CHARS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.LWDP_THUMBNAIL_WIDTH\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.POINTS_PER_INCH\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.META_MESSAGE_ID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.META_SOURCE_MESSAGE_ID\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Negotiation.Client.Configuration.DefaultExceptionFactory\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Negotiation.Client.Configuration.ISO8601_DATETIME_FORMAT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.AccountHistory_Context\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.AccountHistoryContext_AccountConversionStatus\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.AccountHistoryContext_FieldsModified\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.AccountHistoryContext_ProvisioningConvertRequest\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.AccountHistoryContext_ProvisioningCreateRequest\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.AccountHistoryContext_ProvisioningUpdateRequest\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.CULTURE_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.EFFECTIVE_TIME_ZONE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.PREFERRED_LANGUAGE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository._clmUpgradedPlanSettings\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository._moduleIdToDeniedProvisioningSiteMapping\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository._planIdToProvisioningSiteMapping\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.FILE_EXTENSION\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Security.JITSecurityCalculator._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Security.SecurityRepository._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Share.ShareRepository._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.SSO.SSORepository._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.OUTPUT_REJECTED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.OUTPUT_USER_COMPLETED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.PROPERTY_ALLOW_COMMENT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.PROPERTY_CUSTOM_ACTION_BUTTON_AUTH\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.PROPERTY_CUSTOM_ACTION_BUTTON_LABEL\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.PROPERTY_CUSTOM_ACTION_BUTTON_MODE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.PROPERTY_CUSTOM_ACTION_BUTTON_URL\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.PROPERTY_DOCUMENTS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.PROPERTY_ENABLE_ACTION_REJECTED_BUTTON\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.PROPERTY_INSTRUCTIONS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.PROPERTY_OUTPUT_DOCUMENTS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.PROPERTY_WAIT_FOR_NEXT_STEP\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.STAGE_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.VAR_COMMENTLIST\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.VAR_COMMENTS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.VAR_COMPLETED_BY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.VAR_COMPLETED_BY_IDS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ApproveDocumentsClient.OUTPUT_APPROVED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ApproveDocumentsClient.OUTPUT_REJECTED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ApproveDocumentsClient.PROPERTY_ALLOW_CHECKOUT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ApproveDocumentsClient.PROPERTY_APPROVE_TEXT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ApproveDocumentsClient.PROPERTY_COMPARE_TYPE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ApproveDocumentsClient.PROPERTY_COMPARE_VERSION\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ApproveDocumentsClient.PROPERTY_REJECT_TEXT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChoiceClient.ACTION_OUTPUTS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChoiceClient.PROPERTY_COMPARE_TYPE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChoiceClient.PROPERTY_COMPARE_VERSION\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChoiceClient.PROPERTY_OUTPUTS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseDocumentsClient.PROPERTY_ALLOW_URLS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseDocumentsClient.PROPERTY_ALLOWED_CHOICES\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseDocumentsClient.PROPERTY_COMPARE_TYPE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseDocumentsClient.PROPERTY_COMPARE_VERSION\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseDocumentsClient.PROPERTY_FOLDERS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseDocumentsClient.PROPERTY_INPUT_DOCUMENTS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseDocumentsClient.PROPERTY_RESULT_LIMIT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseUsersClient.MAX_LIMIT_TO_GROUPS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseUsersClient.PROPERTY_ALLOWED_CHOICES\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseUsersClient.PROPERTY_COMPARE_TYPE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseUsersClient.PROPERTY_COMPARE_VERSION\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseUsersClient.PROPERTY_LIMIT_TO_GROUPS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseUsersClient.PROPERTY_OUTPUT_USERS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.DataReconciliationClient.OUTPUT_FAILURE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.DataReconciliationClient.OUTPUT_SUCCESS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.DataReconciliationClient.PROPERTY_TRACKED_NAMES\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.DataReviewClient.OUTPUT_FAILURE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.DataReviewClient.OUTPUT_SUCCESS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.DataReviewClient.PROPERTY_DOCUMENTATTRIBUTES\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.EditDocumentsClient.OUTPUT_ACTION_COMPLETED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.EditDocumentsClient.PROPERTY_COMPARE_TYPE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.EditDocumentsClient.PROPERTY_COMPARE_VERSION\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.FillFormClient.OUTPUT_ACTION_COMPLETED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.FillFormClient.PROPERTY_FORM_DOCUMENT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.FillFormClient.PROPERTY_FORM_ID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendForExternalReviewClient.EXTERNAL_REVIEW_UID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendForExternalReviewClient.OUTPUT_REJECTED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendForExternalReviewClient.OUTPUT_SENT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.OUTPUT_ERROR\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.OUTPUT_REJECTED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.OUTPUT_SENT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_DOCUMENT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_ESIGNATUREDOCUMENTS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_ESIGNATURERECIPIENTS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_ESIGNATURETEMPLATES\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_EXPIRATION_DAYS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_IN_PERSON_SIGNING\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_MESSAGE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_PASSWORD\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_REJECT_TEXT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_REQUIRE_SIGNER_AUTHENTICATION\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_SENDER\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_SIGNATURE_SUBJECT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_SIGNATURES_ORDERED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.PROPERTY_WRITTEN_REQUIRED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.RoutingClient.ACTION_OUTPUTS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.RoutingClient.PROPERTY_COMPARE_TYPE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.RoutingClient.PROPERTY_COMPARE_VERSION\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.RoutingClient.PROPERTY_OPTIONS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.RoutingClient.PROPERTY_OUTPUT_ROUTE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.ClientPropertyHandler.PROPERTY_DISPLAY_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.ClientPropertyHandler.PROPERTY_INSTRUCTIONS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.ClientPropertyHandler.PROPERTY_WAIT_FOR_NEXT_STEP\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.INSTANCE_VARIABLE_PREFIX\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VAR_CASE_IDS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VAR_COMMENTS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VAR_COMMENTS_LIST\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VAR_COMPLETED_BY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VAR_COMPLETED_BY_IDS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VAR_DOCUMENT_IDS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VAR_FOLDER_IDS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VAR_FULL_COUNT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VAR_LAST_ABORT_NOTIFICATION_DATE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VAR_RECORD_IDS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VAR_REMINDER_IDS\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VAR_SUBMITTED_BY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VAR_TRACK_ACTIVITY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.DELETED_ASSIGNED_USER_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.PROP_EMAIL\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.PROP_FIRSTNAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.PROP_LANGUAGE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.PROP_LASTNAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.PROP_MANAGER\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.PROP_MANAGERUID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.PROP_NAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.PROP_REGION\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.PROP_ROLE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.PROP_UID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.PROPERTYTYPE_STRING\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.DefinitionRepository._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.RGX_ID_VALIDATE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.RGX_LOADTYPE_PARSE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.RGX_NORMALIZE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.CALLBACK_SIGNALLED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.MAX_WORKFLOW_NAME_LENGTH\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PasswordRules.MAX_STRONG_LEN\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PasswordRules.MAX_STRONG_PLUS_ONE_LEN\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PasswordRules.MAX_STRONG_PLUS_TWO_LEN\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PasswordRules.MIN_STRONG_LEN\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PasswordRules.MIN_STRONG_PLUS_ONE_LEN\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PasswordRules.MIN_STRONG_PLUS_TWO_LEN\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.TermSync.TermSyncRepository.XOBJECT_META_FIELD_TERM_SYNC_ORIGINAL_ID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.TermSync.TermSyncRepository.XOBJECT_META_FIELD_TERM_SYNC_REVISED_ID\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.TermSync.TermSyncRepository.XOBJECT_META_GROUP_NAME_TERM_SYNC\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Translation.Utilities.Converter.BaseTranslationConverter._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.DYNAMIC_FIELD_SPLIT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.VALUE_INDEX_SPLIT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Translation.Utilities.RetrieveTranslationUtility._log\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.ACTORS_BLOCK\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.APPROVE_STEP\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.APPROVE_STEP_DISPLAYNAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.APPROVE_STEP_TYPE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.BASIC_CONFIG_BLOCK\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.BUSINESS_CALENDAR\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.CLOSE_ACTION\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.CLOSE_PROPERTIES\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.CONDITION_ACTION_COMPLETED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.CONDITION_APPROVED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.CONDITION_DURATION\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.CONDITION_REJECTED\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.CONDITION_REMINDER\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.CONDITION_TIMEOUT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.EDIT_STEP\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.EDIT_STEP_DISPLAYNAME\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.EDIT_STEP_TYPE\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.EMAIL_STEP\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.HUMAN_ACTIVITY_NODE_QUERY\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.HUMAN_ACTIVITY_STEP_NAME_PREFIX\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.KEY_LEFT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.KEY_TOP\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.MULTIPLE_TIMEOUT_BLOCK\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.MULTIPLE_TIMEOUT_DURATION_BLOCK\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.MULTIPLE_TIMEOUT_REMINDER_BLOCK_NON_REPEATING\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.MULTIPLE_TIMEOUT_REMINDER_BLOCK_REPEATING\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.START_STEP\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.STEPNAME_SUFFIX_UPDATE_VARIABLE_DURATION_MET\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.TIME_BLOCK\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.TIME_FORMAT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.UPDATEVARIABLE_STEP\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.VISUAL_STEP_HEIGHT\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.VISUAL_STEP_WIDTH\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.Delete(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.MakeApiCall(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule,System.Collections.Generic.List{ADEXS.ABAC.Engine.Policy{ADEXS.ABAC.Data.SecurityFlagsResponse,ADEXS.Globals.ScmEnums.Security}})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.PIIStringConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AbstractSettings._ConvertFrom``1(``0)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AbstractSettings._ConvertFrom``1(``0)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AbstractSettings._ConvertTo``1(System.String,System.String,``0)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AbstractSettings._ConvertTo``1(System.String,System.String,``0)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AbstractSettings._RequiresUpdate(ADEXS.Core.Domain.Model.Setting,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AbstractSettings.Get``1(System.String,``0)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AbstractSettings.Set``1(System.String,``0)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AccountSettings.#ctor(ADEXS.Core.Domain.Model.Account,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AccountSettings.#ctor(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AccountSettings.ElasticsearchConnectionStringGet(ADEXS.Core.Types.Enums.ObjectType)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AccountSettings.ElasticsearchConnectionStringSet(ADEXS.Core.Types.Enums.ObjectType,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmRestClient.PrepareAdditionalHeaders(System.String,System.Net.Http.HttpMethod,System.Net.Http.HttpRequestMessage)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.AddDurationUnitColumn(System.Collections.Generic.Dictionary{System.String,LanguageExt.Option{System.String}},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.BuildAgreementRelationship(ADEXS.Core.Domain.Adm.Model.AdmAgreement,System.Boolean)~ADEXS.Core.Domain.Model.AgreementRelationship\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.BuildAgreementRelationshipList(System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Adm.Model.AdmAgreement})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementRelationship}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.CalculateDurationDateTime(ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.StringMetadataFilter,ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.NumberMetadataFilter)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.CreateFieldUidMapping(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.Dictionary{System.Guid,System.ValueTuple{System.Guid,System.Guid}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.ExpandAgreements(System.Collections.Generic.List{ADEXS.Core.Domain.Adm.Model.AdmAgreement})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.IsDocumentTypesEnabled(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.ModifyDurationFilterQueries(System.Collections.Generic.Dictionary{System.String,LanguageExt.Option{System.String}},System.Collections.Generic.List{System.ValueTuple{System.String,System.Boolean}},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.TransformAutomaticRenewalAttribute(ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.UseAdmForReads(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.UseAdmForWrites(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.IAdmRestClient.Get``1(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.String,ADEXS.Adm.Model.AdmFiltering)~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmAgreementMapperClauseResolver.Resolve(ADEXS.Core.Domain.Adm.Model.AdmAgreement,ADEXS.Core.Domain.Model.Agreement,System.Nullable{ADEXS.Core.Types.Enums.ClauseIncluded},AutoMapper.ResolutionContext)~System.Nullable{ADEXS.Core.Types.Enums.ClauseIncluded}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmAgreementMapperDocumentResolver.Resolve(ADEXS.Core.Domain.Adm.Model.AdmAgreement,ADEXS.Core.Domain.Model.Agreement,System.String,AutoMapper.ResolutionContext)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmAgreementMapperNoticePeriodResolver.Resolve(ADEXS.Core.Domain.Adm.Model.AdmAgreement,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.AgreementPeriod,AutoMapper.ResolutionContext)~ADEXS.Core.Domain.Model.AgreementPeriod\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmAgreementMapperPartyResolver.Resolve(ADEXS.Core.Domain.Adm.Model.AdmAgreement,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.Party,AutoMapper.ResolutionContext)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmAgreementMapperPaymentDurationResolver.Resolve(ADEXS.Core.Domain.Adm.Model.AdmAgreement,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.AgreementPeriod,AutoMapper.ResolutionContext)~ADEXS.Core.Domain.Model.AgreementPeriod\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmAgreementMapperRenewalNoticePeriodResolver.Resolve(ADEXS.Core.Domain.Adm.Model.AdmAgreement,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.AgreementPeriod,AutoMapper.ResolutionContext)~ADEXS.Core.Domain.Model.AgreementPeriod\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmAgreementMapperRenewalTermResolver.Resolve(ADEXS.Core.Domain.Adm.Model.AdmAgreement,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.AgreementPeriod,AutoMapper.ResolutionContext)~ADEXS.Core.Domain.Model.AgreementPeriod\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmDocumentTypeMapperResolver.Resolve(DocuSign.Adm.Api.Models.ExtensibleEnum,ADEXS.Core.Domain.Model.DocumentType,System.String,AutoMapper.ResolutionContext)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmMapper.#cctor\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmPartyMapperBusinessContactResolver.Resolve(DocuSign.Adm.Api.Models.Party,ADEXS.Core.Domain.Model.Party,System.String,AutoMapper.ResolutionContext)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmPartyMapperPhoneResolver.Resolve(DocuSign.Adm.Api.Models.Party,ADEXS.Core.Domain.Model.Party,System.String,AutoMapper.ResolutionContext)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmPartyMapperSourceResolver.Resolve(DocuSign.Adm.Api.Models.Party,ADEXS.Core.Domain.Model.Party,System.Nullable{ADEXS.Core.Types.Enums.PartySource},AutoMapper.ResolutionContext)~System.Nullable{ADEXS.Core.Types.Enums.PartySource}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AgreementMapperClauseResolver.Resolve(ADEXS.Core.Domain.Model.Agreement,DocuSign.Adm.Api.Models.AgreementCreate,System.Collections.Generic.IEnumerable{DocuSign.Adm.Api.Models.ClauseExtract},AutoMapper.ResolutionContext)~System.Collections.Generic.IEnumerable{DocuSign.Adm.Api.Models.ClauseExtract}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AgreementMapperDocumentResolver.Resolve(ADEXS.Core.Domain.Model.Agreement,DocuSign.Adm.Api.Models.AgreementCreate,System.Collections.Generic.List{System.Guid},AutoMapper.ResolutionContext)~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AgreementMapperPartyResolver.Resolve(ADEXS.Core.Domain.Model.Agreement,DocuSign.Adm.Api.Models.AgreementCreate,System.Collections.Generic.List{DocuSign.Adm.Api.Models.AgreementParty},AutoMapper.ResolutionContext)~System.Collections.Generic.List{DocuSign.Adm.Api.Models.AgreementParty}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.CounterpartyMapperSourceResolver.Resolve(ADEXS.Core.Domain.Model.Party)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.ObligationMapperDocumentIdResolver.Resolve(ADEXS.Core.Domain.Model.Obligation,DocuSign.Adm.Api.Models.ObligationCreate,System.Guid,AutoMapper.ResolutionContext)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.ObligationMapperDocumentIdResolver.Resolve(ADEXS.Core.Domain.Model.Obligation,DocuSign.Adm.Api.Models.ObligationCreate,System.String,AutoMapper.ResolutionContext)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.CreateGroupMapping(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.AIConfiguration.Models.CreateGroupMappingRequest)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.GroupMappingResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.CreateMappingConfiguration(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.AIConfiguration.Models.RulesConfigBasicDetails)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.Result{ADEXS.Core.Domain.AIConfiguration.Models.RulesConfigBasicDetails,ADEXS.Core.Types.Enums.UpsertRulesConfigErrorType}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.CreateRuleModelAndMapping(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.AIConfiguration.Models.RuleModel,ADEXS.Core.Domain.AIConfiguration.Models.RuleModelMapping)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.RuleModelAndMappingResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.DeleteMappingConfiguration(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Threading.Tasks.Task{ADEXS.Core.Types.Enums.DeleteRulesConfigAndMappingStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.DeleteObjectMapping(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.AIConfiguration.Models.DeleteRuleModelMappingRequest)~System.Threading.Tasks.Task{ADEXS.Core.Types.Enums.DeleteAIObjectMappingResultStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.GetAttributeGroups(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.AIConfiguration.Models.AttributeGroupsResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.GetAvailableModels(ADEXS.Core.Domain.Model.UserAccount)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.GetAvailableModelsResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.GetMappingConfiguration(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.RulesConfigurationDetailsResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.GetMappingConfigurations(ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.RulesConfigurationUsageAnalyticsResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.GetObjectMappingDetail(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.ObjectMappingDetailResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.SaveAttributeMapping(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.AIConfiguration.Models.RuleModelMapping)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.RuleModelAndMappingResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.UpdateMappingConfiguration(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.AIConfiguration.Models.RulesConfigBasicDetails)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.Result{ADEXS.Core.Domain.AIConfiguration.Models.RulesConfigBasicDetails,ADEXS.Core.Types.Enums.UpsertRulesConfigErrorType}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.UpdateRuleModel(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.AIConfiguration.Models.RuleModel,ADEXS.Core.Domain.AIConfiguration.Models.RuleModelMapping)~System.Threading.Tasks.Task{ADEXS.Core.Types.Enums.UpsertRuleModelAndMappingResultStatus}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.AIConfigurationUtilities.AnalyzersToLabelGroup(System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.Analyzer},System.Collections.Generic.List{System.ValueTuple{System.String,System.String}})~ADEXS.Core.Domain.AIConfiguration.Models.LabelGroup\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.AIConfigurationUtilities.GetLabelId(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.AIConfigurationUtilities.IsInCompletedStatus(ADEXS.Core.Domain.Model.AIDocument.AIDocumentBase)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.AIConfigurationUtilities.LogicAppToLabelGroup(ADEXS.Core.Domain.Model.Seal.DigitalAppRule,ADEXS.Core.Domain.AIConfiguration.Models.LabelGroupType)~ADEXS.Core.Domain.AIConfiguration.Models.LabelGroup\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.AIConfigurationUtilities.ToClientRuleModel(ADEXS.Core.Domain.AIConfiguration.Models.RuleModel)~RulesEngineAPIClient.Model.RuleModel\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.AIConfigurationUtilities.ToRuleModelMapping(RulesEngineAPIClient.Model.RuleModel,ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping,System.Boolean)~ADEXS.Core.Domain.AIConfiguration.Models.RuleModelMapping\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.AIConfigurationUtilities.ToRulesEngineMapping(ADEXS.Core.Domain.AIConfiguration.Models.RuleModelMapping,System.Int32)~ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.DataTypeHelper.GetStandardAttributeDataType(ADEXS.Core.Domain.Repository.AgreementRepository.AgreementField)~ADEXS.Core.Types.Enums.DataType\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.DataTypeHelper.IsCustomAttributeSupported(ADEXS.Core.Domain.Model.MetadataField,ADEXS.Core.Types.Enums.AttributeFieldType@,RulesEngineAPIClient.Model.DataType@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.GetSystemMappings(System.Guid,ADEXS.Core.Domain.AIConfiguration.Models.LabelGroup,ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.RuleModelMapping}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomApiErrorResponse.#ctor(ADEXS.Core.Domain.Adm.AdmApiError,System.Net.HttpStatusCode)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomApiErrorResponse.#ctor(ADEXS.Core.Domain.Adm.AdmApiValidationResponse)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomRestClientBase.MakeRequestAndReturnResponse``1(System.Net.Http.HttpMethod,System.Object,System.String,System.String)~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomUtilities.GetActorName(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomUtilities.GetAgreementTypeFieldUid(ADEXS.Core.Domain.Model.UserAccount)~LanguageExt.Option{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomUtilities.GetAgreementValueFieldUid(ADEXS.Core.Domain.Model.UserAccount)~LanguageExt.Option{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomUtilities.GetClauseFields(ADEXS.Core.Domain.Model.UserAccount)~LanguageExt.Option{System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataField}}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomUtilities.GetMappedAomAccountId(System.Int32,System.Guid)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomUtilities.LoadAndCacheAomAccountIdIfRequiredIn(ADEXS.Core.Domain.Model.UserAccount)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomUtilities.UpdateDocumentName(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.IAomRestClient.Get``1(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.String,System.String,System.Collections.Generic.List{System.String})~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AppFeatureFlagsRegistry`1.PopulateRegistry(StructureMap.Registry)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ApplicationSettings.EnableQueueSeparationForBulkBackgroundTasks(System.String,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ApplicationSettings.GetRestAuthRootUrlSiteSpecific(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ApplicationSettings.IsClmDSEnabledForConversion(ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Approval.ApprovalService.CancelApproval(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Approval.ApprovalService.CancelCheckOutDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String,ADEXS.Core.Domain.Model.UserAccount,Newtonsoft.Json.Linq.JObject,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Approval.ApprovalService.CheckOutDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Approval.ApprovalService.CheckOutDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ABACUrl.Delete(System.Int32,System.Guid)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ABACUrl.Evaluate(System.Int32)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ABACUrl.ListSecurities(System.Int32)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ABACUrl.Save(System.Int32,System.Guid)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.AbsoluteApplicationRoot~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.AbsoluteDomainRoot~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.AbsoluteDomainRoot~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.ContentRoot~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.GenAPIUrl(ADEXS.Core.Types.Enums.APIVersion)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.GetAccountRolesForProductUrl(ADEXS.Core.Types.Enums.AccountType)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.GetAccountRolesForProductUrl(ADEXS.Core.Types.Enums.AccountType)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.OpenSearchUrl(ADEXS.Core.Types.Enums.APIVersion)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.StaticResourceRoot~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.UploadRoot~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.UxRoot~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.WebShareAbsoluteApplicationRoot~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbstractUrl.IsSpringCMUrl(System.String,System.Uri@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbstractUrl.IsSpringCMUrl(System.String,System.Uri@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AdminUrl.Attributes(System.String,System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AdminUrl.BrandingImageUrl(ADEXS.Core.Types.Enums.AccountBrandingImageType,System.Int32)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AdminUrl.DeleteAttributeGroupConfirmation(System.Collections.Generic.List{System.String},System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AdminUrl.GetUrl(ADEXS.Core.Types.Enums.AdminPage)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AuthUrl.AuthenticationSite(System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AuthUrl.LoginSetQuery(System.Collections.Specialized.NameValueCollection)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.BpmUrl.AdvancedPreviewScreenStepUrl(System.Object,ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Int32)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.BpmUrl.AdvancedPreviewScreenStepUrl(System.Object,ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Int32)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.BpmUrl.AdvancedPreviewScreenStepUrl(System.Object,ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Int32)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.BpmUrl.StepUrl(System.Object,System.Object,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.BpmUrl.StepUrl(System.Object,System.Object,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.BpmUrl.TaskScreensStepUrl(System.Object,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.CommonUrl.ErrorReferenceId(System.Object,System.Object,System.Boolean)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ContentUrl.DocumentViewer(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ContentUrl.TransientDocumentViewer(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentLauncherUrl.GetDocumentLauncherUrl(ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig,ADEXS.Core.Domain.Model.Account,System.Nullable{System.Guid})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentLauncherUrl.GetDocumentLauncherUrl(ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentLauncherUrl.GetDocumentLauncherUrl(ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig,System.String,System.Guid)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentLauncherUrl.GetDocumentLauncherUrl(ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig,System.String,System.String,System.String,System.String,System.Guid)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentLauncherUrl.GetDocumentLauncherUrl(System.Int32,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.AgreementAnalyzerDocExplorer(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.AttributesDocExplorer(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.ChoosePreview(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.CorrectESignature(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.DocEdit(System.Object,System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.DocEditCreateNew(System.Object,System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.DocExplorer(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.DocumentDeletePagesDocExplorer(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.DocumentExtractDocExplorer(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.DocumentRotateDocExplorer(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.EditDocument(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.LegacyPreview(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.Preview(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.PreviewWorkflowStep(System.Object,System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.PreviewWorkflowStep(System.Object,System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.SendForExternalReviewInPreviewUrl(System.Object,System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.SendForExternalReviewUrl(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.SendForSignature(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.UpdateDocumentZoom(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentsUrl.ViewDocument(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ExternalReviewUrl.CompleteExternalReviewUrl(ADEXS.Core.Domain.Model.ExternalReview,System.Boolean)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.IUrlProvider.Error(System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.LinkUrl.GetObjectLink(ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.Guid)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.GetLearnMoreUrl(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.GetLearnMoreUrl(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.GetLearnMoreUrl(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.MobileUrl.Document(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.MobileUrl.Folder(System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.OAuthUrl.Authorize(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.OAuthUrl.Index(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ObjectTypeUrl.CreateUrlForObjectType(System.Int32,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.PortalUrl.DynamicSearch(System.Int32,System.Object,System.Object)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.PortalUrl.FolderPortal(System.Int32,System.Object,System.Object,System.Object,System.String,System.String,System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.PortalUrl.FolderPortal(System.Int32,System.Object,System.Object,System.Object,System.String,System.String,System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.PortalUrl.IsFolderPortalUrl(System.String,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.PortalUrl.IsFolderPortalUrl(System.String,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.PortalUrl.IsFolderPortalUrl(System.String,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.PortalUrl.View(ADEXS.Core.Domain.Model.Portal)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.PortalUrl.View(ADEXS.Core.Domain.Model.Portal)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ReportsUrl.CustomReportView(ADEXS.Core.Domain.Model.CustomReport)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ReportsUrl.ViewCustomReport(ADEXS.Core.Domain.Reporting.Interfaces.ICustomReport)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.SalesForceUrl.CreateUrl(ADEXS.Core.Domain.AtlasUrl.ApplicationRootDelegate,ADEXS.Core.Domain.AtlasUrl.UrlBuilder)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ShareUrl.DownloadDocuments(System.Int32,System.Guid,System.Guid,System.Boolean,System.Boolean,System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ShareUrl.GetPublicObjectLink(System.Int32,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.Guid)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.SupportUrl.GetUrl(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.UrlBuilder.#ctor(ADEXS.Core.Domain.AtlasUrl.ApplicationRootDelegate,System.String[])\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.UrlBuilder.#ctor(System.String,System.String[])\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.UrlBuilder.#ctor(System.String,System.String[])\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.UrlBuilder.AddPath(System.String[])~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.VendorCallbackUrl.CreateVendorCallbackUrl(System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.VendorCallbackUrl.DocuSign~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributesManagementFramework.GetAttributes(ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Attributes.AttributeRegistry}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.Authentication.Authenticate(System.String,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Types.Enums.LoginAccessPoint,System.Boolean,System.String)~ADEXS.Core.Domain.Authentication.AuthenticationInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.Authentication.CheckMustUpgradePassword(ADEXS.Core.Domain.Model.Login,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Types.Enums.PasswordUpgradeReason\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.AuthenticationChecks.ActiveAccount(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Authentication.AuthenticationCheckResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.AuthenticationChecks.ActiveLogin(ADEXS.Core.Domain.Model.Login,System.String,System.String,ADEXS.Core.Types.Enums.LoginAccessPoint)~ADEXS.Core.Domain.Authentication.AuthenticationCheckResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.AuthenticationChecks.EmailVerified(ADEXS.Core.Domain.Model.Login,System.String,System.String,ADEXS.Core.Types.Enums.LoginAccessPoint)~ADEXS.Core.Domain.Authentication.AuthenticationCheckResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.AuthenticationChecks.IpAddress(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Authentication.AuthenticationCheckResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.AuthenticationChecks.IpAddress(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Authentication.AuthenticationCheckResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.AuthenticationChecks.IpAddress(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Authentication.AuthenticationCheckResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.AuthenticationChecks.IsConversionAccount(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Authentication.AuthenticationCheckResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.AuthenticationChecks.PasswordMatches(ADEXS.Core.Domain.Model.Login,System.String,System.String,ADEXS.Core.Types.Enums.LoginAccessPoint)~ADEXS.Core.Domain.Authentication.AuthenticationCheckResult\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.IAuthentication.With(System.Func{ADEXS.Core.Domain.Model.Login,System.String,System.String,ADEXS.Core.Types.Enums.LoginAccessPoint,ADEXS.Core.Domain.Authentication.AuthenticationCheckResult})~ADEXS.Core.Domain.Authentication.IAuthentication\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.IAuthentication.With(System.Func{ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Authentication.AuthenticationCheckResult})~ADEXS.Core.Domain.Authentication.IAuthentication\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.SamlResponseGenerator.CreateSamlTransferForm(System.String,System.String,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.BaseDataConnection.Dispose\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.BusinessModel.SyncProfiles.SyncProfile.#ctor(ADEXS.Core.Domain.Model.SyncFolderProfile,ADEXS.Core.Domain.Model.SyncFolders)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CachingExtensions.SaveCollabCacheTask(ADEXS.Caching.ICacheRepository,ADEXS.Core.Domain.Model.Document)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.EntityChangeManager.PopulateAccountSettings(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})~System.Collections.Generic.List{ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.Model.EntityChange}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationSettings.AccountMigrationSettingsManager.ChangeAccountSettingsPostMigration(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.GroupManagement.GroupConversionService.ConvertGroup(System.Net.Http.HttpClient,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,ADEXS.Core.Domain.Model.Group,System.Collections.Generic.IList{ADEXS.Core.Domain.Model.DSGroup})\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Helper.UserMigrationHelper.LoadGroupMemberIds(System.Int32,System.Guid,ADEXS.Core.Domain.Repository.User.IGroupRepository,ADEXS.Core.Domain.Repository.Conversion.IAccountConversionSnapshotRepository)~System.Collections.Generic.HashSet{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Helper.UserMigrationHelper.LoadGroupMemberIds(System.Int32,System.Guid,ADEXS.Core.Domain.Repository.User.IGroupRepository,ADEXS.Core.Domain.Repository.Conversion.IAccountConversionSnapshotRepository)~System.Collections.Generic.HashSet{System.Guid}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Helper.UserMigrationHelper.SendRequestToDSServer(System.Net.Http.HttpClient,System.String,System.Object,System.Net.Http.HttpMethod,System.Guid,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.MixedMode.MixedModeSettingUtility.DeleteMixedModeSettings(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.MixedMode.MixedModeSettingUtility.SaveMixedModeSettings(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.MixedMode.MixedModeSettingUtility.SaveMixedModeSettings(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Models.UserMigrationModel.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Models.UserMigrationModel.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Models.UserMigrationModel.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Models.UserMigrationModel.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.AccountMigrationHealthCheckService.GetAccountMigrationHealth(System.Int32)~ADEXS.Core.Domain.Model.Conversion.Common.AccountHealthCheckModel\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.UserGroupMigrationService.EnqueueGroupsForMigration(System.Collections.Generic.List{System.Guid},ADEXS.Core.Domain.Model.UserAccount)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.UserGroupMigrationService.EnqueueUsersForMigration(System.Collections.Generic.List{System.Guid},ADEXS.Core.Domain.Model.UserAccount)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.UserGroupMigrationService.IsSfdcAccount(System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.UserGroupMigrationService.LoadMigrationGroups(System.Int32,ADEXS.Core.Domain.CLMAccountConversion.Models.MigrationRequestModel,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.CLMAccountConversion.Models.GroupMigrationResponseModel\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.UserGroupMigrationService.LoadMigrationGroups(System.Int32,ADEXS.Core.Domain.CLMAccountConversion.Models.MigrationRequestModel,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.CLMAccountConversion.Models.GroupMigrationResponseModel\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.CompareValues(System.Reflection.PropertyInfo,System.Object,System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.DeserializeSnapshotByType(ADEXS.Core.Domain.Model.Conversion.AccountConversionSnapshot)~System.Object\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.FormatValueToParseSetting(System.Object,System.Reflection.PropertyInfo,System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.FormatValueToParseSetting(System.Object,System.Reflection.PropertyInfo,System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.IsPropertyPersistent(System.Reflection.PropertyInfo)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.UpdatedByUser(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.ValidateInputParameters(System.Collections.Generic.Dictionary{System.String,System.Object})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Validation.AccountConversionAdminValidator.CheckDsUserGroupInfo(System.Int32,ADEXS.Core.Domain.Model.CreateAccountData)~System.ValueTuple{System.Boolean,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Validation.AccountConversionAdminValidator.VerifyConversionAdminInfo(ADEXS.Core.Domain.Model.CreateAccountData,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CodeRunner.CodeRunner.ExecuteCodeSnippet``2(ADEXS.Core.Domain.CodeRunner.CodeSnippet{``0,``1},ADEXS.Core.Domain.CodeRunner.ICodeRunnerData)~``1\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CodeRunner.CodeRunner.ExecuteCodeSnippet``2(ADEXS.Core.Domain.CodeRunner.CodeSnippet{``0,``1},ADEXS.Core.Domain.CodeRunner.ICodeRunnerData)~``1\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CoreDomainRegistry.PopulateAIDependencies(StructureMap.Registry)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CoreDomainRegistry.PopulateOtherRegistries(StructureMap.Registry)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CoreDomainRegistry.PopulatePersistenceRegistries(StructureMap.Registry)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CoreDomainRegistry.PopulateRegistry(StructureMap.Registry)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CoreDomainRegistry.PopulateRepositoryRegistries(StructureMap.Registry)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DatabaseConnectionSwitch.#ctor(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DatabaseConnectionSwitch.Dispose\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DatabaseConnectionSwitch.InitializeFromConnectionString(System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.Comparer.MetadataSetFieldComparer.GetHashCode(ADEXS.Core.Domain.Model.MetadataField)~System.Int32\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataProvider.CLMCustomAttributesDataReviewProvider.BuildNonRepeatingMetadata(ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData,ADEXS.Core.Domain.Model.MetadataField)~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataProvider.CLMCustomAttributesDataReviewProvider.ParseMetadataFields(ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,ADEXS.Core.Domain.Model.Metadatas@,ADEXS.Core.Domain.Model.Metadatas@)~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataProvider.CLMCustomAttributesDataReviewProvider.ValidateMetadataValue(System.String,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataProvider.StandardFieldsDataReviewProvider.ValidateUpdatedAgreement(ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError})\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataProvider.StandardFieldsDataReviewProvider.ValidateUpdatedAgreement(ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewAttributeFilter.#ctor(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewAttributeFilter.IsSupported(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewAttributeFilter.IsSupported(ADEXS.Core.Domain.Repository.AgreementRepository.AgreementField)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewService.GetStagedMetadata(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewService.LoadDataReviewModel(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,System.Globalization.CultureInfo)~ADEXS.Core.Domain.DataReview.Models.DataReviewModel\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewService.LoadDataReviewTask(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,System.Globalization.CultureInfo)~ADEXS.Core.Domain.DataReview.Models.DataReviewTask\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewService.LogCompletedInfo(System.Int32,System.Guid,System.Guid,System.Guid,ADEXS.Core.Domain.DataReview.Models.SaveDataReviewResult,ADEXS.Core.Domain.DataReview.Models.DataReviewResultXml,System.Boolean,System.Int64,System.DateTime,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewService.Save(System.Int32,ADEXS.Core.Domain.Model.UserAccount,System.Globalization.CultureInfo,System.Guid,ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,System.String)~ADEXS.Core.Domain.DataReview.Models.SaveDataReviewResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewService.SaveResultXml(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,System.String)~ADEXS.Core.Domain.DataReview.Models.DataReviewResultXml\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardAttributeHelper.GetNormalizedValueFromAgreement(ADEXS.Core.Domain.Model.AIDocument.StagedMetadata,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardAttributeHelper.GetNormalizedValueFromAgreement(ADEXS.Core.Domain.Model.AIDocument.StagedMetadata,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardAttributeHelper.NormalizeValue(System.String,ADEXS.Core.Types.Enums.AttributeFieldType,System.Globalization.CultureInfo)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardAttributeHelper.ParseUpdatedAttributeAndUpdateAgreement(ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError},System.Globalization.CultureInfo)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardAttributeHelper.ParseUpdatedAttributeAndUpdateAgreement(ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError},System.Globalization.CultureInfo)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardAttributeHelper.ParseUpdatedAttributeAndUpdateAgreement(ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError},System.Globalization.CultureInfo)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardFieldHelper.GetFieldValue(System.Globalization.CultureInfo)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardFieldHelper.GetFieldValue(System.Globalization.CultureInfo)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardFieldHelper.GetFieldValue(System.Globalization.CultureInfo)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.Extensions.DataReviewRegistryExtensions.AddDataReviewDependencies(StructureMap.Registry)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.MetadataFieldHelper.IsSupported(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataField)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.MetadataFuzzyMatcher.CalculateScore(ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext,ADEXS.Core.Domain.SmartAgreement.Models.MetadataValue,System.Boolean,System.Boolean)~System.ValueTuple{ADEXS.Core.Types.Enums.DataReviewFuzzyMatcherMatchType,System.Int32}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.MetadataFuzzyMatcher.CalculateScore(ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext,ADEXS.Core.Domain.SmartAgreement.Models.MetadataValue,System.Boolean,System.Boolean)~System.ValueTuple{ADEXS.Core.Types.Enums.DataReviewFuzzyMatcherMatchType,System.Int32}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.MetadataFuzzyMatcher.MatchMetadata(ADEXS.Core.Domain.DataReview.Models.AttributeReviewData,System.Boolean,System.Boolean,System.Boolean)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.MetadataFuzzyMatcher.MatchMetadata(ADEXS.Core.Domain.DataReview.Models.AttributeReviewData,System.Boolean,System.Boolean,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.MetadataFuzzyMatcher.NormalizeString(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocTracking.Services.DocTrackingService.ConvertToDocumentProcessActivity(ADEXS.Core.Domain.Model.DocumentScopes,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.DocTracking.Models.DocTrackingActivity\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocTracking.Services.DocTrackingService.LoadByFolderUid(System.Guid,System.Boolean,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.DocTracking.Models.DocTrackingActivities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocTracking.Services.DocTrackingService.LoadByFolderUid(System.Guid,System.Boolean,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.DocTracking.Models.DocTrackingActivities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocTracking.Services.DocTrackingService.LoadByUserId(System.Guid,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.DocTracking.Models.DocTrackingActivities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Archive.Perform(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.ArchiveTask)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Archive.Perform(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.ArchiveTask)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Archive.Perform(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.ArchiveTask)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DacDocGenApiMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DacDocGenApiMergeProcessor.TryMergeViaApi(DocuSign.Monitoring.PropertyBagEventSource.IPropertyBagEventData,ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocumentAssemblerMergeProcessor.CreateMergeSettings(ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource)~ADEXS.MergeEngine.DocumentAssembler.MergeSettings\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocumentAssemblerMergeProcessor.InvokeLearningMode(System.Byte[],ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,System.Byte[])\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocumentAssemblerMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocumentAssemblerMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxDocumentBuilder.MergeDocument(ADEXS.Core.Domain.DocumentCreation.Wrappers.IMainDocumentPart,ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxOpenXmlMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.AddDataDoc(System.IO.Packaging.Package,System.Xml.Linq.XDocument)~System.IO.Packaging.PackagePart\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.AddImage(System.IO.Packaging.PackagePart,System.IO.Stream,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.AddImage(System.IO.Packaging.PackagePart,System.IO.Stream,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.BindToPicture(System.IO.Packaging.PackagePart,System.Xml.Linq.XElement,System.IO.Stream,System.String,System.Int32,System.Int32,System.Single,System.Single)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContainsCustomXml(System.IO.Packaging.Package)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContainsCustomXml(System.IO.Packaging.Package)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContainsCustomXml(System.IO.Packaging.Package)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContentControls(System.Xml.Linq.XContainer,System.Int32,System.Xml.XmlNamespaceManager)~System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.GetExternalXPath(System.String,ADEXS.Core.Domain.DocumentCreation.IXmlMapping)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.GetPackagePart(System.IO.Packaging.Package,System.String)~System.IO.Packaging.PackagePart\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.GetPackagePartRel(System.IO.Packaging.PackagePart,System.IO.Packaging.PackageRelationship)~System.IO.Packaging.PackagePart\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.GetValue(System.String,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.Core.Domain.DocumentCreation.IXmlMapping)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.GetValue(System.String,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.Core.Domain.DocumentCreation.IXmlMapping)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.OpenPackagePartXml(System.IO.Packaging.PackagePart,System.Xml.XmlNamespaceManager@)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ProcessDocxTemplateField(System.String,System.String,System.Double@)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ProcessDocxTemplateField(System.String,System.String,System.Double@)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ProcessDocxTemplateField(System.String,System.String,System.Double@)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ProcessElement(System.IO.Packaging.PackagePart,System.Xml.XmlNamespaceManager,System.Xml.Linq.XContainer,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,System.String,System.Int32,System.Int32@)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ProcessElement(System.IO.Packaging.PackagePart,System.Xml.XmlNamespaceManager,System.Xml.Linq.XContainer,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,System.String,System.Int32,System.Int32@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ProcessElement(System.IO.Packaging.PackagePart,System.Xml.XmlNamespaceManager,System.Xml.Linq.XContainer,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,System.String,System.Int32,System.Int32@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.RelateDataDoc(System.IO.Packaging.PackagePart,System.IO.Packaging.PackagePart)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.IXmlMergeProcessorFactory.CreateXmlMergeProcessor(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.DocumentCreation.IXmlMergeProcessor\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Merge.CreateProcessor(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.DocumentCreation.IXmlMergeProcessor\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1308:Normalize strings to uppercase\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Merge.CreateProcessor(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.DocumentCreation.IXmlMergeProcessor\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Merge.GetXmlMappingForDocument(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~ADEXS.Core.Domain.DocumentCreation.XmlMapping\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Merge.GetXmlMappingForDocument(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~ADEXS.Core.Domain.DocumentCreation.XmlMapping\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Merge.Process(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.MergeTask)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Merge.Process(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.MergeTask)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Merge.Process(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.MergeTask)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Merge.Request(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.MergeTask)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeTaskDataSourceLimitException.#ctor(System.String,System.Int32,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeTaskDataSourceService.GetFromSharedStorage(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeTaskDataSourceService.RemoveFromSharedStorage(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.XMLDataSource,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeTaskDataSourceService.SaveToSharedStorage(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.BarcodeMergeType.#ctor(ADEXS.Core.Domain.DocumentCreation.IXmlMapping,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.Core.Domain.DocumentCreation.Wrappers.IMainDocumentPart,DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.String,ADEXS.Core.Domain.Repository.ImageCreation.IBarcodeRepository)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.BarcodeMergeType.#ctor(ADEXS.Core.Domain.DocumentCreation.IXmlMapping,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.Core.Domain.DocumentCreation.Wrappers.IMainDocumentPart,DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.String,ADEXS.Core.Domain.Repository.ImageCreation.IBarcodeRepository)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.HtmlMergeType.#ctor(ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.Core.Domain.DocumentCreation.Wrappers.IMainDocumentPart,DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.HtmlMergeType.#ctor(ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.Core.Domain.DocumentCreation.Wrappers.IMainDocumentPart,DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.MergeTypeFactory.Create(ADEXS.Core.Domain.DocumentCreation.IXmlMapping,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.Core.Domain.DocumentCreation.Wrappers.IMainDocumentPart,DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.String)~ADEXS.Core.Domain.DocumentCreation.MergeType.IMergeType\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.PlainTextMergeType.AppendTextIfNotEmpty(DocumentFormat.OpenXml.Wordprocessing.Run,System.Text.StringBuilder)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.PlainTextMergeType.GetLines(System.String)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.RepeatingSectionMergeType.#ctor(ADEXS.Core.Domain.DocumentCreation.IXmlMapping,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.Core.Domain.DocumentCreation.Wrappers.IMainDocumentPart,DocumentFormat.OpenXml.Wordprocessing.SdtElement,ADEXS.Core.Domain.DocumentCreation.MergeType.IMergeTypeFactory,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.RepeatingSectionMergeType.#ctor(ADEXS.Core.Domain.DocumentCreation.IXmlMapping,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.Core.Domain.DocumentCreation.Wrappers.IMainDocumentPart,DocumentFormat.OpenXml.Wordprocessing.SdtElement,ADEXS.Core.Domain.DocumentCreation.MergeType.IMergeTypeFactory,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.RepeatingSectionMergeType.BuildTag(DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.RepeatingSectionMergeType.BuildTag(DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.RepeatingSectionMergeType.BuildTag(DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.RepeatingSectionMergeType.HandleExternalXPath\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.RepeatingSectionMergeType.Merge\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.RepeatingSectionMergeType.ReplaceFirstOccurrenceOnly(System.String,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.SharpSuppressionMergeType.#ctor(ADEXS.Core.Domain.DocumentCreation.IXmlMapping,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.Core.Domain.DocumentCreation.Wrappers.IMainDocumentPart,DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.SharpSuppressionMergeType.#ctor(ADEXS.Core.Domain.DocumentCreation.IXmlMapping,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.Core.Domain.DocumentCreation.Wrappers.IMainDocumentPart,DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.SuppressionMergeType.#ctor(ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.SuppressionMergeType.#ctor(ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.OpenXmlExtensions.ContentControls(DocumentFormat.OpenXml.Packaging.MainDocumentPart)~System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.SdtElement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.OpenXmlExtensions.GetFirstDescendant``1(DocumentFormat.OpenXml.OpenXmlElement)~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.OpenXmlExtensions.GetTopLevelContentControls(DocumentFormat.OpenXml.Wordprocessing.SdtElement)~System.Collections.Generic.List{DocumentFormat.OpenXml.Wordprocessing.SdtElement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.OpenXmlExtensions.RemoveAllChildrenExceptFirst``1(DocumentFormat.OpenXml.OpenXmlElement)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.OpenXmlExtensions.Suppress(DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DacDocGenApiClientExceptionFactoryService.GetGenerateDocumentResponseExceptions(System.String,DacDocGenApiClient.Client.IApiResponse)~System.Exception\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DacDocGenApiClientExceptionFactoryService.GetGenerateDocumentResponseExceptions(System.String,DacDocGenApiClient.Client.IApiResponse)~System.Exception\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DacDocGenApiService.CreateDacDocGenApiClient(System.Net.Http.HttpClient,ADEXS.MergeEngine.DocumentAssembler.MergeSettings,System.String,System.String,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource)~DacDocGenApiClient.Api.IGenApi\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DacDocGenApiService.CreateLearningModeDacDocGenApiClient(System.Net.Http.HttpClient,ADEXS.MergeEngine.DocumentAssembler.MergeSettings,System.String,System.String,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource)~DacDocGenApiClient.Api.ILearningModeGenApi\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DacDocGenApiService.CreateMergeSettingAndContextHeaders(ADEXS.MergeEngine.DocumentAssembler.MergeSettings,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1308:Normalize strings to uppercase\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DacDocGenApiService.RetrieveTraceParent(System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DSApiConfigurationService.GetGenApiConfiguration(ADEXS.Core.Domain.Model.UserAccount,System.String)~DSGenAPIClient.Client.Configuration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.GenTemplateApiService.ConvertDocument(System.Int32,DSGenAPIClient.Model.EnvelopeGenAndSend,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.GenTemplateApiService.GenAndArchive(ADEXS.Core.Domain.Model.UserAccount,DSGenAPIClient.Model.EnvelopeGenAndSend,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.GenTemplateApiService.GenAndConvert(ADEXS.Core.Domain.Model.UserAccount,DSGenAPIClient.Model.EnvelopeGenAndSend,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.GenTemplateApiService.PostGenTemplateDocument(ADEXS.Core.Domain.Model.UserAccount,DSGenAPIClient.Model.GenerateTemplateDocument,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.SfInvoiceUtilities.GetInvoiceTemplateRedisKey(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.SfMerge.Process(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.SfDocMergeClmTask)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.SfMerge.Process(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.SfDocMergePreviewTask)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.SfMerge.Process(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.SfDocMergeTask)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.SfMerge.Request(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.ISfDocMergeTask)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.WatermarkHelper.WatermarkEncodedFile(System.String,System.String,ADEXS.Core.Domain.FileOperations.Models.WatermarkProperties,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.WatermarkHelper.WatermarkEncodedFile(System.String,System.String,ADEXS.Core.Domain.FileOperations.Models.WatermarkProperties,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.WatermarkHelper.WatermarkFile(System.String,ADEXS.Core.Domain.FileOperations.Models.WatermarkProperties,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Wrappers.MainDocumentPartWrapper.ContentControlsWithoutRepeaterChildren~System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.SdtElement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Wrappers.MainDocumentPartWrapper.UpdateImageControl(ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Wrappers.MainDocumentPartWrapper.UpdateImageControl(DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMapping.GetAttributeFromField(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMapping.GetBarcodeData(System.String)~ADEXS.Core.Domain.DocumentCreation.BarcodeData\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMapping.GetBarcodeData(System.String)~ADEXS.Core.Domain.DocumentCreation.BarcodeData\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMapping.GetBarcodeData(System.String)~ADEXS.Core.Domain.DocumentCreation.BarcodeData\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMapping.GetExternalXPath(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMapping.GetExternalXPath(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMapping.PopulateDictionary(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMergeDataSource.GetStreamFromLogicalPath(System.String,System.String@)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1308:Normalize strings to uppercase\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMergeProcessorFactory.CreateXmlMergeProcessor(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.DocumentCreation.IXmlMergeProcessor\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMergeProcessorFactory.TryParseProcessorByTemplateMetadataOverride(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.DocumentCreation.IXmlMergeProcessor@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.AccountSyncRequestProcessor.Update\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.AccountSyncRequestProcessor.Update\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.BaseGroupSyncRequestProcessor.#ctor(ADEXS.Core.Domain.DocuSignSync.GroupModel,ADEXS.Core.Types.Enums.SourceProductName,ADEXS.Core.Types.Enums.DocuSignNdnsSyncEventType,ADEXS.Core.Types.Enums.DocuSignSyncOperation)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.MemberShipSyncRequestProcessor.UpdateExistingUser(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.UserAccount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.MemberShipSyncRequestProcessor.UserHasChanges(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.SyncUtilities.GetCreateUserDataRedisKey(System.Guid,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.UserSyncRequestProcessor.UpdateExistingUser(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.UserAccount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.UserSyncRequestProcessor.UserHasChanges(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.GetEosMetadataFields~ADEXS.Core.Domain.Model.MetadataFields\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.GetEosPathForFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.GetFolder(System.String,System.String,System.String,System.String,System.Boolean)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.GetParentEosFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String,System.String@)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.GetParentEosFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String,System.String@)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.GetParentEosFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String,System.String@)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.HandleEOSEscapeCharacters(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.ValidateAndSanitizeName(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.CallExpressionService(System.Uri,ADEXS.Core.Domain.ExpressionService.Internal.Model.WorkflowExpressionServiceRequestContent,ADEXS.Core.Domain.Model.Account,System.Guid,System.Guid,System.Guid,System.Int32@,System.String@,System.Boolean@)~ADEXS.Core.Workflow.Expressions.Model.ApiExpressionServiceResponse\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.CallExpressionServiceApi(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.Boolean,System.Guid,System.Guid@,System.Boolean)~ADEXS.Core.Workflow.Expressions.Model.WorkflowExpressionResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.EvaluateOrCompileExpression(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Guid,System.Guid)~ADEXS.Core.Workflow.Expressions.Model.ExpressionServiceResponseDetails\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.GetExpressionServiceResponseDetails(ADEXS.Core.Workflow.Expressions.Model.ApiExpressionServiceResponse,System.Uri,System.Int32,System.Guid,System.String,System.Boolean,System.String,System.Boolean,System.Boolean)~ADEXS.Core.Workflow.Expressions.Model.ExpressionServiceResponseDetails\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.HandleExecutionRequestCreationException(System.Exception,System.Guid)~ADEXS.Core.Workflow.Expressions.Model.WorkflowExpressionResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.RemoteWorkflowEvaluateExpression(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Guid)~ADEXS.Core.Workflow.Expressions.Model.WorkflowExpressionResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.WorkflowEvaluateExpression(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String,System.String,System.Boolean)~ADEXS.Core.Workflow.Expressions.Model.WorkflowExpressionResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.Internal.ModelFactory.CreateWorkflowExecutionRequest(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String,System.String)~DocuSign.CLM.API.ExpressionService.Client.WorkflowExecutionRequest\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.Internal.ModelFactory.CreateWorkflowExpressionServiceRequestContent(System.String,System.String,System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Model.Account)~ADEXS.Core.Domain.ExpressionService.Internal.Model.WorkflowExpressionServiceRequestContent\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.Internal.TrailingZeroNumberJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)~System.Object\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1308:Normalize strings to uppercase\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Extensions.FlurlRequestExtensions.RetrieveTraceParent(System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.FileOperationsUtil.ParsePagesExpression(System.String,System.Int32)~System.Collections.Generic.IList{System.Int32}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.FileOperationsUtil.ParsePagesExpression(System.String,System.Int32)~System.Collections.Generic.IList{System.Int32}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.FileOperationsUtil.ParsePagesExpression(System.String,System.Int32)~System.Collections.Generic.IList{System.Int32}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.FileOperationsUtil.ParsePagesExpression(System.String,System.Int32)~System.Collections.Generic.IList{System.Int32}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.FileOperationsUtil.TryParsePageNumbers(System.Int32,System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Int32}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.FileOperationsUtil.TryParsePageNumbers(System.Int32,System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Int32}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Image.ImageOperation.CopyOutPages(System.Collections.Generic.ICollection{System.Int32},System.String)~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Image.ImageOperation.CopyOutPages(System.Collections.Generic.ICollection{System.Int32},System.String)~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Image.ImageOperation.DeletePages(System.Int32,System.Int32)~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Image.ImageOperation.EmbedComments(ADEXS.Core.Domain.Model.CollaborationComments,System.Int32)~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Image.ImageOperation.EmbedComments(ADEXS.Core.Domain.Model.CollaborationComments,System.Int32)~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Image.ImageOperation.EmbedComments(ADEXS.Core.Domain.Model.CollaborationComments,System.Int32)~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Image.ImageOperation.GeneratePreviewImages(ADEXS.Core.Domain.LWDP.ImageScale,System.String,System.Int32,System.Int32[],System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Image.ImageOperation.GeneratePreviewImages(ADEXS.Core.Domain.LWDP.ImageScale,System.String,System.Int32,System.Int32[],System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Image.ImageOperation.GenerateThumbnails(System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Image.ImageOperation.RotatePages(System.Int32,System.Int32,System.Int32)~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.OperationFactory.GetInstance(ADEXS.Core.Domain.FileOperations.Interfaces.IOperable,ADEXS.Core.Util.FileIO.FileExtensionList,System.Int32)~ADEXS.Core.Domain.FileOperations.Interfaces.IOperation\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.OperationFactory.GetInstance(ADEXS.Core.Domain.FileOperations.Interfaces.IOperable,ADEXS.Core.Util.FileIO.FileExtensionList,System.Int32)~ADEXS.Core.Domain.FileOperations.Interfaces.IOperation\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.OperationFactory.GetInstance``1(ADEXS.Core.Domain.FileOperations.Interfaces.IOperable,ADEXS.Core.Util.FileIO.FileExtensionList)~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.OperationFactory.HasOperation(ADEXS.Core.Domain.FileOperations.Interfaces.IOperable)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.OperationFactory.OperateOnNatively(ADEXS.Core.Domain.FileOperations.Interfaces.IOperable)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.OperationFactory.OperateOnNatively(ADEXS.Core.Domain.FileOperations.Interfaces.IOperable)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.OperationFactory.OperationReturnFormat(ADEXS.Core.Domain.FileOperations.Interfaces.IOperable)~DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.FileManipulation.DeletePageRange(ADEXS.Core.Domain.Model.UserAccount,System.Int32,System.Int32,ADEXS.Core.Domain.Model.Document)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.FileManipulation.DeletePageRange(ADEXS.Core.Domain.Model.UserAccount,System.Int32,System.Int32,ADEXS.Core.Domain.Model.Document)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.FileManipulation.DeletePageRange(ADEXS.Core.Domain.Model.UserAccount,System.Int32,System.Int32,ADEXS.Core.Domain.Model.Document)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.FileManipulation.RotatePageRange(ADEXS.Core.Domain.Model.UserAccount,System.Int32,ADEXS.Core.Domain.Model.Document,System.Int32,System.Int32)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.FileManipulation.RotatePageRange(ADEXS.Core.Domain.Model.UserAccount,System.Int32,ADEXS.Core.Domain.Model.Document,System.Int32,System.Int32)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.FileManipulation.RotatePageRange(ADEXS.Core.Domain.Model.UserAccount,System.Int32,ADEXS.Core.Domain.Model.Document,System.Int32,System.Int32)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PageCountOnDemand.EnsureDocumentPageCount(ADEXS.Core.Domain.Model.Document)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PageCountOnDemand.EnsureDocumentPageCount(ADEXS.Core.Domain.Model.Document)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PageCountOnDemand.EnsureDocumentPageCount(ADEXS.Core.Domain.Model.Document)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PageCountOnDemand.EnsureDocumentPageCountIfEnabledForWebServices(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PDFMergeProcessor.GetMergeItemList~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PDFMergeProcessor.MergeDocuments(ADEXS.Core.Types.Enums.SharedStorageUseCase)~ADEXS.Core.Domain.Model.QueueTasks.PdfMergeTask.ProcessingResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.ConcatenateIntoPDF(System.Collections.Generic.List{ADEXS.Core.Domain.FileOperations.PDF.ConcatDocItem},System.String,System.Boolean,System.String,DocuSign.CLM.ContentStorage.Shared.ISharedStorage,System.Int32,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.GetDegreeRotated(WebSupergoo.ABCpdf12.Doc,System.Int32,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.MergeDocument(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.RotatePages(System.String,System.Int32,System.Int32,System.Int32)~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.FieldExportProcessorPdf.GeneratePdfFieldExportXml(ADEXS.Core.Domain.Model.Document,System.Int32,System.Int32,CLM.MessageDefines.Event.PdfFieldExportEvent)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.ImagePdfOperationsPdf.GeneratePreviewImagePages(System.String,System.String,System.String,System.String,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.String}@)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.PdfEmbeddedDocumentProperties.DrawEndnotes(WebSupergoo.ABCpdf12.Doc,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.PdfEmbeddedDocumentProperties.EmbedComments(System.String,ADEXS.Core.Domain.Model.CollaborationComments,System.Int32)~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.PdfEmbeddedDocumentProperties.TextWidth(WebSupergoo.ABCpdf12.Doc,System.String)~System.Double\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.PdfEmbeddedDocumentProperties.WritePdfEmbeddedDocumentProperties(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.IO.Stream,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.WatermarkServicePdf.GetCalculatedLocation(ADEXS.Core.Domain.FileOperations.Models.Dimension,ADEXS.Core.Domain.FileOperations.Models.Location,ADEXS.Core.Domain.FileOperations.Models.Dimension,ADEXS.Core.Domain.FileOperations.Models.Alignment,ADEXS.Core.Domain.FileOperations.Models.Rotation)~ADEXS.Core.Domain.FileOperations.Models.Location\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.WatermarkServicePdf.GetDegreeRotated(WebSupergoo.ABCpdf12.Doc,System.Int32,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.WatermarkServicePdf.TextWidth(WebSupergoo.ABCpdf12.Doc,System.String)~System.Double\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PDFOperators.PageCount.AlternatePageCountOperator.GetPageCount~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfUtility.PdfManipulationCacheKey(System.Int32,System.Guid,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32[],System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfUtility.PdfManipulationCacheKey(System.Int32,System.Guid,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32[],System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Watermark.DocxWatermarkService.ApplyWatermarkText(System.IO.Stream,System.String,ADEXS.Core.Domain.FileOperations.Models.WatermarkProperties,System.Collections.Generic.IList{System.Int32},System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Watermark.DocxWatermarkService.ApplyWatermarkText(System.String,System.String,System.String,ADEXS.Core.Domain.FileOperations.Models.WatermarkProperties,System.Collections.Generic.IList{System.Int32},System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.DocumentGlyphsRepository.InsertIntoGlyphExtractionQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.DocumentGlyphsRepository.InsertIntoGlyphExtractionQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.DocumentGlyphsRepository.InsertIntoGlyphExtractionQueueForSearchablePdf(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.DocumentGlyphsRepository.InsertIntoGlyphExtractionQueueForTransient(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.DocumentGlyphsRepository.IsSupportedForGlyphExtraction(ADEXS.Core.Domain.Model.FileData,ADEXS.Core.Domain.GlyphProcessing.GlyphExtractionStatus@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.DocumentGlyphsRepository.ProcessDocumentGlyphs(ADEXS.Core.Domain.Model.QueueTasks.IGlyphExtractionTask)~ADEXS.Core.Types.Enums.GlyphExtractionTaskStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.GlyphsPersistenceBase.WriteGlyphStreamToStorage(System.Byte[],System.Int32,System.String,System.TimeSpan)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.GlyphProcessingService.ReconcileDocumentSelectionOffsetsWithGlyphs(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelectionData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.GlyphProcessingService.ReconcileOffsetsWithGlyphs(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelectionData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.GlyphProcessingService.ReconcileOffsetsWithGlyphs(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelectionData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.GlyphProcessingService.ReconcileOffsetsWithGlyphs(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelectionData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.GlyphReconciliationTaskService.InsertIntoGlyphReconciliationQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,ADEXS.Core.Types.Enums.DocumentSelectionType,System.Boolean,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.GlyphReconciliationTaskService.InsertIntoGlyphReconciliationQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,ADEXS.Core.Types.Enums.DocumentSelectionType,System.Guid,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.GlyphReconciliationTaskService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IGlyphReconciliationTask)~ADEXS.Core.Types.Enums.GlyphReconciliationStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Import.UserCSVReader.Dispose\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Import.UserCSVReader.GenerateMapping\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Import.UserCSVReader.GenerateMapping\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Import.UserCSVReader.GenerateMapping\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Import.UserCSVReader.GetContact(System.String,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Contact\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Import.UserCSVReader.GetContact(System.String,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Contact\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Import.UserCSVReader.GetContact(System.String,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Contact\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ISettingProvider.Set(System.Int32,System.Guid,ADEXS.Core.Types.Enums.SettingLevel,System.Int64,System.Guid,System.String,System.Object,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Javelin.JavelinApiService.CallWithTokenUrlFallback``1(System.Func{``0},System.Action{System.String})~``0\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Javelin.JavelinApiService.CallWithTokenUrlFallback``1(System.Func{``0},System.Action{System.String})~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Javelin.JavelinConfigurationFactory.GetSFAdminName(ADEXS.Core.Domain.Model.Account)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Javelin.JavelinNugetService.GetObjectFields(ADEXS.Core.Domain.Javelin.SalesForceRequestSchema,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.List{ADEXS.Core.Domain.Javelin.SalesForceMergeField}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Javelin.JavelinNugetService.GetSalesforceGenTemplates(ADEXS.Core.Domain.Javelin.SalesForceRequestSchema,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Javelin.SalesforceGenTemplate}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Javelin.JavelinServiceFactory.Create(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Javelin.IJavelinService\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Lookup.DefaultActions.FlattenActionItem(System.Collections.Generic.List{ADEXS.Core.Domain.Model.ActionItem},System.String,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Model.ActionMenuItem},ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Lookup.DefaultActions.GetLocalizedName(System.String,System.Globalization.CultureInfo)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Lookup.FileDataFilenameLookup.GetNextDocumentID(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Lookup.FileDataFilenameLookup.RefreshCounterCache(System.String,System.Collections.Generic.Queue{System.String})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Lookup.Pager.ApplyToCommand(ADEXS.SqlCorePersistence.Command,ADEXS.Core.Domain.Lookup.Pager.MungeSortColumnDelegate)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Lookup.Pager.GetHashCode~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Lookup.ProvinceStates.GetProvinceStateByAbbreviation(System.String)~ADEXS.Core.Domain.Lookup.ProvinceState\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Lookup.ProvinceStates.GetProvinceStateByAbbreviation(System.String)~ADEXS.Core.Domain.Lookup.ProvinceState\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Mapping.TaskMapper.#cctor\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.AppendFooterFile(System.Text.StringBuilder,ADEXS.Core.Domain.Model.Account)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.AppendHeaderFile(System.Text.StringBuilder,ADEXS.Core.Domain.Model.Account)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildApprovalWorkflowStartedCoverSheet(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,ADEXS.Core.Domain.Model.Contact)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildApprovalWorkflowStepExpirationCoverSheetForInitiator(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String,System.String,System.Int32,System.String)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildApprovalWorkflowStepRejectedCoverSheet(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String,System.String,ADEXS.Core.Domain.Model.Contact)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildApprovalWorkflowStepReminderCoverSheet(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.Int32,System.String,System.String,ADEXS.Core.Domain.Model.Contact)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildApprovalWorkflowStepStartedCoverSheet(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String,System.Int32,System.String,ADEXS.Core.Domain.Model.Contact)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildBouncebackCoversheet(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildBouncebackCoversheet(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildBouncebackCoversheet(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildBouncebackCoversheet(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildDeliveryNotificationCoversheet(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents,System.Boolean)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildDeliveryNotificationCoversheet(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents,System.Boolean)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildDocumentCompareFailureNotificationCoversheet(System.String,ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildDocumentMergeFailureNotificationCoversheet(System.String,ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildDocumentRuleEmailActionCoversheet(System.String,System.String,ADEXS.Core.Domain.Repository.CustomRuleRepository.ICustomRuleTrigger,ADEXS.Core.Domain.Lookup.IEmailInfo)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildDocumentRuleNotifyCoversheet(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Repository.CustomRuleRepository.ICustomRule,System.String,ADEXS.Core.Domain.Repository.CustomRuleRepository.ICustomRuleTrigger)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildDocumentRuleNotifyCoversheet(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Repository.CustomRuleRepository.ICustomRule,System.String,ADEXS.Core.Domain.Repository.CustomRuleRepository.ICustomRuleTrigger)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildInboundFaxCoversheet(System.String,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.InboundFax)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildInboundFaxReassignCoversheet(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.InboundFax)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildNewDocumentNotificationCoversheet(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildNewDocumentNotificationCoversheet(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildOriginalMessageText(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildOriginalMessageText(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildPasteProcessorNotificationCoversheet(System.String,ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildShareDocumentAttachmentCoversheet(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildUserInfoCoversheet(System.String,ADEXS.Core.Domain.Model.UserAccount)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.LoadFile(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.AddBranding(ADEXS.Core.Domain.Messaging.Framework.Core.Interfaces.ITokenModifier,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.AddBranding(ADEXS.Core.Domain.Messaging.Framework.Core.Interfaces.ITokenModifier,System.Net.Mail.MailMessage,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.AttachmentsBuilder.AddDocumentAttachmentToMailMessage(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailAttachment)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.AttachmentsBuilder.BuildAndAddAttachments(System.Net.Mail.MailMessage,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.BrandingStrategyFactory.GetInstance(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.Interfaces.IBrandingStrategy\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.BrandingStrategyFactory.GetInstance(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.Interfaces.IBrandingStrategy\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload.#ctor\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.MailMessageDto.op_Explicit(System.Net.Mail.MailMessage)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.MailMessageDto\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.PayloadValidationFailedException.#ctor(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ValidateEmailResult,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailResourceManager)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ValidateEmailResult.ToDisplayString(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailResourceManager)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.DynamicExtensions.ToDynamic(System.Object)~System.Object\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.EmailBodyComposer.ApplyGlobalCssStylesToHtmlShard(System.String,System.String,System.Object)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.EmailBodyComposer.ComposeShard(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailShardTemplateNames,System.Object,System.Globalization.CultureInfo)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.EmailBodyComposer.MergeTemplateAndTokens(System.String,System.Object)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.EmailSignatureHandler.AddEmailSignatureToTokens(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.EmailSignatureHandler.IsSignatureRequested(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.EmailTemplateRepository.GetTemplate(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.MailMessageComposer.ComposeMailMessage(System.Net.Mail.MailMessage,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.MailMessageComposer.ComposeMailMessage(System.Net.Mail.MailMessage,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.MailMessageComposer.GetFrom(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~System.Net.Mail.MailAddress\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.MailMessageComposer.GetFrom(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~System.Net.Mail.MailAddress\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.MailMessageValidator.ValidateMailMessage(System.Net.Mail.MailMessage)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.PayloadPreProcessor.AddPreDefinedTokens(System.Net.Mail.MailMessage,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.PayloadPreProcessor.RemoveBlockedEmails(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~System.Collections.Generic.IList{ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailContact}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.PayloadPreProcessor.RemoveDisabledUsers(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~System.Collections.Generic.IList{ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailContact}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.PostProcessor.GetHistoryComment(System.Net.Mail.MailMessage,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.PostProcessor.Process(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.Net.Mail.MailMessage)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.SmtpClientWrapper.Send(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.Net.Mail.MailMessage)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.SmtpClientWrapper.Send(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.Net.Mail.MailMessage)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.TokenModifier.MergeJsonStrings(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.TokenModifier.MergeJsonStrings(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.ComposeAndSendEmail(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.SendEmailResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.ComposeShard(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.CreateEmailPreview(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.FireEmailFailedEvent(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.GetFailedEventInfo(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.LogMailMessage(System.Net.Mail.MailMessage)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.SavePayloadToCache(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilderFactory.Get(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail)~ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmailPayloadBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.AutofillAnalysisReadyEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.AutofillAnalysisStartedEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.BasePayloadBuilder.Convert``1(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail)~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.BasePayloadBuilder.ProcessRequest(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.BasePayloadBuilder.SafelyGetTime(System.String,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.BaseShareObjectEmailPayloadBuilder.SetUpPayload(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.BaseShareObjectEmail)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.BaseShareObjectEmailPayloadBuilder.ValidateRequest(ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.BaseShareObjectEmail)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ChangePasswordNoticeEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.CollaborationEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.CollaborationNotificationMessagingBuilder.Build(ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CollaborationEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailResourceManager)~ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.CollaborationNotificationMessaging\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.CollaborationNotificationMessagingBuilder.Build(ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CollaborationEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailResourceManager)~ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.CollaborationNotificationMessaging\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.DocumentCheckInEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.DocumentMergeFailureNotificationEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.DocumentReminderEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.DocumentRequestCheckInEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.DocumentRuleDeactivatedByServicePayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ESignatureCancelMessageEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ESignatureSendAuthenticationFailureEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ESignatureSendFailureEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ESignatureTransactionNotSignedEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ExportSearchResultsCompleteEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ExportSearchResultsErrorEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ExportWorkflowReportEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ExternalReviewCancelledReviewForDeniedUnknownEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ExternalReviewCompletedReviewerEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ExternalReviewCompletedSenderEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ExternalReviewFailedAutoMatchEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ExternalReviewFailedAutoMatchOnBehalfEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.GenericFailureEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.GenericFailureEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.GenericNonTemplatesEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PackageNotificationEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.CreateMessage(System.Int32,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.InputLengthError(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.InvalidCharsError(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.NoChangeUpdate(ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.PartyIdError(ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.SalesforcePartyUpdateError(ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PartySyncEmailPayloadBuilderUtility.WerePartyUpdatesMade(ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.PartySyncResultsEmail)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PasswordResetEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PasswordResetEmailPayloadBuilder.GetResetPasswordUrl(ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.PasswordResetEmail)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PasteSuccessEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.RecoverLoginNameEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SalesforceSyncUserDisabledEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SecurityAccessRuleValidationEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SecurityAccessRuleValidationEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SendEmailActionPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SendEmailForExternalReviewStatusErrorPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SendForEmailDomainApprovalPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SendForExternalReviewEmailWithAttachmentsPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ShareDocumentAttachmentEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ShareDocumentLinkEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ShareFolderLinkEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ShareObjectLinksEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.TranslationImportEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.TranslationImportEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.UserAccountActivationEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.UserAccountActivationEmailPayloadBuilder.GetLink(ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.UserAccountActivationEmail)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.UserAccountOverageEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.UserSyncEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.UserSyncEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.UserSyncEmailPayloadBuilder.GetUserSyncSmartRuleMessage(System.Int32,System.Nullable{System.Guid},System.Nullable{System.Guid},System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.UserSyncFailureEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.WorkflowAbortNotificationPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.WorkflowAbortNotificationPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.WorkflowErrorNotificationEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.WorkflowPauseActivityExecutionLimitNotificationPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.WorkflowRevisionSuspensionNotificationEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.WorkflowRevisionSuspensionNotificationEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.WorkflowSendDocumentAttachmentEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.WorkflowSendDocumentAttachmentEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadValidator.ComposeAndValidateEmail(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ValidateEmailResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewReviewerEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewReviewerEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.ExternalReviewParticipant)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewSenderEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.ExternalReviewParticipant)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewWatcherEmail.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.ExternalReviewParticipant)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendForExternalReviewWatcherNotification.#ctor(ADEXS.Core.Domain.Model.EmailAction,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.ExternalReviewParticipant)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailShardPayloadBuilderFactory.Get(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShardBuilder\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmailPayloadBuilderFactory.Get(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail)~ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmailPayloadBuilder\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmailShardPayloadBuilderFactory.Get(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShardBuilder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Models.EmailDocumentModel.#ctor(ADEXS.Core.Domain.Model.Document)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.NotifySender.SendGenericFailureEmail(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.BaseReformatter.ParseOneOutputComment(System.String)~ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.OneCommentDto\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.OutputCommentsReformatter.ConvertParsedCommentsToNecessaryTokensForEmailShard(ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.OutputCommentsDto)~System.Object\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.OutputCommentsReformatter.ConvertParsedCommentsToNecessaryTokensForEmailShard(ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.OutputCommentsDto)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractShareShardBuilder.DocumentMobileUrl(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractShareShardBuilder.DocumentWebUrl(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractShareShardBuilder.FolderMobileUrl(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractShareShardBuilder.FolderWebUrl(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetActivityTokens(ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.PreviousActivityTokens\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetActivityTokens(ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.PreviousActivityTokens\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetAssigneeLinks(ADEXS.Core.Domain.Model.Contacts)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetAssignees(ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard)~ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.Assignees\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetDocumentLinks(ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetDocumentLinks(ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetDocuments(ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetExpiration(ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetExpiration(ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.EmailObjectLinksShardBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.ShareDocumentShardBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.ShareFolderShardBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalFinishedShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalInitiatorStepExpiredShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalInitiatorStepExpiredShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalReminderShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalReminderShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalReminderShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalStartedShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalStartedShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalStepRejectedShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalStepRejectedShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalYourStepExpiredShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalYourStepExpiredShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.WorkflowVariableHtmlWrap.ReplaceWorkflowVariableValueAndWrap(System.String,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.WorkflowVariableHtmlWrap.TryGetWorkflowVariableValueFromText(System.String,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.WorkflowVariableHtmlWrap.WrapWorkflowVariable(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.WorkflowVariableHtmlWrap.WrapWorkflowVariable(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendCascadingMetadataValidationFailedNotificationEmail(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.String,ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendCascadingMetadataValidationFailedNotificationEmail(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.String,ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendDocumentCompareFailureNotificationEmail(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendDocumentRuleNotify(ADEXS.Core.Domain.Repository.CustomRuleRepository.ICustomRule,System.String,System.String,ADEXS.Core.Domain.Repository.CustomRuleRepository.ICustomRuleTrigger)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendDuplicateSignupEmail(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String,System.String,ADEXS.Core.Domain.Model.UserAccounts)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendDuplicateSignupEmail(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String,System.String,ADEXS.Core.Domain.Model.UserAccounts)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendFailedToInstallNewAccountPackageEmail(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendFailedToInstallNewAccountPackageEmail(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendInboundFaxProvisionedEmail(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.InboundFax)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendInboundFaxProvisionedEmail(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.InboundFax)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendInboundFaxReassignedEmail(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.InboundFax,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendInboundFaxReassignedEmail(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.InboundFax,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendInboundFaxRemovedEmail(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.InboundFax)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendInboundFaxRemovedEmail(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.InboundFax)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendMetadataDeletedNotificationEmail(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendNewAccountSignupEmails(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendNewAccountSignupEmails(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendNewDocumentNotificationEmail(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendNotificationDigestEmail(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Notifications)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendNotificationDigestEmail(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Notifications)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendPasteProcessorNotificationEmail(System.String,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendUpgradeEmail(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendUpgradeEmail(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendUserAccountDisabledEmail(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendUserAccountDisabledEmail(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendUserAccountDisabledReminder(ADEXS.Core.Domain.Model.UserAccount,System.DateTime)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendUserAccountDisabledReminder(ADEXS.Core.Domain.Model.UserAccount,System.DateTime)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendUserAccountEnabledEmail(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.GenericEmailSender.SendUserAccountEnabledEmail(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.IGenericEmails.SendUserAccountDisabledEmail(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.IGenericEmails.SendUserAccountDisabledReminder(ADEXS.Core.Domain.Model.UserAccount,System.DateTime)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.IGenericEmails.SendUserAccountEnabledEmail(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Messaging.RecipientCountValid(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Messaging.RemoveDisabledUsers(ADEXS.Core.Domain.Persistence.Model.EmailPersistence.EmailContext,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Messaging.SendBouncebackEmail(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Messaging.SendDeliveryAttachedEmail(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents,System.Collections.Generic.List{System.Net.Mail.Attachment})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Messaging.SendDeliveryAttachedEmail(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents,System.Collections.Generic.List{System.Net.Mail.Attachment})~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Messaging.SendDeliveryAttachedEmail(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents,System.Collections.Generic.List{System.Net.Mail.Attachment})~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Messaging.SendEmail(ADEXS.Core.Domain.Persistence.Model.EmailPersistence.EmailContext,System.String,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Net.Mail.Attachment},System.Boolean,System.Boolean,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.SendDsEmailServiceHelper.SendSeparateEmailsToRecipients(ADEXS.Core.Domain.Messaging.ISendDsEmailService,DSEmailAPIClient.Model.PostEmailRequest,System.Int32,System.Int32,System.Boolean,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Guid},System.Int32)~System.Collections.Generic.List{System.ValueTuple{DSEmailAPIClient.Model.EmailAddress,System.Boolean,System.String}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.SendDsEmailServiceHelper.ToPostEmailRequest(System.Net.Mail.MailMessage,System.String,System.Guid,ADEXS.Core.Domain.Messaging.Framework.Core.EmailType,System.Boolean)~DSEmailAPIClient.Model.PostEmailRequest\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.Comparer.MetadataInstanceComparer.Equals(ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance,ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.CustomAttributesMetadataLoader.Get(ADEXS.Core.Domain.MetadataLoader.Models.Field)~System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.Metadata}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.IMetadataLoader.Get(ADEXS.Core.Domain.MetadataLoader.Models.Field)~System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.Metadata}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.IMetadataLoaderService.Get(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.MetadataConfigurationCollection,System.Collections.Generic.Dictionary{ADEXS.Core.Domain.MetadataLoader.Models.ValidationReasonCode,System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.Value}}@)~System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.MetadataLoaderFactory.GetInstance(ADEXS.Core.Domain.MetadataLoader.Models.Type,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.MetadataLoader.IMetadataLoader\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.MetadataLoaderService.Get(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.MetadataConfigurationCollection,System.Collections.Generic.Dictionary{ADEXS.Core.Domain.MetadataLoader.Models.ValidationReasonCode,System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.Value}}@)~System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.StandardMetadataLoader.Get(ADEXS.Core.Domain.MetadataLoader.Models.Field)~System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.Metadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ActionMenuItemEqualityComparer.Equals(ADEXS.Core.Domain.Model.ActionMenuItem,ADEXS.Core.Domain.Model.ActionMenuItem)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ActionMenuItemEqualityComparer.Equals(ADEXS.Core.Domain.Model.ActionMenuItem,ADEXS.Core.Domain.Model.ActionMenuItem)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ActionMenuItemEqualityComparer.Equals(ADEXS.Core.Domain.Model.ActionMenuItem,ADEXS.Core.Domain.Model.ActionMenuItem)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ActionMenuItemEqualityComparer.GetHashCode(ADEXS.Core.Domain.Model.ActionMenuItem)~System.Int32\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementNode.Update(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.AgreementNode)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementNode.ValidateAgreement(ADEXS.Core.Domain.Model.Agreement)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementProperties.BuildAndValidateAgreement(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{System.String}@,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{System.String},System.Boolean)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementProperties.SetDropDownAgreementProperty(System.Object,System.String,ADEXS.Core.Domain.Model.Agreement@)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementPropertiesValidations.IsDropDownValueValid(System.String,System.String)~ADEXS.Core.Domain.Model.AgreementValidationResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ApprovalWorkflowStep.ToDesignerAction(System.Int32)~ADEXS.Core.Domain.Wins.DesignerAction\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.ModelCollection`1.IndexOf(System.Func{`0,System.Boolean},System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.ModelCollection`1.RemoveAllWhere(System.Func{`0,System.Boolean})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.ModelCollection`1.SortAndPage(ADEXS.Core.Domain.Lookup.Pager)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.ModelCollection`1.StringSorter.Compare(System.Object,System.Object)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.NamedCollection`1.FindFirst(System.String,System.Boolean)~`0\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.NamedCollection`1.FindFirst(System.String,System.Boolean)~`0\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.NamedCollection`1.FindFirst(System.String,System.Boolean)~`0\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.NamedCollection`1.NameComparer.Compare(System.Object,System.Object)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.NamedPropertyHandler.GetValue(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.NamedPropertyHandler.NamedProperty.FillEnumeration(System.Resources.ResourceManager)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Base.NamedPropertyHandler.SetValue(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.BPMExecution.#ctor(System.Data.IDataReader)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.BPMExecutionDetail.#ctor(System.Data.IDataReader)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CommonMetadataField.IsFormDataRef~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Contact.#ctor(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Contact.CopyContactInfo(ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Contact.IsDeletable(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Contact.IsEditable(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Contact.IsPrefsEditable(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Contacts.GetByEmailAddress(System.String)~ADEXS.Core.Domain.Model.Contact\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus.UpdateMetaData(ADEXS.Core.Domain.Model.Conversion.Common.MigrationMetaData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReport.#ctor(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReport.BasePath(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReport.BasePath(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReport.CanDelete(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReport.CanEdit(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReport.EffectiveReportingRole(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Types.Enums.UserRole\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReport.ReportPath(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportChart.#ctor(ADEXS.Core.Domain.Reporting.Interfaces.ICustomReport)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportColumns.Add(ADEXS.Core.Domain.Reporting.Interfaces.ICustomReportColumn)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1061:Do not hide base class methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportColumns.Add(ADEXS.Core.Domain.Reporting.Interfaces.ICustomReportColumn)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1061:Do not hide base class methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportColumns.Contains(ADEXS.Core.Domain.Reporting.Interfaces.ICustomReportColumn)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1061:Do not hide base class methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportColumns.IndexOf(ADEXS.Core.Domain.Reporting.Interfaces.ICustomReportColumn)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1061:Do not hide base class methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportColumns.Insert(System.Int32,ADEXS.Core.Domain.Reporting.Interfaces.ICustomReportColumn)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportColumns.MoveColumn(ADEXS.Core.Domain.Reporting.Interfaces.ICustomReportColumn,System.Int32)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportDataField.GetValueFormat(System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1061:Do not hide base class methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportDataFields.Add(ADEXS.Core.Domain.Reporting.Interfaces.IEntityField)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1061:Do not hide base class methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportDataFields.Contains(ADEXS.Core.Domain.Reporting.Interfaces.IEntityField)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1061:Do not hide base class methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportDataFields.IndexOf(ADEXS.Core.Domain.Reporting.Interfaces.IEntityField)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1061:Do not hide base class methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportDataFields.Insert(System.Int32,ADEXS.Core.Domain.Reporting.Interfaces.IEntityField)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportDataTable.GetByColumnName(System.String)~ADEXS.Core.Domain.Reporting.Interfaces.IEntityField\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportDataTables.GetEntityByName(System.String)~ADEXS.Core.Domain.Reporting.Interfaces.IEntityTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportParameter.UpdateField(ADEXS.Core.Domain.Model.CustomReportParameter)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportQuery.IsCaseQuery~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportQuery.IsWorkflowQuery~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomRule.#ctor(ADEXS.Core.Domain.Model.CustomRule)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomRule.CanModify(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomRuleAction.#ctor(ADEXS.Core.Domain.Model.CustomRuleAction)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomRuleAF.SerializeParams(System.Object[])~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomRuleAF.SetParameters(System.Object[])\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomRuleFilter.#ctor(ADEXS.Core.Domain.Model.CustomRuleFilter)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DashboardTab.CanEdit(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DashboardTab.CompareTo(ADEXS.Core.Domain.Model.DashboardTab)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DashboardTab.CompareTo(ADEXS.Core.Domain.Model.DashboardTab)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DashboardTab.IsVisibleTo(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DashboardTab.LoadViewers(ADEXS.Core.Domain.Persistence.Model.IDashboardTabViewerPersistence)~ADEXS.Core.Domain.Model.DashboardTabViewers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DashboardWidgetUserConfig.#ctor(ADEXS.Core.Domain.Model.DashboardWidget,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DeviceApplication.SerializeParams(System.Object[])~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DeviceApplication.SetParameters(System.Object[])~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCancelExternalReview(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCancelExternalReview(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCheckin(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCheckin(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCheckout(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~ADEXS.Core.Types.Enums.CheckOutAllowed\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCheckout(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~ADEXS.Core.Types.Enums.CheckOutAllowed\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCheckout(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~ADEXS.Core.Types.Enums.CheckOutAllowed\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCompare(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCompare(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanCompleteExternalReview(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanDelete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanDelete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanDownload(ADEXS.Core.Domain.Model.UserAccount,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,ADEXS.Core.Domain.Exceptions.PublicException@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanDownload(ADEXS.Core.Domain.Model.UserAccount,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,ADEXS.Core.Domain.Exceptions.PublicException@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanDraft(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanDraft(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanLWDP(ADEXS.Core.Domain.AccountSettings)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanPinPoint(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanResendExternalReview(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanSendExternalReview(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanSendExternalReview(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanUndoCheckout(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.UndoCheckoutContext,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanUndoCheckout(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.UndoCheckoutContext,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanUpdate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanUpdate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanView~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanView~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.GetPreviewAvailability(ADEXS.Core.Domain.AccountSettings)~ADEXS.Core.Types.Enums.PreviewAvailabilityReasonCode\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.GetTitle(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.GetTitle(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.GetTitleWithoutExtension(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.GetTitleWithoutExtension(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.IsDocxFile~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.IsExcelFile~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.IsHtmlFile~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.IsPdfFile~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.IsPowerPointFile~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.IsTextFile~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.IsViewOnly(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.IsWordFile~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.NameHTML(System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.NativeIconHTML(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.PDFIconHTML(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.SecuredIconHTML(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DocumentCompare.SpringCMCompareRequest.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DocumentCopyResult.ToString~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DocumentHistory.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Globals.ScmEnums.ActionType,System.Guid,System.String,System.Guid,System.String,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DocumentReminder.AddTemplateRecipients(ADEXS.Core.Domain.Model.ReminderTemplateRecipients)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Documents.DataTable(ADEXS.Core.Domain.Model.UserAccount)~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DocumentWorkflowHistoryData.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,System.String,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.AbstractGroupDataSource.GetValues(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Nullable{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DocumentContent.GetValues(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Nullable{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DocumentContent.GetValuesFromSourceFile(ADEXS.Core.Domain.Model.Document,System.Int32)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DynamicDropDownManager.GetDynamicDropDownDataSources~System.Collections.Generic.IDictionary{System.String,ADEXS.Core.Domain.Model.DynamicDropDown.IDynamicDropDownDataSource}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DynamicDropDownManager.GetValues(System.Collections.Generic.List{System.String},ADEXS.Core.Domain.Model.UserAccount,System.Nullable{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DynamicDropDownManager.GetValues(System.Collections.Generic.List{System.String},ADEXS.Core.Domain.Model.UserAccount,System.Nullable{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DynamicDropDownManager.GetValues(System.Collections.Generic.List{System.String},ADEXS.Core.Domain.Model.UserAccount,System.Nullable{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.SavedSearch.GetValues(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Nullable{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ElasticFacade.ElasticFacadeTaskPayloadHelper.GenerateTaskBulk(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.ElasticFacade.ClmEntityType,System.Collections.Generic.List{System.String},ADEXS.Core.Domain.Model.ElasticFacade.EventScenario)~CLM.MessageDefines.Tasks.ElasticFacadeTask\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ElasticFacade.ElasticFacadeTaskPayloadHelper.GenerateTaskInternal(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.ElasticFacade.ClmEntityType,System.Collections.Generic.List{System.String},ADEXS.Core.Domain.Model.ElasticFacade.EventScenario,System.String)~CLM.MessageDefines.Tasks.ElasticFacadeTask\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ElasticFacade.ElasticFacadeTaskPayloadHelper.GenerateTaskSingleDocument(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.ElasticFacade.ClmEntityType,System.String,ADEXS.Core.Domain.Model.ElasticFacade.EventScenario,System.Guid)~CLM.MessageDefines.Tasks.ElasticFacadeTask\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.FileData.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,ADEXS.Core.Types.Constants.FileDataSource,System.String,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.FileData.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,ADEXS.Core.Types.Constants.FileDataSource,System.String,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.FileData.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,ADEXS.Core.Types.Constants.FileDataSource,System.String,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.FileData.ResetPdfConversionStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Folder.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.GroupMembers.Select``1(System.Func{ADEXS.Core.Domain.Model.GroupMember,``0})~System.Collections.Generic.IEnumerable{``0}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.InboundEmail.ToString~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.InDateRangeRule.Execute(ADEXS.Core.Domain.Model.Agreement,System.Int64)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.InWorkflowRule.Execute(ADEXS.Core.Domain.Model.Agreement,System.Int64)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.JiTSecurityEvaluationResponse.MergeResponses(ADEXS.Core.Domain.Model.JiTSecurityEvaluationResponse,System.Int32,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Metadata.#ctor(ADEXS.Core.Domain.Model.Metadata,System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Metadata.#ctor(System.Int32,ADEXS.Core.Domain.Model.MetadataField,System.Int32,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Metadata.#ctor(System.Int32,ADEXS.Core.Domain.Model.MetadataField,System.Int32,System.Boolean,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Metadata.#ctor(System.Int32,ADEXS.Core.Domain.Model.MetadataGroup,ADEXS.Core.Types.Enums.ObjectType,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Metadata.op_Explicit(ADEXS.Core.Domain.Model.Metadata)~System.DateTime\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataField.CanChangeDataType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataField.CanChangeDataType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataField.CanDelete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataField.CanDelete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataField.CanRename(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataField.CanRename(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataFields.Find(System.String,System.Guid)~ADEXS.Core.Domain.Model.MetadataField\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataFields.Find(System.String,System.Guid)~ADEXS.Core.Domain.Model.MetadataField\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataFields.Find(System.String,System.Guid)~ADEXS.Core.Domain.Model.MetadataField\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataGroup.CanRename(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataGroup.CanRename(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataGroup.CompareTo(ADEXS.Core.Domain.Model.MetadataGroup)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataGroups.LocalizedNameComparer.Compare(System.Object,System.Object)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Metadatas.Find(System.String)~ADEXS.Core.Domain.Model.Metadata\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Metadatas.Find(System.String)~ADEXS.Core.Domain.Model.Metadata\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Metadatas.Find(System.String)~ADEXS.Core.Domain.Model.Metadata\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataSet.CanDelete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataSet.CanDelete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataSet.CanRename(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataSet.CanRename(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.NoEffectiveDateRule.Execute(ADEXS.Core.Domain.Model.Agreement,System.Int64)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.NotInWorkflowRule.Execute(ADEXS.Core.Domain.Model.Agreement,System.Int64)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ObjectFilters.NoFilter.RemoveUsersThatDoNotHaveViewPermissionToObject(ADEXS.Core.Domain.Model.UserAccounts,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ObjectHistory.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.HistoryObjectType,System.String,System.String,ADEXS.Globals.ScmEnums.ActionType,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,ADEXS.Core.Domain.Model.ObjectHistory.SpecialUserAccountType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Party.#ctor(ADEXS.Core.Domain.Model.QueueTasks.SyncParty.SyncParty)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Party.EqualsIgnoreMetaData(System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Party.EqualsIgnoreMetaData(System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.PartyAgreementTrees.CreateAgreement(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Nullable{System.Guid},ADEXS.Core.Domain.Model.Document)~ADEXS.Core.Domain.Model.AgreementNode\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.PartyAgreementTrees.ImportAgreementNode(ADEXS.Core.Domain.Model.AgreementNode)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.PartyAgreementTrees.UpdateAgreement(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Nullable{System.Guid},System.Boolean)~ADEXS.Core.Domain.Model.AgreementNode\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Provisioning.Role.#ctor(ADEXS.Core.Types.Enums.UserRole)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Provisioning.Role.GetAdminUserRoleId(ADEXS.Core.Types.Enums.AccountType)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.AbstractMergeTask.GetMergeItemList~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.AccountDeletionPostProcessingTask.InitPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ActIntegrationTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.AIStagedMetadataSyncTask.GetHash(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.CommonTaskExtensions.InitPayload``2(CLM.MessageDefines.CommonTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.CommonTaskExtensions.RestorePropertiesFromPayload``2(CLM.MessageDefines.CommonTask)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ContactSyncTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ConversionTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.CustomRuleTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.DocumentCompareTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.DocumentMergeItem.GetHashCode~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.DocumentReminderTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ElasticTreeIndexTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ElasticTreeIndexTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ElectronicSignatureTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ElectronicSignatureUserTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.EtlTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ExecuteReportTask.FinishedPath(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ExecuteReportTask.FinishedPath(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ExecuteReportTask.FinishedPath(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ExecuteReportTask.FinishedPath(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ExecuteReportTask.GetFormatString(ADEXS.Core.Types.Enums.ReportExportFormat,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ExecuteReportTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ExtractTask.#ctor(ADEXS.Core.Domain.Model.QueueTasks.IExtractTask)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.ExtractTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.LoginSyncTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.MetadataDeleteTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.OutboundHttpRequestTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.PartySync.PartySyncFileImportTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.PasteTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.PdfFieldExportTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.PdfManipulationTask.GetHashCode~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.PdfManipulationTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.PdfManipulationTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.RefreshWorkerPoolMembershipTask.InitPayload\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.SalesforceChatterTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.SANfileCheckupTaskPayload.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.SecurityAccessRuleValidationTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.SyncParty.PartySyncTemplateAttribute.#ctor(System.String,System.Boolean,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.TrackedContentExtractionsTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.UserAccountRemoveReferencesTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.UserSync.DocuSignUserAndGroupSyncTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.UserSync.UserSyncAddressBookTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.WatermarkTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.WebServiceActivityTask.GetUniqueId~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.WordCompareTask.#ctor(ADEXS.Core.Domain.Model.QueueTasks.DocumentCompareTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Reporting.AggregateReportData.TryParse(ADEXS.Core.Domain.Model.Reporting.ReportDataContainer,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration)~LanguageExt.Option{ADEXS.Core.Domain.Model.Reporting.AggregateReportData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Reporting.NonAggregateReportData.TryParse(ADEXS.Core.Domain.Model.Reporting.ReportDataContainer)~LanguageExt.Option{ADEXS.Core.Domain.Model.Reporting.NonAggregateReportData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Reporting.ReportDataContainer.ConditionallyAddTotalCounts(ADEXS.Core.Domain.Model.Reporting.ReportQueryContext)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Reporting.ReportDataContainer.QueryResultProcessing.GenerateTotalCountsFromAggResults(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.PrestoQueryResults)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Reporting.ReportDataContainer.QueryResultProcessing.ProcessQueryResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Reporting.ReportingModel.GetReportQueryInitiators(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration)~LanguageExt.Seq{System.Func{ADEXS.Core.Domain.Model.Reporting.ReportQueryContext,System.ValueTuple{ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,LanguageExt.EitherAsync{LanguageExt.Common.Error,ADEXS.Core.Domain.Presto.PrestoQueryResults}}}}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Reporting.ReportQueryContext.#ctor(ADEXS.Core.Domain.Persistence.Model.IAnalyticsReportPersistence,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean,System.Boolean,System.Boolean)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Reporting.ReportQueryContext.#ctor(ADEXS.Core.Domain.Persistence.Model.IAnalyticsReportPersistence,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ResetPasswordRequest.#ctor\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ResourceReference.TryParse(System.String,ADEXS.Core.Domain.Model.ResourceReference@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SavedSearchV2.SerializeSearchQuery(ADEXS.Core.Domain.Search.SearchQuery)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SecurityMaskTable.GetMaskId(ADEXS.Core.Domain.Model.BaseSecurity)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SecurityMaskTable.GetMaskId(System.Data.DataRow)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SecurityMaskTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SecurityMaskTable.GetValueFromRow(System.Data.DataRow)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SecurityTable.addUser(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.String}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SecurityTable.addUser(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.String}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SecurityTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SignedRule.Execute(ADEXS.Core.Domain.Model.Agreement,System.Int64)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SyncFolders.#ctor(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.SyncFolder})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SyncRule.SerializeParams(System.Object[])~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SyncRule.SetParameters(System.Object[])~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.TermDocument.op_Implicit(ADEXS.Core.Domain.Model.TermDocument)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.TimeZoneDataExtensions.GetAbbreviation(ADEXS.Core.Domain.Model.TimeZoneData,System.Globalization.CultureInfo)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.TrackedTermMergeModel.#ctor(ADEXS.MergeEngine.Base.TrackedTermReplacementModel)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Transaction.Documents(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.UploadInfo.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int64,System.Int64,System.String,System.Byte[],System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.UploadInfo.CompareHashes(System.Byte[],System.Byte[])~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.UploadInfo.UploadChunk(System.Int32,System.Int32,System.Byte[],System.Byte[])\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.UserAccount.#ctor(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.UserAccounts.GetByEmailAddress(System.String)~ADEXS.Core.Domain.Model.Contact\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.UserAccounts.Partition(ADEXS.Core.Domain.Model.UserAccounts,ADEXS.Core.Domain.Model.UserAccounts,ADEXS.Core.Domain.Model.UserAccounts,ADEXS.Core.Domain.Model.UserAccounts,ADEXS.Core.Domain.Model.UserAccounts)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.UserAuthorizationDataRequest.#ctor(ADEXS.Core.Domain.Model.UserAuthorizationData)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.UserChangeRecord.Change.#ctor(System.String,System.String,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.UserInformationHistory.#ctor(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Workflow.Instance.#ctor(ADEXS.Core.Domain.Model.Workflow.Revision)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Workflow.InstanceVariable.CreateFromValueString(System.Int32,System.Guid,System.String,ADEXS.Core.Types.Enums.WorkflowVariableType,System.String)~ADEXS.Core.Domain.Model.Workflow.InstanceVariable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Workflow.WorkItem.#ctor(ADEXS.Core.Domain.Model.Workflow.WorkerPool,ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.Int32,System.Nullable{System.DateTime})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentAdded.BuildDocumentAddedNewsTask(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Guid)~ADEXS.Core.Domain.Model.QueueTasks.NewsTask\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentAdded.BuildDocumentAddedNewsTask(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Guid)~ADEXS.Core.Domain.Model.QueueTasks.NewsTask\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentAdded.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentAdded.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentAdded.ShouldNotify(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentCheckIn.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentCheckIn.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentCompareAction.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentCompareAction.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentCompareActionFailed.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentCompareActionFailed.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentMergeAction.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentMergeAction.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentMergeFailedAction.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.DocumentMergeFailedAction.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.ExternalReviewCheckIn.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.MetadataCascadingSetAction.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.MetadataCascadingSetAction.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.MetadataFieldDeletedAction.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.MetadataFieldDeletedAction.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.MetadataGroupDeletedAction.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.MetadataGroupDeletedAction.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.MetadataSetDeletedAction.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.MetadataSetDeletedAction.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteComplete.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteComplete.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteComplete.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteFailed.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteFailed.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteFailed.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PastePartialSuccess.AppendPartialSucessEmailBody(ADEXS.Core.Domain.Model.UserAccount,System.Text.StringBuilder,System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.FailedPasteResult})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PastePartialSuccess.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PastePartialSuccess.SendPasteProcessorPartialSuccessEmail(ADEXS.Core.Domain.Model.UserAccount,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteToLarge.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteToLarge.GetNotificationData(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.News.NotificationData\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteToLarge.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteToLarge.SendEmail(ADEXS.Core.Domain.Model.Base.IModel,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NewsActionTypeBase.GetNewsSubscribers(ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NewsActionTypeBase.GetSubscriptions(ADEXS.Core.Domain.Model.QueueTasks.NewsTask)~ADEXS.Core.Domain.Model.NotificationSubscriptions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NewsActionTypeBase.NotificationSuccess(ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NewsActionTypeBase.NotifySubscribers(System.Collections.Generic.IEnumerable{System.Guid},ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NewsActionTypeBase.ObjectTypeCastfromIModel``1(ADEXS.Core.Domain.Model.Base.IModel,``0@)~``0\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NewsActionTypeFactory.GetNewsTaskActionTypeInstance(ADEXS.Globals.ScmEnums.ActionType)~ADEXS.Core.Domain.News.INewsActionType\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.AddLink(System.String,System.Int32,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.AddValue(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.GetLink(System.String,ADEXS.Core.Domain.News.NotificationData.LinkAttributesList)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.GetLinkForWebService(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.GetValue(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.NotificationDataLink.GetWebLink(ADEXS.Core.Domain.News.NotificationData.LinkAttributes)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.NotificationDataLink.GetWebServiceLink~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.NotificationDataLink.GetWebServiceLink~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Organization.DSOrganizationManagementService.MultiUserProfilesCacheKey(System.String,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Organization.DSOrganizationManagementService.MultiUserProfilesCacheKey(System.String,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartyDocumentUtility.CreateOrUpdatePartyAndAttachDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,ADEXS.Core.Domain.Model.Agreement)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartyDocumentUtility.GenerateSalesforcePartyData(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartyDocumentUtility.SanitizeNameForAom(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartySyncTaskUtility.GenerateUniqueFileName(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.AtlasPersistenceFactory.Get``1(ADEXS.Core.Domain.Model.Account)~``0\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.AtlasPersistenceFactory.Get``1(ADEXS.Core.Domain.Model.Base.IUserContext)~``0\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.AtlasPersistenceFactory.Get``1(System.Int32)~``0\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.AtlasPersistenceFactory.GetInstance``1(ADEXS.Core.Domain.Model.Base.IUserContext)~``0\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.AtlasPersistenceFactory.GetInstance``1(System.Int32)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.AtlasPersistenceFactory.GetInstance``2(``1)~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.AtlasPersistenceFactory.GetInstance``2(``1)~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.GetDataTableFromByteList(System.Collections.Generic.IEnumerable{System.Byte})~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.GetDataTableFromGuidList(System.Collections.Generic.IEnumerable{System.Guid})~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.GetDataTableFromIntegerList(System.Collections.Generic.IEnumerable{System.Int32})~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.GetInstance(ADEXS.Core.Domain.Model.Account)~`0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.GetInstance``1(``0)~`0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.GetObjectDataTableFromGuidList(System.Collections.Generic.IEnumerable{ADEXS.Core.Util.Core.Pair{System.Guid,System.Int32}})~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.GetUidNameTableFromDictionary(System.Collections.Generic.Dictionary{System.Guid,System.String})~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.OnDatabaseCommandInfo(ADEXS.SqlCorePersistence.DbCommandInfo)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.SplitIds(System.String)~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.TranslateSortExpressionToSortColumnAndDirection(System.String,System.String@,System.Boolean@)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.TranslateSortExpressionToSortColumnAndDirection(System.String,System.String@,System.Boolean@)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.TranslateSortExpressionToSortColumnAndDirection(System.String,System.String@,System.Boolean@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.TranslateSortExpressionToSortColumnAndDirection(System.String,System.String@,System.Boolean@)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Cassandra.IAccountSecuritySettingsPersistence.Get(System.Int32)~ADEXS.Core.Domain.Model.AccountSecuritySettings\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.IAtlasPersistenceFactory.Get``1(ADEXS.Core.Domain.Model.Account)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.IAtlasPersistenceFactory.Get``1(ADEXS.Core.Domain.Model.Base.IUserContext)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.IAtlasPersistenceFactory.Get``1(System.Int32)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.IAuthenticationPersistenceFactory.Get``1~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.IDefaultPersistenceFactory.Get``1~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccessControlPersistence.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccessControlPersistence.LoadByUserAndObjectType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType)~ADEXS.Core.Domain.Model.AccessControls\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccessControlPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.AccessControl)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccessControlPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountActivityPersistence.LogAccountActivity(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.UserRole,ADEXS.Core.Types.Enums.UserRole,ADEXS.Core.Types.Enums.ContactStatus,System.Guid,System.Guid)~ADEXS.Core.Domain.Model.AccountActivity\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountActivityPersistence.LogUserStatusChange(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountBrandingPersistence.DeleteImage(System.Int32,ADEXS.Core.Types.Enums.AccountBrandingImageType)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountPersistence.GetUsedStorageGb(System.Int32)~System.Decimal\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountPersistence.SetCanDeleteRoles(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AgreementPersistence.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AgreementPersistence.Patch(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AgreementPersistence.Update(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AgreementRelationshipPersistence.Create(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.AgreementRelationship)~ADEXS.Core.Domain.Model.AgreementRelationship\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AIDocumentBatchPersistence.GenerateInsertCommand(System.String,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch)~ADEXS.CqlCorePersistence.AtlasCassandraCommand\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AIDocumentBatchPersistence.Save(ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AIDocumentBatchPersistence.Update(ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AIDocumentStatisticsPersistence.DecrementCounters(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentStatisticsCounterType})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AIDocumentStatisticsPersistence.DeleteMany(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentStatisticsCounterType})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AIDocumentStatisticsPersistence.LoadMany(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentStatisticsCounterType})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentStatistics}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AIDocumentTransactionPersistence.LoadMany(System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentSubStatus},System.Collections.Generic.List{System.String},ADEXS.Core.Types.Enums.AIProviderType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AIDocumentTransactionPersistence.Save(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AIDocumentTransactionPersistence.Update(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AIRulesEngineMappingPersistence.Save(ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult.#ctor(DocuSign.API.AIFrontend.Sdk.Model.AnalysisResult)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AlertPersistence.CreateAlert(System.Guid,System.Int32,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AlertPersistence.CreateEmailFailureAlert(ADEXS.Core.Domain.Model.UserAccount,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AlertPersistence.CreateFaxFailureAlert(ADEXS.Core.Domain.Model.UserAccount,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AlertPersistence.LoadAlertsFromTime(System.Int32,System.Guid,System.DateTime,ADEXS.Core.Domain.Lookup.Pager,System.Int32@,System.Type,System.Type)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AnalyticsQueryLogPersistence.SaveQueryInfo(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.String,System.String,System.String,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AnalyticsReportPersistence.InitiateReport(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ReportQueryType,System.String,System.Boolean,System.Boolean,System.Boolean)~System.Threading.Tasks.Task{ADEXS.Core.Domain.Presto.PrestoQueryResults}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AnalyticsReportPersistence.LoadScopeNames(ADEXS.Core.Domain.Model.UserAccount)~System.Threading.Tasks.Task{ADEXS.Core.Domain.Presto.PrestoQueryResults}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.APILicenseInstancePersistence.DeleteByKey(System.String,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.APILicenseInstancePersistence.GetGuid(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.APILicenseInstancePersistence.Verify(System.String,ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.APILicenseInstance\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowPersistence.SaveApprovalTemplate(ADEXS.Core.Domain.Model.ApprovalWorkflow)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowStepPersistence.Save(ADEXS.Core.Domain.Model.ApprovalWorkflowStep)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AutoNumberPersistence.AutoNumberPreSave(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.BPMPersistence.BPMWorkItemInfo.#ctor(System.Data.IDataReader)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.BPMPersistence.SaveDesignerDefinition(System.Int64,System.Xml.XmlDocument)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CollaborationCommentPersistence.LoadByDocumentUid(System.Guid,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.CollaborationComments\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CommonPersistence.GetDbTime~System.DateTime\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CommonPersistence.GetUserAccountUniqueDaysWithAction(System.Guid,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ContactPersistence.Accessed(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ContactPersistence.ContactLoadByAccountIdAndEmail(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.Contact\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ContactPersistence.Delete(ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ContactPersistence.LoadByAccountIdAndEmails(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ContactPersistence.LoadByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Contact\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ContactPersistence.LoadList(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IEnumerable{System.Guid},ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ContactPersistence.Save(ADEXS.Core.Domain.Model.Contact,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CounterpartyPersistence.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CounterpartyPersistence.Patch(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CounterpartyPersistence.Update(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomMenuItemPersistence.GetUidFromItemId(System.String,System.String@)~System.Guid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomMenuItemPersistence.JoinItemId(System.String,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportChartPersistence.LoadByCustomReportUid(ADEXS.Core.Domain.Model.Base.IUserContext,System.Guid)~ADEXS.Core.Domain.Model.CustomReportCharts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportChartPersistence.LoadByUid(ADEXS.Core.Domain.Model.Base.IUserContext,System.Guid)~ADEXS.Core.Domain.Model.CustomReportChart\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportChartPersistence.Save(ADEXS.Core.Domain.Model.Base.IUserContext,ADEXS.Core.Domain.Model.CustomReportChart)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportChartPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportPersistence.Save(ADEXS.Core.Domain.Model.Base.IUserContext,ADEXS.Core.Domain.Model.CustomReport)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomToolbarPersistence.Delete(ADEXS.Core.Domain.Model.CustomToolbar)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomToolbarPersistence.Save(System.Guid,ADEXS.Core.Domain.Model.CustomToolbar)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomUserRolePersistence.LoadByUserContext(ADEXS.Core.Domain.Model.Base.IUserContext)~ADEXS.Core.Domain.Model.CustomUserRoles\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DashboardTabPersistence.Delete(ADEXS.Core.Domain.Model.DashboardTab)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DashboardWidgetPersistence.Delete(ADEXS.Core.Domain.Model.DashboardWidget)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DashboardWidgetPersistence.SaveUserConfig(ADEXS.Core.Domain.Model.DashboardWidget,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DelegationAccessPersistence.Save(ADEXS.Core.Domain.Model.DelegationAccess)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocLauncherConfigPersistence.Delete(System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocLauncherConfigPersistence.Load(System.Int32,System.String)~ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocLauncherConfigPersistence.Load(System.Int32,System.String)~ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocLauncherConfigPersistence.Save(ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig)~ADEXS.Core.Types.Enums.DocLauncherConfigEvent\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocLauncherConfigPersistence.Save(ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig)~ADEXS.Core.Types.Enums.DocLauncherConfigEvent\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentCheckinNotificationPersistence.QueueItem.#ctor(System.Data.IDataReader)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentHistoryPersistence.LogDocumentAction(ADEXS.Core.Domain.Model.DocumentHistory,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,ADEXS.Core.Types.Enums.HistoryCommentIdentifiers,Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentHistoryPersistence.LogDocumentAction(ADEXS.Core.Domain.Model.DocumentHistory,ADEXS.Core.Domain.Model.Documents,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,ADEXS.Core.Types.Enums.HistoryCommentIdentifiers,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentHistoryPersistence.LogDocumentAction(ADEXS.Core.Domain.Model.DocumentHistory,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentHistoryPersistence.LogDocumentAction(ADEXS.Core.Domain.Model.DocumentHistory,Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentHistoryPersistence.LogDocumentAction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Globals.ScmEnums.ActionType,System.Guid,System.String,System.Guid,System.String,System.DateTime,Newtonsoft.Json.Linq.JObject,System.Nullable{System.Guid},ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,ADEXS.Core.Types.Enums.HistoryCommentIdentifiers)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentHistoryPersistence.LogDocumentAction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Globals.ScmEnums.ActionType,System.Guid,System.String,System.Guid,System.String,System.DateTime,Newtonsoft.Json.Linq.JObject,System.Nullable{System.Guid},ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,ADEXS.Core.Types.Enums.HistoryCommentIdentifiers)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentHistoryPersistence.LogDocumentAction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Globals.ScmEnums.ActionType,System.Guid,System.String,System.Guid,System.String,System.DateTime,Newtonsoft.Json.Linq.JObject,System.Nullable{System.Guid},ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,ADEXS.Core.Types.Enums.HistoryCommentIdentifiers)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.Accessed(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.CopyMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.Dictionary{System.Guid,System.String},System.Guid,ADEXS.Core.Types.Constants.FileDataSource)~ADEXS.Core.Domain.Model.DocumentCopyResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.DeleteFromTrash(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.EnumerateUnauthorized(ADEXS.Core.Domain.Model.Contacts,ADEXS.Core.Domain.Model.Documents)~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.IsDocumentNameDuplicate(System.Int32,System.Guid,System.String,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.IsDocumentUsingFileDataUid(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadByAttribute(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadByFolderUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadByFolderUidAndExtension(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadByName(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadByParentDocumentUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadByVersion(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadCountByFolderUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadCountByFolderUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadCurrentVersion(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadDraftByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadList(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{System.Guid},System.Boolean,System.Boolean,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadList(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.MungeSortColumn(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.MungeSortColumn(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.PurgeOutdated(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.UpdateDescription(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentReminderPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.DocumentReminder)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentReminderPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentReminderRecipientPersistence.Save(System.Guid,ADEXS.Core.Domain.Model.DocumentReminderRecipients)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentReminderRecipientPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.Get(ADEXS.Core.Domain.Model.DocumentScopeRef)~ADEXS.Core.Domain.Model.DocumentScopes\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.GetByActorIdentifier(System.Int32,System.Guid,System.Guid,System.String,System.Collections.Generic.IEnumerable{System.Guid})~ADEXS.Core.Domain.Model.DocumentScopes\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.GetByScopeUid(System.Int32,System.Guid,System.Collections.Generic.IEnumerable{System.Guid})~ADEXS.Core.Domain.Model.DocumentScopes\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.GetByStepUid(System.Int32,System.Guid,System.Guid,System.Collections.Generic.IEnumerable{System.Guid})~ADEXS.Core.Domain.Model.DocumentScopes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.SaveDocumentScope(ADEXS.Core.Domain.Model.DocumentScope)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.SaveDocumentScopeHistory(System.Int32,System.Guid,ADEXS.Core.Domain.Model.DocumentScopes)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.SaveDocumentScopeHistory(System.Int32,System.Guid,System.Guid,ADEXS.Core.Domain.Model.DocumentScopes)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.SaveDocumentScopes(ADEXS.Core.Domain.Model.DocumentScopes)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.SaveDocumentScopes(ADEXS.Core.Domain.Model.DocumentScopes)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.SaveScope(ADEXS.Core.Domain.Model.Scope,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.UpdateDocumentScope(ADEXS.Core.Domain.Model.DocumentScope,ADEXS.Core.Types.Enums.DocumentScopeActorAction,ADEXS.Core.Domain.Model.Contact,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.UpdateDocumentScopes(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.DocumentScope},ADEXS.Core.Types.Enums.DocumentScopeActorAction,System.String,System.DateTime,System.Nullable{System.DateTime},System.String,ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.UpdateDocumentScopes(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.DocumentScope},ADEXS.Core.Types.Enums.DocumentScopeActorAction,System.String,System.DateTime,System.Nullable{System.DateTime},System.String,ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.UpdateDocumentScopes(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.DocumentScope},ADEXS.Core.Types.Enums.DocumentScopeActorAction,System.String,System.DateTime,System.Nullable{System.DateTime},System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.UpdateScopeName(ADEXS.Core.Domain.Model.Scope)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentSelectionPersistence.DeleteByDocumentSelection(ADEXS.Core.Domain.Model.DocumentSelection)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentSelectionPersistence.Save(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.EmailPersistence.GetPlainTextBodyFromMsg(System.Net.Mail.MailMessage)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.EmailPersistence.SaveEmail(System.Net.Mail.MailMessage,ADEXS.Core.Domain.Persistence.Model.EmailPersistence.EmailContext,System.Exception)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.EmailPersistence.SaveSentEmail(ADEXS.Core.Domain.Model.SentEmail)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.EnvTagEvaluator.EvaluateMatch(System.Text.RegularExpressions.Match)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalDataMapPersistence.Save(ADEXS.Core.Domain.Persistence.Model.ExternalDataMap,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalReviewEmailAttachmentPersistence.SaveExternalReviewEmailAttachments(ADEXS.Core.Domain.Model.ExternalReviewEmailAttachments,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalReviewPersistence.Save(ADEXS.Core.Domain.Model.ExternalReview)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FileCheckupQueuePersistence.FileCheckupQueueItem.#ctor(System.Data.IDataReader)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FileDataContentHashPersistence.Save(ADEXS.Core.Domain.Model.FileDataContentHash)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FileDataPersistence.Save(ADEXS.Core.Domain.Model.FileData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FileDataPersistence.UpdateConversionStatus(ADEXS.Core.Domain.Model.FileData)~ADEXS.Core.Domain.Model.FileData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FileMetaDataPersistence.Save(ADEXS.Core.Domain.Model.FileMetaData,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FileMetaDataPersistence.Save(ADEXS.Core.Domain.Model.FileMetadataWithFileNameAndFileFormat,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.CanMoveFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.CanMoveFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.DeleteTrashBag(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.EnumerateUnauthorized(ADEXS.Core.Domain.Model.Contacts,ADEXS.Core.Domain.Model.Folders)~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.FolderHasDocuments(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.FolderHasDocuments(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.GetDescendantsCount(System.Int32,System.Guid,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.GetFolderUidFromSFObjectId(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.GetFolderUidFromSystemFolderType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.SystemFolderType,System.Boolean)~System.Guid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.IsFolderNameDuplicate(System.Int32,System.Guid,System.String,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.IsStaticSecurityFolder(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.IsTrashed(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadAncestorsAndChildrenByFolderUids(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadAncestorsByFolderUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean,System.Boolean,System.Boolean)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadAncestorsByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadByMetadataValue(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadByParentAndName(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadByParentFolderUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.Boolean,System.Boolean)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadBySystemFolderType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.SystemFolderType)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadByUserId(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadContents(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Base.ModelCollection{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadCurrentTrashBag(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadEos(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid,System.String,System.String)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadList(ADEXS.Core.Domain.Model.UserAccount,System.Data.DataTable,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadSearchHash(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean)~System.Collections.Generic.Dictionary{System.Guid,System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadUidsByParentFolderUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Guid[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.MoveMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.Boolean)~System.Data.IDataReader\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.MungeSortColumn(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.RenameEosBase(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.SanityCheckCopy(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,System.Guid,System.Int32@,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.SanityCheckCopy(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,System.Guid,System.Int32@,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.SavePublic(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.SetStaticSecuritySystemFolderType(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.ShallowCopy(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.TagInbound(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Boolean})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FormPersistence.LoadByAccountId(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~ADEXS.Core.Domain.Model.Forms\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ForwardEventRegistrationPersistence.AddSubscriber(ADEXS.Core.Domain.Model.ForwardEventRegistrationRequest)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.GroupMemberPersistence.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.GroupMemberPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.GroupMember)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.GroupMemberPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.GroupPersistence.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.GroupPersistence.LoadByMemberUserId(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Groups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.GroupPersistence.LoadByNameAndType(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Types.Enums.GroupType)~ADEXS.Core.Domain.Model.Group\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.GroupPersistence.LoadByOwnerId(ADEXS.Core.Domain.Model.UserAccount,System.Nullable{ADEXS.Core.Types.Enums.GroupType},System.Boolean)~ADEXS.Core.Domain.Model.Groups\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.GroupPersistence.LoadByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Group\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.GroupPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.GroupPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDocumentScopePersistence.Get(ADEXS.Core.Domain.Model.DocumentScopeRef)~ADEXS.Core.Domain.Model.DocumentScopes\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IExternalReviewSafeToReplyUrlParamMapPersistence.Get(System.Guid)~ADEXS.Core.Domain.Model.ExternalReviewSafeToReplyUrlParamMap\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.InboundEmailPersistence.Delete(ADEXS.Core.Domain.Model.InboundEmail)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.InboundEmailPersistence.Unassign(ADEXS.Core.Domain.Model.InboundEmail)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.InboundFaxPersistence.Delete(ADEXS.Core.Domain.Model.InboundFax)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.InboundFaxPersistence.Provision(ADEXS.Core.Domain.Model.UserAccount,System.Int32,System.Guid,System.Int32@)~ADEXS.Core.Domain.Model.InboundFaxes\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IndexQueuePersistence.IndexQueueItem.#ctor(System.Data.IDataReader)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.LoginDelegatePersistence.Delete(ADEXS.Core.Domain.Model.LoginDelegate)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.LoginPersistence.Delete(ADEXS.Core.Domain.Model.Login)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.LoginPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.LoginPersistence.UpdateAttempt(ADEXS.Core.Domain.Model.Login)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.LoginPersistence.UpdateLastLogin(System.Guid,ADEXS.Core.Domain.Model.Login,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.LoginRecentPasswordPersistence.Save(ADEXS.Core.Domain.Model.LoginRecentPassword)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataFieldPersistence.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataFieldPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataField)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataFieldPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataGroupPersistence.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataGroupPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataGroup)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataGroupPersistence.SaveDisplayByAccountIdAndFolderUid(System.Int32,System.Guid,System.Guid[])\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataGroupPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataImportMappingPersistence.Exists(System.Int32,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.DeleteUnassignedMetaDataGroups(System.Xml.XmlDocument,System.Guid,System.Int32,System.Guid,ADEXS.Core.Types.Enums.ObjectType,ADEXS.Core.Domain.Model.Metadatas)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.SaveSingleForTesting(ADEXS.Core.Domain.Model.Metadata)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.ToXML(ADEXS.Core.Domain.Model.Metadatas)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence.MetadataQueueItem.#ctor(System.Data.IDataReader)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataSetPersistence.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataSetPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataSet)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataSetPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.NotificationPersistence.CreateNotification(ADEXS.Core.Domain.Model.Notification,ADEXS.Core.Domain.News.NotificationUsers)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.NotificationPersistence.DeleteDigestRows(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.NotificationPersistence.DeleteNotificationSubscription(ADEXS.Core.Domain.Model.NotificationSubscription)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.NotificationPersistence.GetNewNotificationsCount(ADEXS.Core.Domain.Model.UserAccount)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.NotificationPersistence.GetNotificationsByUser(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Lookup.Pager,ADEXS.Core.Types.Enums.NotificationUserDeliveryMethod)~ADEXS.Core.Domain.Model.Notifications\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.OAuthKeyPersistence.Save(ADEXS.Core.Domain.Model.OAuthKey)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ObjectDestructionCertificatePersistence.DeleteFromList(System.Int32,System.Collections.Generic.List{ADEXS.Core.Domain.Model.ObjectDestructionCertificate})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ObjectDestructionCertificatePersistence.LoadByAccountBeforeDate(System.Int32,System.DateTime,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ObjectDestructionCertificate}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ObjectDestructionCertificatePersistence.Save(ADEXS.Core.Domain.Model.ObjectDestructionCertificate)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ObjectHistoryBucketedPersistence.Delete(ADEXS.Core.Domain.Model.ObjectHistory)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ObjectHistoryBucketedPersistence.Save(ADEXS.Core.Domain.Model.ObjectHistory)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ObjectTrashQueuePersistence.ObjectTrashQueueItem.#ctor(System.Data.IDataReader)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ObligationPersistence.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Obligation)~ADEXS.Core.Domain.Model.Obligation\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ObligationPersistence.Update(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Obligation)~ADEXS.Core.Domain.Model.Obligation\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.PublicShareLinkPersistence.GetSharedFolders(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.PublicShareLinkPersistence.LoadFolderDocumentByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Globals.ScmEnums.Security)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.PublicShareLinkPersistence.LoadSharedDocumentsByFolderUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Globals.ScmEnums.Security,ADEXS.Core.Domain.Lookup.Pager,System.Boolean)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.PublicShareLinkPersistence.LoadSharedFoldersByParentFolderUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Globals.ScmEnums.Security,ADEXS.Core.Domain.Lookup.Pager,System.Boolean)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.QueueItemStatePersistence.Save(System.Int32,ADEXS.Core.Domain.Model.QueueItemState)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.QueueStatePersistence.UpdateWorkerCount(ADEXS.Core.Domain.Model.QueueState)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ReminderTemplatePersistence.ReminderTemplatePreSave(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ReminderTemplateRecipientPersistence.ReminderTemplateRecipientPreSave(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ReportConfigurationPersistence.Save(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ReportUserConfigurationPersistence.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ReportUserConfigurationPersistence.Load(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ReportUserConfigurationPersistence.Update(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Presto.Reports.ReportUserConfiguration)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ReportUserFiltersPersistence.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ReportUserFiltersPersistence.Load(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ReportUserFiltersPersistence.Update(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.RequestOriginRestrictionPersistence.Save(ADEXS.Core.Domain.Model.RequestOriginRestriction)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SAMLTokenPersistence.Save(ADEXS.Core.Domain.Model.SAMLToken)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SavedSearchPersistence.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.SavedSearchesV2)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SavedSearchPersistence.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SavedSearchPersistence.LoadByAccountId(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.SavedSearchesV2\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SavedSearchPersistence.LoadByName(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.SavedSearchV2\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SavedSearchPersistence.LoadByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.SavedSearchV2\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SavedSearchPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.SavedSearchV2)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SavedSearchPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.SavedSearchV2)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ScheduledCustomRulePersistence.LoadNext(System.Int32,System.Int32,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.CustomRuleTask}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ScheduledCustomRulePersistence.Remove(ADEXS.Core.Domain.Model.CustomRule)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ScopeEventPersistence.Save(ADEXS.Core.Domain.Model.ScopeEventData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityAccessRulePersistence.Save(ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityAccessRulePersistence.UpdateValidationStatus(System.Int32,System.Guid,System.String,System.String,ADEXS.Core.Types.Enums.SecurityAccessRuleValidationStatus)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityPersistence.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityPersistence.Load(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole},System.Int32)~ADEXS.Core.Domain.Model.ExplicitSecurities\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityPersistence.Load(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole},System.Int32)~ADEXS.Core.Domain.Model.ExplicitSecurities\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityPersistence.LoadGrid(System.Int32,System.Guid,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole},System.Int32,System.Boolean)~ADEXS.Core.Domain.Model.SecurityTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityPersistence.Save(System.Guid,ADEXS.Core.Domain.Model.ExplicitSecurity,System.Boolean)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityQueuePersistence._Insert(System.Int32,System.String,System.Guid,System.Int32)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityQueuePersistence.Insert(ADEXS.Core.Domain.Model.Base.INode,System.Int32)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityQueuePersistence.Insert(ADEXS.Core.Domain.Model.UserAccount,System.Int32)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityQueuePersistence.Insert(System.Int32,System.Guid,System.Type,System.Int32)~System.Int64\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityQueuePersistence.SecurityQueueItem.#ctor(System.Data.IDataReader)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SettingPersistence.LoadHashByItem(ADEXS.Core.Types.Enums.SettingLevel,System.Int64,System.Guid)~System.Collections.Generic.Dictionary{System.String,ADEXS.Core.Domain.Persistence.Model.SettingStruct}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SettingPersistence.Set(System.Guid,ADEXS.Core.Types.Enums.SettingLevel,System.Int64,System.Guid,System.String,System.Object)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SettingPersistence.SetAccount(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Object)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SignaturePersistence.LoadSignature(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SignaturePersistence.SaveSignature(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SlidingWindowPersistence.Save(ADEXS.Core.Domain.Model.SlidingWindowEntry,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SlidingWindowPersistence.Save(System.Collections.Generic.List{ADEXS.Core.Domain.Model.SlidingWindowEntry},System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.StagedMetadataReviewPersistence.Delete(ADEXS.Core.Domain.Model.AIDocument.StagedMetadata)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.StagedMetadataReviewPersistence.Save(ADEXS.Core.Domain.Model.AIDocument.StagedMetadata)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.StagedMetadataReviewPersistence.Update(ADEXS.Core.Domain.Model.AIDocument.StagedMetadata)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.StagedMetadataReviewPersistence.UpdateStatusMany(System.Int32,System.Collections.Generic.List{System.Guid},System.Guid,System.Guid,System.String,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,ADEXS.Core.Types.Enums.StagedMetadataStatus,System.DateTime)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.StaticSecurityPersistence.DeleteByObject(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.StaticSecurityPersistence.Load(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole},System.Int32)~ADEXS.Core.Domain.Model.StaticSecurities\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.StaticSecurityPersistence.LoadGrid(System.Int32,System.Guid,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole},System.Int32)~ADEXS.Core.Domain.Model.SecurityTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.StaticSecurityPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.StaticSecurity)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SyncPersistence.LoadSyncDocumentsCount(System.Int32,System.Guid,System.Guid,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SyncPersistence.LoadSyncRulesCountByUserId(System.Int32,System.Guid)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SyncPersistence.SaveSyncFolders(System.Int32,System.Guid,System.Guid,ADEXS.Core.Domain.Model.SyncFolders)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SyncPersistence.SyncPreSave(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TrackedFieldPersistence.Save(ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TrackedFieldStatusPersistence.DeleteFromView(System.Int32,System.Guid,System.Guid,System.Guid,ADEXS.Core.Domain.Model.DocLauncherConfig.ReviewStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.SyncStatus)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TrackedFieldStatusPersistence.SaveOne(System.String,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus)~ADEXS.CqlCorePersistence.AtlasCassandraCommand\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TrackedFieldStatusPersistence.Update(ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TransactionPersistence.Delete(ADEXS.Core.Domain.Model.Transaction)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TransactionPersistence.Save(ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TransactionPersistence.SaveDeliveries(ADEXS.Core.Domain.Model.Transaction)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TransactionPersistence.SaveWithoutModifyingDeliveryStatus(ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TranslationPersistence.DeleteTranslationRegistries(ADEXS.Core.Domain.Translation.Models.TranslationRegistries)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TranslationPersistence.DeleteTranslationUpdateLog(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TranslationPersistence.SaveTranslationRegistries(System.Int32,ADEXS.Core.Domain.Translation.Models.TranslationRegistries)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TranslationPersistence.SaveTranslationsByNamespace(ADEXS.Core.Domain.Translation.Models.AccountTranslation)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TranslationPersistence.SaveTranslationUpdate(System.Int32,ADEXS.Core.Domain.Translation.Models.TranslationUpdate)~ADEXS.Core.Domain.Translation.Models.TranslationUpdate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TranslationPersistence.SaveTranslationUpdateLog(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserAccountPersistence.LoadByAccountIdAndRole(System.Int32,ADEXS.Core.Types.Enums.UserRole[])~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserAccountPersistence.LoadByGroupUids(System.Int32,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.Boolean)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserAccountPersistence.LoadByGroupUids(System.Int32,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.Boolean)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserAccountPersistence.UpdateLastLoginDate(ADEXS.Core.Domain.Model.UserAccount,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserAPIAuthenticationKeyPersistence.Save(ADEXS.Core.Domain.Model.UserAPIAuthenticationKey)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserConsentPersistence.LogHistory(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.UserConsentType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserGroupMigrationStatusPersistence.Update(System.Int32,ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.WatchedDocumentsPersistence.WatchDocument(System.Int32,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.DefinitionPersistence.Save(System.Int32,System.Guid,ADEXS.Core.Domain.Model.Workflow.Definition)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.EventPersistence.Insert(ADEXS.Core.Domain.Model.Workflow.Event)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceActivityBookmarkPersistence.Insert(ADEXS.Core.Domain.Model.Workflow.InstanceActivityBookmark,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceActivityBookmarkPersistence.Insert(ADEXS.Core.Domain.Model.Workflow.InstanceActivityBookmark,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceActivityBookmarkPersistence.Update(ADEXS.Core.Domain.Model.Workflow.InstanceActivityBookmark,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceActivityBookmarkPersistence.Update(ADEXS.Core.Domain.Model.Workflow.InstanceActivityBookmark,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceActivityPersistence.ActivityCompleted(ADEXS.Core.Domain.Model.Workflow.InstanceActivity,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceActivityPersistence.ActivityExecuting(ADEXS.Core.Domain.Model.Workflow.Instance,ADEXS.Core.Domain.Model.Workflow.InstanceActivity,System.String,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceActivityPersistence.ActivityFailure(ADEXS.Core.Domain.Model.Workflow.Instance,ADEXS.Core.Domain.Model.Workflow.InstanceActivity,System.String,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceActivityPersistence.Create(ADEXS.Core.Domain.Model.Workflow.InstanceActivity)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceActivityPersistence.Save(System.Guid,ADEXS.Core.Domain.Model.Workflow.InstanceActivity)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceHistoryPersistence._ValidateValue(System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstancePersistence.Abort(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Workflow.Instance,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstancePersistence.Completed(ADEXS.Core.Domain.Model.Workflow.Instance,ADEXS.Core.Types.Enums.WorkflowStepStatus,System.String,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstancePersistence.Create(ADEXS.Core.Domain.Model.Workflow.Instance,System.String,System.DateTime)~ADEXS.Core.Domain.Persistence.Model.Workflow.InstancePersistence.CreateResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstancePersistence.Pause(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Workflow.Instance,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstancePersistence.Resume(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Workflow.Instance,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstancePersistence.ResumeSlow(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Workflow.Instance,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstancePersistence.Save(ADEXS.Core.Domain.Model.Workflow.Instance)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceVariablePersistence.AddBPMVariablesValuesRow(System.Data.DataTable,System.String,ADEXS.Core.Types.Enums.WorkflowVariableType,System.Boolean,System.String,System.Byte[],System.Nullable{System.Boolean})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceVariablePersistence.Save(System.Guid,ADEXS.Core.Domain.Model.Workflow.InstanceVariable)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.PersistedInstancePersistence.Purge(System.Int32,System.Guid,ADEXS.Core.Workflow.Lookup.KeySetPager,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.RevisionPersistence.Publish(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Int32,System.String)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.RevisionPersistence.Save(ADEXS.Core.Domain.Model.Workflow.Revision,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.RevisionPersistence.Unpublish(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.VersionPersistence.Save(ADEXS.Core.Domain.Model.Workflow.Version,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.VersionPersistence.SaveAsNew(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Int32,System.Int32,System.String)~ADEXS.Core.Domain.Model.Workflow.Version\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.VersionPersistence.SaveDesignerDefinition(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.VersionPersistence.SaveLegacyXml(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.VersionPersistence.SaveVersionLegacy(ADEXS.Core.Domain.Model.Workflow.Version,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.WebServicePersistence.Save(ADEXS.Core.Domain.Model.Workflow.WebService)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.WorkerPoolPersistence.DeleteAccess(System.Int32,ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.WorkerPoolPersistence.Save(ADEXS.Core.Domain.Model.Workflow.WorkerPool)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.WorkItemPersistence.Assign(ADEXS.Core.Domain.Model.Workflow.WorkItem,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.WorkItemPersistence.LoadActivityCountsByAssignedUser(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean,System.Boolean)~System.Collections.Generic.Dictionary{System.String,System.Int32}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.WorkItemPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Workflow.WorkItem)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.WorkItemPersistence.UpdateWorkItemNotificationSent(ADEXS.Core.Domain.Model.Workflow.WorkItem,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.ExecuteWithParameters(System.Int32,System.Guid,ADEXS.Core.Domain.Model.CustomReport,ADEXS.Core.Domain.Lookup.Pager,System.Int32@)~System.Data.DataTableCollection\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.ExecuteWithParameters(System.Int32,System.Guid,ADEXS.Core.Domain.Model.CustomReport,ADEXS.Core.Domain.Model.CustomReportParameters,ADEXS.Core.Domain.Lookup.Pager,System.Int32@)~System.Data.DataTableCollection\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.ExecuteWithParameters(System.Int32,System.Guid,ADEXS.Core.Domain.Model.CustomReport,ADEXS.Core.Domain.Model.CustomReportParameters,ADEXS.Core.Domain.Lookup.Pager,System.Int32@)~System.Data.DataTableCollection\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.ExpirationReminder(ADEXS.Core.Domain.Model.UserAccount,System.Int32,System.DateTime,System.DateTime)~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.LoadSimpleReportByRecipientName(System.Guid,System.Int32,System.String,System.DateTime,System.DateTime,System.Collections.IList)~System.Data.DataSet\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.LoadSimpleReportByRecipientName(System.Guid,System.Int32,System.String,System.DateTime,System.DateTime,System.Collections.IList)~System.Data.DataSet\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.LoadSimpleReportBySenderName(System.Guid,System.Int32,System.DateTime,System.DateTime,System.Collections.IList)~System.Data.DataSet\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.LoadSimpleReportBySenderName(System.Guid,System.Int32,System.DateTime,System.DateTime,System.Collections.IList)~System.Data.DataSet\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.LoadUploadsByUserId(System.Int32,System.Guid,System.DateTime,System.DateTime)~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.SfInvoiceMergeStatusPersistence.Save(ADEXS.Core.Domain.Persistence.SfInvoiceMergeStatus,System.TimeSpan)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.SfInvoiceMergeStatusPersistence.SaveBatch(System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.SfInvoiceMergeStatus},System.TimeSpan)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ThrottlingPersistence.GetKey(System.String,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.UploadPersistence.Save(ADEXS.Core.Domain.Model.UploadInfo)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PersonaSettings.#ctor(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PersonaSettings.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedPhysicalStorage.GetContentLength(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.Boolean,System.String,System.Int64)~System.Int64\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedPhysicalStorage.StoreFromFile(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedPhysicalStorage.StoreFromStream(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedStorage.SetBlobMetaData(System.Int32,System.String,ADEXS.Core.Types.Enums.FileMetaDataType,System.String,System.Nullable{DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat},System.Nullable{System.Int32})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasPhysicalStorageFactory.Dispose\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.PrimarySecondaryPhysicalStorage.StoreFromStream(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.IO.Stream,System.String,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.AddAttributeGroupBy(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.FormatAggregateColName(ADEXS.Core.Domain.Presto.Model.ReportColumn)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.GenerateDateGroupedByClause(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.GetAggregateColumnInfo(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.String,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~System.ValueTuple{System.Collections.Generic.List{System.String},System.String[],System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.GetAggregateSortBy(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.String,System.String)~ADEXS.Core.Domain.Presto.Model.ReportColumn\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.GetStandardizedMetadataColNameForAgg(ADEXS.Core.Domain.Presto.Model.ReportColumn)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.GetTimezoneOffset(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean,System.Boolean)~LanguageExt.Option{System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.IsDate(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.ParseDateGroupedBy(System.String)~System.ValueTuple{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.RemoveAggSuffixFromColName(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.RemoveAggSuffixFromColName(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.AddFriendlyName(System.String[],System.String[])~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.AddFriendlyName(System.String[],System.String[])~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.AddFriendlyName(System.String[],System.String[])~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.AddFriendlyName(System.String[],System.String[])~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GenerateAttributeFilterClause(ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter,System.String,ADEXS.Core.Domain.Model.UserAccount)~System.ValueTuple{System.String,System.Boolean}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetAttributeFiltersFromMap(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},System.String,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.ValueTuple{System.String,System.Boolean}[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetAttributeLambda(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetAttributeLambda(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetAutomaticRenewalColumn(System.Int32,ADEXS.Core.Domain.Presto.Model.ReportColumn)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetAutomaticRenewalColumn(System.Int32,ADEXS.Core.Domain.Presto.Model.ReportColumn)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetDateAttributeLambda(ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.DateMetadataFilter,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetInitialAttributeFilter(System.Collections.Generic.List{System.String},System.String)~LanguageExt.Option{System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetLeftJoinViewContact(System.Int32,System.String,System.String,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetNonScalarAttributeSelectionForAdmins(ADEXS.Core.Domain.Presto.Model.ReportColumn)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetNonScalarAttributeSelectionForFullSubs(ADEXS.Core.Domain.Presto.Model.ReportColumn)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetNotInArrayLambda(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetNotInArrayLambda(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetNotInArrayLambda(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetRangedLambdaExpression(System.String,System.String,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetScalarAttributeSelectionForAdmins(ADEXS.Core.Domain.Presto.Model.ReportColumn)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.TransformAutomaticRenewalAttribute(ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.DateQueryHelper.AddTimeZoneOffset(ADEXS.Core.Domain.Model.UserAccount,System.DateTime)~System.DateTime\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.DateQueryHelper.FillInEmptyDates(ADEXS.Core.Domain.Presto.PrestoQueryResults,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.DateRange},System.String,System.Int32,System.Int32)~System.Collections.Generic.List{System.Collections.Generic.List{System.Object}}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.DateQueryHelper.FillInEmptyDates(ADEXS.Core.Domain.Presto.PrestoQueryResults,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.DateRange},System.String,System.Int32,System.Int32)~System.Collections.Generic.List{System.Collections.Generic.List{System.Object}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.DateQueryHelper.GetCurrentTime(ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.DateTime\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.DateQueryHelper.GetDateRangeClause(ADEXS.Core.Domain.Presto.Model.DateRange,ADEXS.Core.Domain.Presto.Model.DateRange,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean,System.Boolean,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.DateQueryHelper.GetDateRangeClause(ADEXS.Core.Domain.Presto.Model.DateRange,ADEXS.Core.Domain.Presto.Model.DateRange,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean,System.Boolean,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.DateQueryHelper.GetExpandedRowDateFilter(ADEXS.Core.Domain.Presto.Model.DateRange,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.DateQueryHelper.GetExpandedRowDateFilter(ADEXS.Core.Domain.Presto.Model.DateRange,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.DateQueryHelper.GetStartClause(System.DateTime,System.DateTime,System.Func{System.DateTime,System.String},ADEXS.Core.Types.Enums.RetentionUnit,System.Boolean)~System.ValueTuple{System.String,System.Int32}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.DateQueryHelper.UnixTimeStampFormatter(System.DateTime)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.ExcelExportHelpers.ConvertReportToExcel(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.IO.MemoryStream)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.ExcelExportHelpers.GenerateStylesheet~DocumentFormat.OpenXml.Spreadsheet.Stylesheet\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.Export.CsvExportHelpers.ConvertReportToCsv(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.IO.MemoryStream)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.Export.SharedExportHelpers.FormatColumnForAgg(System.String,ADEXS.Core.Types.Enums.AggregateType)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.Export.SharedExportHelpers.GetColIndexMap(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~System.Collections.Generic.Dictionary{ADEXS.Core.Domain.Presto.Model.ReportColumn,LanguageExt.Option{System.Int32}}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.Export.SharedExportHelpers.GetColIndexMap(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~System.Collections.Generic.Dictionary{ADEXS.Core.Domain.Presto.Model.ReportColumn,LanguageExt.Option{System.Int32}}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.Export.SharedExportHelpers.GetColumnDisplayName(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},ADEXS.Core.Types.Enums.AggregateType)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.Export.SharedExportHelpers.GetMappingDictionary(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.CreateCaseStatementWithEnums(System.String,System.Enum)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.CreateCaseStatementWithEnums(System.String,System.Enum)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.EscapeSingleQuotes(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.EscapeSingleQuotes(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetAccountDbNumber(ADEXS.Core.Domain.Model.Account)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetGuidListCondition(System.String,System.String,ADEXS.Core.Domain.Presto.Model.ReportFilter.GuidListReportFilter)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetPrestoSqlConnector(ADEXS.Core.Domain.Model.Account)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetSortAndDirection(System.String,System.Boolean,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetSortAndDirection(System.String,System.Boolean,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetSortAndDirection(System.String,System.Boolean,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.GetActorAttributeLambda(ADEXS.Core.Domain.Model.ActorReportFilter,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.GetComparator(System.Collections.Generic.List{System.String},System.Nullable{ADEXS.Core.Types.Enums.ReportFilterComparator},System.Nullable{System.Boolean})~ADEXS.Core.Types.Enums.ReportFilterComparator\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.IsActorInArrayClause(System.Collections.Generic.List{System.Guid},System.String,System.Boolean,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1308:Normalize strings to uppercase\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.IsActorInEmailArray(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.IsArrayEmptyClause(System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.TryGetActorClauseInArrayColumn(ADEXS.Core.Domain.Model.ActorReportFilter,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.TryGetActorClauseInEmailColumn(ADEXS.Core.Domain.Model.ActorReportFilter,System.String,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1308:Normalize strings to uppercase\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.TryGetActorClauseInJsonColumn(ADEXS.Core.Domain.Model.ActorReportFilter,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.TryGetActorClauseInJsonColumn(ADEXS.Core.Domain.Model.ActorReportFilter,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.WorkflowQueryHelper.GenerateSecurityApiSubQuery(ADEXS.Core.Domain.Model.UserAccount,System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.WorkflowQueryHelper.GenerateSecurityApiSubQuery(ADEXS.Core.Domain.Model.UserAccount,System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.WorkflowQueryHelper.GenerateSecurityApiSubQuery(ADEXS.Core.Domain.Model.UserAccount,System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.WorkflowQueryHelper.GenerateSecuritySubQueries(ADEXS.Core.Domain.Model.UserAccount,System.String[],System.String)~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.WorkflowQueryHelper.GetDetailsActiveDateClause(ADEXS.Core.Domain.Presto.Model.DateRange,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.WorkflowStatusQueryHelper.ShouldQueryFinishedScopes(System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus},System.String[],System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.StringListReportFilter},System.Boolean,ADEXS.Core.Types.Enums.LogicalOperator)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Model.DateRange.AdjustDateRange(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Model.DateRange.GetAdjustedEndDate(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~System.DateTime\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Model.DateRange.GetAdjustedStartDate(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~System.DateTime\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Model.DateRange.IsOverlapping(ADEXS.Core.Domain.Presto.Model.DateRange,ADEXS.Core.Domain.Presto.Model.DateRange,ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Model.PackageReportColumn.#ctor(ADEXS.Core.Domain.Presto.Model.ReportColumn)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Model.ReportColumn.NameEqualityComparer.GetHashCode(ADEXS.Core.Domain.Presto.Model.ReportColumn)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.#ctor(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Model.UserAccount,System.Globalization.CultureInfo,System.Boolean)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.AddAttributeTransformsForExport(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Collections.Generic.Dictionary{System.String,System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Collections.Generic.List{System.ValueTuple{System.String,System.Object}},System.Object}},System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.GetTimeUnitString(ADEXS.Core.Domain.Model.UserAccount,System.Int64,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.IsAttributeColumn(ADEXS.Core.Domain.Presto.Column,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.TransformData(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.ConvertTimeSpanToDurationWithUnits(System.TimeSpan)~System.Object\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.FormatCurrency(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.FormatCurrency(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.FormatDateTime(ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Globalization.CultureInfo)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.FormatInitiator(ADEXS.Core.Domain.Model.UserAccount,System.Object)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.FormatIsDeleted(ADEXS.Core.Domain.Model.UserAccount,System.Object)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.FormatShortDate(ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Globalization.CultureInfo,System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.GetDocumentUrl(ADEXS.Core.Domain.Model.UserAccount,System.Object)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.GetLinkUrl(ADEXS.Core.Domain.Model.UserAccount,System.Object,System.String,System.String,System.String,System.Collections.Generic.List{System.ValueTuple{System.String,System.Object}})~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.GetObjectUrl(ADEXS.Core.Domain.Model.UserAccount,System.Object,System.String,System.String,System.Collections.Generic.List{System.ValueTuple{System.String,System.Object}})~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.NestedRepeatingAttributePipeSeparator(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid},System.Object,System.String,System.Collections.Generic.List{System.ValueTuple{System.String,System.Object}},System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Object},System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.PopulateDocumentPath(ADEXS.Core.Domain.Model.UserAccount,System.Object)~System.Object\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.PopulateDocumentPath(ADEXS.Core.Domain.Model.UserAccount,System.Object)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.PopulateDocumentPath(ADEXS.Core.Domain.Model.UserAccount,System.Object)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformFunctions.RepeatingAttributePipeSeparator(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid},System.Object,System.Collections.Generic.List{System.ValueTuple{System.String,System.Object}},System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Object},System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Object},System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoFunctions.AccountIdEquals(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoFunctions.LowerLike(System.String,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoFunctions.LowerLike(System.String,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoFunctions.Row(System.Func{System.String})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoQueries.FolderGuidByName(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoQueries.GetSpecificColFromAllScopesQuery(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Presto.Model.ReportFilter.StringListReportFilter)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoQueries.ScmLastJobRunTime(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoQueries.WorkflowNames(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoQueryResults.AppendColumns(ADEXS.Core.Domain.Presto.PrestoQueryResults)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoQueryResults.AppendData(ADEXS.Core.Domain.Presto.PrestoQueryResults)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoRestClient.GetResults(ADEXS.Core.Domain.Presto.PrestoQueryResults)~LanguageExt.EitherAsync{ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoException,ADEXS.Core.Domain.Presto.PrestoQueryResults}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoRestClient.HandleAnyErrors(ADEXS.Core.Domain.Presto.PrestoQueryResults)~LanguageExt.Either{ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoException,ADEXS.Core.Domain.Presto.PrestoQueryResults}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoRestClient.ValidateQuery(System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReport.GenerateBaseQuery(System.Boolean,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReport.GetUserFilters(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IEnumerable{System.String},ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportFilters)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportConfiguration.GetAdditionalHeaders(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReport.GenerateBaseQuery(System.Boolean,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReport.GetUserFiltersCondition(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportFilters)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportConfiguration.GetAdditionalHeaders(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.AgreementObjectModelHelpers.GetAccountUidCondition(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.AgreementObjectModelHelpers.GetAccountUidCondition(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.AgreementObjectModelHelpers.GetAccountUidCondition(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.AgreementObjectModelHelpers.IsAdmin(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.AgreementObjectModelHelpers.UseAdmTables(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.ConditionallyGenerateAccountConditions(ADEXS.Core.Domain.Model.UserAccount)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.ConditionallyGenerateAccountConditions(ADEXS.Core.Domain.Model.UserAccount)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.ConditionallyGetDocumentSecurityApiJoin(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.GetBaseTableForQuery(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.ShouldUseClmSecurityConnectorForAbac(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.ShouldUseClmSecurityConnectorForJiT(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.ShouldUseClmSerConnector(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsHelpers.AddProcessingStatusColumn(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration)~ADEXS.Core.Domain.Presto.Reports.ReportConfiguration\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsHelpers.UnnestedDocuments(System.String,System.String,System.String[],System.String[],System.String[],System.String[],ADEXS.Core.Types.Enums.LogicalOperator)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsSubQueries.DocumentAttributeColumns(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsSubQueries.DocumentAttributeFilters(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},ADEXS.Core.Types.Enums.LogicalOperator)~System.ValueTuple{System.String,System.Boolean}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsSubQueries.DocumentEmptyAttributeFilters(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter})~LanguageExt.Option{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsSubQueries.DocumentUidToAttributeMap(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter})~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.ExtractData(ADEXS.Core.Domain.Presto.PrestoQueryResults)~System.ValueTuple{System.String,System.Int32}[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.GenerateInitialBucketIdQuery~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.GetBaseWhereConditions~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.GetSecurityJoinCondition~LanguageExt.Option{System.ValueTuple{System.String,System.String[]}}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.GetSecurityJoinCondition~LanguageExt.Option{System.ValueTuple{System.String,System.String[]}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReportConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReportConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReportConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReportHelper.ConsolidateActivityNames(System.Collections.Generic.List{System.Collections.Generic.List{System.Object}})~System.Collections.Generic.List{System.Collections.Generic.List{System.Object}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.GetExportColumnMapping(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.ConditionallyCreateInitialAttrFilter(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},ADEXS.Core.Types.Enums.LogicalOperator)~LanguageExt.Option{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.DocumentUrlCol(ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.GeneratePerformanceImprovedQueries(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.LogicalOperator,System.Boolean,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.String,System.String[],System.String[],System.Boolean,System.String[],System.String[],System.String[],System.String[])~System.ValueTuple{System.String[],System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.GetAllUsedAggregateColumns(ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportConfiguration,System.String[],System.String[])~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.GetAllUsedAggregateColumns(ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportConfiguration,System.String[],System.String[])~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.GetAllUsedColumns(ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportConfiguration,System.String[],System.String[])~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.GetAllUsedColumns(ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportConfiguration,System.String[],System.String[])~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.GetBaseSqlTableName(ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.GetMetadataSqlTableName(ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.IsAggregateCol(ADEXS.Core.Domain.Presto.Model.ReportColumn)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.IsColSameAggTypeAsConfig(ADEXS.Core.Domain.Presto.Model.ReportColumn,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.IsFolderColumn(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.IsFolderColumn(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentWhereConditions.DocumentAttributes(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String},System.Boolean)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentWhereConditions.DocumentAttributes(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String},System.Boolean)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentWhereConditions.Documents(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters,System.String,System.String[]@,System.String[]@,System.String[]@,System.String[]@,System.Boolean,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentWhereConditions.Documents(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters,System.String,System.String[]@,System.String[]@,System.String[]@,System.String[]@,System.Boolean,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentWhereConditions.GetBaseConditions(System.String,ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReport.GenerateBaseQuery(System.Boolean,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReport.GetUserFiltersCondition(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportFilters,System.String,System.String,System.String,System.String)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportConfiguration.GetAdditionalHeaders(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.AddSortToColumns(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn})~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.ConditionallyGetSqlDynamicFilteringHeaders(ADEXS.Core.Domain.Model.UserAccount)~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.GetAdditionalHeaders(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.GetCountColumnIndex(ADEXS.Core.Domain.Presto.PrestoQueryResults)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.GetCountColumnIndex(ADEXS.Core.Domain.Presto.PrestoQueryResults)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.GetCountColumnIndex(ADEXS.Core.Domain.Presto.PrestoQueryResults)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.GetPropertyFromJson(System.String,System.String)~LanguageExt.Option{System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.GetPropertyFromJson(System.String,System.String)~LanguageExt.Option{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.GetSqlTimeoutHeader(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReport.GetActionTypeCond~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReport.GetBaseConditions(System.String,System.Int32)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewWhereConditions.Base(ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewConfiguration,ADEXS.Core.Domain.Model.UserAccount,System.String[],System.String[])~System.ValueTuple{System.String[],System.String[],System.Collections.Generic.List{System.String}}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReport.GetBasicWhereConditions~ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReport.FilterConditions[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailConfiguration.#ctor(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailConfiguration.ConsolidateRows(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Column})~System.Collections.Generic.List{System.Object}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailConfiguration.GetAggregateTypeFromColName(System.String)~ADEXS.Core.Types.Enums.AggregateType\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailConfiguration.IsEmptyRow(System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailConfiguration.ProcessResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReportSubQueries.GenerateStepDetailAggregateQuery(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},LanguageExt.Option{System.String[]},ADEXS.Core.Types.Enums.LogicalOperator,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReportWhereConditions.GenerateBaseConditions(ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters,ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,ADEXS.Core.Types.Enums.LogicalOperator,System.Int32,System.Boolean)~System.String[]\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReportWhereConditions.GenerateWhereConditions(ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus},System.ValueTuple{System.String,System.Boolean}[],System.ValueTuple{System.String,System.Boolean}[],System.ValueTuple{System.String,System.Boolean}[],System.Boolean)~System.ValueTuple{System.String[],System.String[]}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.GenerateQuery~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryWhereConditions.Finished(ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReportConfiguration,ADEXS.Core.Domain.Model.UserAccount,System.String[],System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.DateRange})~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryWhereConditions.GetDateRangeClause(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Model.DateRange,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryWhereConditions.GetDateRangeClause(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Model.DateRange,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryWhereConditions.Running(ADEXS.Core.Domain.Model.UserAccount,System.String[],System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.DateRange})~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryWhereConditions.Stages(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String})~System.String[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryWhereConditions.Stages(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String})~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Profiler.SetDefaults(ADEXS.Core.Domain.Model.ProfileEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Provisioning.AccountProvisioningService.GetAccountRolesByProduct(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.SourceProductName)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Provisioning.Role}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Provisioning.AccountProvisioningService.Update(ADEXS.Core.Domain.Model.CreateAccountData,ADEXS.Core.Domain.Model.Account)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyCommon.CreateXmlElementWithSetNumberAndSetName(System.Xml.XmlDocument,ADEXS.Core.Domain.Model.Metadata,System.String)~System.Xml.XmlElement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyCommon.LocalDt(ADEXS.Core.Domain.Model.Account,System.DateTime)~System.DateTime\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyCommon.Serialize(ADEXS.Core.Domain.Model.Base.IModelCollection)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyCommon.Serialize(ADEXS.Core.Domain.Model.Base.IWorkflowObject)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyDocument.Serialize(ADEXS.Core.Domain.Model.Document)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyDocumentReminder.Serialize(ADEXS.Core.Domain.Model.DocumentReminder)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyFolder.Serialize(ADEXS.Core.Domain.Model.Folder)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyIdList.SerializeIds(System.Collections.Generic.IEnumerable{System.Guid},ADEXS.Core.Types.Enums.ObjectType)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyMetadata.#ctor(ADEXS.Core.Domain.Model.Metadata)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyTermOption.#ctor(ADEXS.Core.Domain.Model.TermOption)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyUserAccount.Serialize(ADEXS.Core.Domain.Model.UserAccount)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.QueueHelper.TaskSender.Enqueue(ADEXS.Core.Domain.Model.Account,CLM.MessageDefines.Interfaces.ITaskPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.QueueHelper.TaskSender.Enqueue(CLM.MessageDefines.Interfaces.ITaskPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.QueueHelper.TaskSender.Enqueue(CLM.MessageDefines.Interfaces.ITaskPayload,CLM.MessageDefines.Constants.QueueItemPriority)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccessControlRepository.DeleteByObjectUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccessControlRepository.LoadByUserAndObjectType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType)~ADEXS.Core.Domain.Model.AccessControls\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountBranding.AccountBrandingRepository.LoadByAccountId(System.Int32)~ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBranding\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountBranding.AccountBrandingRepository.ProcessImage(ADEXS.Core.Domain.Model.Account,System.String,System.Byte[],ADEXS.Core.Types.Enums.AccountBrandingImageType)~ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBrandingSaveResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountBranding.AccountBrandingRepository.Save(System.Int32,ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBranding)~ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBrandingSaveResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AccountIsActive(ADEXS.Core.Domain.Model.Account,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AccountIsActive(ADEXS.Core.Domain.Model.Account,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AccountIsActive(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AllocateNewAccountId(ADEXS.Core.Domain.Model.Account)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.FinalizeAccountCreation(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.FireAccountChangedEvent(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.FireAccountStatusEvent(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.GenerateEmailAddres(System.Int32,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.GetSuperAdministrator(System.Int32)~ADEXS.Core.Domain.Model.UserAccount\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.InstallNewAccountPackage(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.IsExistingCLMAccount(ADEXS.Core.Domain.Model.Account)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.PreSaveDsCredentials(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.PreSaveDsCredentials(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.RevertToAccountTypeDefaults(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.AccountType)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SaveAccountStatusChange(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.AccountStatus,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SaveCulture(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.CreateAccountData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SaveTimeZone(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.CreateAccountData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SendAccountProvisionedEmail(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SetAccountPaid(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SetAccountStorage(ADEXS.Core.Domain.Model.Account@)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SyncAccount(System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.System_CreateSignupAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.AccountStatus,ADEXS.Core.Types.Enums.AccountType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Guid)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.UnlinkAllConvertAccountData(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.AccountType,ADEXS.Core.Domain.Model.CreateAccountData)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.UnlinkAllConvertAccountData(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.AccountType,ADEXS.Core.Domain.Model.CreateAccountData)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.UnlinkAllConvertAccountData(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.AccountType,ADEXS.Core.Domain.Model.CreateAccountData)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.UpdateAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.CreateAccountData)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.ValidateNewAccountPackage(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.ValidateNewAccountPackage(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.ValidateNewAccountPackage(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.VerifyPrivileges(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.VerifyPrivileges(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.IAccountRepository.System_CreateSignupAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.AccountStatus,ADEXS.Core.Types.Enums.AccountType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Guid)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AddressBook.AddressBookRepository.GetSubscriberAndGuestUserCount(ADEXS.Core.Domain.Model.UserAccount)~System.ValueTuple{System.Int32,System.Int32}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AddressBook.AddressBookRepository.SendUserAccountOverageEmail(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementMetadataHelper.DeleteMetadataFieldValues(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementMetadataHelper.GetOrCreateAgreementSystemMetadataGroup(System.Int32,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.MetadataGroup\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementMetadataHelper.PopulateAgreementMetadatas(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.Agreement,System.Guid,ADEXS.Core.Domain.Model.Party)~System.Tuple{ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementMetadataHelper.PopulateAgreementMetadatas(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.Agreement,System.Guid,ADEXS.Core.Domain.Model.Party)~System.Tuple{ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementMetadataHelper.SaveAgreementSystemMetadata(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementMetadataHelper.SaveAgreementSystemMetadata(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement})~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.LoadByExternalId(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.LoadByExternalIds(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.LoadPartyAgreementTrees(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.PartyAgreementTrees\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.LoadRelationshipsByAgreementId(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementRelationship}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.MergeAgreementFields(ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.Agreement)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.Update(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement},System.Boolean)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.UpdateV2(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Nullable{System.Guid},System.Boolean)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementService.CreateOrUpdateAgreementAndAddParent(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.AgreementProperties,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{System.String}@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementService.CreateOrUpdateAgreementAndRelationships(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementRelationship},System.Collections.Generic.List{System.String}@)~System.Guid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementService.LoadParentAgreementByDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{System.String}@)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.ElasticAgreementRepository.LoadAgreements(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.ElasticAgreementRepository.LoadAgreements(ADEXS.Core.Domain.Model.UserAccount,System.Globalization.CultureInfo,ADEXS.Core.Domain.Repository.AgreementRepository.ElasticAgreementFilters,ADEXS.Core.Domain.Lookup.Pager)~System.ValueTuple{System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement},System.Int32}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.ElasticAgreementRepository.RestoreDocumentsFromTrash(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.PartyAgreementTreesHelper.FilterOutTrashedAgreements(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.PartyAgreementTreesHelper.LoadDocumentsFromAgreements(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementNode})~System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.Document}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIAutofillPostProcessingService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IAIAutofillPostProcessingTask)~ADEXS.Core.Types.Enums.AIAutofillPostProcessingTaskStatus\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIAutofillPostProcessingService.WriteToStagedMetadata(ADEXS.Core.Domain.Model.QueueTasks.IAIAutofillPostProcessingTask,ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch,System.Collections.Generic.List{RulesEngineAPIClient.Model.RuleModel},System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping},System.Collections.Generic.Dictionary{System.String,System.Tuple{RulesEngineAPIClient.Model.LabelExtraction,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext}}},System.Collections.Generic.Dictionary{System.Guid,RulesEngineAPIClient.Model.RuleModelResult})~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIAutofillPostProcessingService.WriteToStagedMetadata(ADEXS.Core.Domain.Model.QueueTasks.IAIAutofillPostProcessingTask,ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch,System.Collections.Generic.List{RulesEngineAPIClient.Model.RuleModel},System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping},System.Collections.Generic.Dictionary{System.String,System.Tuple{RulesEngineAPIClient.Model.LabelExtraction,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext}}},System.Collections.Generic.Dictionary{System.Guid,RulesEngineAPIClient.Model.RuleModelResult})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentBatchRepository.Delete(ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentBatchRepository.NewBatchAddedTelemetryEvent(ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentBatchRepository.Save(ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatchValidationErrors@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentBatchRepository.ShouldNotifyAnalysisProgress(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentBatchRepository.Update(ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentStatisticsRepository.DecrementCounters(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentStatisticsCounterType})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentTransactionRepository.Delete(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentTransactionRepository.IsNotMirroredTransaction(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentTransactionRepository.NewTransactionAddedTelemtryEvent(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentTransactionRepository.Save(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentTransactionRepository.SaveMany(System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentTransactionRepository.Update(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentTransactionRepository.ValidateAIDocumentTransaction(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentUploadService.InitiateAIDocumentUploadTask(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentUploadService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IAIDocumentUploadTask,ADEXS.Core.Domain.Model.Document@)~ADEXS.Core.Types.Enums.AIDocumentUploadStatus\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentUploadService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IAIDocumentUploadTask,ADEXS.Core.Domain.Model.Document@)~ADEXS.Core.Types.Enums.AIDocumentUploadStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIFeedbackService.DeleteFeedbackFileFromSharedStorage(ADEXS.Core.Domain.Model.QueueTasks.AIFeedbackTask)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIFeedbackService.ProcessSingleFeedbackTask(ADEXS.Core.Domain.Model.QueueTasks.AIFeedbackTask)~ADEXS.Core.Domain.Repository.AIDocument.AIFeedbackServiceTaskStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIFeedbackService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.AIFeedbackTask)~ADEXS.Core.Domain.Repository.AIDocument.AIFeedbackServiceTaskStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIRulesEngineMappingRepository.Delete(ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIRulesEngineMappingRepository.Save(ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIRulesEngineMappingRepository.SaveMany(System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIStagedMetadataSyncService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.AIStagedMetadataSyncTask)~ADEXS.Core.Domain.Repository.AIDocument.AIStagedMetadataSyncServiceTaskStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIStagedMetadataSyncService.TriggerTask(System.Int32,ADEXS.Core.Domain.Model.QueueTasks.AIStagedMetadataSyncTaskPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIStandardRulesConfigurationRepository.CreateRuleModel(ADEXS.Core.Domain.Model.UserAccount,System.Guid,RulesEngineAPIClient.Model.RuleModel)~System.Threading.Tasks.Task{RulesEngineAPIClient.Model.RuleModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIStandardRulesConfigurationRepository.ProcessRulesConfig(ADEXS.Core.Domain.Model.UserAccount,System.Guid,RulesEngineAPIClient.Model.RulesConfigProcessingInput)~RulesEngineAPIClient.Model.RulesConfigProcessingResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIStandardRulesConfigurationRepository.ProcessRulesConfigAsync(ADEXS.Core.Domain.Model.UserAccount,System.Guid,RulesEngineAPIClient.Model.RulesConfigProcessingInput)~System.Threading.Tasks.Task{RulesEngineAPIClient.Model.RulesConfigProcessingResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIStatusNotificationService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.AIStatusNotificationTask)~ADEXS.Core.Domain.Repository.AIDocument.AINotificationServiceTaskStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIXmlHelper.GenerateXml(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch,ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata},System.String)~System.Xml.XmlElement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIXmlHelper.SaveDataReviewResultXml(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata})~ADEXS.Core.Domain.DataReview.Models.DataReviewResultXml\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IRulesConfigurationFactory.Get(ADEXS.Core.Types.Enums.RulesEngineConfigType)~ADEXS.Core.Domain.Repository.AIDocument.IAIRulesEngineRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.IRulesConfigurationFactory.Get(System.Guid)~ADEXS.Core.Domain.Repository.AIDocument.IAIRulesEngineRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.RulesConfigurationRepository.GetActiveRulesConfigsAsync(ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.Threading.Tasks.Task{System.Collections.Generic.List{RulesEngineAPIClient.Model.RulesConfig}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.SealAIDocumentTransactionProvider.GetAvailableModels(ADEXS.Core.Domain.Model.UserAccount)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.GetAvailableModelsResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.SealAIDocumentTransactionProvider.GetExtractionsByLabelName(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.List{RulesEngineAPIClient.Model.Label})~System.Collections.Generic.Dictionary{System.String,System.Tuple{RulesEngineAPIClient.Model.LabelExtraction,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext}}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.SealAIDocumentTransactionProvider.PostBulkFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeFeedbackData},System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.LabelGroupType},System.Guid,System.Guid,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.SealAIDocumentTransactionProvider.PostFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.List{System.String},System.Guid,System.String,ADEXS.Core.Types.Enums.StagedMetadataStatus,ADEXS.Core.Types.Enums.AttributeFieldType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.SealAIDocumentTransactionProvider.TriggerBulkFeedbackTask(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.Guid,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.SealAIDocumentTransactionProvider.TriggerFeedbackTask(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String,System.Guid,System.String,ADEXS.Core.Types.Enums.StagedMetadataStatus,ADEXS.Core.Types.Enums.AttributeFieldType,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataRepository.DeleteMany(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataRepository.Load(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.Guid,System.String)~ADEXS.Core.Domain.Model.AIDocument.StagedMetadata\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataRepository.LoadByBatchUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataRepository.LoadByBatchUidAndAttributeUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataRepository.LoadByFileDataUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataRepository.LoadByFileDataUidAndAttributeUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataRepository.LoadWithoutDataObjectByBatchUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataRepository.LoadWithoutDataObjectByBatchUidAndAttributeUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataRepository.Save(ADEXS.Core.Domain.Model.AIDocument.StagedMetadata)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataRepository.Update(ADEXS.Core.Domain.Model.AIDocument.StagedMetadata)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataRepository.UpdateStatusMany(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid},System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String,ADEXS.Core.Types.Enums.StagedMetadataStatus,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StandardRulesConfigurationHelper.TryGetStandardRulesConfigUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StartAIBulkAnalysisTransactionsService.InsertTaskIntoQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,ADEXS.Core.Types.Enums.AIProviderType,System.Collections.Generic.List{System.Guid},System.Collections.Generic.List{System.Guid},System.Guid,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StartAIBulkAnalysisTransactionsService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IStartAIBulkAnalysisTransactionTaskPayload,System.Action)~ADEXS.Core.Domain.Repository.AIDocument.StartAIBulkAnalysisTransactionsResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StartAIBulkAnalysisTransactionsService.UpdateTaskStatus(ADEXS.Core.Domain.Model.QueueTasks.IStartAIBulkAnalysisTransactionTaskPayload,System.Boolean,System.Boolean,ADEXS.Core.Types.Enums.StartAIBulkAnalysisTransactionsTaskStatus)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.AISApiFactory.GetAnalyzeApi(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~DocuSign.API.AIFrontend.Sdk.Api.IAnalyzeApi\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.AISApiFactory.GetFeedbackApi(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~DocuSign.API.AIFrontend.Sdk.Api.IFeedbackApi\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.AisMockedDataHelper.TryGetMockedData(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.AnalysisResult}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.AisMockedDataHelper.TryGetMockedData(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.AnalysisResult}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.GetAIExtractionsService.InsertIntoGetAIExtractionsQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Guid,System.Boolean,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.GetAIExtractionsService.IsLastTry(ADEXS.Core.Domain.Model.QueueTasks.IGetAIExtractionsTask)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.GetAIExtractionsService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IGetAIExtractionsTask)~ADEXS.Core.Types.Enums.GetAIExtractionsServiceStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.IntellegoExtractionsRepository.AnalyzeDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Intellego.AnalyzeOptions)~System.Threading.Tasks.Task{DocuSign.API.AIFrontend.Sdk.Model.AnalysisResultsResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.IntellegoExtractionsRepository.DeleteCachedAnalyzers(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.IntellegoExtractionsRepository.GetAnalyzers(ADEXS.Core.Domain.Model.UserAccount)~System.Threading.Tasks.Task{DocuSign.API.AIFrontend.Sdk.Model.AnalyzerConfigurationResponse}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.IntellegoExtractionsRepository.GetDocumentReference(System.Int32,System.Guid,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.IntellegoExtractionsRepository.Save(System.Int32,System.Guid,System.String,System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.AnalysisResult})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.GetAvailableModels(ADEXS.Core.Domain.Model.UserAccount)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.GetAvailableModelsResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.GetExtractionsByLabelName(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.List{RulesEngineAPIClient.Model.Label})~System.Collections.Generic.Dictionary{System.String,System.Tuple{RulesEngineAPIClient.Model.LabelExtraction,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext}}}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.GetValue(ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult,ADEXS.Core.Types.Enums.ExtractionsDataType)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.GetValue(ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult,ADEXS.Core.Types.Enums.ExtractionsDataType)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.GetValue(ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult,ADEXS.Core.Types.Enums.ExtractionsDataType)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.GetValueTypeOrDefault(ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult,RulesEngineAPIClient.Model.DataType)~System.ValueTuple{RulesEngineAPIClient.Model.DataType,ADEXS.Core.Types.Enums.ExtractionsDataType}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.GetValueTypeOrDefault(ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult,RulesEngineAPIClient.Model.DataType)~System.ValueTuple{RulesEngineAPIClient.Model.DataType,ADEXS.Core.Types.Enums.ExtractionsDataType}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.LogFeedbackItems(System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.FeedbackItem},ADEXS.Core.Util.Loggers.IDiscreetLogger)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.PostBulkFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeFeedbackData},System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.LabelGroupType},System.Guid,System.Guid,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.PostBulkFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeFeedbackData},System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.LabelGroupType},System.Guid,System.Guid,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.PostFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.String},System.Guid,ADEXS.Core.Util.Loggers.IDiscreetLogger,System.String,System.Guid,ADEXS.Core.Types.Enums.AttributeFieldType,ADEXS.Core.Types.Enums.StagedMetadataStatus,System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.PostFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.List{System.String},System.Guid,System.String,ADEXS.Core.Types.Enums.StagedMetadataStatus,ADEXS.Core.Types.Enums.AttributeFieldType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.TriggerBulkFeedbackTask(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.Guid,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.TriggerFeedbackTask(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String,System.Guid,System.String,ADEXS.Core.Types.Enums.StagedMetadataStatus,ADEXS.Core.Types.Enums.AttributeFieldType,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.TriggerTask(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.TryResolveMatchedFieldForFeedback(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult,ADEXS.Core.Types.Enums.AttributeFieldType,System.Guid,ADEXS.Core.Domain.SmartAgreement.Helpers.IAIExtractionValueHelper,ADEXS.Core.Domain.DataReview.IMetadataFuzzyMatcher,System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.MatchedMetadata}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.TryResolveMatchedFieldForFeedback(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult,ADEXS.Core.Types.Enums.AttributeFieldType,System.Guid,ADEXS.Core.Domain.SmartAgreement.Helpers.IAIExtractionValueHelper,ADEXS.Core.Domain.DataReview.IMetadataFuzzyMatcher,System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.MatchedMetadata}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.TryResolveMatchedFieldForFeedback(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult,ADEXS.Core.Types.Enums.AttributeFieldType,System.Guid,ADEXS.Core.Domain.SmartAgreement.Helpers.IAIExtractionValueHelper,ADEXS.Core.Domain.DataReview.IMetadataFuzzyMatcher,System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.MatchedMetadata}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.TryResolveMatchedFieldForFeedback(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult,ADEXS.Core.Types.Enums.AttributeFieldType,System.Guid,ADEXS.Core.Domain.SmartAgreement.Helpers.IAIExtractionValueHelper,ADEXS.Core.Domain.DataReview.IMetadataFuzzyMatcher,System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.MatchedMetadata}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISIngestionService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IAISIngestionTask)~ADEXS.Core.Types.Enums.AISIngestionStatus\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISIngestionService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IAISIngestionTask)~ADEXS.Core.Types.Enums.AISIngestionStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.APILicenseRepository.FireAPILicenseChangedEvent(ADEXS.Core.Domain.Model.APILicense,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ApiWhiteListedUriRepository.Delete(System.Int32,ADEXS.Core.Domain.Model.ApiWhiteListedUri)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ApiWhiteListedUriRepository.LoadByAccountId(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ApiWhiteListedUri}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ApiWhiteListedUriRepository.Save(System.Int32,ADEXS.Core.Domain.Model.ApiWhiteListedUri)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Approval.ApprovalWorkflowRepository.BuildAndStartApprovalWorkflow(ADEXS.Core.Domain.Model.ApprovalWorkflow,ADEXS.Core.Domain.Model.UserAccount,System.Int64@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Approval.ApprovalWorkflowRepository.Save(ADEXS.Core.Domain.Model.ApprovalWorkflow)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Approval.ApprovalWorkflowRepository.ToDesignerDefinition(ADEXS.Core.Domain.Model.ApprovalWorkflow,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Wins.DesignerDefinition\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeBaseRepository.GetLicense(ADEXS.Core.Util.Cache.ISecretsStash)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeContentReplacementRepository.ReplaceText(ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.OfficeContentReplacementModel})~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeScorecardDatabagRepository.Write(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Seal.ScorecardDatabag)~Aspose.Words.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeTrackedContentRepository.RetrieveContentControlsWithLocationsFromDocument(Aspose.Words.Document)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.ContentControlPositionModel}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeTrackedContentRepository.RetrieveCustomDocumentPart(Aspose.Words.Document,System.String)~System.Xml.Linq.XElement\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeTrackedContentRepository.RetrieveTrackedContent(ADEXS.Core.Domain.Model.Document)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeTrackedContentRepository.RetrieveTrackedContent(ADEXS.Core.Domain.Model.Document)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeTrackedContentRepository.RetrieveTrackedContent(ADEXS.Core.Domain.Model.Document)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.IAsposeCompareRepository.CompareSpringCMDocuments(System.String,System.String,System.String,ADEXS.Core.Domain.DocumentCompare.ComparisonStyles.DocumentStyleOverride)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.OperableDocument.#ctor(ADEXS.Core.Domain.Model.Document)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.OperableDocument.Dispose\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AutoNumberRepository.AutoNumberRepository.Delete(System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AutoNumberRepository.AutoNumberRepository.EscapeCurlyBracesForFormatting(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AutoNumberRepository.AutoNumberRepository.FormatValue(ADEXS.Core.Domain.Model.AutoNumberFormatSpec,System.Int64,System.DateTime)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AutoNumberRepository.AutoNumberRepository.Save(ADEXS.Core.Domain.Model.AutoNumber,System.Boolean)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AutoNumberRepository.AutoNumberRepository.Save(ADEXS.Core.Domain.Model.AutoNumber,System.Boolean)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AutoNumberRepository.AutoNumberRepository.Validate(ADEXS.Core.Domain.Model.AutoNumber)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AutoNumberRepository.AutoNumberRepository.Validate(ADEXS.Core.Domain.Model.AutoNumber)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.BaseRepository`1.DefaultFieldInvalid(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.BaseRepository`1.DefaultObjectNotExists(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.BaseRepository`1.ValidateAttributes(`0,System.Collections.Generic.List{System.String})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseContractsService.AddSmartClause(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.Int32)~System.Threading.Tasks.Task{ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.Responses.ContractResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseContractsService.CreateContract(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.String)~System.Threading.Tasks.Task{ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.Responses.ContractResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseContractsService.GetContract(ADEXS.Core.Domain.Model.Account,System.String)~System.Threading.Tasks.Task{ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.Responses.ContractResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseContractsService.GetUser(ADEXS.Core.Domain.Model.Account)~System.Threading.Tasks.Task{ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.Responses.UserResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseContractsService.SignContract(ADEXS.Core.Domain.Model.Account,System.String)~System.Threading.Tasks.Task{ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.HttpBaseResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseContractsService.UpdateSmartClause(ADEXS.Core.Domain.Model.Account,System.String,System.Collections.Generic.Dictionary{System.String,ADEXS.ClauseIOClient.Models.SmartClause})~System.Threading.Tasks.Task{ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.Responses.ContractResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseFlowsService.CreateFlow(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.Collections.Generic.List{ADEXS.ClauseIOClient.Models.Common.FlowStep})~System.Threading.Tasks.Task{ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.Responses.FlowResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseFlowsService.GetFlow(ADEXS.Core.Domain.Model.Account,System.String)~System.Threading.Tasks.Task{ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.Responses.FlowResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseFlowsService.UpdateFlow(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.String,System.Collections.Generic.List{ADEXS.ClauseIOClient.Models.Common.FlowStep})~System.Threading.Tasks.Task{ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.Responses.FlowResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractMetadataService.Load(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Clause.ClauseSmartContractMetadata@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractMetadataService.SaveClauseMap(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Clause.ClauseSmartContractMetadata,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractMetadataService.SaveContractId(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractRepository.InsertIntoClauseSmartContractQueue(ADEXS.Core.Domain.Model.QueueTasks.ClauseSmartContractTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractRepository.InsertIntoClauseSmartContractQueue(ADEXS.Core.Domain.Model.QueueTasks.ClauseSmartContractTask)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractRepository.TryGetClauseContractResultFromCache(System.Int32,System.Guid,ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.Responses.ContractResponse}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractRepository.TryGetClauseSignResultFromCache(System.Int32,System.Guid,ADEXS.ClauseIOClient.Models.Results.Result{ADEXS.ClauseIOClient.Models.HttpBaseResponse}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.BuildCallbackWorkflowStep(ADEXS.Core.Types.Enums.APIVersion,System.String,System.String)~ADEXS.ClauseIOClient.Models.Common.FlowStep\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.ClauseSmartContractTask)~ADEXS.Core.Types.Enums.ClauseSmartContractProcessingStatus\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.ProcessTask(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.QueueTasks.ClauseSmartContractTask,ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractWorkload)~ADEXS.Core.Types.Enums.ClauseSmartContractProcessingStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.AdjustAccountPriority(ADEXS.Core.Domain.AccountSettings,System.String,CLM.MessageDefines.Constants.QueueItemPriority)~CLM.MessageDefines.Constants.QueueItemPriority\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.AdjustDateToInterval(System.DateTime,ADEXS.Core.Types.Enums.DateInterval,System.Globalization.CultureInfo,System.Boolean)~System.DateTime\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.DateTimeFromUniversal(ADEXS.Core.Domain.Model.UserAccount,System.DateTime)~System.DateTime\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.DateTimeToUniversal(ADEXS.Core.Domain.Model.UserAccount,System.DateTime)~System.DateTime\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.GetDateInterval(System.String)~ADEXS.Core.Types.Enums.DateInterval\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.HtmlToPlainText(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.IsNodeNameDuplicate(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.IsNodeNameValid(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String@,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.IsNodeNameValid(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String@,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.LoadBinaryFromCache``1(ADEXS.Caching.ICacheRepository,System.String)~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.LoadWithRetry(ADEXS.Core.Domain.Repository.CommonRepository.LoadDelagate,System.Int32)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.LocalizeLongDate(System.DateTime,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.LocalizeLongDateTime(System.DateTime,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.RemoveFileNameFromPath(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.RemoveFileNameFromPath(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.RemoveFileNameFromPath(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.RemoveKeyFromCache(ADEXS.Caching.ICacheRepository,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.SaveAsBinaryToCache(ADEXS.Caching.ICacheRepository,System.Object,System.String,System.Int64)~System.Int64\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.ToDBFormatString(System.DateTime)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.ToTimeZoneData(System.TimeZoneInfo)~ADEXS.Core.Domain.Model.TimeZoneData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.TryParseDateToUTC(System.String,ADEXS.Core.Domain.Model.UserAccount,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.GetBlobStorageFileName(System.Int32,ADEXS.Core.Types.Enums.MigrationEntityType,System.Guid,ADEXS.Core.Types.Enums.AccountConversionStatus)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.SnapshotAccount(System.Int32,ADEXS.Core.Types.Enums.AccountConversionStatus,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.SnapshotUser(System.Int32,System.Guid,ADEXS.Core.Types.Enums.AccountConversionStatus,ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.UpdateUserSettings(System.Int32,System.Guid,System.Collections.Generic.Dictionary{System.String,System.String},ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionStatusRepository.UpdateConversionStatus(ADEXS.Core.Domain.Model.Conversion.Account.AccountConversionStatus)~ADEXS.Core.Domain.Model.Conversion.Account.AccountConversionStatus\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.UserGroup.UserGroupMigrationStatusRepository.Save(System.Int32,ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus)~ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.UserGroup.UserGroupMigrationStatusRepository.UpdateUserGroupMigrationStatus(System.Int32,ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}@)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.CreateOrUpdateByExternalId(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.IsExternalIdUniqueOrEmpty(ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.IsNameNonEmptyAndUnique(ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party},System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.LoadByAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Utilities.PagingAndFiltering,System.Int32@)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.Update(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}@,System.Boolean)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CountryRepository.GetCountryByNameOrAbbreviation(System.String)~ADEXS.Core.Domain.Lookup.Country\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.HashPii(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.HashPii(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleRepository.Copy(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomRule,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleRepository.Delete(ADEXS.Core.Domain.Model.CustomRule)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleRepository.Disable(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomRule,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleRepository.Enable(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomRule)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleRepository.InsertIntoCustomRuleQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,ADEXS.Core.Types.Enums.CustomRuleEventType,System.Guid,ADEXS.Core.Domain.Persistence.Model.CustomRuleEventParameters)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleRepository.NextOccurrence(ADEXS.Core.Domain.Model.CustomRule)~System.DateTime\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleRepository.Resubmit(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleRepository.Save(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.CustomRule)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.CanEdit(ADEXS.Core.Domain.Model.DashboardTab)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.CreateDefaultDashboardTab(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.DashboardTab\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.CreateDefaultWidgets(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.GetWidgetsForTab(ADEXS.Core.Domain.Model.DashboardTab)~ADEXS.Core.Domain.Model.DashboardWidgets\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.SaveTab(ADEXS.Core.Domain.Model.DashboardTab,ADEXS.Core.Domain.Model.DashboardWidgets,System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{ADEXS.Core.Types.Enums.DashboardViewerType,System.Guid}})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Dashboard.DashboardRepository.SaveWidget(ADEXS.Core.Domain.Model.DashboardWidget,ADEXS.Core.Domain.Model.DashboardTab)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration.buildIndexValues(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.Int32,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration.convertInputFile(System.String,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Documents,System.Int32,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration.convertInputFile(System.String,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Documents,System.Int32,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration.convertInputFile(System.String,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Documents,System.Int32,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration.GeneratePDFCoversheetFile(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Documents)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration.GeneratePDFCoversheetFile(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Documents,System.Int32,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigEvent.#ctor(ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig,System.Nullable{System.Guid},ADEXS.Core.Types.Enums.DocLauncherConfigEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigRepository.Load(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigRepository.RemoveDefaultCustomTemplateMessages(ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigRepository.RemoveDefaultCustomTemplateMessages(ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigRepository.ValidateConfig(System.Int32,ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigValidationError}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigRepository.ValidateConfig(System.Int32,ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigValidationError}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigRepository.ValidateConfig(System.Int32,ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigValidationError}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.Delete(System.Int32,ADEXS.Core.Domain.Model.Document,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.EnsureDocumentCache(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.IReadOnlyCollection{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.CsvRowChooser})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.EnsureDocumentCache(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.IReadOnlyCollection{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.CsvRowChooser})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.GetDropdownDefinitionCacheKey(System.Int32,ADEXS.Core.Domain.Model.Document,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.GetDropdownValueCacheKey(System.Int32,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.DropdownDefinition)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.LoadDropdownDefinition(System.Int32,ADEXS.Core.Domain.Model.Document,System.String)~ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.DropdownDefinition\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.LoadRowByDropdownValue(System.Int32,ADEXS.Core.Domain.Model.Document,System.String,System.String)~ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.DropdownPosition\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.LoadRowByName(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.Cell}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.LoadRowByName(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.Cell}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.LoadRowByRowNumber(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.Cell}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.LoadRowByRowNumber(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.Cell}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.ParseCsvDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.IReadOnlyCollection{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.CsvRowChooser})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.ParseCsvDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.IReadOnlyCollection{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.CsvRowChooser})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.SaveDropdownDefinition(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.DropdownDefinition)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherFormReader.ImportLibraryField(System.Guid,System.String,System.String)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherFormReader.ImportLibraryField(System.Guid,System.String,System.String)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.AddElementToListIfFlagIsSet(System.Collections.Generic.List{System.String},Newtonsoft.Json.Linq.JToken,System.String)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.CollectPossibleValues(Newtonsoft.Json.Linq.JObject,System.Collections.Generic.Dictionary{System.String,ADEXS.Core.Domain.Model.FormConfiguration.ConstantValue},ADEXS.Core.Domain.Model.FormConfiguration.FormConfigurationPropertyMap)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.IsNameValid(System.String,System.Guid,System.Int32,System.Boolean,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.ParseConfig(System.String,System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.FormConfiguration.FormConfigurationPropertyMap)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.ParseConfig(System.String,System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.FormConfiguration.FormConfigurationPropertyMap)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.ParseConfigFull(System.String,System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.FormConfiguration.FormConfigurationPropertyMap)~System.Collections.Generic.List{Newtonsoft.Json.Linq.JObject}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.ParseConfigFull(System.String,System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.FormConfiguration.FormConfigurationPropertyMap)~System.Collections.Generic.List{Newtonsoft.Json.Linq.JObject}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.Save(ADEXS.Core.Domain.Model.FormConfiguration,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.FormConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.Object)~ADEXS.Core.Domain.Model.FormConfiguration\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.UpgradeFormConfigNumberFields(Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.FormConfiguration.FormConfigurationPropertyMap)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.ValidateJson(Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.FormConfiguration.FormConfigurationPropertyMap)~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.Helper.DocLauncherCsvParseHelper.GetCsvCellValuesForSelectedCellHeaders(ADEXS.Core.Domain.Model.Document,System.Collections.Generic.HashSet{System.String})~System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.String}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.Helper.DocLauncherCsvParseHelper.GetCsvCellValuesForSelectedCellHeaders(ADEXS.Core.Domain.Model.Document,System.Collections.Generic.HashSet{System.String})~System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.String}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.MergeDataRepository.LoadMergeData(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.DocLauncherConfig.MergeData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.MergeDataRepository.SaveMergeData(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.DocLauncherConfig.MergeData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.TrackedFieldRepository.Save(ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.TrackedFieldRepository.Save(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.TrackedFieldStatusRepository.Save(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.TrackedFieldStatusRepository.Update(ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.TrackedFieldStatusRepository.ValidateTrackedFieldStatusBase(ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataRepository.Save(ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataModel)~ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataSaveResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.AdHocCompareMessage.GetMessage(System.String)~ADEXS.Core.Domain.Repository.DocumentRepository.AdHocCompareDataModel\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.AdHocCompareMessage.SetMessage(ADEXS.Core.Domain.Repository.DocumentRepository.AdHocCompareDataModel)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.CombineDocumentRepository.IsDocxExtension(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.CombineDocumentRepository.MergeDocuments(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.DocumentMergeItem},System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.CombineDocumentRepository.SendDocxMergeTask(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.Guid,System.String,System.Guid,System.Action)~ADEXS.Core.Domain.Repository.DocumentRepository.DocumentMergeRequestResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentAttachmentSet.Load(System.Guid,ADEXS.Core.Domain.Model.Document)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.CompareDocumentsAreSameType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.CreateCompareTask(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.Guid,ADEXS.Core.Types.Enums.DocumentCompareResultType,ADEXS.Core.Domain.DocumentCompare.ComparisonStyles.DocumentStyleOverride,System.String)~ADEXS.Core.Domain.Model.QueueTasks.DocumentCompareTask\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.DocumentContainsTrackedChanges(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@)~ADEXS.Core.Types.Enums.TrackedChangesStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.DocumentFileNameIncludingVersion(ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.DocumentFileNameIncludingVersion(ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.GetCompareProvider(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.DocumentCompareTask)~ADEXS.Core.Types.Enums.CompareProvider\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.GetCurrentVersionNumber(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.GetCurrentVersionNumber(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.GetDefaultCompareSettings(ADEXS.Core.Domain.Model.Document)~ADEXS.Core.Domain.DocumentCompare.ComparisonStyles.DocumentStyleOverride\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.GetFullPathToTransientCompareDocument(System.Int32,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.DocumentRepository.TransientCompareDocType)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.GetFullPathToTransientCompareDocument(System.Int32,System.Guid,System.Guid,ADEXS.Core.Domain.Repository.DocumentRepository.TransientCompareDocType,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.GetHistoryData(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Document)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.GetHistoryText(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.GetHistoryText(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.GetResultFileExtension(ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.InsertTaskIntoCompareQueue(ADEXS.Core.Domain.Model.UserAccount,CLM.MessageDefines.Interfaces.IUserTask)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.IsTransientCompareDocumentImageAvailable(System.Int32,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.DocumentRepository.TransientCompareDocType,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.LicensedForDocumentType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.ResultFileInsertNewDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.DocumentCompareTask,System.String,Newtonsoft.Json.Linq.JObject)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.ResultFileVersionDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.QueueTasks.DocumentCompareTask,System.String,Newtonsoft.Json.Linq.JObject)~System.Guid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.ResultFileVersionDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.QueueTasks.DocumentCompareTask,System.String,Newtonsoft.Json.Linq.JObject)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.ResultTransientFile(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Document,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.SendNotification(ADEXS.Core.Domain.Model.QueueTasks.DocumentCompareTask,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.SendNotificationFailed(ADEXS.Core.Domain.Model.QueueTasks.DocumentCompareTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.SubmitCompareTask(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.DocumentCompareTask,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Document)~ADEXS.Core.Domain.Repository.DocumentRepository.SubmitCompareResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.ValidateCompareDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.ValidateCompareDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.ValidateCompareDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Document,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.ValidDocumentTypesMessage(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.ValidDocumentTypesMessage(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentDownloadFormatResolver.ResolveDownloadFormat(ADEXS.Core.Domain.Model.Document,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat)~DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentFactory.CreateAndInsertDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,ADEXS.Core.Types.Constants.FileDataSource,System.String,System.Guid,System.String,System.String)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRelatedText(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.DocumentHistory,System.Guid,System.Boolean,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRelatedText(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.String,System.Guid,System.String,System.Guid,System.Boolean,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRelatedText(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.String,System.Guid,System.String,System.Guid,System.Boolean,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRelatedText(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.String,System.Guid,System.String,System.Guid,System.Boolean,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRevisedFileName(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,ADEXS.Core.Types.Enums.HistoryLinkType,System.String,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRevisedFileNameForHtml(System.Guid,System.String,ADEXS.Core.Types.Enums.HistoryLinkType,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRevisedFileNameForHtml(System.Guid,System.String,ADEXS.Core.Types.Enums.HistoryLinkType,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRevisedFileNameNoHtml(System.String,ADEXS.Core.Types.Enums.HistoryLinkType,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRevisedFileNameNoHtml(System.String,ADEXS.Core.Types.Enums.HistoryLinkType,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReader.#ctor(ADEXS.Core.Domain.Model.Document)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReader.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.CreateDocumentReminderFromTemplate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ReminderTemplate,System.Guid)~ADEXS.Core.Domain.Repository.DocumentRepository.CreateDocumentReminderResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.DocumentReminder,System.Boolean)~ADEXS.Core.Domain.Repository.DocumentRepository.DeleteDocumentReminderResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.FormatReminderDateTimeUtcToLocal(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.DocumentReminder,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.FormatReminderDateTimeUtcToLocal(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.DocumentReminder,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.GetAssigneeString(ADEXS.Core.Domain.Model.DocumentReminder,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.GetRecipientListString(ADEXS.Core.Domain.Model.DocumentReminder)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.IsDifferent(ADEXS.Core.Domain.Model.DocumentReminderRecipient,ADEXS.Core.Domain.Model.DocumentReminderRecipient)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.LoadForDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~ADEXS.Core.Domain.Model.DocumentReminders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.LoadForDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.DateTime)~ADEXS.Core.Domain.Model.DocumentReminder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.LogDocumentHistory(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Domain.Model.DocumentReminder,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.ProcessReminder(ADEXS.Core.Domain.Model.DocumentReminder)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.DocumentReminder)~ADEXS.Core.Domain.Repository.DocumentRepository.SaveDocumentReminderResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.ValidateDocumentForDocumentReminder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.DocumentReminder)~ADEXS.Core.Domain.Repository.DocumentRepository.ValidateDocumentReminderResult\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository._CopyMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.Guid,ADEXS.Core.Types.Constants.FileDataSource,System.Boolean,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},System.Boolean)~ADEXS.Core.Domain.Model.CopyResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.Accessed(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.ADEXS#Core#Domain#Repository#DocumentRepository#IDocumentRepository#Split(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Guid,System.Collections.Generic.IList{System.Int32},System.String,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.AsyncPasteMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.Guid,ADEXS.Core.Types.Enums.ClipboardOperation,ADEXS.Core.Types.Enums.TaskInitiator,System.Nullable{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CancelCheckout(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,ADEXS.Core.Types.Enums.UndoCheckoutContext,System.Boolean,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CanManipulateDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Boolean,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CheckinDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CheckinDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String,ADEXS.Core.Types.Constants.FileDataSource,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.String,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},Newtonsoft.Json.Linq.JObject)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CheckinDocumentExisting(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CheckinDocumentExisting(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CheckinDocumentFromDraft(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},Newtonsoft.Json.Linq.JObject)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CheckinDocumentFromDraft(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},Newtonsoft.Json.Linq.JObject)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CheckoutDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Types.Enums.CheckoutStatus,System.Boolean,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CheckoutDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Types.Enums.CheckoutStatus,System.Boolean,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.ClearWatchedDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.ClearWatchedDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.ClearWatchedDocumentsForAllUsers(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CommonCheckinDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.FileData,System.String,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CommonCheckinDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.FileData,System.String,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CopyMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,ADEXS.Core.Domain.Model.Documents,System.Guid,ADEXS.Core.Types.Constants.FileDataSource,System.Boolean,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},System.Boolean,System.Action)~ADEXS.Core.Domain.Model.CopyResults\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CopyMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,ADEXS.Core.Domain.Model.Documents,System.Guid,ADEXS.Core.Types.Constants.FileDataSource,System.Boolean,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},System.Boolean,System.Action)~ADEXS.Core.Domain.Model.CopyResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CopyMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,ADEXS.Core.Domain.Model.Documents,System.Guid,ADEXS.Core.Types.Constants.FileDataSource,System.Boolean,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},System.Boolean,System.Action)~ADEXS.Core.Domain.Model.CopyResults\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CreateFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder,ADEXS.Core.Domain.Model.Folder,System.Boolean,ADEXS.Core.Domain.Model.Metadatas)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CreateFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder,ADEXS.Core.Domain.Model.Folder,System.Boolean,ADEXS.Core.Domain.Model.Metadatas)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.DeleteDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.DeleteDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.DeleteDocument(System.Guid,ADEXS.Core.Domain.Model.Document,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.DeleteDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.DeleteFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.DeleteFromTrash(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.DraftDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String,ADEXS.Core.Types.Constants.FileDataSource,System.String,System.Boolean)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.DraftDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String,ADEXS.Core.Types.Constants.FileDataSource,System.String,System.Boolean)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.EditingDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.EnumerateUnauthorized(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contacts,ADEXS.Core.Domain.Model.Documents)~System.Linq.ILookup{ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.FilterOutTrashedDocumentUids(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetCurrentDocumentVersion(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetCurrentDocumentVersion(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetDocumentsInFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.String)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetMaximumFileSize(ADEXS.Core.Domain.Model.Account)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetMaximumFileSize(ADEXS.Core.Domain.Model.UserAccount)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetMergedTempPath(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetPasteResultsJsonPath(ADEXS.Core.Domain.Model.Account,System.Guid,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetPasteResultsJsonPath(ADEXS.Core.Domain.Model.Account,System.Guid,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetRelatedDocuments(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetSplitFileSize(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetSplitFileStream(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetXMLMergedFileSize(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.SharedStorageUseCase)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetXMLMergedFileStream(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.SharedStorageUseCase)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetXmlMergedTempPath(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocument(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Model.FileData,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.DocumentHistory,System.Boolean,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},ADEXS.Core.Domain.Repository.DocumentRepository.IAddDocumentConfiguration)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocument(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Model.FileData,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.DocumentHistory,System.Boolean,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},ADEXS.Core.Domain.Repository.DocumentRepository.IAddDocumentConfiguration)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocument(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Model.FileData,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Metadatas,System.String,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},ADEXS.Core.Domain.Repository.DocumentRepository.IAddDocumentConfiguration)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentFromSharedStorage(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,ADEXS.Core.Types.Constants.FileDataSource,System.String,System.String,ADEXS.Core.Types.Enums.SharedStorageUseCase)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentPlus(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,System.String,System.String,ADEXS.Core.Types.Constants.FileDataSource,ADEXS.Core.Domain.Model.DocumentHistory,ADEXS.Core.Domain.Model.Metadatas,System.String,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},System.String)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentPlus(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,System.String,System.String,ADEXS.Core.Types.Constants.FileDataSource,System.String,ADEXS.Core.Domain.Model.Metadatas,System.String,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentPlusFromSharedStorage(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,System.String,System.String,ADEXS.Core.Types.Constants.FileDataSource,System.String,ADEXS.Core.Domain.Model.Metadatas,System.String,ADEXS.Core.Types.Enums.SharedStorageUseCase,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},System.Boolean)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoDetectTypeQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoExtractQueue(ADEXS.Core.Domain.AccountSettings,System.String,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.FileData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoPdfManipulation(System.Guid,System.Int64,ADEXS.Core.Domain.AccountSettings,ADEXS.Core.Domain.LWDP.ImageScale[],System.String,System.Int32[])\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoPdfManipulation(System.String,System.Int64,ADEXS.Core.Domain.AccountSettings,ADEXS.Core.Domain.LWDP.ImageScale[],System.String,System.Int32[],ADEXS.Core.Types.Enums.SharedStorageUseCase)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoSANfileCheckup(ADEXS.Core.Domain.Model.FileData)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoSearchIndex(ADEXS.Core.Domain.Model.QueueTasks.ElasticIndexTask)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoSearchIndex(ADEXS.Core.Domain.Model.QueueTasks.ElasticIndexTask)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoSearchIndex(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Base.ISearchable,CLM.MessageDefines.Constants.QueueItemPriority)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertIntoSearchIndex(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.ElasticIndexTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.IsCurrentVersion(ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.IsDocumentSourceFromSyncExecution(ADEXS.Core.Domain.Repository.DocumentRepository.IAddDocumentConfiguration)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.IsDocumentSourceFromSyncExecution(ADEXS.Core.Domain.Repository.DocumentRepository.IAddDocumentConfiguration)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.IsTooLargeForInProcessClipboardOperation(ADEXS.Core.Domain.Model.UserAccount,System.Int32,System.Collections.Generic.List{System.Guid})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.ListFolderContents(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.Folders@,ADEXS.Core.Domain.Model.Documents@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.ListFolderContentsPaged(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.Boolean,System.Boolean,System.Boolean,System.Int32@,System.Int32@,System.Int32@,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadByAgreement(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadByVersion(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadContent(ADEXS.Core.Domain.AccountSettings,ADEXS.Core.Domain.Model.Document,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadContent(ADEXS.Core.Domain.Model.Document,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadCurrentVersion(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadListFromAgreements(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement},System.Boolean,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadMatchByUidAndMetadata(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String,System.Int32@,System.Boolean)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadSearchResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Search.SearchResults,System.Boolean,ADEXS.Core.Domain.Lookup.Pager,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Search.SearchResult}@,System.Boolean)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadSearchResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Search.SearchResults,System.Boolean,ADEXS.Core.Domain.Lookup.Pager,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Search.SearchResult}@,System.Boolean)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadWatchedDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadWatchedDocumentsByUserId(System.Guid,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LogDocumentCopyAction(ADEXS.Core.Domain.Model.DocumentCopyResult,ADEXS.Core.Domain.Model.UserAccount,System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Types.Enums.HistoryCommentIdentifiers)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LogDocumentDownload(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.Boolean,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LogDocumentMetadata(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Metadatas,System.String,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoggedSave(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.MergeDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Action)~ADEXS.Core.Domain.Repository.DocumentRepository.DocumentMergeRequestResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.MoveMultipleToFolderDetailedErrors(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.Folder,System.String,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},Newtonsoft.Json.Linq.JObject)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FailedPasteResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.MoveMultipleToFolderDetailedErrors(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.Folder,System.String,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},Newtonsoft.Json.Linq.JObject)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FailedPasteResult}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.MoveMultipleToFolderDetailedErrors(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.Folder,System.String,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},Newtonsoft.Json.Linq.JObject)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FailedPasteResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.RemoveDocumentContentHash(System.Int32,ADEXS.Core.Domain.Model.FileData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.RenameDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@,ADEXS.Core.Domain.Model.Document,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@,ADEXS.Core.Domain.Model.Document,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@,ADEXS.Core.Domain.Model.Document,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.SaveContent(ADEXS.Core.Domain.Model.FileData,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.SaveWatchedDocuments(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1308:Normalize strings to uppercase\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.SendForSignatureAllowedExtensions(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.SendForSignatureAllowedExtensions(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.SubmitOCRTask(ADEXS.Core.Domain.Model.QueueTasks.IExtractTask,ADEXS.Core.Types.Enums.OCRProcessingLevel)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.SystemCopy(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.Guid,Newtonsoft.Json.Linq.JObject)~ADEXS.Core.Domain.Model.DocumentCopyResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UndoCheckoutDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.Boolean,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UndoCheckoutDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UndoCheckoutDocumentsFromElectronicSignature(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String,System.Boolean,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UpdateDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,ADEXS.Core.Types.Constants.FileDataSource,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.String)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UpdateDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,ADEXS.Core.Types.Constants.FileDataSource,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.String)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UpdateDocxFormat(ADEXS.Core.Domain.Model.FileData,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UpdateHtmlFormat(ADEXS.Core.Domain.Model.FileData,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UpdatePDFConversion(ADEXS.Core.Domain.Model.FileData,System.String,System.Guid,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UpdatePDFConversion(ADEXS.Core.Domain.Model.FileData,System.String,System.Guid,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.VerifyInsertDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertType,ADEXS.Core.Domain.Model.Document,System.String,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.VerifyInsertDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertType,ADEXS.Core.Domain.Model.Document,System.String,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.VerifyInsertDocument(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int64,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.VerifySystemInsertDocument(ADEXS.Core.Domain.Model.Account,System.String,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.ZipDocuments(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Model.Documents,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.CompleteStep(System.Int32,System.Guid,System.Guid,ADEXS.Core.Domain.Model.Documents,System.String,ADEXS.Core.Types.Enums.WorkflowStepStatus,System.DateTime)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.CreateDocumentScopes(ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.Scope,ADEXS.Core.Domain.Model.Contact,ADEXS.Core.Domain.Model.Workflow.WorkerPool,System.String,ADEXS.Core.Domain.Model.DocumentScope)~ADEXS.Core.Domain.Model.DocumentScopes\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.GetActor(System.Int32,System.Guid,System.Nullable{System.Guid})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.LoadByDocumentActor(System.Int32,ADEXS.Core.Domain.Model.Scope,System.Guid,System.String,ADEXS.Core.Domain.Model.Documents)~ADEXS.Core.Domain.Model.DocumentScopes\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.LoadByDocumentActor(System.Int32,ADEXS.Core.Domain.Model.Scope,System.Guid,System.String,ADEXS.Core.Domain.Model.Documents)~ADEXS.Core.Domain.Model.DocumentScopes\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.Save(System.Int32,ADEXS.Core.Domain.Model.Scope,ADEXS.Core.Domain.Model.DocumentScopeActivity,System.String,ADEXS.Core.Domain.Model.Contact,ADEXS.Core.Domain.Model.Workflow.WorkerPool,System.String,ADEXS.Core.Domain.Model.Documents,System.DateTime,System.Nullable{System.DateTime})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.SetActor(ADEXS.Core.Domain.Model.Contact,System.String,ADEXS.Core.Domain.Model.DocumentScope)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.UpdateActorOutput(System.Int32,ADEXS.Core.Domain.Model.DocumentScopes,System.String,System.String,ADEXS.Core.Domain.Model.Contact,System.String,System.Guid,System.DateTime,System.Nullable{System.DateTime})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.UpdateActorOutput(System.Int32,ADEXS.Core.Domain.Model.Scope,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.Workflow.WorkItem,System.String,System.String,ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.UpdateOwnership(System.Int32,System.Guid,ADEXS.Core.Domain.Model.Workflow.WorkItem,System.Guid,System.DateTime,ADEXS.Core.Domain.Model.Contact,ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentSearchQuery.ExecuteSearchWithAttributes(ADEXS.Core.Domain.Lookup.Pager,System.Boolean)~System.Tuple{System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.Document},System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.IList{ADEXS.ScmElasticCore.Indexing.MetadataIndexModel}}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentSearchQuery.RemoveDocumentFromResults(ADEXS.Core.Domain.Model.Document)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.DoDuplicateHandling(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.DuplicateHandlingDocumentHistory(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.FailOnDuplicate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.FormatNodeName(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.IsDocumentNameDuplicate(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.IsDocumentNameDuplicateBasedOnDuplicateHandlingSetting(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.Guid,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.RenameDuplicate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.RenameDuplicateMessage(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.UniqueNodeName(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Types.Enums.ObjectType,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.CheckDocumentForTrackedRevisions(ADEXS.Core.Domain.Model.Document)~ADEXS.Core.Types.Enums.TrackedChangesStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.FileMetaDataExists(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.FileMetaDataType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.GetTrackedChangesStatus(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Types.Enums.TrackedChangesStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.LoadByDocumentUidAndType(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.FileMetaDataType)~ADEXS.Core.Domain.Model.FileMetaData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.FileMetaData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.SubmitCheckTrackedRevisionsTask(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.UpdateTrackedChangesStatus(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.TrackedChangesStatus)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderArchiveRepository.FileName(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderArchiveRepository.FileName(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderArchiveRepository.GetChunk(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int64,System.Int64)~System.Byte[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderArchiveRepository.GetSize(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderArchiveRepository.GetStream(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderArchiveRepository.SaveToStorage(ADEXS.Core.Domain.Model.UserAccount,System.String,System.IO.FileStream)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.CanMoveFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.CheckContainerLimits(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.CopyStaticSecurity(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder@,ADEXS.Core.Domain.Model.Metadatas,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.DeleteFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.DeleteFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.DeleteFromTrashBag(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.EnumerateUnauthorized(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contacts,ADEXS.Core.Domain.Model.Folders)~System.Linq.ILookup{ADEXS.Core.Domain.Model.Folder,ADEXS.Core.Domain.Model.UserAccount}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.FolderHasDocuments(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.GetCurrentTrashBag(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.GetFolderUidFromSfObjectId(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.GetFolderUidFromSfObjectType(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.GetFolderUidFromSystemFolderType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.SystemFolderType,System.Boolean)~System.Guid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.GetFolderUidsWhereUserHasNoMovePrivsJiT(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid},ADEXS.Core.Domain.Model.Folder,System.String@)~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.GetPartyFolderByName(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.IsAncestorOf(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.IsFolderSecurityMismatch(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.Folder,System.Boolean,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.IsStaticSecurityFolderAndEnabled(ADEXS.Core.Domain.Model.Account,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadAncestorsAndChildrenByFolderUids(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadAncestorsByFolderUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean,System.Boolean,System.Boolean)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadAncestorsByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadByMetadataValue(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadByParentAndName(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadByParentFolderUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.Boolean,System.Boolean)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadBySystemFolderType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.SystemFolderType)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadContents(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Base.ModelCollection{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadEos(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid,System.String,System.String)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadFolderContentsForSearch(System.Guid,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Lookup.Pager,System.Boolean)~ADEXS.Core.Domain.Repository.DocumentRepository.FolderContents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadList(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Search.SearchResults,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadList(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Search.SearchResults,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadList(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IEnumerable{System.Guid},ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.LoadList(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.MoveFoldersToTrash(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.MoveMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,ADEXS.Core.Types.Enums.SystemFolderType,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.MoveMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,System.Guid,System.String)~System.Collections.Generic.IList{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.MoveMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Types.Enums.SystemFolderType,System.String)~System.Collections.Generic.IList{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.MoveMultipleToFolderDetailedErrors(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FailedPasteResult}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.MoveMultipleToFolderDetailedErrors(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FailedPasteResult}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.MoveMultipleToFolderDetailedErrors(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FailedPasteResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.RenameEosBase(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.SanityCheckPaste(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,ADEXS.Core.Domain.Model.Folder,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.SanityCheckPaste(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,ADEXS.Core.Domain.Model.Folder,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.SanityCheckPaste(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders,ADEXS.Core.Domain.Model.Folder,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.SavePublic(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.SetContainerStatus(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder,ADEXS.Core.Types.Enums.FolderContainerStatus)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.TagInbound(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Boolean})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.TryParseUid(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderSearchQuery.#ctor(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Search.SearchQuery)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderSearchQuery.ExecuteSearchWithAttributes(ADEXS.Core.Domain.Lookup.Pager)~System.Tuple{System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.Folder},System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.IList{ADEXS.ScmElasticCore.Indexing.MetadataIndexModel}}}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentReminderRepository.CreateDocumentReminderFromTemplate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ReminderTemplate,System.Guid)~ADEXS.Core.Domain.Repository.DocumentRepository.CreateDocumentReminderResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalDocumentReader.GetDocumentContentByPath(System.String)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem._CheckRename(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,ADEXS.Core.Domain.Model.Folder@,System.String@)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.CopyDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.CopyDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.CopyFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.CreateFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Boolean,System.Boolean,System.Int32@,ADEXS.Core.Domain.Model.Metadatas)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.CreateFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Boolean,System.Boolean,System.Int32@,ADEXS.Core.Domain.Model.Metadatas)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.CreateFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Boolean,System.Boolean,System.Int32@,ADEXS.Core.Domain.Model.Metadatas)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.GetFolderContents(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Base.ModelCollection{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.GetFolderLogicalPath(ADEXS.Core.Domain.Model.Folder)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.RenameDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.RenameDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.RenameFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.SafeFileName(ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.SafeFileName(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.VerifyPathDoesNotExist(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,ADEXS.Core.Domain.Repository.DocumentRepository.ILogicalFileSystemParseResult@)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult.ParseLogicalPath\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult.SetDocument(System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult.SetFolder(System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepository.MoveNodesToFolderDetailedErrors(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.Base.INode},System.Guid,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.IMoveNodeValidator})~ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodesResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodeValidatorAllDocumentsCanBeCheckedIn.Validate(System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode},ADEXS.Core.Domain.Model.Folder)~ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodeValidatorResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodeValidatorAllFolderTypesAreNormal.Validate(System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode},ADEXS.Core.Domain.Model.Folder)~ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodeValidatorResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodeValidatorAllNodesHaveMoveSecurity.Validate(System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode},ADEXS.Core.Domain.Model.Folder)~ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodeValidatorResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodeValidatorTargetFolderHasProperSecurity.Validate(System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode},ADEXS.Core.Domain.Model.Folder)~ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodeValidatorResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodeValidatorTargetFolderHasProperSecurity.Validate(System.Collections.Generic.List{ADEXS.Core.Domain.Model.Base.INode},ADEXS.Core.Domain.Model.Folder)~ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodeValidatorResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.NameIncrementor.EvalNameMatch(System.Text.RegularExpressions.Match)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.PhysicalStorageTransaction.CreateDocumentTransaction(System.String,ADEXS.Core.Domain.Model.FileData,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat)~ADEXS.Core.Domain.Repository.DocumentRepository.PhysicalStorageTransaction\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.PhysicalStorageTransaction.CreateDocumentVersionTransaction(System.String,ADEXS.Core.Domain.Model.FileData,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,ADEXS.Core.Domain.Model.FileData)~ADEXS.Core.Domain.Repository.DocumentRepository.PhysicalStorageTransaction\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.PhysicalStorageTransaction.Dispose\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.SearchRepeater.Add(ADEXS.Core.Domain.Search.SearchResults,ADEXS.Core.Domain.Model.Documents)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.SearchRepeater.Add(ADEXS.Core.Domain.Search.SearchResults,ADEXS.Core.Domain.Model.Folders)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.SearchRepeater.GetPagedDocuments(ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.SearchRepeater.GetPagedFolders(ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.SearchRepeater.GetRequestedMaxHitsPager(ADEXS.Core.Domain.Search.SearchResults,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Lookup.Pager\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.SearchRepeater.SearchAgain(ADEXS.Core.Domain.Search.SearchResults,ADEXS.Core.Domain.Search.SearchQuery)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.SearchRepeater.UpdateWithRelativeSearchResults(ADEXS.Core.Domain.Search.SearchResults)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.UrlRepository.GetFromContents(ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.UrlRepository.SetContents(ADEXS.Core.Domain.Model.Document,System.Uri)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.XDocumentReader.GetXDocument(ADEXS.Core.Domain.Model.Base.IUserContext,System.String,System.Guid@)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.XDocumentReader.GetXDocument(ADEXS.Core.Domain.Model.Base.IUserContext,System.String,System.Guid@)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.XDocumentReader.GetXDocument(ADEXS.Core.Domain.Model.Document)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.XDocumentReader.GetXDocument(ADEXS.Core.Domain.Model.Document)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.XDocumentReader.GetXDocument(ADEXS.Core.Domain.Model.Document)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository.Delete(ADEXS.Core.Domain.Model.DocumentSelection)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository.DeleteAllForAllVersions(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository.DeleteAllForVersion(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository.LoadByDocumentSelectionUid(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Guid)~ADEXS.Core.Domain.Model.DocumentSelection\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository.LoadForAllVersionsByType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Types.Enums.DocumentSelectionType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository.LoadForCurrentVersion(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Nullable{System.Guid},ADEXS.Core.Types.Enums.DocumentSelectionType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository.LoadForCurrentVersionByUserAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Nullable{System.Guid},ADEXS.Core.Types.Enums.DocumentSelectionType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository.LoadForPreviousVersion(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Types.Enums.DocumentSelectionType)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelection}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository.Save(ADEXS.Core.Domain.Model.DocumentSelection)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentSelectionData},System.Nullable{System.Guid},ADEXS.Core.Types.Enums.DocumentSelectionType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository.Update(ADEXS.Core.Domain.Model.DocumentSelection)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentTypes.DocumentTypesRepository.Load(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentTypes.DocumentTypesRepository.Update(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType},System.Boolean@)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.AddEmailToBlockList(System.String,System.Int32,System.String,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.AddEmailToBlockList(System.String,System.Int32,System.String,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.AddEmailToBlockList(System.String,System.Int32,System.String,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.DeleteFromBlockList(System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.DeleteFromBlockList(System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.DeleteFromBlockList(System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.GetFromBlockList(System.String)~ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.EmailBlockList\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.GetFromBlockList(System.String)~ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.EmailBlockList\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.GetFromBlockList(System.String)~ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.EmailBlockList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.IsInBlockList(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.IsInBlockList(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository.IsInBlockList(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmbeddedDocumentProperties.Handlers.IEmbeddedDocumentPropertiesHandler.Get(System.String,System.IO.Stream)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmbeddedDocumentProperties.Handlers.IEmbeddedDocumentPropertiesHandler.Write(System.Collections.Generic.KeyValuePair{System.String,System.String},System.String,System.IO.Stream,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmbeddedDocumentProperties.Handlers.PdfEmbeddedDocumentPropertiesHandler.CanHandleFile(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmbeddedDocumentProperties.Handlers.PdfEmbeddedDocumentPropertiesHandler.CanHandleFile(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmbeddedDocumentProperties.Handlers.WordEmbeddedDocumentPropertiesHandler.CanHandleFile(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmbeddedDocumentProperties.Handlers.WordEmbeddedDocumentPropertiesHandler.CanHandleFile(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmbeddedDocumentProperties.Handlers.WordEmbeddedDocumentPropertiesHandler.Write(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.IO.Stream,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventPaceRepository.LocalEventIncrement(CLM.MessageDefines.CommonEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventPaceRepository.Pace(CLM.MessageDefines.CommonEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventPaceRepository.RegisterEventPace(System.String,CLM.MessageDefines.CommonEventPace)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.#ctor(ADEXS.Core.Domain.Persistence.IAtlasPersistenceFactory)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.DecodeWorkflowRegistrationInfo(System.String,System.Guid@,System.Guid@,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.DecodeWorkflowRegistrationInfo(System.String,System.Guid@,System.Guid@,System.String@)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.EncodeWorkflowRegistrationInfo(System.Guid,System.Guid,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.EncodeWorkflowRegistrationInfo(System.Guid,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.FireEvent(ADEXS.Core.Domain.Model.Account,CLM.MessageDefines.CommonEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.FireEvent(ADEXS.Core.Domain.Model.UserAccount,CLM.MessageDefines.CommonEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.FireEventWithPacing(ADEXS.Core.Domain.Model.Account,CLM.MessageDefines.CommonEvent)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.EventRegistration,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.SelfRegisterForEvent(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.EventRegistration)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.SelfRegisterForEventByQueueName(ADEXS.Core.Domain.Model.EventRegistration,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.DocuSignExternalKeyFormat(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.DocuSignExternalKeyFormat(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.LoadAccountIdFromDsAccountId(System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.LoadAccountIdFromDsAccountId(System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.LoadClmCMUidFromAccountId(System.Int32)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.LoadDsAccountAndDsUserFromUser(ADEXS.Core.Domain.Model.UserAccount,System.Guid@,System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.LoadDsAccountIdAndDsItemId(System.Int32,System.Guid,ADEXS.Core.Types.Enums.ExternalDataType,System.Guid@,System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.LoadDsAccountIdFromAccountId(System.Int32)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.LoadSfOrgIdFromAccount(ADEXS.Core.Domain.Model.Account)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.LoadSfOrgIdFromAccount(ADEXS.Core.Domain.Model.Account)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.ParseExternalKeyForUnknownSystemType(System.String,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Persistence.Model.ExternalDataMap,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.Save(System.Guid,ADEXS.Core.Domain.Persistence.Model.ExternalDataMap,System.Int64)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SaveDsAccountId(ADEXS.Core.Domain.Model.UserAccount,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SaveDsAccountId(ADEXS.Core.Domain.Model.UserAccount,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SaveDsAccountId(ADEXS.Core.Domain.Model.UserAccount,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SaveDSGroupId(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SaveDSGroupId(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SaveDsUserId(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SaveDsUserId(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SaveSalesforceUserId(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SaveSalesforceUserId(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SaveScimExternalDataMap(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Types.Enums.ExternalDataType,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SaveSfOrgId(ADEXS.Core.Domain.Model.UserAccount,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SaveSfOrgId(ADEXS.Core.Domain.Model.UserAccount,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SyncExternalDataMapToAllSites(ADEXS.Core.Domain.Persistence.Model.ExternalDataMap,System.Int64)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SyncExternalDataMapToAllSites(ADEXS.Core.Domain.Persistence.Model.ExternalDataMap,System.Int64)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SyncToSite(ADEXS.Core.Domain.Persistence.Model.ExternalDataMap,System.String,System.Int64)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SyncToSite(ADEXS.Core.Domain.Persistence.Model.ExternalDataMap,System.String,System.Int64)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewAttachmentRepository.GetCombinedAttachmentTransientPath(System.Guid,ADEXS.Core.Domain.Model.ExternalReviewEmailAttachment)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewAttachmentRepository.InsertAttachmentAsNewDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid,System.String)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewReporting.#ctor(ADEXS.Core.Domain.Mixpanel.IAtlasMixpanelClient)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewReporting.Log(ADEXS.Core.Domain.Repository.ExternalReview.IExternalReviewWorkload)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.BuildResendLogText(ADEXS.Core.Domain.Model.ExternalReviewParticipant,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.CancelExternalReview(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,System.Guid,System.String,ADEXS.Globals.ScmEnums.ActionType,System.Boolean,System.Guid,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Types.Enums.ExternalReviewCancelReason)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.CompleteExternalReview(ADEXS.Core.Domain.Model.ExternalReview,System.String,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.ExternalReview.UploadResult},System.Nullable{System.Guid},System.Collections.Generic.ICollection{System.Guid},System.Boolean,ADEXS.Core.Domain.Model.ExternalReview.DocumentMatchInfo,System.Boolean)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.CompleteExternalReview(ADEXS.Core.Domain.Model.ExternalReview,System.String,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.ExternalReview.UploadResult},System.Nullable{System.Guid},System.Collections.Generic.ICollection{System.Guid},System.Boolean,ADEXS.Core.Domain.Model.ExternalReview.DocumentMatchInfo,System.Boolean)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.CompleteExternalReview(ADEXS.Core.Domain.Model.ExternalReview,System.String,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.ExternalReview.UploadResult},System.Nullable{System.Guid},System.Collections.Generic.ICollection{System.Guid},System.Boolean,ADEXS.Core.Domain.Model.ExternalReview.DocumentMatchInfo,System.Boolean)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.CompleteExternalReview(ADEXS.Core.Domain.Model.ExternalReview,System.String,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.ExternalReview.UploadResult},System.Nullable{System.Guid},System.Collections.Generic.ICollection{System.Guid},System.Boolean,ADEXS.Core.Domain.Model.ExternalReview.DocumentMatchInfo,System.Boolean)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.CompleteExternalReviewWithNewDocument(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.String,System.String,System.String,Newtonsoft.Json.Linq.JObject)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.CreateEmailPreview(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalReviewParticipant,System.Boolean,System.DateTime,System.Globalization.CultureInfo,System.String,System.String,ADEXS.Core.Domain.Model.Documents,System.Boolean,ADEXS.Core.Types.Enums.EmailAppearance)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.DocumentNameToString(ADEXS.Core.Domain.Model.ExternalReview)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.Expire(System.Guid,System.Int32,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.FlagExternalReviewAfterSetSafeToReplyEmail(ADEXS.Core.Domain.Model.ExternalReview)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.FlagExternalReviewAfterSetSafeToReplyEmail(ADEXS.Core.Domain.Model.ExternalReview)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.FlagExternalReviewForManualMatching(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewReconciliationTask)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.FlagExternalReviewForManualMatching(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewReconciliationTask)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.FlagExternalReviewForPendingEmailDomainApproval(ADEXS.Core.Domain.Model.ExternalReview,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.FlagExternalReviewForPendingEmailDomainApproval(ADEXS.Core.Domain.Model.ExternalReview,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.GetUploadTokenInfo(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.ExternalReview.UploadResult,System.Boolean)~ADEXS.Core.Domain.CacheObjects.FileUploadInfo\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.GetUserAccount(ADEXS.Core.Domain.Model.ExternalReview)~ADEXS.Core.Domain.Model.UserAccount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.IsExternalReviewInvalid(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.LoadByDocumentUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.LoadByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.LoadExternalReviewDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalReview)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.LoadExternalReviewDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalReview)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.LogErrorEmailEventMessage(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Types.Enums.ExternalReviewReturnedEmailValidationStatus)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.LogUnknownEmailApprovalTelemetry(ADEXS.Core.Domain.Model.ExternalReview)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.LogUnknownEmailApprovedEvent(ADEXS.Core.Domain.Model.ExternalReview)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.NewDocumentNames(ADEXS.Core.Domain.Model.ExternalReview,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.ExternalReview.UploadResult})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.Resend(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.Send(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalReview)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.Send(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Types.Enums.ExternalReviewSource)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.Send(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Types.Enums.ExternalReviewSource)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.Send(ADEXS.Core.Domain.Model.UserAccount,System.DateTime,System.String,System.String,ADEXS.Core.Domain.Model.ExternalReviewParticipant,System.Collections.Generic.List{ADEXS.Core.Domain.Model.ExternalReview.Document},ADEXS.Core.Domain.Model.ExternalReviewParticipants,System.Boolean,System.Boolean,ADEXS.Core.Types.Enums.EmailAppearance)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.SetStatusCancelCheckOut(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,ADEXS.Core.Types.Enums.ExternalReviewStatus,ADEXS.Globals.ScmEnums.ActionType,System.Guid,System.String,System.Boolean,System.Guid,Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.UpdateHistoryForInternalCompletion(ADEXS.Core.Domain.Model.ExternalReview)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.UpdateReviewer(ADEXS.Core.Domain.Model.ExternalReview,System.String,System.String,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.ValidateReviewSubmission(ADEXS.Core.Domain.Model.ExternalReview,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document},System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.ExternalReview.UploadResult})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.WorkflowExternalReviewFinishSend(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalReview)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.WorkflowPrepareExternalReview(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalReview)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.WorkflowSend(ADEXS.Core.Domain.Model.UserAccount,System.DateTime,System.String,System.String,ADEXS.Core.Domain.Model.ExternalReviewParticipant,System.Collections.Generic.List{ADEXS.Core.Domain.Model.ExternalReview.Document},ADEXS.Core.Domain.Model.ExternalReviewParticipants,System.Boolean,System.Boolean,System.Boolean,ADEXS.Core.Types.Enums.EmailAppearance)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.WriteHistoryForManualMatch(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.Document},ADEXS.Core.Types.Enums.ExternalReviewOnBehalfCompleteDocHistoryLogType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper.#ctor(ADEXS.Core.Domain.Repository.User.IUserAccountRepository,ADEXS.Core.Domain.Repository.ExternalReview.IExternalReviewRepository,ADEXS.Core.Domain.Repository.IQueueItemStateRepository,ADEXS.Core.Domain.Persistence.Model.IExternalReviewEmailAttachmentPersistence,ADEXS.Core.Domain.SharedStorage.IAtlasSharedStorageFactory,ADEXS.Core.Domain.IApplicationSettings)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper.EnqueueConversionRequest(System.String,ADEXS.Core.Domain.Model.ExternalReviewEmailAttachment,System.TimeSpan,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper.NewWordToPdfHelper(System.Int32,System.Guid,ADEXS.Core.Domain.Repository.User.IUserAccountRepository,ADEXS.Core.Domain.Repository.ExternalReview.IExternalReviewRepository,ADEXS.Core.Domain.Repository.ExternalReview.Helpers.IWordToPdfConversionHelper)~ADEXS.Core.Domain.Repository.ExternalReview.Helpers.IWordToPdfConversionHelper\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentEmbeddedPropertyMatcher.Match(ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentMatchingModel)~ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentMatchingModel\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentGeneralMatcher.Match(ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentMatchingModel)~ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentMatchingModel\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentMatchingModel.#ctor(ADEXS.Core.Domain.Model.ExternalReview,System.Collections.Generic.IList{ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewAttachment})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentNameMatcher.Match(ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentMatchingModel)~ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentMatchingModel\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentNameMatcher.Match(ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentMatchingModel)~ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentMatchingModel\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.ExternalReviewEmailAttachmentBuilder.BuildAttachments(System.Int32,System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.Document})~System.Collections.Generic.List{ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailAttachment}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.SafeToReplyEmailDomainRepository.AddApprovedEmailDomain(System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.SafeToReplyEmailDomainRepository.EmailAddress.#ctor(System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.SafeToReplyEmailDomainRepository.IsApprovedEmailDomain(System.Int32,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalSecurityMapRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ExternalSystemType,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalSecurityMapRepository.DeleteAll(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ExternalSystemType,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalSecurityMapRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalSecurityMap,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalSystemUser.ExternalSystemUserRepository.GetAccountMap(ADEXS.Core.Types.Enums.ExternalSystemType,System.Int32)~ADEXS.Core.Domain.Model.AccountMap\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalSystemUser.ExternalSystemUserRepository.SaveAccountMap(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ExternalSystemType,System.String,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormDocumentRepository.CheckInFromString(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,ADEXS.Core.Domain.Model.Form,ADEXS.Core.Types.Constants.FileDataSource)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormDocumentRepository.CheckInFromString(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,ADEXS.Core.Domain.Model.Form,ADEXS.Core.Types.Constants.FileDataSource)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormDocumentRepository.GetExtendedCustomFormData(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Metadatas)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.FormRepository.FormInputFieldEx}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormDocumentRepository.Insert(System.Guid,ADEXS.Core.Domain.Model.Document,System.String,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Types.Constants.FileDataSource,System.String,ADEXS.Core.Domain.Model.Form)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormDocumentRepository.Insert(System.Guid,ADEXS.Core.Domain.Model.Document,System.String,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Types.Constants.FileDataSource,System.String,ADEXS.Core.Domain.Model.Form)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormDocumentRepository.InsertFromString(System.Guid,ADEXS.Core.Domain.Model.Form,System.String,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Types.Constants.FileDataSource,System.String)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormDocumentRepository.LoadDesign(System.Guid,System.Int32,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormDocumentRepository.LoadForm(System.Guid,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Form\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormDocumentRepository.LoadFormDocument(System.Guid,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormRepository.CanSetSubmitFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Form)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ForwardEventRegistrationRepository.SetForwardEventRegistrySubscription(ADEXS.Core.Domain.Model.ForwardEventRegistrationRequest)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Html.HtmlConversionRepository.ConvertedFileExists(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Html.HtmlConversionRepository.CreateTempFileForHtmlConversion(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.Html.HtmlConversionInputFormat,System.Boolean)~ADEXS.Core.Domain.Repository.Html.HtmlConversionDirectoryDetails\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Html.HtmlConversionRepository.GetContentLengthForConvertedFile(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Html.HtmlConversionRepository.GetStreamForConvertedFile(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ImageCreation.Barcode.Dispose\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ImageCreation.BarcodeRepository.GetPDF417Barcode(System.String,System.Drawing.Imaging.ImageFormat,System.Double)~ADEXS.Core.Domain.Repository.ImageCreation.IBarcode\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.Delete(ADEXS.Core.Domain.Model.InboundEmail,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.Delete(ADEXS.Core.Domain.Model.InboundEmail,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.IsInboundEmailNotDuplicate(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.IsValidInboundEmail(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.LoadByEmail(System.String,System.String)~ADEXS.Core.Domain.Model.InboundEmail\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.LoadWithFolderSecurity(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.InboundEmails\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.Provision(ADEXS.Core.Domain.Model.Folder,ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.InboundEmail\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.RemoveVanityEmailDomain(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.RemoveVanityEmailDomain(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.InboundEmail)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.InboundEmail)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.SetVanityEmailDomain(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.SetVanityEmailDomain(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.ToData(ADEXS.Core.Domain.Model.InboundEmail)~ADEXS.Core.Domain.Repository.ObjectHistory.InboundEmailData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.TransferEmailAssignment(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundFaxRepository.InboundFaxRepository.DeactivateByAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundFaxRepository.InboundFaxRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.InboundFax)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundFaxRepository.InboundFaxRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.InboundFax)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundFaxRepository.InboundFaxRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.InboundFax)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundFaxRepository.InboundFaxRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.InboundFax)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundFaxRepository.InboundFaxRepository.ToData(ADEXS.Core.Domain.Model.InboundFax)~ADEXS.Core.Domain.Repository.ObjectHistory.InboundFaxData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundFaxRepository.InboundFaxRepository.TransferFaxAssignment(System.Guid,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.GeneratePreviewImages(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32[],ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.GeneratePreviewImagesForTransientDocument(System.String,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32[],ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.SharedStorageUseCase)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.GetBasePreviewImagePath(System.Int32,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.GetBasePreviewImagePath(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.GetLWDPDocumentPath(System.Int32,System.String,ADEXS.Core.Domain.LWDP.ImageScale)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.GetLWDPDocumentPath(System.Int32,System.String,ADEXS.Core.Domain.LWDP.ImageScale)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.GetLWDPDocumentPathForTransientDoc(System.String,ADEXS.Core.Domain.LWDP.ImageScale)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.GetLWDPDocumentPathForTransientDoc(System.String,ADEXS.Core.Domain.LWDP.ImageScale)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.GetPageImageAvailability(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.GetPagesAvailability(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.LWDP.ImageScale,System.Boolean)~System.Boolean[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.IsPageImageAvailableForAllPages(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.LWDP.ImageScale)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.RetrievePageImageFileNames(System.Int32,System.Int32)~System.Collections.Generic.IEnumerable{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.AugmentedMetadataFieldRepository.LoadByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~LanguageExt.Option{ADEXS.Core.Domain.Model.MetadataField}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.AugmentedMetadataFieldRepository.LoadWithAugmentedByAccountIdFlat(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~ADEXS.Core.Domain.Model.MetadataFields\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSetProcessor.ShouldUpdateCache~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSetProcessor.ShouldUpdateCache~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSetProcessor.ShouldUpdateCache~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataFieldRepository.Delete(System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataFieldRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataField)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataGroupRepository.Delete(System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataGroupRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataGroup,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataGroupRepository.Validate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataGroup,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataGroupRepository.Validate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataGroup,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ApplyMetadata(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CopyResults,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.CreateChangeHistoryJArray(ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas,System.Boolean)~Newtonsoft.Json.Linq.JArray\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.CreateChangeHistoryJArray(ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas,System.Boolean)~Newtonsoft.Json.Linq.JArray\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.DeleteByMetadataGroup(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.MetadataGroup)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.DoSave(ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MetadataSaveContext)~ADEXS.Core.Domain.Persistence.Model.CustomRuleEventParameters\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.EvaluateNameTemplate(ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.EvaluateReferenceTypeValue(ADEXS.Core.Domain.Model.Metadata)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.FormatMetaValue(ADEXS.Core.Domain.Model.Metadata,System.Globalization.CultureInfo)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.FormatMetaValue(System.String,ADEXS.Core.Types.Enums.DataType,System.Globalization.CultureInfo)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.GetAddMapKey(ADEXS.Core.Domain.Model.Metadata)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.GetCascadingFieldSetResult(System.Guid,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSet\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.GetCascadingTypeAheadValues(System.Guid,System.Guid,System.Collections.Generic.List{System.String},System.Int32)~System.Collections.Generic.SortedList{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.GetCascadingTypeAheadValues(System.Guid,System.Guid,System.Collections.Generic.List{System.String},System.Int32,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSet})~System.Collections.Generic.SortedList{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.GetRemoveMapKey(ADEXS.Core.Domain.Model.Metadata)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.IsValidCascadeValue(System.Int32,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},ADEXS.Core.Domain.Model.Metadata,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Load(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.ObjectType,System.Guid)~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Load(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid)~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.LoadByDocumentUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean)~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.LoadByFolderUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean)~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.LoadFromAncestorsWithMatchingMetadata(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String,System.Collections.Generic.List{System.String})~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.LoadWithGroupPlaceholders(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.Boolean)~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MergeMetadataFromParent(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MergeMetadataFromParent(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid})~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Parse(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataPlaceHolder},ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ParseOptions)~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Parse(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataPlaceHolder},ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ParseOptions)~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Parse(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataPlaceHolder},ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ParseOptions)~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Parse(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataPlaceHolder},ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ParseOptions)~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.PostSave(ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MetadataSaveContext)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.PostSaveHistory(ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MetadataSaveContext)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.PrepareMetadata(ADEXS.Core.Domain.Model.Metadata)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.PrepareMetadata(ADEXS.Core.Domain.Model.Metadata)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.PreSave(ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MetadataSaveContext)~System.Collections.Generic.IList{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.QueueForMetadataMerge(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.QueueForMetadataPropagation(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas,System.Boolean,System.Boolean,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadata.MetadataSaveOptions,System.String,System.Guid,System.Guid)~System.Collections.Generic.IList{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Base.INode,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadata.MetadataSaveOptions,System.String)~System.Collections.Generic.IList{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Base.INode,ADEXS.Core.Domain.Model.Metadatas,System.String,System.Guid)~System.Collections.Generic.IList{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.SetSequenceFields(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Types.Enums.ObjectType,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Validate(ADEXS.Core.Domain.Model.Metadatas,System.Globalization.CultureInfo,System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataValidationError}@,ADEXS.Core.Types.Enums.ObjectType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Validate(ADEXS.Core.Domain.Model.Metadatas,System.Globalization.CultureInfo,System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataValidationError}@,ADEXS.Core.Types.Enums.ObjectType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(ADEXS.Core.Domain.Model.Metadata,System.Globalization.CultureInfo,System.String@,ADEXS.Core.Types.Enums.ObjectType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(ADEXS.Core.Domain.Model.Metadata,System.Globalization.CultureInfo,System.String@,ADEXS.Core.Types.Enums.ObjectType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(System.String@,ADEXS.Core.Domain.Model.IMetadataField,System.Boolean,System.Globalization.CultureInfo,System.String@,ADEXS.Core.Types.Enums.ObjectType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(System.String@,System.String,ADEXS.Core.Types.Enums.DataType,System.Boolean,System.Globalization.CultureInfo,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(System.String@,System.String,ADEXS.Core.Types.Enums.DataType,System.Boolean,System.Globalization.CultureInfo,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ValidateTypeAndFormat(System.String@,System.String,ADEXS.Core.Types.Enums.DataType,System.Boolean,System.Globalization.CultureInfo,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataSetRepository.Delete(System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataSetRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataSet,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.Object}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)~System.Object\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)~System.Object\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.IsJsonMime(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.IsJsonMime(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.ParameterToString(System.Object)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.ReadAsBytes(System.IO.Stream)~System.Byte[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.SelectHeaderAccept(System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.SelectHeaderContentType(System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.SelectHeaderContentType(System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.UrlEncode(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.Configuration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ProblemDetails.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.ProblemDetails)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ProblemDetails.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.ProblemDetails)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ProblemDetails.GetHashCode~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ProblemDetails.ToString~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient.GetHashCode~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse.GetHashCode~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest.GetHashCode~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.UpdateReviewRequest.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.UpdateReviewRequest)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.UpdateReviewRequest.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.UpdateReviewRequest)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.UpdateReviewRequest.GetHashCode~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.Watcher.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.Watcher)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.Watcher.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.Watcher)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.Watcher.GetHashCode~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.NegotiationApiClient.CancelExternalReview(System.Int32,System.Guid,ADEXS.Core.Domain.Model.ExternalReview)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.NegotiationApiClient.CompleteExternalReviewInternally(System.Int32,System.Guid,ADEXS.Core.Domain.Model.ExternalReview)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.NegotiationApiClient.PrepareExternalReview(System.Int32,System.Guid,ADEXS.Core.Domain.Model.ExternalReview)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.NegotiationApiClient.StartExternalReview(System.Int32,System.Guid,ADEXS.Core.Domain.Model.ExternalReview)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.BuildNotificationMessage(System.String,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Domain.News.NotificationData,System.Boolean,ADEXS.Core.Domain.News.NotificationData.LinkAttributesList)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.BuildNotificationMessage(System.String,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Domain.News.NotificationData,System.Boolean,ADEXS.Core.Domain.News.NotificationData.LinkAttributesList)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.CreateNotification(ADEXS.Core.Domain.Model.QueueTasks.NewsTask,ADEXS.Core.Domain.News.NotificationUsers,ADEXS.Core.Domain.News.NotificationData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetDigestMessage(ADEXS.Core.Domain.Model.Notification)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetMessage(ADEXS.Core.Domain.Model.Notification)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetMessageForWebService(ADEXS.Core.Domain.Model.Notification)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetNotificationDigestEmailBodyAdmin(System.Collections.Generic.IList{ADEXS.Core.Domain.Model.Notification},ADEXS.Core.Domain.News.NotificationData.LinkAttributesList)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetNotificationDigestEmailBodyAdmin(System.Collections.Generic.IList{ADEXS.Core.Domain.Model.Notification},ADEXS.Core.Domain.News.NotificationData.LinkAttributesList)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetNotificationDigestEmailBodyDocument(System.Collections.Generic.IList{ADEXS.Core.Domain.Model.Notification},ADEXS.Core.Domain.News.NotificationData.LinkAttributesList)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetNotificationDigestEmailBodyDocument(System.Collections.Generic.IList{ADEXS.Core.Domain.Model.Notification},ADEXS.Core.Domain.News.NotificationData.LinkAttributesList)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetNotificationDigestMessage(ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Domain.News.NotificationData,ADEXS.Core.Domain.News.NotificationData.LinkAttributesList)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetNotificationDigestMessage(ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Domain.News.NotificationData,ADEXS.Core.Domain.News.NotificationData.LinkAttributesList)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetNotificationMessage(ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Domain.News.NotificationData,System.Boolean,ADEXS.Core.Domain.News.NotificationData.LinkAttributesList)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetNotificationMessage(ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Domain.News.NotificationData,System.Boolean,ADEXS.Core.Domain.News.NotificationData.LinkAttributesList)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetObjectLinkForDigest(System.Int32,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.String,ADEXS.Core.Domain.News.NotificationData.LinkAttributes)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetSubscribeAllSettingName(ADEXS.Globals.ScmEnums.ActionType)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.InsertIntoNewsQueue(ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.InsertIntoNewsQueueForUsersInRole(ADEXS.Core.Domain.Model.QueueTasks.NewsTask,ADEXS.Core.Types.Enums.UserRole)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.InsertIntoNotificationDigestEmailQueue(ADEXS.Core.Domain.Model.QueueTasks.NotificationDigestEmailTaskPayload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.IsSubscribedToActionType(ADEXS.Core.Domain.Model.Account,ADEXS.Globals.ScmEnums.ActionType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.IsSubscribedToActionType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.IsSubscribedToObject(ADEXS.Core.Domain.Model.NotificationSubscription)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.IsUserSubscribed(ADEXS.Core.Domain.Model.NotificationSubscription)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.LoadNotificationSubscription(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.ObjectType,System.Guid)~ADEXS.Core.Domain.Model.NotificationSubscription\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.MarkNotificationsAsRead(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.NotificationPreferenceSettingName(ADEXS.Globals.ScmEnums.ActionType)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.SaveAllNotificationPreferences(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IDictionary{ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.NotificationPreference})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.SaveNotificationSubscription(ADEXS.Core.Domain.Model.NotificationSubscription)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.SubscribeToActionType(ADEXS.Core.Domain.Model.Account,ADEXS.Globals.ScmEnums.ActionType,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.SubscribeToActionType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.ToggleSubscriptionForObjectType(ADEXS.Core.Domain.Model.NotificationSubscription)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.ToggleSubscriptionForObjectType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.CreateAccessTokenForUser(System.Guid,System.String,ADEXS.Core.Types.Enums.OAuthScope,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.OAuthKey\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.CreateAccessTokenWithoutSecret(System.Guid,ADEXS.Core.Types.Enums.OAuthScope,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.OAuthKey\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.CreateToken(System.Guid,System.DateTime)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.FireAPIRegistrationChangedEvent(ADEXS.Core.Domain.Persistence.Model.APIRegistration,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.SaveApiRegistration(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Persistence.Model.APIRegistration,System.String@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.SaveKey(ADEXS.Core.Domain.Model.OAuthKey,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.SyncApiRegistrationWithSite(ADEXS.Core.Domain.Persistence.Model.APIRegistration,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.SyncTokenWithSite(ADEXS.Core.Domain.Model.OAuthKey,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.VerifySignedTokenData(ADEXS.Core.Domain.Model.OAuthKey,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ILinkProvider.GetHref_ForLegacyHistory(ADEXS.Core.Domain.Model.Account,ADEXS.Globals.ScmEnums.ActionType,System.Guid,ADEXS.Core.Domain.AtlasUrl.UrlBuilder)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.CreateSingleLineMessage(System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.CreateSingleLineMessage(System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.FormatTemplateForDisplay(ADEXS.Core.Domain.Model.ObjectHistory,ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.FormatTemplateWithPlaceholders(ADEXS.Core.Domain.Model.UserAccount,System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.GetComment(ADEXS.Core.Domain.Model.ObjectHistory,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.GetMessage(ADEXS.Core.Domain.Model.ObjectHistory,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,ADEXS.Core.Domain.AtlasUrl.UrlBuilder)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.GetMessage(ADEXS.Core.Domain.Model.ObjectHistory,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,ADEXS.Core.Domain.AtlasUrl.UrlBuilder)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.GetMessage(ADEXS.Core.Domain.Model.ObjectHistory,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,ADEXS.Core.Domain.AtlasUrl.UrlBuilder)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.GetTemplate(ADEXS.Core.Domain.Model.ObjectHistory,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.GetTemplateName(ADEXS.Core.Domain.Model.ObjectHistory,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.MustacheString(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.MustacheString(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.ReplaceLocalDateTimes(System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.ReplaceLocalDateTimes(System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.ReplaceLocalDateTimes(System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.ReplaceWithLinks(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.ReplaceWithLinks(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.ReplaceWithLinks(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.IsSettingBlackListed(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.LoadByObjectIdentifier(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.HistoryObjectType,System.String,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ObjectHistory}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.LoadByObjectIdentifier(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.HistoryObjectType,System.String,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ObjectHistory}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.LogAccountHistory(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.LogAccountHistory(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.LogAccountSettingChange(System.Int32,System.Guid,System.String,System.Object,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.LogAccountSettingChange(System.Int32,System.Guid,System.String,System.Object,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.Save(ADEXS.Core.Domain.Model.ObjectHistory)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Obligation)~ADEXS.Core.Domain.Model.Obligation\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository.LoadByAgreementId(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Obligation}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository.LoadByDocumentUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Obligation}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository.RenderHistory(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ObligationHistory,ADEXS.Globals.ScmEnums.ActionType)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository.RenderHistory(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ObligationHistory,ADEXS.Globals.ScmEnums.ActionType)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository.RenderHistory(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ObligationHistory,ADEXS.Globals.ScmEnums.ActionType)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository.Update(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Obligation)~ADEXS.Core.Domain.Model.Obligation\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.CanCheckInDraft(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.OfficeWebAppsLock)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.CleanupExpiredLocks(System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.DeleteMinorVersion(System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.ExpireLock(ADEXS.Core.Domain.Model.OfficeWebAppsLock)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.GetDocumentVersion(ADEXS.Core.Domain.Model.Document,System.Int32,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.GetDocumentVersion(ADEXS.Core.Domain.Model.Document,System.Int32,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.GetMajorDocumentVersion(ADEXS.Core.Domain.Model.Document,System.Int32,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.GetTempLock(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.IncreaseMinorVersion(ADEXS.Core.Domain.Model.Document,System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.IncreaseMinorVersion(ADEXS.Core.Domain.Model.Document,System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.SaveTempLock(System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.ValidateLock(System.Int32,System.Guid,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.ValidateLock(System.Int32,System.Guid,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.VersionInactiveDrafts(System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpFileRepository.GetRequestContent(ADEXS.Core.Domain.Model.Account,System.Guid)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpFileRepository.GetResultContent(ADEXS.Core.Domain.Model.Account,System.Guid)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpFileRepository.RequestContentSize(ADEXS.Core.Domain.Model.Account,System.Guid)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpFileRepository.ResultContentSize(ADEXS.Core.Domain.Model.Account,System.Guid)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpFileRepository.SetRequestContent(ADEXS.Core.Domain.Model.Account,System.Guid,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpFileRepository.SetResultContent(ADEXS.Core.Domain.Model.Account,System.Guid,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpRepository.InsertRequestIntoQueue(System.Int32,System.Guid,System.Guid,System.Version,ADEXS.Core.Util.Core.Pair{System.String,System.String}[],System.String,System.String,System.Int32,System.Int64)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvinceStateRepository.GetProvinceStateByNameOrAbbreviation(System.String)~ADEXS.Core.Domain.Lookup.ProvinceState\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.GetSpringCmRole(ADEXS.Core.Domain.Model.DSGroup)~System.ValueTuple{System.String,ADEXS.Core.Types.Enums.UserRole}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.GetSpringCmRole(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DSGroup})~System.ValueTuple{System.String,ADEXS.Core.Types.Enums.UserRole}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.ProcessDsUserAccount(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Types.Enums.UserRole,System.Guid,ADEXS.Core.Domain.Model.DSGroupUser,System.Collections.Generic.List{System.Guid},ADEXS.Core.Domain.Model.UserAccount@,System.String@)~ADEXS.Core.Types.Enums.SyncProcessResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.RetrieveDSLanguageRegionSettings(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.SaveDsGroup(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.IDSGroup,ADEXS.Core.Domain.Model.Group@,System.String@)~ADEXS.Core.Types.Enums.SyncProcessResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.SyncDsUser(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.DSGroupUser)~ADEXS.Core.Domain.Model.UserAccount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.UpdateLanguageSetting(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.Dictionary{System.String,System.String})~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.UpdateLanguageSetting(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.Dictionary{System.String,System.String})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.UpdateLocalizationSettings(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.Dictionary{System.String,System.String})~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.AccountEntitlementCacheKey(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.AccountEntitlementCacheKey(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetDocuSignAccountBaseUrl(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetEntitledAccountsForDsUser(ADEXS.Core.Domain.Model.DSUserInfo,System.String)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.DSUserInfoAccount}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetJwtConstrainedDelegationAccessToken(System.String,System.String,System.String[],System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetJwtConstrainedDelegationAccessToken(System.String,System.String,System.String[],System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetJwtGrantAccessToken(System.String[],System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetJwtGrantAccessToken(System.String[],System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.IsDsOrgAdmin(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.MeTokenRedisKey(System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.AddProductGroup(System.Net.Http.HttpClient,System.Guid,System.String,ADEXS.Core.Domain.Model.Provisioning.AddProductGroupRequest)~ADEXS.Core.Domain.Repository.ProvisioningRepository.AddProductGroupResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.DeleteMagnumGroup(System.Net.Http.HttpClient,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.LoadGroupsByAccount(System.Net.Http.HttpClient,System.Guid)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.DSGroup}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSOpenIdConnectUrls.#ctor(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.GetPlanNameAbbrByPlanId(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.GetPlanNameAbbrByPlanId(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.ModuleSpecificAccountSettings(System.Collections.Generic.List{System.String})~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.PlanSpecificAccountSettings(System.String)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.PopulateCreateAccountDataCharges(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.ProvisioningCharge},ADEXS.Core.Domain.Model.CreateAccountData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.QueueItemStateRepository.Request(ADEXS.Core.Domain.Model.UserAccount,CLM.MessageDefines.Interfaces.IUserTask)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.QueueItemStateRepository.Status(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~ADEXS.Core.Types.Enums.QueueStatus\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.IReminderTemplateRepository.CalculateReminderDateTime(System.Collections.Generic.ICollection{System.String},ADEXS.Core.Domain.Model.ReminderTemplate,System.Guid)~System.DateTime\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.CalculateReminderDateTime(System.Collections.Generic.ICollection{System.String},ADEXS.Core.Domain.Model.ReminderTemplate,System.Guid)~System.DateTime\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.Save(System.Int32,System.Guid,ADEXS.Core.Domain.Model.ReminderTemplate)~ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.SaveResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.Save(System.Int32,System.Guid,ADEXS.Core.Domain.Model.ReminderTemplate)~ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.SaveResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.GetAndMapData``1(System.String,ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Func{System.String,``0})~LanguageExt.Either{System.Exception,LanguageExt.Option{``0}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.GetQueryId(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,LanguageExt.Option{ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters},ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~LanguageExt.Either{System.Exception,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.GetReportConfig(System.String,ADEXS.Core.Domain.Model.UserAccount,System.Guid)~LanguageExt.Either{System.Exception,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.GetReportLoadingState(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,LanguageExt.Option{ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters},ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~System.Tuple{ADEXS.Core.Types.Enums.ReportLoadingState,LanguageExt.Option{System.DateTime}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.LoadReportDataContainer(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,System.Boolean,System.Boolean)~LanguageExt.Either{System.Exception,LanguageExt.Option{ADEXS.Core.Domain.Model.Reporting.ReportDataContainer}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.ReportCacheUtilities.CacheKey.FromReportConfig(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,LanguageExt.Option{ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters},System.Boolean,System.Boolean,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.ReportCacheUtilities.GenerateUniqueFileName(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,System.Boolean,System.Boolean,System.Boolean)~LanguageExt.Either{System.Exception,LanguageExt.Unit}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.SetQueryId(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,System.Boolean,System.Boolean)~LanguageExt.Either{System.Exception,LanguageExt.Unit}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.SetReportLoadingState(ADEXS.Core.Types.Enums.ReportLoadingState,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,System.Boolean,System.Boolean,System.Boolean)~LanguageExt.Either{System.Exception,LanguageExt.Unit}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.CancelQuery(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.GetDataForQuery(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.PrestoQueryResults,ADEXS.Core.Domain.Model.Reporting.ReportQueryContext)~ADEXS.Core.Domain.Model.Reporting.ReportDataContainer\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.GetReportData(ADEXS.Core.Domain.Model.Reporting.ReportQueryContext,System.Globalization.CultureInfo,System.Boolean,LanguageExt.Seq{System.Func{ADEXS.Core.Domain.Model.Reporting.ReportQueryContext,System.ValueTuple{ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,LanguageExt.EitherAsync{LanguageExt.Common.Error,ADEXS.Core.Domain.Presto.PrestoQueryResults}}}},System.Boolean)~ADEXS.Core.Domain.Model.Reporting.ReportDataContainer\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.LoadAllScopeNames(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.LoadAllStageNames(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ValueScopeNames}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.LoadAllStepDisplayNames(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ValueScopeNames}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.LoadAllStepNames(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ValueScopeNames}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.LoadAllWorkflowNames(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.LoadStageNames(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ValueScopeNames}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.RunExportReport(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,System.String,ADEXS.Core.Types.Enums.ReportExportFormat,System.Globalization.CultureInfo)~ADEXS.Core.Domain.Model.Reporting.ExportResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.SaveReportAsFile(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.String,ADEXS.Core.Types.Enums.ReportExportFormat)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.CustomReportChartRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomReportChart,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.AnalyticsReportType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.DeleteByCustomReportUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetDefaultAgreementsApproachingRenewalReportConfiguration(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetDefaultAgreementsExpiringReportConfiguration(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetDefaultObligationsReportConfiguration(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetDefaultProcessInsightsReportConfiguration(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String},System.Guid)~ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetDefaultPublicDocumentReportConfiguration(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReportConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetDefaultReportConfiguration(ADEXS.Core.Types.Enums.AnalyticsReportType,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Presto.Reports.ReportConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.LoadDefaultModernReportConfigs(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Reports.ReportConfiguration}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.LoadReportConfigByConfigUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.AnalyticsReportType)~ADEXS.Core.Domain.Presto.Reports.ReportConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.LoadReportConfiguration(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.AnalyticsReportType)~ADEXS.Core.Domain.Presto.Reports.ReportConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AccessControl},System.String,System.String,System.String@)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.SaveCopyWithCurrentUsersAccess(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.String,System.String,System.String@)~System.Guid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.ValidateReportName(System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.RequestOriginRestrictionRepository.IRequestOriginRestrictionRepository.Save(ADEXS.Core.Domain.Model.RequestOriginRestriction,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.RequestOriginRestrictionRepository.IRequestOriginRestrictionRepository.ValidateAndFormatRequestOrigin(System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.RequestOriginRestrictionRepository.RequestOriginRestrictionRepository.Save(ADEXS.Core.Domain.Model.RequestOriginRestriction,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.RequestOriginRestrictionRepository.RequestOriginRestrictionRepository.ValidateAndFormatRequestOrigin(System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.RequestOriginRestrictionRepository.RequestOriginRestrictionRepository.ValidateAndFormatRequestOrigin(System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SavedSearchRepository.SavedSearchRepository.LoadByAccountId(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,ADEXS.Core.Domain.Repository.SavedSearchRepository.SavedSearchesSortType,System.Boolean,System.Int32,System.Nullable{System.Int32})~ADEXS.Core.Domain.Model.SavedSearchesV2\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ScheduleRepository.ScheduleRepository.NextOccurrence(ADEXS.Core.Domain.Model.Schedule,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ScheduleRepository.ScheduleRepository.NextOccurrence(ADEXS.Core.Domain.Model.Schedule,System.Int64,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ScheduleRepository.ScheduleRepository.NextOccurrence(ADEXS.Core.Domain.Model.Schedule,System.Int64,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ScopeEventRepository.ScopeEventRepository.Save(ADEXS.Core.Domain.Model.ScopeEventData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionService.CleanupTaskResources(ADEXS.Core.Domain.Model.QueueTasks.AnalyzerInsightsIngestionTask)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionService.InitiateAnalyzerInsightsTask(System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataPlaceHolder},ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.AnalyzerInsightsIngestionTask)~ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionTaskResult\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.AnalyzerInsightsIngestionTask)~ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionTaskResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.Helpers.AdvancedInsightsConfigurationHelper.IsAnalyzerEnabled(ADEXS.Core.Domain.AccountSettings)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.Helpers.AdvancedInsightsConfigurationHelper.IsAnalyzerEnabled(ADEXS.Core.Domain.Model.Account,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.InsightsMetadataAggregationService.SelectMatchingDocumentMetadatas(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.MetadataPlaceHolder})~System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Requests.MetadataItem}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealClauseSyncService.ConvertToSealClauses(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Guid})~ADEXS.Core.Domain.Repository.Seal.SealClauseSyncConvertResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealClauseSyncService.UpdateSealClauses(ADEXS.Core.Domain.Model.Account,ADEXS.SealAPIClient.Models.Requests.ClauseRequest)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.HttpBaseResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealConfigurationRepository.GetLicenseConfiguration(ADEXS.Core.Domain.Model.Account,System.String)~ADEXS.Core.Domain.Model.Seal.AnalyzerLicenseConfiguration\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.DeleteApiCredential(ADEXS.Core.Domain.Model.Account)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.DeleteSessionToken(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.GetApiCredential(ADEXS.Core.Domain.Model.Account)~ADEXS.Core.Domain.Repository.User.ApiCredential\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.GetSessionToken(ADEXS.Core.Domain.Model.Account,System.Boolean,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.ValidateCredentials(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.String)~ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.AuthResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealDigitalAppsService.DeleteDigitalApps(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.SealDigitalAppType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealDigitalAppsService.GetDigitalAppName(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.SealDigitalAppType,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealDigitalAppsService.GetDigitalApps(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.SealDigitalAppType,System.Boolean)~ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.DigitalAppsResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealDigitalAppsService.GetScorecard(ADEXS.Core.Domain.Model.Account,System.String,System.String)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.ScorecardResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealDigitalAppsService.StartDigitalApp(ADEXS.Core.Domain.Model.Account,System.String,System.String)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.DigitalAppStartResponse}}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.AddDefaultMetadata(System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Requests.MetadataItem},System.Int32,System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.DeleteDigitalAppsModelList(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.SealDigitalAppType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.DeleteModelList(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.DeleteSealExtractions(ADEXS.Core.Domain.Model.Account,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.GetContractData(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.Int32)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.ContractsResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.GetJobStatus(ADEXS.Core.Domain.Model.Account,System.String,System.String)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.JobResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.GetLogicAppsModelList(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.SealDigitalAppType,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.List{ADEXS.Core.Domain.Model.Seal.DigitalAppRule}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.GetModelList(ADEXS.Core.Domain.Model.Account,System.String)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.SystemMetadataResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.InsertIntoSealExtractionQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.InsertIntoSealExtractionQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.LoadSealExtractions(ADEXS.Core.Domain.Model.Account,System.Guid)~System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.SendUploadDocumentTask(ADEXS.Core.Domain.Repository.Seal.SendDocumentUploadParams)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.UploadDocumentResponse}}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.SendUploadDocumentTask(ADEXS.Core.Domain.Repository.Seal.SendDocumentUploadParams)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.UploadDocumentResponse}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.SealExtractionsTask,System.Boolean)~ADEXS.Core.Types.Enums.SealProcessingStatus\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.SealExtractionsTask,System.Boolean)~ADEXS.Core.Types.Enums.SealProcessingStatus\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.SealExtractionsTask,System.Boolean)~ADEXS.Core.Types.Enums.SealProcessingStatus\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.SealExtractionsTask,System.Boolean)~ADEXS.Core.Types.Enums.SealProcessingStatus\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.SealExtractionsTask,System.Boolean)~ADEXS.Core.Types.Enums.SealProcessingStatus\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealGetDatabagService.CheckIfUrisAreEqual(System.Uri,System.Uri)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealGetDatabagService.CheckIfUrisAreEqual(System.Uri,System.Uri)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealGetDatabagService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.SealGetDatabagTask)~ADEXS.Core.Types.Enums.SealGetDatabagProcessingStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealScorecardService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.SealScorecardTask,System.Boolean)~ADEXS.Core.Types.Enums.SealScorecardProcessingStatus\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealScorecardService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.SealScorecardTask,System.Boolean)~ADEXS.Core.Types.Enums.SealScorecardProcessingStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealScorecardsRepository.InsertIntoSealGetDatabagQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealScorecardsRepository.InsertIntoSealScorecardQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealScorecardsRepository.InsertIntoSealScorecardQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealScorecardsRepository.IsAnalyzerWordDocumentRiskMetadataCachingEnabled(ADEXS.Core.Domain.AccountSettings,ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealScorecardsRepository.Load(ADEXS.Core.Domain.Model.Account,System.Guid,ADEXS.Core.Domain.Model.FileData)~System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.ScorecardResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealScorecardsRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.SealAPIClient.Models.Responses.ScorecardResponse)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealScorecardsRepository.WriteScorecardDatabag(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.Document,ADEXS.SealAPIClient.Models.Responses.ScorecardResponseData,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealUserViewsService.ConvertSealModelToViewModel(ADEXS.SealAPIClient.Models.Responses.UserView)~ADEXS.Core.Domain.Model.Seal.UserViewModel\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealUserViewsService.DeleteUserViews(ADEXS.Core.Domain.Model.Account)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealUserViewsService.GetUserViews(ADEXS.Core.Domain.Model.Account,System.Boolean)~ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.UserViewsResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.JITSecurityCalculator.GetSecurities(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Repository.Security.Node})~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Repository.Security.JITSecurityResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.JITSecurityCalculator.GetSecurity(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Repository.Security.Node)~ADEXS.Core.Domain.Repository.Security.JITSecurityResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityAccessRuleRepository.CreateDefaultAllAccessRule(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityAccessRuleRepository.DeleteRule(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityAccessRuleRepository.GetObjectHistoryChanges(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule)~ADEXS.Core.Domain.Model.ObjectHistory\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityAccessRuleRepository.GetObjectHistoryChanges(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule)~ADEXS.Core.Domain.Model.ObjectHistory\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityAccessRuleRepository.SaveRule(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityAccessRuleRepository.SaveRule(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityAccessRuleRepository.TriggerValidationTask(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.SecurityAccessRuleValidationTrigger,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityAccessRuleRepository.ValidateAndSetErrorState(ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule,ADEXS.Core.Domain.Model.Groups,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party},System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataField})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityMetadataRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityMetadataRepository.DeleteAll(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityMetadataRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityMetadataRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityMetadataRepository.SaveAll(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.SecurityMetadata},System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityMetadataRepository.SaveAll(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.SecurityMetadata},System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.CalculateByObject(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.CalculateByUser(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.ExplicitSecurityLoadByObject(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType)~ADEXS.Core.Domain.Model.ExplicitSecurities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.SecurityLoadByObjectUid(ADEXS.Core.Domain.Model.Account,System.Guid,ADEXS.Core.Types.Enums.ObjectType)~ADEXS.Core.Domain.Model.Securities\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.GetSecurityItem(System.Collections.Generic.List{ADEXS.Core.Domain.Model.BaseSecurity},ADEXS.Core.Domain.Model.BaseSecurity,System.Boolean)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.GetSecurityName(ADEXS.Core.Domain.Model.BaseSecurity)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.KickstartSecurity(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.Int32,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.Load(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType)~ADEXS.Core.Domain.Model.BaseSecurities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.LoadByObjectUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.BaseSecurities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.RemoveSeeByObject(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.SecurityJitComputeSee(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.SecurityPurgeTrackerSave(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.SecurityDeletionStatus,System.Int64,System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.SecurityPurgeTrackerUpdate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.SecurityDeletionStatus,System.Int64,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.SecurityPurgeTrackerUpdateStatus(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.SecurityDeletionStatus)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.RevokeJitSecurityCatch(System.Int32,ADEXS.Core.Types.Enums.SecurityItemTable,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.Save(ADEXS.Core.Domain.Model.BaseSecurity,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~ADEXS.Core.Domain.Model.BaseSecurity\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.SaveWithDefaultInstance(ADEXS.Core.Domain.Model.BaseSecurity,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~ADEXS.Core.Domain.Model.BaseSecurity\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SessionRepository.SessionRepository.ExchangeApiTokenForUISession(System.String,System.String,System.Guid,ADEXS.Core.Domain.Model.UserAuthorizationData,System.String)~ADEXS.Core.Domain.Model.GateKeeper.ExchangeApiTokenForUISessionResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SfAuthorization.SfAuthorizationRepository.GetSfAuthorization(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Salesforce.DTO.SFAuthorization\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SfAuthorization.SfAuthorizationRepositoryFactory.GetSfAuthorizationRepository(ADEXS.Core.Domain.Model.Account)~ADEXS.Core.Domain.Repository.SfAuthorization.ISfAuthorizationRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SfAuthorization.SfScratchOrgAuthorizationRepository.GetSfAuthorization(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Salesforce.DTO.SFAuthorization\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.AllowInlineDownload(ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.AllowInlineDownload(ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.AllowInlineDownload(ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.CanShare(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.PublicShareLink)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.LoadSharedFolderContentsPaged(System.Int32,System.Guid,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.Boolean)~ADEXS.Core.Domain.Model.Base.ModelCollection{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.LoadSharedFolderDocument(System.Int32,System.Guid,ADEXS.Core.Domain.Model.PublicShareLink)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.LoadUnexpiredLinks(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.PublicShareLinks\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.LogDocumentDownloadHistoryAction(System.Int32,ADEXS.Core.Domain.Model.Document,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.LogDocumentDownloadHistoryAction(System.Int32,ADEXS.Core.Domain.Model.Document,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.LogDocumentViewHistoryAction(System.Int32,ADEXS.Core.Domain.Model.Document,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.LogDocumentViewHistoryAction(System.Int32,ADEXS.Core.Domain.Model.Document,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.SavePublicShareLink(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.PublicShareLink)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.SetSharePropertiesForFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.SetSharePropertiesForFolders(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.UsePdfForInline(ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.UsePdfForInline(ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.UsePdfForInline(ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.UserInformationForHistoryLog(ADEXS.Core.Domain.Model.Document,System.String)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SOAPAuthenticationTokenRepository.SyncAuthTokenWithSite(ADEXS.Core.Domain.Persistence.AuthenticationToken,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.GenerateSamlSloRequest(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Xml.XmlElement\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.IsAuthenticationApplicationRequest(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.IsAuthenticationApplicationRequest(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.IsAuthenticationApplicationRequest(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.TakeAccountSpecificCertForExtAuthProvider(ADEXS.Core.Domain.Model.Account,System.Boolean)~System.Security.Cryptography.X509Certificates.X509Certificate2\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.Validate(ADEXS.Core.Domain.Model.SAMLToken,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ValidateSamlResponse(System.Xml.XmlElement,ADEXS.Core.Domain.Model.Account,System.String,System.String@,System.String@,System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ValidateSamlResponse(System.Xml.XmlElement,ADEXS.Core.Domain.Model.Account,System.String,System.String@,System.String@,System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ValidCertDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ValidSigningCertDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.SealContentTypeHelper.GetExtractionContentFromMetadataValue(ADEXS.SealAPIClient.Models.Responses.Objects.MetadataValue,System.String@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.SealContentTypeHelper.GetSupportedSealFileType(ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.SealExtractionsHelper.FilterExtractions(System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem},System.Collections.Generic.IList{System.String})~System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.SealExtractionsHelper.FilterExtractions(System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem},System.Collections.Generic.IList{System.String})~System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.SealExtractionsHelper.OrderExtractionsByStartOffset(System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem})~System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.CompareTrackedContentTaskService.InitiateAsyncProcess(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Types.Enums.DocumentCompareSourceType,System.Guid,ADEXS.Core.Domain.Model.Document@)~ADEXS.Core.Types.Enums.CompareTrackedContentTaskInitiateResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.CompareTrackedContentTaskService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.CompareTrackedContentTask)~ADEXS.Core.Domain.Repository.StructuredDocument.Services.CompareTrackedContentResult\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.ITaskServiceXmlStorageHelper.Get(System.Guid,ADEXS.Core.Domain.Model.Account,System.String,System.Boolean)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TaskServiceXmlStorageHelper.Get(System.Guid,ADEXS.Core.Domain.Model.Account,System.String,System.Boolean)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TaskServiceXmlStorageHelper.SafeDelete(ADEXS.Core.Domain.Model.Account,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TaskServiceXmlStorageHelper.Save(System.Xml.Linq.XDocument,System.String,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TaskServiceXmlStorageHelper.Save(System.Xml.XmlDocument,System.String,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TrackedContentExtractionTaskService.CacheProcessingToken(System.Int32,System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TrackedContentExtractionTaskService.CheckIsProcessing(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TrackedContentExtractionTaskService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.TrackedContentExtractionsTask,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}@)~ADEXS.Core.Types.Enums.TrackedContentExtractionProcessingStatus\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TrackedContentExtractionTaskService.RemoveCachedProcessingKey(System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TrackedContentWritebackService.ProcessTrackedContentModels(System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel},System.Int32,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TrackedContentWritebackService.ProcessTrackedContentModels(System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel},System.Int32,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentModel}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.CurrencyEqualityComparer.Equals(System.String,System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.CurrencyEqualityComparer.Equals(System.String,System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.DateEqualityComparer.Equals(System.String,System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.DateEqualityComparer.Equals(System.String,System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.HtmlEqualityComparer.Equals(System.String,System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.HtmlEqualityComparer.Equals(System.String,System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.NumberEqualityComparer.Equals(System.String,System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.NumberEqualityComparer.Equals(System.String,System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.TextEqualityComparer.Equals(System.String,System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.TextEqualityComparer.Equals(System.String,System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.SalesforceGetDataProvider.BuildGetQuery(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}},Newtonsoft.Json.Linq.JObject)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.SalesforceGetDataProvider.ClearPickListCache(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.SalesforceGetDataProvider.GetSalesForceDescribeObjectResponse(System.Int32,System.String,ADEXS.Salesforce.Providers.IProvider,System.Int32)~System.Collections.Generic.List{ADEXS.Salesforce.DTO.Field}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.DataManipulationHelper.ReplaceEnd(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.DataManipulationHelper.SwapNumberSeparators(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.DataManipulationHelper.TrimNumberGroupSeparators(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.DataManipulationHelper.TrimToNumber(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.DataManipulationHelper.TrimToNumber(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.SalesforceHelper.GetSfAuthorization(ADEXS.Core.Domain.AccountSettings)~ADEXS.Salesforce.DTO.SFAuthorization\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.TrackedFieldHelper.IsPickList(ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.TrackedFieldHelper.ParseTrackedFieldAttributes(ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField)~ADEXS.Core.Domain.Model.DocLauncherConfig.AdditionalFieldAttributes\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.WritebackHelper.GetCheckSum(System.Collections.Generic.List{System.Guid})~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.BuildGetObjectQuery(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.BuildGetRelatedObjectIdQuery(System.String,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.NormalizeAndValidateValuesToUpdate(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}})~System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SubscribeAllRepository.SubscribeAllRepository.GetUserAccountsThatSubscribeToAllFoldersForActionType(System.Int32,ADEXS.Globals.ScmEnums.ActionType)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SubscribeAllRepository.SubscribeAllRepository.RemoveInvalidUsers(ADEXS.Core.Domain.Model.UserAccounts,ADEXS.Core.Types.Enums.ObjectType,System.Guid)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.ITermRepository.GetContentByOption(System.Int32,System.Guid,System.Guid,System.String)~ADEXS.Core.Domain.Model.TermOption\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.ITermRepository.GetContentByOption(System.Int32,System.Guid,System.String,System.String)~ADEXS.Core.Domain.Model.TermOption\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.SaveTermValidationResult.#ctor(ADEXS.Core.Types.Enums.SaveTermStatus)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.CheckIn(System.Int32,System.Guid,ADEXS.Core.Domain.Model.TermDocument)~ADEXS.Core.Domain.Repository.Term.SaveTermResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.CheckIn(System.Int32,System.Guid,ADEXS.Core.Domain.Model.TermDocument)~ADEXS.Core.Domain.Repository.Term.SaveTermResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.CheckIn(System.Int32,System.Guid,ADEXS.Core.Domain.Model.TermDocument)~ADEXS.Core.Domain.Repository.Term.SaveTermResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.Insert(System.Int32,System.Guid,ADEXS.Core.Domain.Model.TermDocument)~ADEXS.Core.Domain.Repository.Term.SaveTermResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.Insert(System.Int32,System.Guid,ADEXS.Core.Domain.Model.TermDocument)~ADEXS.Core.Domain.Repository.Term.SaveTermResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.Insert(System.Int32,System.Guid,ADEXS.Core.Domain.Model.TermDocument)~ADEXS.Core.Domain.Repository.Term.SaveTermResult\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.LoadByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.TermDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.ValidateClause(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.TermDocument,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Term.SaveTermValidationResult}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.ValidateClause(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.TermDocument,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Term.SaveTermValidationResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.ValidateOptions(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.TermDocument)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Term.SaveTermValidationResult}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.ValidateOptions(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.TermDocument)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Term.SaveTermValidationResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.ValidateRawTermDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.TermDocument)~ADEXS.Core.Domain.Repository.Term.ValidateRawTermDocumentResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Throttling.AbstractThrottlingRepository.Comparer.Equals(System.Object,System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Throttling.EmailThrottlingRepository.ShouldThrottle(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Throttling.EmailThrottlingRepository.ShouldThrottle(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Throttling.EmailThrottlingRepository.ShouldThrottleRecipients(System.Int32,System.Collections.Generic.List{ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailContact},System.Collections.Generic.Dictionary{System.Object,System.Int32},System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TrackedContent.GetTrackedContentService.InsertIntoGetTrackedContentQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TrackedContent.GetTrackedContentService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.GetTrackedContentTask,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.GetTrackedContentResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TrackedContent.ReplaceTrackedContentService.InsertIntoReplaceTrackedContentQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.ResultType,System.Guid,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel},System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TrackedContent.ReplaceTrackedContentService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.ReplaceTrackedContentTask,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.ReplaceTrackedContentResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.TransactionHistory.RouteTransaction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents,ADEXS.Globals.ScmEnums.ActionType,System.Boolean)~ADEXS.Core.Domain.Model.Transaction\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.TransactionHistory.RouteTransaction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents,ADEXS.Globals.ScmEnums.ActionType,System.Boolean)~ADEXS.Core.Domain.Model.Transaction\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.TransactionHistory.SendEmailDeliveryTask(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.TransactionHistory.SendFaxDeliveryTask(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.TransactionHistory.SendTransactionDelivery(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.TransactionHistory.ValidateTransaction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.TransactionHistory.ValidateTransaction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository.CreateTranslationLogRecord(ADEXS.Core.Domain.Translation.Models.TranslationUpdate,ADEXS.Core.Domain.Translation.Models.ImportTranslation,ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility,ADEXS.Core.Domain.Translation.Models.TranslationRegistry,ADEXS.Core.Domain.Translation.Models.AccountTranslation)~ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository.GetExportTranslations(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.TranslationNamespace,System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository.GetTranslationUpdateLogWithSource(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.TranslationNamespace,System.String,System.Guid)~ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository.SaveNamespaceTranslations(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Translation.Models.AccountTranslations)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository.SaveNamespaceTranslationUpdateLogFromImport(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Translation.Models.TranslationUpdate,ADEXS.Core.Domain.Translation.Models.ImportTranslationFile)~System.ValueTuple{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs,System.Collections.Generic.List{System.String}}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository.SaveNamespaceTranslationUpdateLogFromImport(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Translation.Models.TranslationUpdate,ADEXS.Core.Domain.Translation.Models.ImportTranslationFile)~System.ValueTuple{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs,System.Collections.Generic.List{System.String}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository.SaveTranslationUpdateLog(ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository.UpdateTranslationRegistries(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.TranslationNamespace)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.ExpandGroups(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contacts)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.ExpandGroups(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.ExpandGroups(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.Find(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String,System.String,System.String,System.String,ADEXS.Core.Types.Enums.ContactStatus[],System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.LoadByGroupUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.LoadByIds(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.Validate(ADEXS.Core.Domain.Model.Contact,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.RoleExists(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.RoleIsInUse(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.Validate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.Delete(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.LoadAll(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DelegationAccess}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.LogHistory(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.Nullable{System.DateTime},System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.Login(ADEXS.Core.Domain.Model.UserAccount,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.Login(ADEXS.Core.Domain.Model.UserAccount,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.DateTime,System.Boolean)~ADEXS.Core.Domain.Model.DelegationAccess\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.AddUserToSecurityGroup(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.BuildMembersToAdd(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Groups,ADEXS.Core.Domain.Model.Contact,System.Collections.Generic.List{System.String},System.String)~ADEXS.Core.Domain.Model.GroupMembers\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.BuildMembersToDelete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Groups,ADEXS.Core.Domain.Model.Groups,ADEXS.Core.Domain.Model.Contact,System.Collections.Generic.List{System.String},System.String)~ADEXS.Core.Domain.Model.GroupMembers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.DefaultFieldInvalid(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.EventGroupMembershipChanged(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.FinalizeDelete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.FinalizeDelete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.LoadMemberUserAccountUidsAcrossGroupUids(System.Int32,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.RemoveUserFromSecurityGroup(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group,ADEXS.Core.Domain.Model.GroupMember)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.RemoveUserFromSecurityGroup(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.SaveGroup(ADEXS.Core.Domain.Model.Group,ADEXS.Core.Domain.Model.Group,ADEXS.Core.Domain.Model.GroupMembers,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.SaveGroup(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.SaveGroupMembers(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.GroupMembers,ADEXS.Core.Domain.Model.GroupMembers)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.SetDistributionGroupMembership(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.SetGroupMembership(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact,System.Collections.Generic.List{System.Guid},ADEXS.Core.Domain.Model.Groups)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.SetSecurityGroupMembership(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.Validate(ADEXS.Core.Domain.Model.Group,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.ValidateMembers(ADEXS.Core.Domain.Model.GroupMembers,ADEXS.Core.Types.Enums.GroupType,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginDelegationRepository.FireLoginDelegationChangedEvent(ADEXS.Core.Domain.Model.LoginDelegation,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginDelegationRepository.Save(ADEXS.Core.Domain.Model.LoginDelegation,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginDelegationRepository.UpdateLoginDelegation(ADEXS.Core.Domain.Model.UserAccount,System.Int64,System.Int32)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginLockRepository.SyncLoginLockToWithSite(ADEXS.Core.Domain.Model.LoginLock,ADEXS.Core.Domain.AtlasUrl.AllocationUrl.ForwardingType,System.Int32,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.AddLogin(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.UserRole,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.ArrayList,System.Boolean)~ADEXS.Core.Domain.Persistence.Model.InviteLoginInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.AddLogin(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.UserRole,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.ArrayList,System.Boolean)~ADEXS.Core.Domain.Persistence.Model.InviteLoginInfo\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.GenerateLoginName(System.Int32,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.IsLoginNameInUse(System.String,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.IsLoginNameInUse(System.String,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.LoginPasswordHasExpired(ADEXS.Core.Domain.Model.Login,System.String@,System.DateTime@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.MarkLoginActive(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.PersistLogin(ADEXS.Core.Domain.Model.Login,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.RemoveLogin(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.RequestPasswordReset(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login)~ADEXS.Core.Domain.Repository.User.RequestPasswordResetResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.RequirePasswordChange(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.SetLoginPassword(ADEXS.Core.Domain.Model.Login,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.SetUserLoginAndPassword(ADEXS.Core.Domain.Model.Login,System.String,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.SyncLogin(System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.ValidateNewUserLogin(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.PublicUserRepository.SaveAuthorization(ADEXS.Core.Domain.Model.PublicUserAuthorizationInfo)~ADEXS.Core.Domain.Model.PublicUserAuthorizationInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ResetPasswordRequestRepository.Save(ADEXS.Core.Domain.Model.ResetPasswordRequest)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.DisableTwoFactorAuthentication(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.EnableTwoFactorAuthentication(ADEXS.Core.Domain.Model.Login)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TwoFactorKey}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.EnableTwoFactorAuthentication(ADEXS.Core.Domain.Model.Login)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TwoFactorKey}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.EnableTwoFactorAuthentication(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TwoFactorKey}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.GeneratePinAtInterval(System.String,System.Int64,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.GetTwoFactorIssuer(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.GetTwoFactorState(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Repository.User.TwoFactorState\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.SyncTwoFactorKeysWithSite(System.Int32,System.Guid,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.SyncTwoFactorKeysWithSite(System.Int32,System.Guid,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.SyncTwoFactorKeysWithSite(System.Int32,System.Guid,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.ValidateTwoFactorPin(ADEXS.Core.Domain.Model.Login,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.AccountAllowsLoginHours(ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Nullable{System.DateTime}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.AccountAllowsLoginHours(ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Nullable{System.DateTime}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.AccountAllowsLoginHours(ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Nullable{System.DateTime}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.AssignSettings(ADEXS.Core.Domain.Model.UserAccount,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.CanPasswordLogin(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.ChangeRole(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.UserRole)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.ChangeRole(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.UserRole,System.Guid)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.ChangeRole(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.UserRole,System.Guid)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.ChangeRole(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.UserRole,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.DeleteRole(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.DeleteRole(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.DiffProperties(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String},System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.DisableUserAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.EnableUserAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.FireUserAccountChangedEvent(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.GetUserAccountStatus(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Types.Enums.ContactStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.LoadByIds(System.Int32,System.Guid,System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.MarkUserActive(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.RecalculateStatus(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.RemoveManager(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.String@,System.Boolean,ADEXS.Core.Domain.Model.Login)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Validate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Validate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Validate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Validate(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserActionRepository.GetUserAccountUniqueDaysWithAction(ADEXS.Core.Domain.Model.UserAccount)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserActionRepository.LogUserAction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.LoadByUidWithPrivilegeCheck(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Workflow.WorkerPool\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.ReplaceRemovedUserTask(ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.ReplaceRemovedUserTask(ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.RetrieveWorkerPoolEnabledLogic(ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess)~ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.Save(System.Int32,ADEXS.Core.Domain.Model.Workflow.WorkerPool,ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccesses)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.Save(System.Int32,ADEXS.Core.Domain.Model.Workflow.WorkerPool,ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccesses)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.UpdateWorkerPoolAccessesLogic(ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccesses)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient._LoadContactsProperty(System.String)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient._LoadContactsProperty(System.String)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient._LoadDocumentsProperty(System.String)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient._LoadDocumentsProperty(System.String)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient._LoadFoldersProperty(System.String)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient._LoadFoldersProperty(System.String)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient._LoadUsersProperty(System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient._LoadUsersProperty(System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.SubmitWorkItem(System.String,System.String,System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,ADEXS.Core.Domain.Model.UserAccount,System.Object[])\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.UpdateDocumentHistory(ADEXS.Core.Domain.Model.DocumentWorkflowHistoryData,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.UpdateWorkItemVariables(System.String,System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.UpdateWorkItemVariables(System.String,System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChoiceClient.RecordChoice(System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem)~ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChoiceClient.RecordChoice(System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem)~ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChoiceClient.RecordChoice(System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem)~ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendForExternalReviewClient.SubmitWorkItem(System.String,System.String,System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,ADEXS.Core.Domain.Model.UserAccount,System.Object[])\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.RoutingClient.RecordRoutingDecision(System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem)~ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientPropertyHandler.#ctor(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientVariableHandler.#ctor(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.#ctor(System.Guid,ADEXS.Core.Domain.Model.Workflow.Instance)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.#ctor(System.Guid,ADEXS.Core.Domain.Model.Workflow.Instance,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.#ctor(System.Guid,ADEXS.Core.Domain.Model.Workflow.WorkItem)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext._SendErrorNotificationEmail(System.String,System.Exception)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogActivityErrorWithPII(System.String,System.Exception,System.String[])\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogActivityMessageWithPII(System.String,System.Exception,System.String[])\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogActivityMessageWithPII(System.String,System.String[])\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogActivityMessageWithPIIAndSecrets(System.String,System.String[],System.String[])\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.RemoteWorkflowClient.#ctor(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.RemoteWorkflowClient.GetUrl(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.RemoteWorkflowClient.RouteRemoteRequest(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Util.Net.RemoteCommon.RetryableRemoteRequest{ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowClient,System.Boolean})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.RemoteWorkflowClient.RouteRemoteRequest(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Util.Net.RemoteCommon.RetryableRemoteRequest{ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowClient,System.Boolean})\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary._GetRevision(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,System.Int32)~ADEXS.Core.Domain.Model.Workflow.Revision\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary._GetRevision(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,System.Int32)~ADEXS.Core.Domain.Model.Workflow.Revision\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary._GetRevision(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,System.Int32)~ADEXS.Core.Domain.Model.Workflow.Revision\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.CreateNewWorkflowDefinition(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.Workflow.Definition\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.CreateNewWorkflowDefinition(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.Workflow.Definition\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.CreateNewWorkflowDefinition(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.Workflow.Definition\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.ExportWorkflowDefinition(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.FormatActivityVariableName(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.FormatActivityVariableName(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.FormatActivityVariableName(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.FormatInstanceVariableName(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.FormatInstanceVariableName(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.FormatInstanceVariableName(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.FormatLocalVariableName(System.Int32,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.FormatLocalVariableName(System.Int32,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.FormatLocalVariableName(System.Int32,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.LoadWorkItem(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VersionWorkflow(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Int32,System.Int32,System.String)~ADEXS.Core.Domain.Model.Workflow.Version\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.VersionWorkflow(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,System.Int32,System.Int32,System.String)~ADEXS.Core.Domain.Model.Workflow.Version\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.#ctor(System.Int32,System.Guid,ADEXS.Core.Domain.Model.Workflow.WorkItem)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.#ctor(System.Int32,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.Assign(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.Assign(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.CanAssign(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.CanAssignToUser(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.CanUnassign(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Exceptions.PublicException@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.GetAssignmentTargets(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.Workflow.Compatibility.IResourceCompatibility}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.Reassign(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.SetDocuments(System.String,ADEXS.Core.Domain.Model.Documents)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.SetFolders(System.String,ADEXS.Core.Domain.Model.Folders)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.Submit(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.Submit(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.Unassign(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.Unassign(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.LegacyChildWorkflowData.ToString~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.#ctor(ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.#ctor(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceHandlerCompatibility.QueryContacts(System.Int32,System.String,System.Data.IDataParameter[])~System.Data.IDataReader\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceHandlerCompatibility.QueryResourceIds(ADEXS.Core.Domain.Model.Account,System.String,System.Object[])~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceHandlerCompatibility.QueryResources(ADEXS.Core.Domain.Model.Account,System.String,System.Object[])~System.Data.IDataReader\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceHandlerCompatibility.QueryResources(ADEXS.Core.Domain.Model.Account,System.String,System.Object[])~System.Data.IDataReader\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceWrapper.#ctor(ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceWrapper.#ctor(ADEXS.Core.Domain.Repository.Workflow.Compatibility.IResourceCompatibility)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter.Convert(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter.ConvertESignatureParticipantArrayJson(Newtonsoft.Json.Linq.JToken,ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter.ExtendedData)~Newtonsoft.Json.Linq.JToken\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter.ConvertESignatureParticipantArrayJson(Newtonsoft.Json.Linq.JToken,ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter.ExtendedData)~Newtonsoft.Json.Linq.JToken\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter.FilterUnsupportedActivities(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter.UpdateUnsupportedProperties(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.#ctor(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.#ctor(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicContents.#ctor(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicVariables.#ctor(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicVariables.#ctor(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicVariables.Contains(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicVariables.Contains(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicVariables.Get``1(System.String)~``0\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicVariables.Get``1(System.String)~``0\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariable.GetXmlNode(System.String)~System.Xml.XmlNode\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariable.GetXmlNodes(System.String)~System.Xml.XmlNodeList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariables.#ctor(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariables.#ctor(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariables.Contains(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariables.Contains(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariables.ContainsKey(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariables.ContainsKey(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariables.Get(System.String)~System.Xml.XmlElement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariables.Get(System.String)~System.Xml.XmlElement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.EncodeXPath(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal.DynamicXmlVariable.GetXmlNode(System.String)~System.Xml.XmlNode\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal.DynamicXmlVariable.GetXmlNodes(System.String)~System.Xml.XmlNodeList\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal.EncodeXPath(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.IDynamicVariables.Get(System.String)~System.Object\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.IDynamicVariables.Get``1(System.String)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Dynamic.IDynamicXmlVariables.Get(System.String)~System.Xml.XmlElement\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.DynamicContextHelper.EncodeXpath(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.DynamicContextHelper.ProcessElement(System.Text.StringBuilder@,System.Text.StringBuilder,System.Boolean@)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Helper.WorkflowHelper.EncodeString(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Helper.WorkItemHelper.EvaluateWaitForNextStepBeforeTaskCompletion(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Helper.WorkItemHelper.ReloadWorkItemAndRemoveActivityProperties(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem@,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.InstanceHistoryRepository.LoadByInstanceAndActivity(System.Int32,System.Guid,ADEXS.Core.Domain.Model.Workflow.InstanceActivity)~ADEXS.Core.Domain.Model.Workflow.InstanceHistories\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.InstanceHistoryRepository.LoadByInstanceAndActivity(System.Int32,System.Guid,ADEXS.Core.Domain.Model.Workflow.InstanceActivity)~ADEXS.Core.Domain.Model.Workflow.InstanceHistories\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.InstanceHistoryRepository.LoadByInstanceAndActivity(System.Int32,System.Guid,ADEXS.Core.Domain.Model.Workflow.InstanceActivity)~ADEXS.Core.Domain.Model.Workflow.InstanceHistories\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.InstanceRepository.Abort(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Workflow.Instance,System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IActivityVariableHandler.Get(System.String)~System.Object\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IActivityVariableHandler.Get``1(System.String)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IBookmarkHandler.Get(System.String)~ADEXS.Core.Domain.Model.Workflow.InstanceActivityBookmark\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IClientFactory.Get(System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)~ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IContentHandler.Get(System.String)~System.Object\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IContentHandler.Get``1(System.String)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IContentHandler.GetType(System.String)~ADEXS.Core.Types.Enums.WorkflowVariableType\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IInstanceVariableHandler.Get(System.String)~System.Object\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IInstanceVariableHandler.Get``1(System.String)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IPropertyHandler.Get(System.String)~System.Object\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IPropertyHandler.Get``1(System.String,``0)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IVariableHandler.Get(System.String)~System.Object\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IVariableHandler.Get``1(System.String)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IVariableHandler.GetType(System.String)~ADEXS.Core.Types.Enums.WorkflowVariableType\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IXmlVariableHandler.Get(System.String)~System.Xml.XmlElement\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.GetContentValue(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.GetVariableValue(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.GetXmlVariableIds(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.GetXmlVariableIdsForUsers(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.ParsePropertyLoadType(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Repository.Workflow.Loaders.PropertyLoadType\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.ParsePropertyLoadType(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Repository.Workflow.Loaders.PropertyLoadType\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.ValidateNodeProperty(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Repository.Workflow.Loaders.PropertyLoadType,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.ValidateNodeProperty(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Repository.Workflow.Loaders.PropertyLoadType,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.ContactLoader.EvaluateEmailStringForGroups(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.Collections.Generic.List{System.String}@)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.ContactLoader.LoadContactsById(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.Boolean)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.ContactLoader.LoadContactsByPath(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.Boolean)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.ContactLoader.ParseContacts(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.Boolean)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.DocumentLoader.LoadDocumentsById(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.DocumentLoader.LoadDocumentsByPath(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.DocumentLoader.LoadDocumentsByXmlVariable(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.DocumentLoader.ParseDocuments(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.FolderLoader.LoadFoldersById(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.FolderLoader.LoadFoldersByPath(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.FolderLoader.LoadFoldersByXmlVariable(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.FolderLoader.ParseFolders(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.FormLoader.LoadFormsById(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Forms\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.FormLoader.LoadFormsByPath(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Forms\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.FormLoader.LoadFormsByPath(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Forms\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.FormLoader.LoadFormsByPath(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Forms\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.FormLoader.LoadFormsByPath(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Forms\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.FormLoader.ParseForms(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Forms\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.MetadataVariablePropertyLoader.ParseMetadataConfiguration(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.MetadataConfigurationCollection\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.GetValues(System.String,System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)~System.Object[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.GetValues(System.String,System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)~System.Object[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.GetValues(System.String,System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)~System.Object[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.GetValues(System.String,System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)~System.Object[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.IsLiteralToken(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.IsLiteralToken(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LegacyGenerateSqlFilter(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String@,System.String@,System.Collections.ArrayList@)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LegacyGenerateSqlFilter(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String@,System.String@,System.Collections.ArrayList@)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LegacyGenerateSqlFilter(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String@,System.String@,System.Collections.ArrayList@)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LegacyGenerateSqlFilter(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String@,System.String@,System.Collections.ArrayList@)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LegacyGenerateSqlFilter(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String@,System.String@,System.Collections.ArrayList@)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LegacyGenerateSqlFilter(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String@,System.String@,System.Collections.ArrayList@)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LoadUserAccountsById(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LoadUserAccountsByLegacySQL(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LoadUserAccountsByPath(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LoadUserAccountsByPath(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LoadUserAccountsByXmlVariable(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.ParseUserAccounts(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.RemoveNonWorkflowUsers(ADEXS.Core.Domain.Model.UserAccounts)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.WorkerPoolLoader.LoadWorkerPoolsById(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Workflow.WorkerPools\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.WorkerPoolLoader.LoadWorkerPoolsByName(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Workflow.WorkerPools\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.WorkerPoolLoader.LoadWorkerPoolsByXmlVariable(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Workflow.WorkerPools\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.WorkerPoolLoader.ParseWorkerPools(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Workflow.WorkerPools\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.WorkerPoolLoader.ParseWorkerPools(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Workflow.WorkerPools\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.LoggingHelper.BuildNDCTags(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)~System.String[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.LoggingHelper.FormatLogMessage(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.Exception)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.LoggingHelper.FormatLogMessage(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.Exception)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.PropertyExpressions.CompiledPropertyExpression.TryEvaluate(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.Object@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.Condition._Compare(System.IComparable,System.IComparable)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.Condition._ConvertToList(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~System.Collections.Generic.IList{System.IComparable}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.Condition._EvaluateComparables(System.String,System.Collections.Generic.IList{System.IComparable},System.Collections.Generic.IList{System.IComparable})~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.Condition._EvaluateComparables(System.String,System.Collections.Generic.IList{System.IComparable},System.Collections.Generic.IList{System.IComparable})~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.Condition._EvaluateComparables(System.String,System.Collections.Generic.IList{System.IComparable},System.Collections.Generic.IList{System.IComparable})~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.Condition._EvaluateComparables(System.String,System.Collections.Generic.IList{System.IComparable},System.Collections.Generic.IList{System.IComparable})~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.CustomTimeSpan.ConvertToTimeSpan(Newtonsoft.Json.Linq.JObject)~System.TimeSpan\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.CustomTimeSpan.ConvertToTimeSpan(Newtonsoft.Json.Linq.JObject)~System.TimeSpan\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.ParticipantCount.ToString~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.VariableUpdate.EvaluateName(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String@)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.VariableUpdate.EvaluateName(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String@)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.VariableUpdate.TryEvaluate(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionType@,System.String@,System.Object@,System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.VariableUpdate.TryEvaluate(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionType@,System.String@,System.Object@,System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WebServiceRepository.LoadAllForAccount(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Workflow.WebServices\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WebServiceRepository.LoadByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Workflow.WebService\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WebServiceRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Workflow.WebService)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.CastPropertyValue``1(System.String,System.Object,``0)~``0\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.CastPropertyValue``1(System.String,System.Object,``0)~``0\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.CastVariableValue``1(System.String,ADEXS.Core.Types.Enums.WorkflowVariableType,System.Object)~``0\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.CastVariableValueAsString(ADEXS.Core.Types.Enums.WorkflowVariableType,System.Object)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.DefaultValueFromVariableType(ADEXS.Core.Types.Enums.WorkflowVariableType)~System.Object\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.GetVariableTypeFromLegacyVariableType(System.String)~ADEXS.Core.Types.Enums.WorkflowVariableType\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.GetVariableTypeFromLegacyVariableType(System.String)~ADEXS.Core.Types.Enums.WorkflowVariableType\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.LoadUserAccountByValue(System.Int32,System.String)~ADEXS.Core.Domain.Model.UserAccount\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.TryParseVariableValue(System.Int32,ADEXS.Core.Types.Enums.WorkflowVariableType,System.Object,System.Object@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.TryParseVariableValue(System.Int32,ADEXS.Core.Types.Enums.WorkflowVariableType,System.Object,System.Object@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.EvaluateContent(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.EvaluateContent(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.EvaluateSystem(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.EvaluateSystem(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.EvaluateSystem(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.EvaluateValue(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.EvaluateValue(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.EvaluateValue(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.EvaluateVariable(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.EvaluateVariable(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.EvaluateXmlVariable(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.EvaluateXmlVariable(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ParseType(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionType\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ParseType(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionType\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ParseType(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionOptions)~ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ExpressionType\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.ParseXPath(System.String,System.String@,System.String@)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.StripPrefixes(System.String,System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression.StripPrefixes(System.String,System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowParameterBuilder.Add(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowParameterBuilder.Add(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowParameterBuilder.Add(System.Int32,ADEXS.Core.Types.Enums.ObjectType,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.AbortWorkflowBasedOnEngineVersion(ADEXS.Core.Domain.Model.Workflow.Instance)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.Assign(ADEXS.Core.Domain.Model.Workflow.WorkItem,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.ConvertDesignDefinition(DocuSign.CLM.Workflow.Core.Persistence.Model.Design)~DocuSign.CLM.Workflow.Core.Persistence.Model.Design\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.ConvertDesignDefinition(DocuSign.CLM.Workflow.Core.Persistence.Model.Design,System.String)~DocuSign.CLM.Workflow.Core.Persistence.Model.Design\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.ConvertLegacyDefinition(ADEXS.Core.Domain.Model.UserAccount,DocuSign.CLM.Workflow.Core.Persistence.Model.Design)~DocuSign.CLM.Workflow.Core.Persistence.Model.Design\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.GetRoundRobin(System.Int32,ADEXS.Core.Domain.Model.Workflow.WorkerPool,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess})~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.GetWorkerPoolAccess(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.GetWorkerPoolAccesses(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccesses\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.GetWorkflowConnectionString(System.Int32,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.LoadActivityCountsByAssignedUser(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Boolean,System.Boolean)~System.Collections.Generic.Dictionary{System.String,System.Int32}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.LoadDesign(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Workflow.Version,System.String)~DocuSign.CLM.Workflow.Core.Persistence.Model.Design\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.LoadWorkerPoolsByUserAccount(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Workflow.WorkerPools\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.LoadWorkItem(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.LoadWorkItemByUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Workflow.WorkItem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.LoadWorkItemsByDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Workflow.WorkItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.LoadWorkItemsByWorkerPoolUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Workflow.WorkItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.PauseWorkflowBasedOnEngineVersion(ADEXS.Core.Domain.Model.Workflow.Instance)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.PickNextAutoAssignUser(System.Int32,ADEXS.Core.Domain.Model.Workflow.WorkerPool)~System.Guid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.PickNextAutoAssignUser(System.Int32,ADEXS.Core.Domain.Model.Workflow.WorkerPool)~System.Guid\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.RemoveProperties(System.Int32,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.ResumeWorkflowBasedOnEngineVersion(ADEXS.Core.Domain.Model.Workflow.Instance)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.SaveWorkflowInstance(ADEXS.Core.Domain.Model.Workflow.Instance)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.SendHumanActivityTaskNotification(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.SendEmailResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.SendHumanActivityTaskNotification(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.SendEmailResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.SendStartWorkflow(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)~System.Guid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.SendStartWorkflow(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)~System.Guid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.UpdateOwnership(ADEXS.Core.Domain.Model.Workflow.WorkItem,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.DateTime)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.ValidateWorkflowName(System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowVersionNumber.ToString~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowVersionNumber.TryParse(System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowVersionNumber@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.LicensedFeatureCheck.GetBoolSetting(ADEXS.Core.Domain.AccountSettings,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.LicensedFeatureCheck.IsFeatureLicensed~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.LicensedFeatureCheck.IsFeatureLicensed~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.PasswordRules.GetHelpText(ADEXS.Core.Types.Enums.PasswordStrength)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.PasswordRules.IsValid(System.String,ADEXS.Core.Types.Enums.PasswordStrength,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.PasswordRules.PasswordStrength(System.String)~ADEXS.Core.Types.Enums.PasswordStrength\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.PasswordRules.RequiredPasswordStrength(ADEXS.Core.Domain.Model.Account)~ADEXS.Core.Types.Enums.PasswordStrength\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.PrivilegeCard.CanChangeUserRole(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.PrivilegeCard.CanDeleteUser(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.PrivilegeCard.CanEditContact(ADEXS.Core.Domain.Model.Contact)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.PrivilegeCard.CanModifyDistributionGroup(ADEXS.Core.Domain.Model.Group)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.PrivilegeCard.GetCard(ADEXS.Core.Domain.Model.Base.IPrivileged)~ADEXS.Core.Domain.Rules.PrivilegeCard\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.Validation.IsValidAddress(ADEXS.Core.Domain.Model.Contact)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.Validation.IsValidAddress(ADEXS.Core.Domain.Model.Contact)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.Validation.IsValidAddress(ADEXS.Core.Domain.Model.Contact)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.Validation.IsValidAddress(ADEXS.Core.Domain.Model.Delivery)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.Validation.IsValidAddress(ADEXS.Core.Domain.Model.Delivery)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.Validation.IsValidAddress(ADEXS.Core.Domain.Model.Delivery)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.Validation.IsValidZipCode(System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.Validation.IsValidZipCode(System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.Validation.IsValidZipCode(System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.BasicSearch.Replace(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.BasicSearch.ToString~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.ContentSearch.Replace(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.ContentSearch.ToString~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.LocationSearch.ToString~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.MetadataSearch.EnsureGroup(ADEXS.Core.Domain.Search.MetadataSearchGroup)~ADEXS.Core.Domain.Search.MetadataSearchGroup\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.MetadataSearch.Replace(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.MetadataSearchField.#ctor(ADEXS.Core.Domain.Model.Metadata)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.MetadataSearchField.Replace(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.MetadataSearchGroup.#ctor(System.Guid,System.String,ADEXS.Core.Domain.Search.MetadataSearchGroup.ExpandMode,System.Boolean,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.SearchHelpers.MergeDictionaries(System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.IList{ADEXS.ScmElasticCore.Indexing.MetadataIndexModel}},System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.IList{ADEXS.ScmElasticCore.Indexing.MetadataIndexModel}})~System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.IList{ADEXS.ScmElasticCore.Indexing.MetadataIndexModel}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.SearchHelpers.SortByAttributes(System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.IList{ADEXS.ScmElasticCore.Indexing.MetadataIndexModel}},System.Guid,ADEXS.Core.Domain.Search.SearchResults,ADEXS.Core.Domain.Lookup.Pager,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.SearchHelpers.TranslateActorAttribute(System.String,System.Collections.Generic.Dictionary{System.Guid,System.String},ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.SearchResults.Apply``1(ADEXS.Core.Types.Enums.ObjectType,ADEXS.ScmElasticCore.Search.ScmSearchRequest{``0},System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Search.SearchResult},ADEXS.ScmElasticCore.Interfaces.IElasticResult)~ADEXS.Core.Domain.Search.SearchResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.SearchResults.Apply``1(ADEXS.Core.Types.Enums.ObjectType,ADEXS.ScmElasticCore.Search.ScmSearchRequest{``0},System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Search.SearchResult},ADEXS.ScmElasticCore.Interfaces.IElasticResult)~ADEXS.Core.Domain.Search.SearchResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.SearchResults.Apply``2(ADEXS.Core.Types.Enums.ObjectType,ADEXS.ScmElasticCore.Search.ScmSearchRequest{``0},System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Search.SearchResult},ADEXS.ScmElasticCore.Interfaces.ISearchResult{``1})~ADEXS.Core.Domain.Search.SearchResults\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.SearchResults.Apply``2(ADEXS.Core.Types.Enums.ObjectType,ADEXS.ScmElasticCore.Search.ScmSearchRequest{``0},System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Search.SearchResult},ADEXS.ScmElasticCore.Interfaces.ISearchResult{``1})~ADEXS.Core.Domain.Search.SearchResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.Telemetry.SearchExecutedTelemetryProperties.ParseSearchQuery(ADEXS.Core.Domain.Search.SearchQuery)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.Telemetry.SearchTelemetry.EmitSearchBoxAction(ADEXS.Core.Domain.Search.Telemetry.SearchBoxTelemetryProperties)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.Telemetry.SearchTelemetry.EmitSearchExecuted(ADEXS.Core.Domain.Search.Telemetry.SearchExecutedTelemetryProperties)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.Telemetry.SearchTelemetry.EmitSearchItemsAction(ADEXS.Core.Domain.Search.Telemetry.SearchItemsTelemetryProperties)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.Telemetry.SearchTelemetry.EmitSearchResultsAction(ADEXS.Core.Domain.Search.Telemetry.SearchResultsTelemetryProperties)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.GetSecurityMap``1(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}@,ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.GetSecurityMap``1(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}@,ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.IsApplicable(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.ListSecurities(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Base.INode)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.ABACPolicyListResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.ListSecurities(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Base.INode)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.ABACPolicyListResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.LogWorkload(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Util.Core.LoggedStopWatch,System.Int32,ADEXS.Core.Domain.Model.ABAC.ABACSecurityEvaluationResponse,System.Int32,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.AbstractSecurityProvider`1.MakeRequest(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Object,System.Int32,System.String,ADEXS.Core.Util.Core.LoggedStopWatch,System.Int32@,System.Boolean@)~`0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ISecurityProviderList.Get~System.Collections.Generic.List{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityProvider}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.JustInTime.JITSecurityProvider.GetSecurityMap``1(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}@,ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.JustInTime.JITSecurityProvider.GetSecurityMap``1(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}@,ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.JustInTime.JITSecurityProvider.IsApplicable(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.JustInTime.JITSecurityProvider.LogWorkload(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Util.Core.LoggedStopWatch,System.Int32,ADEXS.Core.Domain.Model.JiTSecurityEvaluationResponse,System.Int32,System.Boolean)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.JustInTime.JITSecurityProvider.LogWorkload(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Util.Core.LoggedStopWatch,System.Int32,ADEXS.Core.Domain.Model.JiTSecurityEvaluationResponse,System.Int32,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.FormatObjectType(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.GetSecurityMap``1(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}@,ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.GetSecurityMap``1(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}@,ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.GetSecurityMap``1(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}@,ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.IsApplicable(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.QueryForSecurity(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap},ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.SalesforceSecurityWorkload)\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.QueryForSecurity(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap},ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.SalesforceSecurityWorkload)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.SecurityFilter.FilterSecurity``1(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Base.ModelCollection{``0},System.Collections.Generic.List{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityProvider},ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.SecurityFilter.GetPagerOverWrite(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Lookup.Pager,System.Collections.Generic.List{ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityProvider})~ADEXS.Core.Domain.Lookup.Pager\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.SecurityFilterCache.Add(System.Guid,System.Guid,ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.SecurityFilterCache.Clear\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.SecurityFilterCache.GetSecurityMap(System.Guid)~System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ServiceProtection.ServiceProtectionRegistry.PopulateRegistry(StructureMap.Registry)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ServiceProtection.TokenUtils.GetTokenDescriptor(System.Security.Cryptography.RSA,System.String,System.String,System.String,System.String)~Microsoft.IdentityModel.Tokens.SecurityTokenDescriptor\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ServiceProtection.TokenUtils.GetTokenDescriptor(System.Security.Cryptography.RSA,System.String,System.String,System.String,System.String)~Microsoft.IdentityModel.Tokens.SecurityTokenDescriptor\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasEncryptedSharedStorage.GetContentLength(System.Int32,System.String)~System.Int64\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasEncryptedSharedStorage.SaveFileFromStream(System.Int32,System.String,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasEncryptedSharedStorage.SaveFileFromStream(System.Int32,System.String,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasEncryptedSharedStorage.SaveFileFromStream(System.Int32,System.String,System.IO.Stream,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasEncryptedSharedStorage.SaveFileFromStream(System.Int32,System.String,System.IO.Stream,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasSharedStorageFactory.Dispose\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasSharedStorageFactory.GetSharedFileStorage(ADEXS.Core.Domain.Model.Account)~DocuSign.CLM.ContentStorage.Shared.ISharedStorage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasSharedStorageFactory.GetSharedFileStorage(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.SharedStorageUseCase)~DocuSign.CLM.ContentStorage.Shared.ISharedStorage\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AIMetadataHelper.AOMMetadataValues(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String,System.String)~ADEXS.Core.Domain.SmartAgreement.Models.AllowedValuesResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AIMetadataHelper.AOMMetadataValues(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String,System.String)~ADEXS.Core.Domain.SmartAgreement.Models.AllowedValuesResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AIMetadataHelper.AOMMetadataValues(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String,System.String)~ADEXS.Core.Domain.SmartAgreement.Models.AllowedValuesResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AIMetadataHelper.GetAllowedValues(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSet},System.String,System.String,System.Int32)~ADEXS.Core.Domain.SmartAgreement.Models.AllowedValuesResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AIModelManagement.AiModelManagement.GetAllowedModelItemsByAccount(ADEXS.Core.Domain.Model.Account)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AISInitiateTransactionService.CreateTransaction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AISTransactionProviderBase.IsAnalyzerSupportingNormalizedValue(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AISTransactionProviderBase.IsDocumentFileTypeSupported(ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.GetAvailableModels(ADEXS.Core.Domain.Model.UserAccount)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.GetAvailableModelsResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.GetExtractionsByLabelName(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.List{RulesEngineAPIClient.Model.Label})~System.Collections.Generic.Dictionary{System.String,System.Tuple{RulesEngineAPIClient.Model.LabelExtraction,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext}}}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.GetValue(ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction,ADEXS.Core.Types.Enums.ExtractionsDataType)~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.GetValue(ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction,ADEXS.Core.Types.Enums.ExtractionsDataType)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.GetValue(ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction,ADEXS.Core.Types.Enums.ExtractionsDataType)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.GetValueTypeOrDefault(ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction,RulesEngineAPIClient.Model.DataType)~System.ValueTuple{RulesEngineAPIClient.Model.DataType,ADEXS.Core.Types.Enums.ExtractionsDataType}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.PostBulkFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeFeedbackData},System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.LabelGroupType},System.Guid,System.Guid,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.PostBulkFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeFeedbackData},System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.LabelGroupType},System.Guid,System.Guid,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.PostFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.List{System.String},System.Guid,System.String,ADEXS.Core.Types.Enums.StagedMetadataStatus,ADEXS.Core.Types.Enums.AttributeFieldType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.TriggerBulkFeedbackTask(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Guid,System.Guid,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.TriggerFeedbackTask(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid,ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType,System.String,System.Guid,System.String,ADEXS.Core.Types.Enums.StagedMetadataStatus,ADEXS.Core.Types.Enums.AttributeFieldType,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.TriggerTask(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIIngestionService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IAPRAIIngestionTask)~ADEXS.Core.Types.Enums.APRAIIngestionStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIIngestionService.ProcessTransactionDocumentGlyphs(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.SmartAgreement.Models.Enums.AnalysisTriggerSource)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchCleanupService.CancelBatch(System.Int32,System.Guid,System.Action)~ADEXS.Core.Domain.SmartAgreement.CancelBatchTaskResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchCleanupService.InsertIntoBatchCleanupQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchReportService.BatchReportExists(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchReportService.CheckBatchReportStatus(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String@)~ADEXS.Core.Types.Enums.AIBatchReportStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchReportService.DeleteBatchReport(ADEXS.Core.Domain.SmartAgreement.Models.BatchReport)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchReportService.ExportToCsv(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentSubStatus},System.Int32,System.String@,System.Int32@)~ADEXS.Core.Domain.SmartAgreement.TransactionsCsvExportStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchReportService.GetBatchReport(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)~ADEXS.Core.Domain.SmartAgreement.Models.BatchReport\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchReportService.GetBatchReportFilePathCacheKey(System.Int32,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchReportService.GetBatchReportStream(ADEXS.Core.Domain.SmartAgreement.Models.BatchReport)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchReportService.InsertIntoAiAutofillErrorCsvCreationQueue(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchReportService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.AIAutofillErrorCsvCreationTask)~ADEXS.Core.Domain.SmartAgreement.TransactionsCsvExportStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.AIExtractionValueHelper.GetValue(System.String,System.String,ADEXS.Core.Types.Enums.ExtractionsDataType,ADEXS.Core.Types.Enums.AttributeFieldType)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.AIExtractionValueHelper.PeriodToLocalizedString(NodaTime.Period)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.AIExtractionValueHelper.ToStringNumberType(System.String,ADEXS.Core.Types.Enums.AttributeFieldType)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.AutofillProcessOrchestratorHelper.CompleteGlyphReconciliation(ADEXS.Core.Util.Loggers.IDiscreetLogger,System.Guid,System.Boolean,ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction,ADEXS.Core.Types.Enums.GlyphReconciliationStatus,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.CacheHelper.LoadPageNumber(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Boolean@)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.CacheHelper.SavePageNumber(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Int32,System.Boolean,System.Boolean)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IADMInsightsClient.Get(System.Guid,System.Guid,System.String,System.Nullable{System.Int32})~System.Threading.Tasks.Task{ADEXS.Core.Domain.SmartAgreement.Models.ADMInsightsResponse}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Models.BatchReport.#ctor(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.ADMInsightsRepository.Save(System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.ADMInsightRequest})~System.Threading.Tasks.Task{System.Boolean}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.APRMockedDataHelper.GetMockedData(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.IAPRExtractionsRepositoryFactory.Get(System.Int32,System.Guid)~ADEXS.Core.Domain.SmartAgreement.Repositories.IAPRExtractionsRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SealInitiateTransactionService.CreateTransaction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.CancelBatch(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Types.Enums.CancelBatchStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.CreateBatch(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String,ADEXS.Core.Domain.SmartAgreement.Models.Enums.AnalysisTriggerSource,ADEXS.Core.Types.Enums.AIProviderType,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatchValidationErrors@,System.Nullable{System.Int32})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.CreateTransaction(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid},System.Int32,ADEXS.Core.Types.Enums.AIProviderType,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatchValidationErrors@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.LoadBulkAnalysisJobs(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.SmartAgreement.Models.Enums.AnalysisTriggerSource,ADEXS.Core.Domain.Utilities.PagingAndDynamicFiltering)~ADEXS.Core.Domain.AIConfiguration.Models.BatchAnalyticsResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.LoadReviewJobDetail(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Utilities.PagingAndDynamicFiltering,System.Boolean,System.String)~System.Threading.Tasks.Task{ADEXS.Core.Domain.AIConfiguration.Models.JobReviewDetails}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.LoadStagedMetadatasByJobIdAndAttributeUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,ADEXS.Core.Domain.Utilities.PagingAndDynamicFiltering,System.Nullable{System.Guid})~ADEXS.Core.Domain.SmartAgreement.Models.ReviewResults\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.NormalizeMetadataValue(ADEXS.Core.Domain.Model.MetadataField,System.String,System.String@)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.ProcessReviewResult(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultRequest)~ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultResponse\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.ShouldUpdateBatch(ADEXS.Core.Domain.SmartAgreement.Models.UpdateBatchRequest,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.ShouldUpdateBatch(ADEXS.Core.Domain.SmartAgreement.Models.UpdateBatchRequest,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.TriggerBulkAnalysisJob(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.String,System.String,System.Collections.Generic.List{System.Guid},System.Collections.Generic.List{System.Guid},System.Guid,ADEXS.Core.Domain.SmartAgreement.Models.Enums.AnalysisTriggerSource)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.UpdateBatch(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.SmartAgreement.Models.UpdateBatchRequest)~ADEXS.Core.Types.Enums.UpdateBatchStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.StagedMetadataApplicationService.GroupAiExtractedValues(ADEXS.Core.Domain.Model.AIDocument.StagedMetadata,ADEXS.Core.Domain.SmartAgreement.Helpers.IAIExtractionValueHelper)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.StagedMetadataApplicationService.UpdateStagedMetadataSelectionChanged(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultResponse,ADEXS.Core.Domain.Model.AIDocument.StagedMetadata,ADEXS.Core.Domain.AIConfiguration.Models.MetaDataReviewResultItem,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.StagedMetadataApplicationService.UpdateStagedMetadatasForDocumentByFileDataUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadataItem})~ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadatasResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.StagedMetadataApplicationService.UpdateStagedMetadatasStatusOnly(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultRequest,ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultResponse,System.Collections.Generic.List{ADEXS.Core.Domain.AIConfiguration.Models.MetaDataReviewResultItem})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.AttributeSyncRule.Apply(ADEXS.Core.Domain.Model.Base.IModelCollection)~ADEXS.Core.Domain.Model.Base.IModelCollection\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.AttributeSyncRule.SetProperties(ADEXS.Core.Domain.Model.SyncRule)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.AttributeValueExcludeRule.FilterDocuments(ADEXS.Core.Domain.Model.Documents)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.AttributeValueExcludeRule.SetDescription\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.FolderExcludeRule.Apply(ADEXS.Core.Domain.Model.Base.IModelCollection)~ADEXS.Core.Domain.Model.Base.IModelCollection\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.FolderIncludeRule.Apply(ADEXS.Core.Domain.Model.Base.IModelCollection)~ADEXS.Core.Domain.Model.Base.IModelCollection\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.FolderSyncRule.SetProperties(ADEXS.Core.Domain.Model.SyncRule)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.SyncRuleFactory.Create(ADEXS.Core.Domain.Model.SyncRule)~ADEXS.Core.Domain.Sync.ISyncRule\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.SyncUser.#ctor(System.Int32,System.Guid,DocuSign.eSign.Model.UserInformation)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SynchronousWork.SynchronousWorkService.Execute(ADEXS.Core.Domain.SynchronousWork.IWork)~ADEXS.Core.Domain.SynchronousWork.WorkCompletionResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.AddTermSyncMetadata(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.CompareTrackedTerms(ADEXS.Core.Domain.Model.TrackedTerms,ADEXS.Core.Domain.Model.TrackedTerms)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermComparisonResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.CompareTrackedTerms(ADEXS.Core.Domain.Model.TrackedTerms,ADEXS.Core.Domain.Model.TrackedTerms)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermComparisonResult}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.CompareTrackedTerms(ADEXS.Core.Domain.Model.TrackedTerms,ADEXS.Core.Domain.Model.TrackedTerms)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermComparisonResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.GetComparisonXml(System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermComparisonResult})~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.GetComparisonXml(System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermComparisonResult})~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.GetComparisonXml(System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermComparisonResult})~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.GetTrackedTermsXml(ADEXS.Core.Domain.Model.TrackedTerms)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.GetTrackedTermsXml(ADEXS.Core.Domain.Model.TrackedTerms)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.GetTrackedTermsXml(ADEXS.Core.Domain.Model.TrackedTerms)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.IsSupported(ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.IsSupported(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.Document@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.ReplaceTrackedTerms(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.ResultType,System.Guid,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel},System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel}@)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.ReplaceTrackedTerms(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.ResultType,System.Guid,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel},System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel}@)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.RetrieveTrackedTermsFromDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.TrackedTerms\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.Sync(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermComparisonResult}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.AccountTranslations.Add(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Translation.Models.AccountTranslationModel})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationExportAttribute.#ctor(System.String,System.String,System.Boolean,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationRegistries.#ctor(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Translation.Models.TranslationRegistry})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationRegistries.FindRegistry(System.String)~ADEXS.Core.Domain.Translation.Models.TranslationRegistry\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationRegistryComparer.Equals(ADEXS.Core.Domain.Translation.Models.TranslationRegistry,ADEXS.Core.Domain.Translation.Models.TranslationRegistry)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationRegistryComparer.Equals(ADEXS.Core.Domain.Translation.Models.TranslationRegistry,ADEXS.Core.Domain.Translation.Models.TranslationRegistry)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationRegistryComparer.GetHashCode(ADEXS.Core.Domain.Translation.Models.TranslationRegistry)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationRegistryComparer.GetHashCode(ADEXS.Core.Domain.Translation.Models.TranslationRegistry)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogComparer.Equals(ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog,ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogComparer.Equals(ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog,ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogComparer.GetHashCode(ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs.#ctor(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs.Add(ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs.Add(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogModel})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationUpdates.Add(ADEXS.Core.Domain.Translation.Models.TranslationUpdates)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Models.TranslationUpdates.Add(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateModel})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ChangeLogFileWriter.CreateChangeLogTextFileArray(ADEXS.Core.Domain.Translation.Models.TranslationUpdate,ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs)~System.Byte[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ChangeLogFileWriter.CreateChangeLogTextFileArray(ADEXS.Core.Domain.Translation.Models.TranslationUpdate,ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs)~System.Byte[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ChangeLogFileWriter.CreateChangeLogTextFileArray(ADEXS.Core.Domain.Translation.Models.TranslationUpdate,ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs)~System.Byte[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ChangeLogFileWriter.FormatRecord(System.String,ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.BaseTranslationConverter.GetTranslationObjects(ADEXS.Core.Domain.Model.Account,System.String,ADEXS.Core.Types.Enums.TranslationNamespace,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.CsvConverter.EmitRow(System.Collections.Generic.List{System.Reflection.PropertyInfo},CsvHelper.CsvWriter,ADEXS.Core.Domain.Translation.Models.ExportTranslation)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.CsvConverter.ExportTranslationAutoMap`1.MapProperty(System.Reflection.PropertyInfo)~CsvHelper.Configuration.MemberMap\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.CsvConverter.GetFieldValueFromTemplate(ADEXS.Core.Domain.Model.Account,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.CsvConverter.ReplaceTemplate(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.XliffConverter.GetFileContents(ADEXS.Core.Domain.Model.Account,System.String,ADEXS.Core.Types.Enums.TranslationNamespace,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.XliffConverter.GetHeaderInfo(ADEXS.Core.Domain.Model.Account,System.IO.Stream)~ADEXS.Core.Domain.Translation.Models.ImportTranslationFile\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.XliffConverter.ParseDocument(ADEXS.Core.Domain.Model.Account,System.IO.Stream)~ADEXS.Core.Domain.Translation.Models.ImportTranslationFile\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.XliffConverter.ParseDocument(ADEXS.Core.Domain.Model.Account,System.IO.Stream)~ADEXS.Core.Domain.Translation.Models.ImportTranslationFile\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.AttributeExportUtility.GetExportTranslationGroups(ADEXS.Core.Domain.Translation.Models.TranslationRegistries)~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.AttributeExportUtility.GetMetadataFieldExportTranslation(ADEXS.Core.Domain.Model.MetadataField,System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations},ADEXS.Core.Domain.Translation.Models.TranslationRegistry)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.AttributeExportUtility.GetObjectKey``1(``0,ADEXS.Core.Domain.Translation.Models.TranslatableAttribute,System.Object)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.AttributeExportUtility.GetShortObjectKey(System.String,ADEXS.Core.Domain.Translation.Models.TranslationRegistry)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.AttributeExportUtility.GetUpdateLogSource(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog},ADEXS.Core.Domain.Translation.Models.TranslationRegistries)~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.GetDescription(ADEXS.Core.Domain.Translation.Models.TranslationRegistry)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.GetExportTranslation``1(``0,ADEXS.Core.Domain.Translation.Models.TranslationRegistry,System.Func{ADEXS.Core.Domain.Translation.Models.TranslationRegistry,System.String})~ADEXS.Core.Domain.Translation.Models.ExportTranslation\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.GetPropertyAttribute``1(``0,System.String[])~System.ValueTuple{System.Reflection.PropertyInfo,ADEXS.Core.Domain.Translation.Models.TranslatableAttribute}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.GetPropertyAttribute``1(``0,System.String[])~System.ValueTuple{System.Reflection.PropertyInfo,ADEXS.Core.Domain.Translation.Models.TranslatableAttribute}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.GetType(ADEXS.Core.Domain.Translation.Models.TranslationRegistry)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.GetType(ADEXS.Core.Domain.Translation.Models.TranslationRegistry)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.TranslationGrouping(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations},System.Guid)~ADEXS.Core.Domain.Translation.Models.ExportTranslations\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.DocumentGenerationExportUtility.ConvertTranslation(ADEXS.Core.Domain.Translation.Models.TranslationRegistry,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.DocumentGenerationExportUtility.ConvertTranslation(ADEXS.Core.Domain.Translation.Models.TranslationRegistry,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.DocumentGenerationExportUtility.CustomSort(ADEXS.Core.Domain.Translation.Models.ExportTranslation,ADEXS.Core.Domain.Translation.Models.ExportTranslation)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.DocumentGenerationExportUtility.CustomSort(ADEXS.Core.Domain.Translation.Models.ExportTranslation,ADEXS.Core.Domain.Translation.Models.ExportTranslation)~System.Int32\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.DocumentGenerationExportUtility.GetExportTranslationGroups(ADEXS.Core.Domain.Translation.Models.TranslationRegistries)~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.DocumentGenerationExportUtility.GetExportTranslationGroups(ADEXS.Core.Domain.Translation.Models.TranslationRegistries)~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.DocumentGenerationExportUtility.GetExportTranslationGroups(ADEXS.Core.Domain.Translation.Models.TranslationRegistries)~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.DocumentGenerationExportUtility.GetObjectKey``1(``0,ADEXS.Core.Domain.Translation.Models.TranslatableAttribute,System.Object)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.DocumentGenerationExportUtility.GetTranslatableObject(System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig},System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.DocumentGenerationExportUtility.FormField}},ADEXS.Core.Domain.Translation.Models.TranslationRegistry)~System.Object\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.DocumentGenerationExportUtility.GetUpdateLogSource(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog},ADEXS.Core.Domain.Translation.Models.TranslationRegistries)~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.DocumentGenerationExportUtility.GetUpdateLogSource(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog},ADEXS.Core.Domain.Translation.Models.TranslationRegistries)~System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.IRetrieveTranslationUtility.GetTranslationByProperty``1(System.Reflection.PropertyInfo,``0,ADEXS.Core.Types.Enums.TranslationNamespace)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.IRetrieveTranslationUtility.GetTranslationCollectionByProperty``1(System.Reflection.PropertyInfo,``0,ADEXS.Core.Types.Enums.TranslationNamespace)~System.Collections.Generic.IEnumerable{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.RetrieveTranslationUtility.GetTranslationByProperty``1(System.Reflection.PropertyInfo,``0,ADEXS.Core.Types.Enums.TranslationNamespace)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.RetrieveTranslationUtility.GetTranslationCollectionByProperty``1(System.Reflection.PropertyInfo,``0,ADEXS.Core.Types.Enums.TranslationNamespace)~System.Collections.Generic.IEnumerable{System.String}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.TranslationTaskUtility.GenerateUniqueFileName(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UserSync.UserSyncRepository.GenerateUniqueFileName(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.AccountUidUtilities.GenerateAccountUidFromInt(System.Int32)~System.Guid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.AccountUidUtilities.InsertClmCmAccountUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.AIBulkJobContentComposer.Parse(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid},System.Collections.Generic.List{System.Guid},System.Guid,System.Func{ADEXS.Core.Domain.Model.Document,System.Boolean},System.Action)~ADEXS.Core.Domain.Utilities.AIBulkJobContentComposerResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.AIDocumentUtilities.GetDateDay(System.DateTime)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.AnalyticsUtilities.GetHashedValue(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.AsposeLicenseSetter.GetLicenseStream~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.AsposeLicenseSetter.GetLicenseStream~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CssDefinitionGenerator.Validate(ADEXS.Core.Domain.Utilities.ColorModel)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CssDefinitionGenerator.Validate(ADEXS.Core.Domain.Utilities.ColorModel)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CssKeyframeGenerator.Validate(ADEXS.Core.Domain.Utilities.ColorModel)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CssKeyframeGenerator.Validate(ADEXS.Core.Domain.Utilities.ColorModel)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CssThemeBuilder.BuildLegacyCss(System.String,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CssThemeBuilder.BuildThemeCss(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CurrencyCodeCultureMap.GetSymbol(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.DictionaryExtensions.GetValueOrDefault``2(System.Collections.Generic.Dictionary{``0,``1},``0,``1)~``1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.DocumentUtilities.Rename(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.DSAuthTokenUtilities.GetResourcesFromPayload``1(System.IdentityModel.Tokens.Jwt.JwtPayload)~``0\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.DSAuthTokenUtilities.Verify(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.DSTokenVerificationResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.EnumExtensions.GetDescription(System.Enum)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.FolderUtilities.Rename(ADEXS.Core.Domain.Model.Folder,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.GuidGenerator.CreateUuidV5(System.Guid,System.String)~System.Guid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.GuidGenerator.TryCreateGuidFromClmAccountId(System.Int32,System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HttpClientExtensions.PostAsyncRetry(System.Net.Http.HttpClient,System.String,System.String,System.Int32,System.Int32,ADEXS.Core.Util.Loggers.IDiscreetLogger)~System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HttpClientExtensions.PostRetry(System.Net.Http.HttpClient,System.String,System.String,System.Int32,System.Int32,ADEXS.Core.Util.Loggers.IDiscreetLogger)~System.Net.Http.HttpResponseMessage\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HttpResponseMessageExtensions.IsServerErrorCode(System.Net.Http.HttpResponseMessage)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.IPRestriction.IpAddressMatch(System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.IPRestriction.IpAddressMatch(System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.IPRestriction.IsLocalIpAddress(System.Net.IPAddress)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.Language.QualtricsCode~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.Language.Validate(System.String)~ADEXS.Core.Domain.Utilities.Language\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.Language.WootricCode~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.NodeUtilities.ChangeDescription(ADEXS.Core.Domain.Model.Base.INode,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.NodeUtilities.CleanupName(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.NodeUtilities.GetWarningStringsIfUserDoesNotHaveAccessToNodes``1(System.Linq.ILookup{``0,ADEXS.Core.Domain.Model.UserAccount},ADEXS.Core.Domain.Model.Contacts,ADEXS.Core.Domain.Model.Base.ModelCollection{``0})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.NodeUtilities.IsTrashFolder(ADEXS.Core.Domain.Repository.DocumentRepository.DocumentSearchQuery)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.NodeUtilities.LongUnixFormat(ADEXS.Core.Domain.Model.Base.INode,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.NodeUtilities.MaxResultCountOnVisibleResults(ADEXS.Core.Domain.Lookup.Pager,System.Int32,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.NodeUtilities.Rename(ADEXS.Core.Domain.Model.Base.INode,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Boolean,System.String@,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.NodeUtilities.Save(ADEXS.Core.Domain.Model.Base.INode,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.NpsUtilities.GetPlanIdName(ADEXS.Core.Domain.Model.Account)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.NpsUtilities.GetPlanIdName(ADEXS.Core.Domain.Model.Account)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1308:Normalize strings to uppercase\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.OpentelemetryHeadersUtilities.GetTraceParent~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.OpentelemetryHeadersUtilities.GetTraceParent~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.OrderByExtensions.OrderBy``1(System.Linq.IQueryable{``0},ADEXS.Core.Domain.Utilities.IOrderBy)~System.Linq.IOrderedQueryable{``0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.OrderByExtensions.OrderByDescending``1(System.Linq.IQueryable{``0},ADEXS.Core.Domain.Utilities.IOrderBy)~System.Linq.IOrderedQueryable{``0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.PagingAndFiltering.Search``1(System.Collections.Generic.List{``0},System.Func{System.Collections.Generic.List{``0},System.String,System.Collections.Generic.List{``0}},System.Int32@)~System.Collections.Generic.List{``0}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.PeriodParser.TryParseAgreementPeriod(System.String,ADEXS.Core.Domain.Model.AgreementPeriod@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ResourceUtilities.ConvertDateTimeFormatFromMicrosoftToAngularJS(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ResourceUtilities.ConvertDateTimeFormatFromMicrosoftToAngularJS(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ResourceUtilities.FormatTemplate(System.String,System.Collections.Generic.IDictionary{System.String,System.String})~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ResourceUtilities.GetLanguageItems(ADEXS.Core.Domain.AccountSettings,ADEXS.Core.Types.Enums.SettingAuthTier,System.Boolean,System.Boolean)~System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ResourceUtilities.GetResourceSetKeys(System.Resources.ResourceManager)~System.Collections.Generic.IEnumerable{System.String}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ResourceUtilities.LanguageFromQuery(System.Collections.Specialized.NameValueCollection)~ADEXS.Core.Domain.Utilities.Language\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.ResourceUtilities.LanguagesFromCodes(System.String[],System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Utilities.Language}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.Retry.Do(System.Func{System.Boolean},System.TimeSpan,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.SalesforceUtilities.GetSfAuthorization(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Salesforce.DTO.SFAuthorization\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.SalesforceUtilities.UpdateSfUserIdFromDsId(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.SharedStorageExtensions.CopyFileFromSharedStorage(DocuSign.CLM.ContentStorage.Shared.ISharedStorage,System.Int32,System.String,System.String,ADEXS.Core.Util.Loggers.IDiscreetLogger)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.SharedStorageExtensions.CopyFileToSharedStorage(DocuSign.CLM.ContentStorage.Shared.ISharedStorage,System.Int32,System.String,System.String,ADEXS.Core.Util.Loggers.IDiscreetLogger,System.TimeSpan)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.SharedStorageExtensions.CopyStreamToSharedStorage(DocuSign.CLM.ContentStorage.Shared.ISharedStorage,System.Int32,System.IO.Stream,System.String,ADEXS.Core.Util.Loggers.IDiscreetLogger,System.TimeSpan)~System.Int64\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.SimpleCsvWriter.Dispose\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.SimpleCsvWriter.WriteRow(System.Collections.Generic.List{System.String})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.SimpleCsvWriter.WriteRow(System.Collections.Generic.List{System.String})\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.SimpleCsvWriter.WriteRow(System.Collections.Generic.List{System.String})\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.StreamUtilities.GetBytes(System.IO.Stream)~System.Byte[]\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.StringExtensions.RemoveLastInstanceOf(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.StringExtensions.RemoveLastInstanceOf(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.StringExtensions.ReplaceEnd(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.StringExtensions.ReplaceEnd(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.StringExtensions.SanitizeData(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.TypeExtension.GetDefaultValue(System.Type)~System.Object\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.UrlUtilities.ReplaceWithSiteSpecificDomain(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.UrlUtilities.ReplaceWithSiteSpecificDomain(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.AdvancedNumberFormatValidatorModel.ValidateParameters(System.String,System.String,System.Boolean)~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.CrossValidatorJsonConvertor.Create(System.Type,Newtonsoft.Json.Linq.JObject)~ADEXS.Core.Domain.Validation.ICrossValidator\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.CrossValidatorJsonConvertor.ReadJson(Newtonsoft.Json.JsonReader,System.Type,ADEXS.Core.Domain.Validation.ICrossValidator,System.Boolean,Newtonsoft.Json.JsonSerializer)~ADEXS.Core.Domain.Validation.ICrossValidator\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.IValidationFactory.Get(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Validation.ValidationInput)~ADEXS.Core.Domain.Validation.IValidator\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.ValidationFactory.Get(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Validation.ValidationInput)~ADEXS.Core.Domain.Validation.IValidator\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.ValidationRepository.Validate(ADEXS.Core.Domain.Validation.ValidationInput,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.DateCrossFieldValidator.Validate(System.DateTime,System.Collections.Generic.List{System.DateTime})~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.DateCrossFieldValidator.Validate(System.DateTime,System.Collections.Generic.List{System.DateTime})~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1502:Avoid excessive complexity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.DateCrossFieldValidator.Validate(System.DateTime,System.Collections.Generic.List{System.DateTime})~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.LengthValidator.getErrorMessage~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.LengthValidator.getErrorMessage~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.LengthValidator.Initialize(System.Collections.Generic.List{System.String},Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.LengthValidator.ValidationRule(System.String)~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.NumberFormatValidator.#ctor(ADEXS.Core.Domain.Validation.AdvancedNumberFormatValidatorModel,System.Collections.Generic.Dictionary{System.String,System.Boolean})\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.NumberFormatValidator.Initialize(System.Collections.Generic.List{System.String},Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.SSNValidator.ValidationRule(System.String)~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.SSNValidator.ValidationRule(System.String)~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.ApprovalWorkflowSnapshot.ActivityActionComments(System.String,System.DateTime,System.Int64)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.ApprovalWorkflowSnapshot.ActivityActionComments(System.String,System.DateTime,System.Int64)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.ApprovalWorkflowSnapshot.FindCommentForDate(System.Collections.Generic.IEnumerable{System.String},System.DateTime)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.ApprovalWorkflowSnapshot.FindCommentForDate(System.Collections.Generic.IEnumerable{System.String},System.DateTime)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.ApprovalWorkflowSnapshot.WorkflowHistorySnapshot(System.Guid,System.Int32,ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Wins.WorkflowSnapshot.ActivitySnapshot}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.ApprovalWorkflowSnapshot.WorkflowHistorySnapshot(System.Guid,System.Int32,ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Wins.WorkflowSnapshot.ActivitySnapshot}\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.ApprovalWorkflowSnapshot.WorkflowHistorySnapshot(System.Guid,System.Int32,ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Wins.WorkflowSnapshot.ActivitySnapshot}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.#ctor(ADEXS.Core.Domain.Model.ApprovalWorkflow,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.AddUpdateCommentsVariableStep(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.GenerateLinkXml(ADEXS.Core.Domain.Wins.DesignerLink)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.GetActions~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.GetActions~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.GetDefinition~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.InitialSteps\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.PlaceStep(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.PlaceStep(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.TimeToPaddedString(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.UpdateConfigInfo(ADEXS.Core.Domain.Wins.DesignerAction,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.WorkflowSnapshot.WorkflowSnapshotBase.ActivityComment(System.String,System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.WorkflowSnapshot.WorkflowSnapshotBase.ParticipantNames(System.Xml.XmlNode,System.String,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.WorkflowSnapshot.WorkflowSnapshotBase.WorkflowNodeAttributeValue(System.Xml.XmlNode,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlStepGenerators.EmailStep.GenerateStepXml~System.String\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.BuildSchema(ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNode,System.Xml.Schema.XmlSchemaElement)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.EncodeXmlElementName(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.GetNodesFromXml(System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNode}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.ParseXml(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.ReadAttribute(System.Xml.Schema.XmlSchemaAttribute,ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNode,System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.ReadParticle(System.Xml.Schema.XmlSchemaParticle,ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNode,System.Xml.Schema.XmlSchema,System.String,System.Collections.Hashtable)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.ReadSchema(ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNode,System.Xml.Schema.XmlSchema)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.ReadSchema(System.Collections.Generic.List{ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNode},System.Xml.Schema.XmlSchema)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.GetRemoteObject``1(System.String)~``0\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.RegisterChannel(System.String,System.Int32,System.Type)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.RegisterChannel(System.String,System.Int32,System.Type)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.RegisterPort(System.String,System.Int32)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.TryRemoteRequest``2(System.String,ADEXS.Core.Util.Net.RemoteCommon.RetryableRemoteRequest{``0,``1},System.Int32)~``1\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.TryRemoteRequest``2(System.String,ADEXS.Core.Util.Net.RemoteCommon.RetryableRemoteRequest{``0,``1},System.Int32,System.Int32)~``1\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.TryRemoteRequest``2(System.String,ADEXS.Core.Util.Net.RemoteCommon.RetryableRemoteRequest{``0,``1},System.Int32,System.Int32,System.Int32)~``1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.TryRemoteRequest``2(System.String,ADEXS.Core.Util.Net.RemoteCommon.RetryableRemoteRequest{``0,``1},System.Int32,System.Int32,System.Int32)~``1\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.TryRemoteRequest``2(System.String,ADEXS.Core.Util.Net.RemoteCommon.RetryableRemoteRequest{``0,``1},System.Int32,System.Int32,System.Int32)~``1\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.UnRegisterForRemoting(System.String,System.Int32)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.WINS.Repository.VersionRepository.CreateVersion(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)~ADEXS.Core.Domain.Model.Workflow.Version\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.WINS.Repository.VersionRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,System.String,System.Int32)~ADEXS.Core.Domain.Model.Workflow.Version\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.WINS.Repository.VersionRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,System.String,System.Int32)~ADEXS.Core.Domain.Model.Workflow.Version\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.WINS.Repository.VersionRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,System.String,System.Int32)~ADEXS.Core.Domain.Model.Workflow.Version\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.WINS.Repository.VersionRepository.SaveVersionLegacy(ADEXS.Core.Domain.Model.Workflow.Version,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.GetFeedbackValue(System.Globalization.CultureInfo,ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData,ADEXS.Core.Domain.Model.AIDocument.StagedMetadata)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.GetMetadataGroupDetails(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.RemoveAttributeGroupFromDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.Save(ADEXS.Core.Domain.Model.UserAccount,System.Globalization.CultureInfo,System.Guid,ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,System.Nullable{System.Guid},System.Guid,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance},ADEXS.Core.Domain.DataReview.DataReviewValidationContext)~ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.SendFeedback(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata},ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,System.Globalization.CultureInfo)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.SetAISuggestions(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup})~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.SetAllowedValues(ADEXS.Core.Domain.DataReview.Models.AttributeReviewData,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSet}@,ADEXS.Core.Domain.Model.AIDocument.StagedMetadata)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.ValidateValueConstraints(ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance},System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributePanelService.FilterReadonlyFields(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData})~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributePanelService.GetCustomAttributeGroupsNotInDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributePanelService.GetCustomAttributes(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Nullable{System.Guid})~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributePanelService.GetStandardAttributes(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributePanelService.UpdateAttributes(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData},System.String,System.String,System.Nullable{System.Guid})~ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributePanelService.UpdateDocumentNameAndDescription(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String)~ADEXS.Core.Domain.DataReview.Models.SaveDataReviewValidationError\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AbstractSettings.CacheItemName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.AuthRedirectUrl\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.DocGen_MaxRecursionCount\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.DocGen_MaxTagCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.DocuSignAccountBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.EchosignAccountCallbackURL\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.ElectronicSignatureEndPointUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.eSignRestBaseUrl\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_CustomerTranslation\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_CustomerTranslation_Admin\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_CustomerTranslation_Attributes\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_CustomerTranslation_DocumentGeneration\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_EnableClassicDashboard\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_EnableCoilDashboard\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_EnableCoilSprocket_Dashboard_UseNewActions\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_EnableCoilSprocket_Folder\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_EnableCoilSprocket_FolderWatchlist\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_EnableCoilSprocket_MyWatchlist\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_EnableCoilSprocket_Preview\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_EnableCoilSprocket_RecentDocuments\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_EnableCoilSprocket_WorkflowInbox\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_EnableCoilSprocket_WorkflowQueue\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Feature_EnableEOSFolderUsesFolderWidget\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.IsCustomLogoutUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.LogOutRedirectURL\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.RemoteWINSSlowURL\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.SealBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.SFApiUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.SFApiUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.SFDocTabUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.SSOEndpointUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.SSOSLOUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.WorkflowDesignApiEndpointUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Adm.AdmUtilities.AdmUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.AttributeDetailAnalytics.DocumentUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.DocumentAnalytics.DocumentUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.DocumentAnalytics.ReviewUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ACEResourceUrlPattern\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ADMRestApiUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AdobeSignRestApiUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AIREApiBaseUrl\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AllowedClientIds_ProfileNotification\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AOMRestApiUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AppExchangeSpringCMUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.APRBridgeApiRootUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AssignmentsApiBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AuthenticationApplicationRootUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AuthenticationApplicationServedSites\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AuthenticationSite\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AuthenticationSites\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.BlobPhysicalStorageDataPlaneAppIdUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.BlobPhysicalStorageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.BlobSharedStorageDataPlaneAppIdUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.BlobSharedStorageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.BulkJobApiUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.CaptchaVerificationUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ClauseIntegrationBaseUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ClauseLoginUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.CLMSalesforcePackageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.CLMUIBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ContentRootUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DefaultLogoutRedirectUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DocumentTypesSupportPageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DocuSignAccountAdminRootUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DocuSignActAppsBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DocuSignActUIBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DocuSignCollaborationApiBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DocuSignDeveloperUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DocusignInternalApiCallbackUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DocusignLoginPageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DocusignProvisioningUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DocuSignRestApiAccountsUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DocuSignRestLoginUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DomainRoot\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ESignLivRestApiUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.EssentialsPlanDefaultRemoteWinsUrl\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ExecuteReportTask_AttemptThreshold\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ExecuteReportTask_MaxErrorCount\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ExplicitWinsUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ExternalFontUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ExternalReviewEmailProcessingUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.FastUploadRootUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.FederatedSearchSalesforceViewerUrlPath\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.FolderPortalHelpUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.GateKeeperUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.GenSFOauthRedirectUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.GetDocuSignNegotiationApiBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.GetDocuSignNotificationApiBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.GetJavelinBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.IntellegoAIFrontendApiBaseUrl\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.MailFrom_Alternate\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.MailFrom_OneNotification\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.MessagingFrameworkBrandedHeaderImageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.MessagingFrameworkFacebookImageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.MessagingFrameworkFacebookUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.MessagingFrameworkLinkedinImageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.MessagingFrameworkLinkedinUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.MessagingFrameworkTwitterImageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.MessagingFrameworkTwitterUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.MessagingFrameworkYoutubeImageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.MessagingFrameworkYoutubeUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.MSFInternalRootUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.MSFPublicApiBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.OfficeWebAppsDiscoveryUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.OneNotificationCallbackUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.OneNotificationCallbackUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.OneNotificationCallbackUrlPath\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.PrestoUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.PrestoUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.RealTimeApiBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ResourceUrlRoot\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.RestApiBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.RestAuthRootUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SalesforceCLMConfigUrlPath\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SalesforceCLMGenTemplatesUrlPath\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SalesforceFileItPackageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SalesforceInstanceURITerminationString\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SalesforceSpringCMConfigUrlPath\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SearchFacadeBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ServProtProtectUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SFApiUrlFormat\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SfAutoProvisionUser_QueryFieldName\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SFFileItUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SFManagedPackageIntegrationTokenRedirectUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SFOauthRedirectUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SFServiceUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SFSetUpIntegrationUserRedirectUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SFUnmanagedPackageIntegrationTokenRedirectUrlFormat\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SmtpServer_Alternate\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SmtpServerPort_Alternate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SpringCMSalesforceConfigUrlPath\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SpringCMSalesforceViewerUrlPath\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.StaticResourceUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.Swift2AuthUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SwiftAuthUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SwiftTransientAuthUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.TabletDocumentUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.TabletFolderUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.TabletHomeUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.TabletLoginUrlFormat\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.Toggle_DocumentReminderTemplates\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.UploadCenterUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.UploadRootUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.UxRootUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.UxRootUrl\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.Walkthrough_NewNavigation\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.WebServicesApiUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.WebServicesRestDownloadUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.WebServicesRestUploadUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.WebServicesRestUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.WebServicesSoapUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.WebServicesSyncUrlFormat\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.WebShareApplicationRootUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.WinsServiceURL\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.WinsSlowServiceURL\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.WootricSdkUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.WorkflowDesignApiEndpointUri\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasContext.AccountId\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasContext.ContextProvider\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIBaseDownloadUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIBaseDownloadUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIBaseDownloadUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIBaseDownloadUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIBaseUploadUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIBaseUploadUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIBaseUploadUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIBaseUploadUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIBaseUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIBaseUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIBaseUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIGenBaseUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIGenBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.APIResourceDownloadUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.DocusignAccountProvisioningUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.DocusignInternalApiCallbackUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.DocusignNdnsSyncUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.DocusignSyncUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.InternalApiBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.InternalApiBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.InternalApiCommentUrls.ReplyUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.InternalApiCommentUrls.ResolveUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.InternalApiCommentUrls.StatusUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.InternalApiWorkItemUrls.ResolveUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.InternalApiWorkItemUrls.StatusUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.LandingPageRedirectUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.LoginUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.OpenSearchBaseUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.OpenSearchBaseUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.OpenSearchBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.OpenSearchBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.ProvisioningBaseUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.ProvisioningBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.RestAuthUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.RestContentUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.RestContentUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.RestContentUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.RestContentUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.RestUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.RestUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.RestUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.RestUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.SftpUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.SftpUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.SftpUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.SftpUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.SoapUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.SoapUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.SoapUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.SoapUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.AdminIntroUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.ConversionAdminInfoUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.ConversionUserInfoUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.CreateMergeTemplateHelpUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.DocLauncherFormsKnowledgeUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.DocLauncherOneClickKnowledgeUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.DocLauncherOneClickKnowledgeUrlDS\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.DocuSignDownloadsUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.ElectronicSignatureLegalStatusKnowledgeUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.FederatedSecuritySandboxUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.FederatedSecuritySandboxUrlDS\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.FederatedSecurityUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.FederatedSecurityUrlDS\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.OrgCreationGuideUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.SfdcConversionInfoUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.SlackHelpUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SupportUrl.TranslationHelpUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.WebServicesResourceUrl.ApiUrlFormat\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.WebServicesResourceUrl.RestDownloadUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.WebServicesResourceUrl.RestUploadUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.WebServicesResourceUrl.RestUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.WebServicesResourceUrl.SoapUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.WebServicesResourceUrl.SyncUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.BusinessModel.OAuth.OAuthClient.LogoUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DocTracking.Models.DocTrackingActivity.OtherAssigneeContent\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1308:Normalize strings to uppercase\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DocTracking.Models.Document.Type\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DocumentCreation.XmlMergeDataSource.XDocument\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DocumentCreation.XmlMergeDataSource.XDocument\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Exceptions.DSError.error_description\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Exceptions.DSError.reference_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Exceptions.DSErrorV2.error_details\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Exceptions.DSErrorV2.reference_id\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ExpressionService.Internal.Model.WorkflowExpressionServiceRequestContent.BpmInstanceUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.FeatureFlags.MonitoringFeatureFlags.KazmonTelemetryUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.FileOperations.DOCX.DocxWatermarkOperation.OperableResource\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.FileOperations.PDF.ConcatDocItem.IsTiff\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.FileOperations.PDF.PdfOperation.OperableResourcePath\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.ADMRestApiUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.AIREApiBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.APRBridgeApiRootUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.AssignmentsApiBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.BlobPhysicalStorageDataPlaneAppIdUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.BlobPhysicalStorageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.BlobSharedStorageDataPlaneAppIdUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.BlobSharedStorageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.BulkJobApiUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.ExternalReviewEmailProcessingUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.IntellegoAIFrontendApiBaseUrl\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.MailFrom_Alternate\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.MailFrom_OneNotification\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.MSFInternalRootUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.MSFPublicApiBaseUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.RealTimeApiBaseUrl\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.SmtpServer_Alternate\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.SmtpServerPort_Alternate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.Swift2AuthUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.SwiftAuthUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.UploadCenterUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Javelin.SalesforceGenTemplate.Url\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.AccountEmailBranding.CustomLogoUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.WorkflowApprovalReminderTokens.WorkflowStepUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.AutofillAnalysisReadyEmail.Url\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.AutofillAnalysisStartedEmail.Url\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CompleteExternalReviewReviewerEmail.CompleteReviewUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CreateClientSecretEmail.GenerationUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.DocumentRuleDeactivatedByServiceEmail.RuleUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExportSearchResultsCompleteEmail.OutputFolderUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExportSearchResultsCompleteEmail.ReportDocumentUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewFailedAutoMatchEmail.ManualMatchingAttachmentDownloadPageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewFailedAutoMatchEmailOnBehalf.CompleteExternalReviewUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.PackageNotificationEmail.PackageUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.PartySyncEmail.PartyAdminUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.PartySyncEmail.PartyListUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SalesforceSyncUserDisabledEmail.ConfigUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendForEmailDomainApproval.ApprovalUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendForEmailDomainApproval.RejectionUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendForExternalReviewEmailNew.Url\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Models.EmailDocumentModel.Url\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Account.AddressHTML\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Account.ContactHTML\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Account.Settings\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Account.Settings\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1309:Use ordinal string comparison\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Account.Settings\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Account.StringId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ActionMenuItem.IconUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.APILicense.CallbackUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.APILicense.LogoUrl\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Base.INamedProperty.ReadOnly\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.BPMExecution.StringId\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.BPMExecutionDetail.StringId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Clause.ClauseSmartClauseMetadata.TemplateUri\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CollaborationComment.UpdateString\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CommonMetadataField.ReadOnly\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Conversion.Account.AccountConversionStatusMetadata.AsynchronousResponseUri\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Conversion.Common.MigrationMetaData.ErrorMessage\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Conversion.Common.MigrationMetaData.NotesLabel\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomMenuItem.ActionId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomMenuItem.Url\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReportColumn.DataField\")]\n[assembly: SuppressMessage(\"Design\", \"CA1061:Do not hide base class methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReportColumns.Item(System.Int32)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReportDataField.Name\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReportDataFieldAggregate.Name\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReportDataFieldGrouping.Name\")]\n[assembly: SuppressMessage(\"Design\", \"CA1061:Do not hide base class methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReportDataFields.Item(System.Int32)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReportDataTable.Name\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReportQuery.Name\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DependentAccount.StringId\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Document.IsAudio\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Document.IsEmail\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Document.IsImage\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Document.IsVideo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocumentScope.DocumentPreviewUrl\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DownloadResourceTokenPayloadResources.content_type\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DownloadResourceTokenPayloadResources.dsaccount_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DownloadResourceTokenPayloadResources.dsuser_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DownloadResourceTokenPayloadResources.request_type\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DownloadResourceTokenPayloadResources.resource_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DownloadResourceTokenPayloadResources.resource_type\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserApp.LaunchUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserInfoAccount.BaseUri\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DynamicDropDown.LoadDocumentsFromFolder.Key\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DynamicDropDown.LoadFoldersFromFolder.Key\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ExternalReviewParticipant.CompletionUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ForwardEventRegistrationRequest.Url\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.GateKeeper.ExchangeApiTokenForUISessionRequest.RedirectUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.GateKeeper.ExchangeApiTokenForUISessionResponse.AtlasUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.GroupMember.RoleName\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.InboundEmail.StringId\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.InboundEmails.DataTable\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.InboundFax.StringId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataField.InUse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataField.Related\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataGroup.InUse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataGroup.Related\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataSet.InUse\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.OauthAccessTokenResponse.access_token\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.OauthAccessTokenResponse.expires_in\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.OauthAccessTokenResponse.me_token\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.OauthAccessTokenResponse.me_token_expires_in\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.OauthAccessTokenResponse.refresh_token\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.OauthAccessTokenResponse.token_type\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.OfficeWebApps.WOPIAction.UrlSrc\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.PdfOnDisk.FileDataUid\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.CreateAccountResponse.admin_role_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.CreateAccountResponse.application_data\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.CreateAccountResponse.data_sync_uri\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.CreateAccountResponse.data_sync_uri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.CreateAccountResponse.ndns_sync_uri\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.CreateAccountResponse.ndns_sync_uri\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.CreateAccountResponse.roles_uri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.CreateAccountResponse.roles_uri\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.CreateAccountResponse.spring_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.CreateAccountV2Response.admin_role_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.CreateAccountV2Response.internal_account_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.CreateAccountV2Response.reference_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSAccountProduct.activation_date\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSAccountProduct.expiration_date\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSAccountProduct.free_trial\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSAccountProduct.product_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSAccountProduct.provision_date\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSAccountProduct.provision_status\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSCreateUpdateUserResponse.accounts\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.RequestAppData.application_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.UserInvitedCallbackResponse.user_id\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.AccountProvisioningTask.AsynchronousProvisioningUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.AccountProvisioningTaskPayload.AsynchronousProvisioningUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ClauseSmartContractTask.TemplateUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ClauseSmartContractTaskPayload.TemplateUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.OutboundHttpRequestTask.Url\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.OutboundHttpRequestTaskPayload.Url\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceIngestionTask.DsAccountRestBaseUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceIngestionTaskPayload.DsAccountRestBaseUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTask.DsAccountRestBaseUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTask.SfInstanceUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTaskPayload.DsAccountRestBaseUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTaskPayload.SfInstanceUrl\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.RegisterResourceTokenResponse.secret_uri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.RegisterResourceTokenResponse.secret_uri\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.RegisterResourceTokenResponse.token_id\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.RegisterResourceTokenResponseDetails.redemption_base_uri\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.RegisterResourceTokenResponseDetails.redemption_base_uri\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Reporting.IReportResults`1.Error\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ResourceTokenPayload.resource_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ResourceTokenPayload.token_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ResourceTokenResponse.id_token\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.SalesforceActions.ExecuteCustomActionUrlResponse.Url\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ContractInformation.ContractUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ScorecardDatabag.SealUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.SfOrganizationDetails.Result.instanceUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.TimeZoneData.StringId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UploadInfo.FullFileName\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAccount.HashedUid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAccount.HashedUid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAccount.HashedUid\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAccount.MarketoEncryptedEmailAddress\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAccount.MarketoEncryptedEmailAddress\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAuthorizationData.Url\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAuthorizationDataRequest.Url\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserInvitedCallbackRequest.account_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserInvitedCallbackRequest.invite_id\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserInvitedCallbackRequest.user_id\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Workflow.InstanceVariable.Value\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Workflow.WebService.ProxyUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Workflow.WebService.WebServiceURL\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.WorkflowProcess.DocGenConfigUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.APIRegistration.CallbackUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.APIRegistration.LogoUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.ForwardEventRegistration.Url\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence.MetadataQueueItem.StringId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AIDocument.SealGetDatabagWorkload.SealInstanceUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.AllMessages\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.CustomRuleRepository.ICustomRuleTrigger.AbsoluteUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult.Document\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult.Folder\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult.Node\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult.Node\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.ImageCreation.Barcode.Extension\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.LWDPDibs.UniqueIdentifier\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient.CompletionUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSOpenIdConnectUrls.JwksUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Seal.SendDocumentUploadParams.BaseUri\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Seal.SendDocumentUploadParams.CallbackUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.StructuredDocument.Models.TrackedContentExtractionWorkload.SalesforceUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.CustomActionButtonUrl\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ReviewAndSendSignatureClient.oldCCEmails\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicVariables.Item(System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicVariables.Item(System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariables.Item(System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext.DynamicXmlVariables.Item(System.String)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal.ApplicationName\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Types.Condition.Text\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Rules.PrivilegeCard._owner\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Rules.PrivilegeCard.CanDesignBPMWorkflow\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Rules.PrivilegeCard.CanStartBPMWorkflowManually\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.BasicSearch.CreatedEndValue\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.BasicSearch.CreatedStartValue\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.BasicSearch.ModifiedEndValue\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.BasicSearch.ModifiedStartValue\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility._namespace\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.Namespace\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.DocumentGenerationExportUtility.FormField.fullTrackId\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.UserSettings.AuthRedirectUrl\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.UserSettings.LogOutRedirectURL\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1304:Specify CultureInfo\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Utilities.Language.LocaleName\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Validation.Params.Regex\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Validation.UserDefinedValidator.Message\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Validation.UserDefinedValidator.Params\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Validation.UserDefinedValidator.Required\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1507:Use nameof to express symbol names\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Validation.UserDefinedValidator.Type\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Wins.DesignerDefinitionConstants.VisualAttributes\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1305:Specify IFormatProvider\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Wins.DesignerLink.Name\")]\n[assembly: SuppressMessage(\"Design\", \"CA1056:URI-like properties should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Web.DocExplorer.Models.PanelModels.TrackedFieldStatusViewModel.ExternalSystemUrl\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.AIConfiguration.ConfigurationService\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.AIConfiguration.Models.Result`2\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Aom.AomApiCollection`1\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.AtlasUrl.ApplicationRootDelegate\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1710:Identifiers should have correct suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Attributes.AllowUpdateViaWebservice\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.BaseDataConnection\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.CacheClient.CacheRegionMissDelegate\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.CodeRunner.CodeSnippet`2\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.CoreDomainRegistry\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DatabaseConnectionSwitch\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DocumentCreation.SfMerge\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DocuSignSync.Exceptions.UserNotEnabledForCLMException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.AdexsException\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.DSErrorCode\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FileOperations.Interfaces.CompletedDelegate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FileOperations.PDF.PDFException\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Import.UserCSVReader\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Lookup.Countries\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Lookup.Pager.MungeSortColumnDelegate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Lookup.ProvinceStates\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Mapping.TaskMapper\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1707:Identifiers should not contain underscores\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CollaborationNotificationType\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendForExternalReviewEmailNew\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ABAC.AccessAttribute\")]\n[assembly: SuppressMessage(\"Design\", \"CA1067:Override Object.Equals(object) when implementing IEquatable<T>\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ABAC.AttributeValue\")]\n[assembly: SuppressMessage(\"Design\", \"CA1067:Override Object.Equals(object) when implementing IEquatable<T>\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ABAC.Condition\")]\n[assembly: SuppressMessage(\"Design\", \"CA1067:Override Object.Equals(object) when implementing IEquatable<T>\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ABAC.Group\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.AccountActivities\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.AccountDocumentCounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Accounts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.AccountStatistics\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Alerts\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.APILicenses\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Base.ModelCollection`1\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Base.ModelCollection`1\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Base.NamedCollection`1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.BPMExecutionDetails\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.BPMExecutions\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ChartTypeEnum\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.CollaborationComments\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.CustomGridColumns\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.CustomGrids\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.CustomReportParameters\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.DataTypeEnum\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Deliveries\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ExternalSystemUsers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.GroupMembers\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.InboundEmails\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.InboundFaxes\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.LinkTypeEnum\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.LoginDelegate\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.LoginDelegates\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.LoginDelegations\")]\n[assembly: SuppressMessage(\"Design\", \"CA1069:Enums values should not be duplicated\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Metadata.MetadataSaveOptions\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.MetadataFieldEx\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.QueueStates\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1710:Identifiers should have correct suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.SecurityMaskTable\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1710:Identifiers should have correct suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.SecurityTable\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1708:Identifiers should differ by more than case\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.SfOrganizationDetails\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.TaskPayload.RealTimeMessagePublishTaskPayload.PayloadTypeEnum\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.TimeZoneDatas\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.TrackedTermCustomAttribute\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.TrackedTerms\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Transactions\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1716:Identifiers should not match keywords\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Workflow.Event\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Workflow.StartParameters.StartParametersFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.APIRegistrations\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence.MetadataQueueItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.ObjectTrashQueuePersistence.ObjectTrashQueueItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.ScheduledCustomRulePersistence.CustomRuleQueueItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.PhysicalStorage.AtlasPhysicalStorageFactory\")]\n[assembly: SuppressMessage(\"Design\", \"CA1058:Types should not extend certain base types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoException\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AsposeImplementations.OperableDocument\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.BaseRepository`1\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocumentRepository.PhysicalStorageTransaction\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.FormRepository.FormInputFieldEx\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ImageCreation.Barcode\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Negotiation.NegotiationApiClient.NegotiationApiException\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.User.LoginRepository\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.User.UserAccountRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1710:Identifiers should have correct suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IBookmarkHandler\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1710:Identifiers should have correct suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IContentHandler\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1710:Identifiers should have correct suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Interfaces.IVariableHandler\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Loaders.GetProcessedValueDelegate\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.MetadataConfigurationCollection\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository\")]\n[assembly: SuppressMessage(\"Design\", \"CA1066:Implement IEquatable when overriding Object.Equals\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.WorkflowVersionNumber\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SharedStorage.AtlasSharedStorageFactory\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SmartAgreement.Models.AttributeDetailsCollection\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SmartAgreement.Models.IPagedCollection\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Sync.IRuleStack\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1711:Identifiers should not have incorrect suffix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Sync.RuleStack\")]\n[assembly: SuppressMessage(\"Design\", \"CA1063:Implement IDisposable Correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Utilities.SimpleCsvWriter\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1715:Identifiers should have correct prefix\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Util.Net.RemoteCommon.RetryableRemoteRequest`2\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1506:Avoid excessive class coupling\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Attributes.AttributeManagementService\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AbstractSettings._settingProvider\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Adm.AdmUtilities._admUrl\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._account\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._addressBook\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._admin\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._adminUrl\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._ajaxUrl\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._apiRegistrationUrl\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._apporval\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._bpm\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._cases\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._content\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._dash\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._docs\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._documentPackageBuilderUrl\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._edit\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._eos\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._externalReview\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._forms\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._links\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._mobile\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._oAuth\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._objectHistory\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._objectType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._package\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._partiesUrl\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._portal\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._reports\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._restUrl\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._rules\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._salesForce\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._schedules\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._search\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._session\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._setupSalesForce\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._share\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._sso\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._themeCssUrl\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._upload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._uxLibrary\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._vendorCallback\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._welcome\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl._workflow\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.ObjectTypeUrl._owner\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AtlasUrl.SalesForceUrl._owner\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.NamedPropertyAttribute.Name\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.NamedPropertyAttribute.ReadOnly\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.NamedPropertyAttribute.Required\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.BaseDomainObject._isModified\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DatabaseConnectionSwitch._prevThreadConnectionStore\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DataReview.MetadataFuzzyMatcher.MaxSuggestionCount\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.Services.DacDocGenApiClientExceptionFactoryService.ExceptionFormatMessageString\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.EOS.ExternalObjectsStorage._baseFolder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.EOS.ExternalObjectsStorage._baseFolderPath\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.EOS.ExternalObjectsStorage._mpers\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.ExpressionService.Internal.ModelFactory._log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.FeatureFlags.Remoting.FeatureFlagsRemoteCallWrapperFactory.FeatureFlagsRemoteCallWrapper.DynamicSettingsContextDataSlot\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.FeatureFlags.Remoting.FeatureFlagsRemoteCallWrapperFactory.FeatureFlagsRemoteCallWrapper.EvaluatedSettingsDataSlot\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.FeatureFlags.Remoting.FeatureFlagsRemoteCallWrapperFactory.FeatureFlagsRemoteCallWrapper.EvaluatedSettingsDetailsDataSlot\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.FeatureFlags.RepositoryFeatureFlags.RepositoryFeatureFlagsNamespace\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.FileOperations.Image.ImageOperation._copyOfOperableImage\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.FileOperations.PDF.PdfOperation._operableResourceTempFile\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.ImagePdfOperationsPdf.PageIterator.currentPage\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.GlyphProcessing.Persistence.GlyphsPersistenceBase.GlyphsPathForSharedStorage\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Import.UserCSVReader._rdr\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Import.UserCSVReader._Valid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Account._InboundFaxes\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Account._isPartner\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Account._settings\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Account._ssoEnabled\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Account._urls\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Account._userOwner\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.AccountDocumentCount._AccountName\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.AgreementProperties._propertiesAgreementMapping\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.AgreementPropertiesValidations._propertiesValidationMapping\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.APILicenses._dataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.APILicenses._refreshDataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.ApprovalWorkflowStep._isNew\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Base.NamedPropertyHandler._namedProperties\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Base.NamedPropertyHandler.NamedProperty.PropInfo\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CollaborationComment._Deleted\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CommonMetadataField._allowedValues\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CommonMetadataField._metadataSetRepeating\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Contact._isPrivate\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReport._columnsLoaded\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReport._footer\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReport._header\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReport._paramsLoaded\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReport._selectionsLoaded\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReportChart._footer\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReportChart._header\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReportChart._minYValue\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReportColumn._defaultSort\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReportColumn._groupStyle\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReportColumn._isGrouped\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReportColumn._localizeData\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReportParameter._dataField\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReportParameter._isHidden\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReportParameter._length\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReportParameter._localizeSearch\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomReportQuery.Case\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomRule._enabled\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomRule._requiresInitiator\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomRule._suspended\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.CustomRule._valid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.DashboardTab._enabled\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.DashboardTab._viewers\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.DashboardWidget._collapsed\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.DashboardWidget._enabled\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.DashboardWidgetUserConfig._collapsed\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.DashboardWidgetUserConfig._settings\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.DependentAccounts._dataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Document._canPreview\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Document._hasComments\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Document._hasNamingMG\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Document._inPublicFolder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Document._nativeFileSize\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Document._pageCount\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Document._pdfFileSize\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.ElasticFacade.ElasticFacadeTaskPayloadHelper._log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.EventRegistration._accountId\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.EventRegistration._singleUse\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.FileData._nativeFileSize\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.FileData._pdfFileSize\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.FileData._pdfPageCount\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Folder._isInboundEmail\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Folder._isInboundFax\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Folder._isPublic\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Form._allowUploads\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Form._canSubmit\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Form._isCaseView\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Form._isObsolete\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Form._isPublic\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Form._isReadOnly\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Form._repoAttach\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Form._requiresAttach\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Group._members\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Group._userName\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.InboundEmails._dataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.InboundFaxes._dataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Login._updatedDate\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.LoginDelegates._dataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.LoginDelegates._refreshDataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.LoginDelegates._refreshSupportDataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.LoginDelegates._supportDataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.LoginDelegations._dataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.LoginDelegations._refreshDataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Metadata._readOnly\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Metadata._required\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Metadata._system\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Metadata._validated\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataField._inUse\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataField._isReportFilterable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataField._IsRequiredAttribute\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataField._readOnly\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataField._related\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataField._repeating\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataField._system\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup._hidden\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup._inUse\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup._isReportable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup._related\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup._system\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataImportMapping._dataStart\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataImportMapping._elements\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataImportMapping._name\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataImportMappingElement._expression\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataSet._inUse\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataSet._repeating\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.ReminderTemplate._reminderTemplateRecipients\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.ResetPasswordRequest._accountId\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.ResetPasswordRequest._status\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable._clearAllDescendants\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Setting._inherited\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Transaction._permissions\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Transactions._dataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Transactions._RefreshDataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.UserAccount._canAdministerBilling\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.UserAccount._isLegalAdmin\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.UserAccount._loadedPrivs\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.UserAccount._trashFolder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.UserAccount._trashLoaded\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Workflow.Definition._isNewDesign\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Workflow.Instance._parametersXml\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Workflow.InstanceVariable._readOnly\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Workflow.InstanceVariable._isSecret\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Workflow.InstanceVariable._serializableValue\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Workflow.WorkerPool._autoDispatchPatternName\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Workflow.WorkerPool._hasAutoAssign\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess._canView\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess._isOwner\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.News.ActionTypes.ExternalReviewExpired.Log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.News.ActionTypes.SignatureSentForSigning.Log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.News.ActionTypes.SignatureSigned.Log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.News.NewsActionTypeFactory.Log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.News.NewsActionTypeFactory.TypeName\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.News.NewsActionTypeFactory.TypePropertyName\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.AccountActivityPersistence._domainType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.AlertPersistence._alertsCount\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.AlertPersistence._alertsCountMessages\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.APILicenseInstancePersistence._collectionType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.APIRegistrations._dataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.APIRegistrations._refreshDataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.EnvTagEvaluator._doc\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.FileDataPersistence._collectionType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence._collectionType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence._domainType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.ObjectHistoryBucketedPersistence.ObjectHistoryMetadataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.ObjectHistoryBucketedPersistence.ObjectHistoryTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.ObjectTrashQueuePersistence._collectionType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.ObjectTrashQueuePersistence._domainType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.ReminderTemplatePersistence._domainType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Persistence.Model.UserAPIAuthenticationKeyPersistence._domainType\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Constants.DataTypes.Double\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Constants.DataTypes.Integer\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Helpers.ExcelExportHelpers._log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoRestClient._prestoUrl\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoRestClient.AbandonedQuery\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoRestClient.QueryCanceled\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoRestClient.QueryQueueFullError\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.PrestoRestClient.QueryTimeoutError\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.CustomData\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.IsFormDocument\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.IsTermDocument\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository._inTranScope\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AddressBook.AddressBookSearch.Name\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository._agreementTypesDictionary\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeCompareRepository._log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeContentReplacementRepository._log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeTrackedContentRepository._log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CommonRepository._timeZones\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleExecutionContext.ErrorCount\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleExecutionContext.SubTran\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.ActionsExecuted\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.Dispose\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.Exception\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.RecursionDetected\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleOutcome.WithWarning\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration._senderAccount\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration._templateSourceDirectory\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Device.DeviceRepository.INVALID_API_REGISTRATION_ID\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Device.DeviceRepository.Log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentAttachmentSet._attachMeta\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentSearchQuery.CurrentFolderSortScore\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult._document\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult._folder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult._isDocumentValid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult._isFolderValid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository._log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper._accountId\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper._maxTimeSeconds\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ExternalReview.SafeToReplyEmailDomainRepository._log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.LegacyCustomActionsReportRepository.AccountCustomToolbarButtons._loaded\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Negotiation.Client.Configuration._apiClient\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Negotiation.Client.Configuration._apiKey\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Negotiation.Client.Configuration._apiKeyPrefix\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Negotiation.Client.Configuration._basePath\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ProvinceStateRepository._provinceStates\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.StructuredDocument.Aspose.CustomReplaceEvaluator._matchInstance\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext._activityVariables\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext._contents\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext._instanceVariables\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext._properties\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext._variables\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext._xmlVariables\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.RemoteWorkflowClient.NO_RETRIES\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem._userLoaded\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter._kba\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter._none\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter._stringComparison\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext._contents\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext._submittedBy\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext._variables\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext._xmlVariables\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal._contents\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal._submittedBy\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal._variables\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal._workflowDataXml\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContextOriginal._xmlVariables\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.WorkflowExpression._valid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canAddContacts\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canAddParties\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canAddUser\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canAdministerBilling\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canAdministerDocLauncher\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canAdministerSecurityGroups\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canChangeRole\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCheckInOut\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCreateForms\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCreateGroup\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCreatePrivateFolder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCreatePublicFolder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCreateSFComunityUsers\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canCreateSharedFolder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canDelete\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canDeleteUser\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canDesignBPMWorkflow\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canDesignReports\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canDoLegalHold\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canDownloadDocuments\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canEditAccountSettings\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canEditExpirationAndReminder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canEditSavedSearch\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canEditUser\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageAbacPolicies\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageBPMWorkflow\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageConnectedApps\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageConnections\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageForms\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageInboundFax\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageParties\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canManageQueues\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canMangeInboundEmail\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canParticipateInBPMWorkflow\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canPinPoint\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canPrintOnDemand\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canReceiveFax\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canReceiveInboundEmail\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSendDocuments\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSendFax\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetSecurityPrefs\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupAccount\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupAttributes\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupIntegrations\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupMenuToolbar\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupObjectMapping\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupPersonaSettings\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupReminders\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupRoles\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupSalesforceIntegration\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupSchedules\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupSmartAgreement\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupSmartRules\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canSetupUIPreferences\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canStartBPMWorkflow\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canStartPredefinedWorkflow\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canStartWorkflow\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canUploadDocuments\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._canViewInbox\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._hasAdminPrivs\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._hasSuperAdminPrivs\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._isEnhancedGuest\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Rules.PrivilegeCard._IsGuest\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.BasicSearch._extractHighlights\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.ContentSearch._showOutdatedRevisions\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.LocationSearch._includeSubfolders\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.MetadataSearchFields._fields\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.MetadataSearchFieldSet._rows\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.MetadataSearchGroup._fields\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.MetadataSearchGroup._fieldSets\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.MetadataSearchGroup._repeatFields\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchQuery._searchRecords\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResults.NativeHitCount\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResults.QueriedMaxHits\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResults.RequestedMaxHits\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResults.RequestedStartHitIndex\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SharedStorage.AtlasSharedStorageFactory.BlobStorageType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SharedStorage.AtlasSharedStorageFactory.SanStorageType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SharedStorage.AtlasSharedStorageFactory.SwiftStorageType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SmartAgreement.AIModelManagement.AiModelManagement._log\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.PagingAndFiltering.IsZeroBasedPaging\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.SimpleCsvWriter.OneQuote\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.SimpleCsvWriter.QuotedFormat\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.SimpleCsvWriter.TwoQuotes\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Validation.AdvancedNumberFormatValidatorModel._defaultNumberDecimalSeparator\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1802:Use literals where appropriate\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Validation.AdvancedNumberFormatValidatorModel._defaultNumberGroupSeparator\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinition._root\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinition.SOURCE_X\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinition.SOURCE_Y\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinition.TARGET_X\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1823:Avoid unused private fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Wins.DesignerDefinition.TARGET_Y\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Util.Net.RemoteCommon._clientRegistered\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.BuildConditionStatement(System.String,System.Collections.Generic.List{System.String},System.String)~ADEXS.ABAC.Engine.Statement\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.Delete(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.GetSecurityFromAccessLevel(ADEXS.Core.Types.Enums.ABACAccessLevel)~ADEXS.Globals.ScmEnums.Security\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.LogObject(System.Object)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.MakeApiCall(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule,System.Collections.Generic.List{ADEXS.ABAC.Engine.Policy{ADEXS.ABAC.Data.SecurityFlagsResponse,ADEXS.Globals.ScmEnums.Security}})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.SetHeaders(System.Net.Http.HttpClient,System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AbstractSettings._ConvertFrom``1(``0)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AbstractSettings._ConvertTo``1(System.String,System.String,``0)~``0\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.AdmUtilities.BuildPartyContacts(System.String,System.String,System.Guid)~System.Collections.Generic.List{DocuSign.Adm.Api.Models.PartyContact}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmAgreementMapperClauseResolver.Resolve(ADEXS.Core.Domain.Adm.Model.AdmAgreement,ADEXS.Core.Domain.Model.Agreement,System.Nullable{ADEXS.Core.Types.Enums.ClauseIncluded},AutoMapper.ResolutionContext)~System.Nullable{ADEXS.Core.Types.Enums.ClauseIncluded}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1810:Initialize reference type static fields inline\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AdmMapper.#cctor\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AgreementMapperClauseResolver.Resolve(ADEXS.Core.Domain.Model.Agreement,DocuSign.Adm.Api.Models.AgreementCreate,System.Collections.Generic.IEnumerable{DocuSign.Adm.Api.Models.ClauseExtract},AutoMapper.ResolutionContext)~System.Collections.Generic.IEnumerable{DocuSign.Adm.Api.Models.ClauseExtract}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.AgreementMapperDocumentResolver.Resolve(ADEXS.Core.Domain.Model.Agreement,DocuSign.Adm.Api.Models.AgreementCreate,System.Collections.Generic.List{System.Guid},AutoMapper.ResolutionContext)~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.CounterpartyMapperSourceResolver.Resolve(ADEXS.Core.Domain.Model.Party)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.ObligationMapperDocumentIdResolver.Resolve(ADEXS.Core.Domain.Model.Obligation)~System.Guid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Adm.Mapping.ObligationMapperDocumentIdResolver.Resolve(ADEXS.Core.Domain.Model.Obligation)~System.Guid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.ConfigurationService.SetLabelDisplayName(System.Collections.Generic.Dictionary{System.String,System.String},ADEXS.Core.Domain.AIConfiguration.Models.Label)~ADEXS.Core.Domain.AIConfiguration.Models.Label\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AIConfiguration.Utilities.AIConfigurationUtilities.LogicAppToLabelGroup(ADEXS.Core.Domain.Model.Seal.DigitalAppRule,ADEXS.Core.Domain.AIConfiguration.Models.LabelGroupType)~ADEXS.Core.Domain.AIConfiguration.Models.LabelGroup\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomRestClient.ApiUrl(System.Guid,System.Guid,System.String,System.String,System.String,System.Collections.Generic.List{System.String})~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomRestClientBase.DeserializeResponse``1(System.Net.Http.HttpResponseMessage)~``0\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomRestClientBase.GetAuthorizationHeader~System.Net.Http.Headers.AuthenticationHeaderValue\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomRestClientBase.MakeRequestAndReturnResponse``1(System.Net.Http.HttpMethod,System.Object,System.String,System.String)~``0\")]\n[assembly: SuppressMessage(\"Build\", \"CA5399:HttpClient is created without enabling CheckCertificateRevocationList (https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5399)\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Ems.EmsRestClientUtilities.MakeRequestAndReturnResponse(System.Net.Http.HttpMethod,System.Object,System.String,ADEXS.Core.Domain.Model.Account,System.String[],System.String,ADEXS.Core.Types.Enums.DocuSignRequestPriority)~System.Boolean\")]\n[assembly: SuppressMessage(\"Build\", \"CA5399:HttpClient is created without enabling CheckCertificateRevocationList (https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5399)\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomRestClientBase.MakeRequestAndReturnResponse``1(System.Net.Http.HttpMethod,System.Object,System.String,System.String)~``0\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomUtilities.GetMappedAomAccountId(System.Int32,System.Guid)~System.Guid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Approval.ApprovalService.RecordApprovalHistoryData(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Approval.ApprovalService.RecordCancellingUserAccountHistoryData(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.AbsoluteMobileRoot~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AddressBookUrl.GroupsToString(System.Guid[])~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AddressBookUrl.GroupsToString(System.Guid[])~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AuthUrl.AuthenticationSite(System.String)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.BpmUrl.TaskScreenHasPreviewAndContainsFormDocument(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ContentUrl.DownloadDocumentPdfs(ADEXS.Core.Domain.AtlasUrl.UrlBuilder)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentLauncherUrl.GetCanvasUrl(ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig,ADEXS.Core.Domain.Model.Account)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.DocumentLauncherUrl.GetNonCanvasUrl(ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.AtlasUrl.UrlBuilder)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.SupportUrl.GetUrl(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.UrlBuilder.ToString~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.AuthenticationChecks.logFailure(System.String,ADEXS.Core.Domain.Model.Login)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.AuthenticationChecks.logFailure(System.String,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1845:Use span-based 'string.Concat'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Authentication.AuthenticationChecks.PasswordMatches(ADEXS.Core.Domain.Model.Login,System.String,System.String,ADEXS.Core.Types.Enums.LoginAccessPoint)~ADEXS.Core.Domain.Authentication.AuthenticationCheckResult\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.EntityChangeManager.AccountChanges(System.Int32,ADEXS.Core.Types.Enums.AccountConversionStatus)~ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.Model.AccountChange\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.EntityChangeManager.PopulateAccountSettings(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})~System.Collections.Generic.List{ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.Model.EntityChange}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationSettings.AccountMigrationSettingsManager.ChangeElectronicSignatureSettings(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationSettings.AccountMigrationSettingsManager.DisableHomeFolder(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationSettings.AccountMigrationSettingsManager.EnableDocPreviewFeatures(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationSettings.AccountMigrationSettingsManager.UpdateFullSyncTimeOutPeriod(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.GroupManagement.GroupConversionService.AddGroupToAccountServer(System.Net.Http.HttpClient,System.String,System.Int32,ADEXS.Core.Domain.Model.Group)~System.Net.Http.HttpResponseMessage\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Helper.UserMigrationHelper.LoadGroupMemberIds(System.Int32,System.Guid,ADEXS.Core.Domain.Repository.User.IGroupRepository,ADEXS.Core.Domain.Repository.Conversion.IAccountConversionSnapshotRepository)~System.Collections.Generic.HashSet{System.Guid}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Helper.UserMigrationHelper.SendRequestToDSServer(System.Net.Http.HttpClient,System.String,System.Object,System.Net.Http.HttpMethod,System.Guid,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Helper.UserMigrationHelper.SendRequestToDSServer(System.Net.Http.HttpClient,System.String,System.Object,System.Net.Http.HttpMethod,System.Guid,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.MixedMode.MixedModeSettingUtility.SaveMixedModeSettings(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Build\", \"CA1841:Prefer 'ContainsKey' over 'Keys.Contains' for dictionary type 'Dictionary'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.MixedMode.MixedModeSettingUtility.SaveMixedModeSettings(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.AccountMigrationHealthCheckService.GetAllUsersMigrationHealth(System.Int32,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus})~System.Collections.Generic.Dictionary{System.Guid,System.Boolean}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.AccountMigrationHealthCheckService.GetEnabledMarkAccountCompleteUsersMigrationHealth(System.Int32,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Conversion.Common.UserGroupMigrationStatus})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.UserGroupMigrationService.ContainsGroupId(System.Collections.Generic.List{System.Guid},System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.UserGroupMigrationService.EnqueueGroupsForMigration(System.Collections.Generic.List{System.Guid},ADEXS.Core.Domain.Model.UserAccount)~System.Int32\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.UserGroupMigrationService.GetPagingAndFiltering(ADEXS.Core.Domain.CLMAccountConversion.Models.MigrationRequestModel)~ADEXS.Core.Domain.Utilities.PagingAndFiltering\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Services.UserGroupMigrationService.LoadMigrationUsers(System.Int32,ADEXS.Core.Domain.CLMAccountConversion.Models.MigrationRequestModel)~ADEXS.Core.Domain.CLMAccountConversion.Models.UserMigationResponseModel\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.FormatValueToParseSetting(System.Object,System.Reflection.PropertyInfo,System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.ParseAnEnumList``1(System.Object,System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.ParseClassObject``1(System.Object,System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.ParseData``1(``0,System.Boolean)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.ParseList``1(System.Object,System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Validation.AccountConversionValidatorHelper.IsDsAccountInUse(System.Int32,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CodeRunner.CodeRunner.ExecuteCodeSnippet``2(ADEXS.Core.Domain.CodeRunner.CodeSnippet{``0,``1},ADEXS.Core.Domain.CodeRunner.ICodeRunnerData)~``1\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CodeRunner.CodeRunner.ExecuteCodeSnippet``2(ADEXS.Core.Domain.CodeRunner.CodeSnippet{``0,``1},ADEXS.Core.Domain.CodeRunner.ICodeRunnerData)~``1\")]\n[assembly: SuppressMessage(\"Usage\", \"CA1816:Dispose methods should call SuppressFinalize\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DatabaseConnectionSwitch.Dispose\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataProvider.CLMCustomAttributesDataReviewProvider.IsMarkedForDelete(ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData,ADEXS.Core.Domain.Model.Metadata)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataProvider.CLMCustomAttributesDataReviewProvider.ValidateMetadataValue(System.String,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewAttributeFilter.BuildField(ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance)~ADEXS.Core.Domain.Model.MetadataField\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewService.GetCommentsConfig(ADEXS.Core.Types.Enums.WorkflowComment)~ADEXS.Core.Types.Enums.CommentsConfiguration\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewService.MapObjectType(System.Nullable{ADEXS.Core.Domain.MetadataLoader.Models.Type})~ADEXS.Core.Types.Enums.DataReviewObjectType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardAttributeHelper.GetAgreementPeriodOrDefault(ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData,ADEXS.Core.Domain.Model.AgreementPeriod)~ADEXS.Core.Domain.Model.AgreementPeriod\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardAttributeHelper.GetClauseOrDefault(ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData)~System.Nullable{ADEXS.Core.Types.Enums.ClauseIncluded}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardAttributeHelper.TryGetBooleanFromUpdatedValue(System.String,System.Nullable{System.Boolean}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardAttributeHelper.TryParseDateToUniversalDateComponent(System.String,System.DateTime@,System.Globalization.CultureInfo)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataReview.DataReviewStandardFieldHelper.GetTranslatedClauseValue(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocumentAssemblerMergeProcessor.CreateMergeSettings(ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource)~ADEXS.MergeEngine.DocumentAssembler.MergeSettings\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocumentAssemblerMergeProcessor.MergedDocumentHasForbiddenMergeTags(System.Collections.Generic.IEnumerable{ADEXS.MergeEngine.Objects.MergeTagInfo})~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxOpenXmlMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.AddDataDoc(System.IO.Packaging.Package,System.Xml.Linq.XDocument)~System.IO.Packaging.PackagePart\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.AddImage(System.IO.Packaging.PackagePart,System.IO.Stream,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.BindToXPath(System.Xml.Linq.XElement,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContentControls(System.Xml.Linq.XContainer,System.Int32,System.Xml.XmlNamespaceManager)~System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.GetExternalXPath(System.String,ADEXS.Core.Domain.DocumentCreation.IXmlMapping)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.InsertHtml(DocumentFormat.OpenXml.Packaging.MainDocumentPart,DocumentFormat.OpenXml.Wordprocessing.SdtElement,System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.MergeXml(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.OpenPackagePartXml(System.IO.Packaging.PackagePart,System.Xml.XmlNamespaceManager@)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ProcessDocxTemplateField(System.String,System.String,System.Double@)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1845:Use span-based 'string.Concat'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ProcessDocxTemplateField(System.String,System.String,System.Double@)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.RelateDataDoc(System.IO.Packaging.PackagePart,System.IO.Packaging.PackagePart)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.SaveDocumentPart(System.Xml.Linq.XDocument,System.IO.Packaging.PackagePart)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Merge.GetXmlMappingForDocument(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~ADEXS.Core.Domain.DocumentCreation.XmlMapping\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.PlainTextMergeType.AppendTextIfNotEmpty(DocumentFormat.OpenXml.Wordprocessing.Run,System.Text.StringBuilder)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.PlainTextMergeType.GenerateRun~DocumentFormat.OpenXml.Wordprocessing.Run\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.PlainTextMergeType.GetLines(System.String)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.PlainTextMergeType.RemoveEmptyRunForParagraph(System.String,DocumentFormat.OpenXml.OpenXmlElement)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.MergeType.RepeatingSectionMergeType.ReplaceFirstOccurrenceOnly(System.String,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DacDocGenApiService.CreateMergeSettingAndContextHeaders(ADEXS.MergeEngine.DocumentAssembler.MergeSettings,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DacDocGenApiService.GetDacDocGenApiAuthToken~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.DSApiConfigurationService.GetGenApiConfiguration(System.String,System.Guid)~DSGenAPIClient.Client.Configuration\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Services.GenTemplateApiService.ThrowIfNotSuccess(System.String,DSGenAPIClient.Client.IApiResponse,System.Net.HttpStatusCode)~System.Exception\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.SfMerge.MergeAgreementDataIntoDataXml(System.String,ADEXS.Core.Domain.Model.Party,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.SfMerge.TranslateAgreementMetadataToAom(ADEXS.Core.Domain.Model.QueueTasks.GenAgreementMetadata,ADEXS.Core.Domain.Model.Document)~System.ValueTuple{ADEXS.Core.Domain.Model.Party,ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMapping.GetBarcodeData(System.String)~ADEXS.Core.Domain.DocumentCreation.BarcodeData\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMapping.PopulateDictionary(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMergeDataSourceDocument.InitializeXDocument~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMergeDataSourceDocumentContent.InitializeXDocument~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMergeDataSourceFolder.InitializeXDocument~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.UserSyncRequestProcessor.AreNamesEqual(System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignUrl.DocuSignAccountsServerUrl.AuthenticateWithCode~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.DeleteFolder(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.DetachFolder(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.GetFolder(System.String,System.String,System.String,System.String,System.Boolean)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1827:Do not use Count() or LongCount() when Any() can be used\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.GetFolder(System.String,System.String,System.String,System.String,System.Boolean)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.HandleEOSEscapeCharacters(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.ValidateId(System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.ValidateType(System.String)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.CallExpressionService(System.Uri,ADEXS.Core.Domain.ExpressionService.Internal.Model.WorkflowExpressionServiceRequestContent,ADEXS.Core.Domain.Model.Account,System.Guid,System.Guid,System.Guid,System.Int32@,System.String@,System.Boolean@)~ADEXS.Core.Workflow.Expressions.Model.ApiExpressionServiceResponse\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.HandleExecutionRequestCreationException(System.Exception,System.Guid)~ADEXS.Core.Workflow.Expressions.Model.WorkflowExpressionResult\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.Internal.HttpClientFactory.GetHttpClient(System.Int32,System.String)~System.Net.Http.HttpClient\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.Internal.ModelFactory.CreateActor(ADEXS.Core.Domain.Repository.Workflow.Compatibility.IResourceCompatibility)~ADEXS.Core.Domain.ExpressionService.Internal.Model.Actor\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.Internal.ModelFactory.CreateActorForExpressionApi(ADEXS.Core.Domain.Repository.Workflow.Compatibility.IResourceCompatibility)~DocuSign.CLM.API.ExpressionService.Client.Actor\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.Internal.ModelFactory.SerializeValue(System.Object)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.FileOperationsUtil.TryParsePageNumbers(System.Int32,System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Int32}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Image.ImageOperation.EmbedComments(ADEXS.Core.Domain.Model.CollaborationComments,System.Int32)~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.Image.ImageOperation.GeneratePreviewImages(ADEXS.Core.Domain.LWDP.ImageScale,System.String,System.Int32,System.Int32[],System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperation.DeletePages(System.Int32,System.Int32)~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperation.EmbedComments(ADEXS.Core.Domain.Model.CollaborationComments,System.Int32)~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperation.GeneratePreviewImages(ADEXS.Core.Domain.LWDP.ImageScale,System.String,System.Int32,System.Int32[],System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperation.RotatePages(System.Int32,System.Int32,System.Int32)~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.AddImage(WebSupergoo.ABCpdf12.Doc,ADEXS.Core.Domain.FileOperations.PDF.ConcatDocItem)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.ApplyWatermarkText(System.IO.Stream,System.IO.Stream,System.String,ADEXS.Core.Domain.FileOperations.Models.WatermarkProperties,System.Collections.Generic.IList{System.Int32},System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.ApplyWatermarkText(System.String,System.IO.Stream,System.String,ADEXS.Core.Domain.FileOperations.Models.WatermarkProperties,System.Collections.Generic.IList{System.Int32},System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.MergeDocument(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.MergeDocument(ADEXS.Core.Domain.DocumentCreation.IXmlMergeTemplate,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,ADEXS.MergeEngine.DocumentAssembler.MergeStats@)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.AtlasPdfOperations.ReadPdfDoc(WebSupergoo.ABCpdf12.Doc,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.PdfEmbeddedDocumentProperties.GetPdfEmbeddedDocumentProperties(System.Collections.Generic.IEnumerable{System.String},System.IO.Stream)~System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.PdfEmbeddedDocumentProperties.Position(WebSupergoo.ABCpdf12.Doc,System.Int32,System.Double,System.Double,System.Double,System.Double)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.PdfEmbeddedDocumentProperties.ReadPdfDoc(WebSupergoo.ABCpdf12.Doc,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.PdfEmbeddedDocumentProperties.WritePdfEmbeddedDocumentProperties(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.IO.Stream,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.WatermarkServicePdf.ApplyWatermarkImage(WebSupergoo.ABCpdf12.Doc,System.String,ADEXS.Core.Domain.FileOperations.Models.WatermarkProperties,System.Collections.Generic.IList{System.Int32},System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.WatermarkServicePdf.DrawTextOnly(WebSupergoo.ABCpdf12.Doc,System.String,System.Int32,ADEXS.Core.Domain.FileOperations.Models.Location,ADEXS.Core.Domain.FileOperations.Models.Alignment,ADEXS.Core.Domain.FileOperations.Models.Rotation)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.WatermarkServicePdf.ReadPdfDoc(WebSupergoo.ABCpdf12.Doc,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfUtility.PdfManipulationCacheKey(System.Int32,System.Guid,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32[],System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.DocumentGlyphsRepository.LogFileInformation(ADEXS.Core.Domain.Model.FileData,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.DocumentGlyphsRepository.LogNotSupportedGlyphExtractionMsg(System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.DocumentGlyphsRepository.SearchablePdfExists(ADEXS.Core.Domain.Model.QueueTasks.IGlyphExtractionTask,ADEXS.Core.Domain.Model.FileData)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.DocumentGlyphsPersistence.GetTransientFileName(System.Guid,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Persistence.GlyphsPersistenceBase.GetFilePathForSharedStorage(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.GlyphReconciliationTaskService.CreateWorkload(ADEXS.Core.Domain.Model.QueueTasks.IGlyphReconciliationTask)~ADEXS.Core.Domain.GlyphProcessing.Models.GlyphReconciliationWorkload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.GlyphProcessing.Services.GlyphReconciliationTaskService.LogWorkload(ADEXS.Core.Domain.GlyphProcessing.Models.GlyphReconciliationWorkload,System.Diagnostics.Stopwatch,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Import.UserCSVReader.GetContact(System.String,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Contact\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Javelin.JavelinApiService.BuildDataWritebackLogs(System.Collections.Generic.IEnumerable{Javelin.SalesForce.Package.Utility.SalesForceWriteBack.ISalesForceLog})~System.Collections.Generic.IEnumerable{JavelinClients.Model.SalesForceLog}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Javelin.JavelinApiService.ConvertBillingResponse(JavelinClients.Model.BillingResponse)~Javelin.SalesForce.Package.BillingAPI.BillingResponse\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Javelin.JavelinApiService.IsSuccessStatusCode(System.Net.HttpStatusCode)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Lookup.FileDataFilenameLookup.RefreshCounterCache(System.String,System.Collections.Generic.Queue{System.String})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1810:Initialize reference type static fields inline\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Mapping.TaskMapper.#cctor\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildBouncebackCoversheet(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildDeliveryNotificationCoversheet(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents,System.Boolean)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildOriginalMessageText(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.AddCustomFooter(ADEXS.Core.Domain.Messaging.Framework.Core.Interfaces.ITokenModifier,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.AddCustomLogo(ADEXS.Core.Domain.Messaging.Framework.Core.Interfaces.ITokenModifier,System.Net.Mail.MailMessage,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.OverrideColors(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.AbstractBrandingStrategy.OverrideColors(ADEXS.Core.Domain.Messaging.Framework.Core.Interfaces.ITokenModifier,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.AccountBrandingStrategy.BuildAccountEmailBranding(System.Int32,ADEXS.Core.Types.Enums.EmailLayout,ADEXS.Core.Types.Enums.EmailPayloadSuppressBranding)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.AccountEmailBranding\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.EmailBodyComposer.ComposeShard(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailShardTemplateNames,System.Object,System.Globalization.CultureInfo)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.EmailBodyComposer.MergeTemplateAndTokens(System.String,System.Object)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.EmailBodyComposer.MoveCssStylesInline(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.EmailBodyComposer.RemoveLineBreaks(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.EmailTemplateNameManager.UpdateTemplateForPlainText(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailTemplateNames,ADEXS.Core.Domain.Messaging.Framework.Core.EmailType)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailTemplateNames\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.MailMessageComposer.CleanAndSplitEmailAddresses(System.String)~System.Collections.Generic.IEnumerable{System.Net.Mail.MailAddress}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.MailMessageComposer.ComposeMailMessage(System.Net.Mail.MailMessage,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.MailMessageComposer.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.MailMessageValidator.RecipientsAreWhiteListed(System.Net.Mail.MailAddressCollection,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.PostProcessor.GetBodyOnly(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.PostProcessor.GetHistoryComment(System.Net.Mail.MailMessage,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.TokenModifier.GetPredefinedXmlTokens~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.TokenModifier.GetResourceDictionary(System.Type,System.Globalization.CultureInfo,System.String)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.FireEmailSentEvent(System.Int32,System.String,System.Boolean,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.GetFailedEventInfo(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.LogMailMessage(System.Net.Mail.MailMessage)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailDistributor.GetThrottlingKey(System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.AutofillAnalysisReadyEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.AutofillAnalysisStartedEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.BasePayloadBuilder.Convert``1(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail)~``0\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.BasePayloadBuilder.SafelyGetTime(System.String,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.BasePayloadBuilder.SerializeToJson(System.Object)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.BaseShareObjectEmailPayloadBuilder.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ChangePasswordNoticeEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.DocumentMergeFailureNotificationEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.DocumentReminderEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ESignatureCancelMessageEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ESignatureSendAuthenticationFailureEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ESignatureSendFailureEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ESignatureTransactionNotSignedEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ExportSearchResultsCompleteEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ExportSearchResultsErrorEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ExportWorkflowReportEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ExternalReviewCancelledReviewForDeniedUnknownEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.GenericFailureEmailPayloadBuilder.BuildNustacheRecipientList(System.Collections.Generic.IList{System.String})~System.Collections.Generic.List{System.Object}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.GenericFailureEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.GenericNonTemplatesEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PasswordResetEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PasswordResetEmailPayloadBuilder.GetResetPasswordUrl(ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.PasswordResetEmail)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.PasteSuccessEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.RecoverLoginNameEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SalesforceSyncUserDisabledEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SecurityAccessRuleValidationEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SendEmailActionPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SendEmailActionPayloadBuilder.CreatePrivateLink(ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SendEmailActionPayloadBuilder.CreatePublicShareLink(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendEmailActionEmail)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SendForExternalReviewEmailNewPayloadBuilder.BuildCommonPayloadProperties(ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendForExternalReviewEmailNew,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.SendForExternalReviewEmailWithAttachmentsPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ShareDocumentAttachmentEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ShareDocumentLinkEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ShareFolderLinkEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.ShareObjectLinksEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.TranslationImportEmailPayloadBuilder.GetPublishUrl(ADEXS.Core.Types.Enums.TranslationNamespace,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.UserAccountActivationEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.UserAccountActivationEmailPayloadBuilder.GetLink(ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.UserAccountActivationEmail)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.UserAccountOverageEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.UserSyncEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.UserSyncFailureEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.WorkflowErrorNotificationEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.WorkflowSendDocumentAttachmentEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1847:Use char literal for a single character lookup\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.WorkflowSendDocumentAttachmentEmailPayloadBuilder.BuildPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadValidator.AddProblematicRecipients(System.Collections.Generic.IList{ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailContact},ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ValidateEmailResult,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ValidateEmailProblem)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1827:Do not use Count() or LongCount() when Any() can be used\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadValidator.ComposeAndValidateEmail(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ValidateEmailResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadValidator.IsValidEmail(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailShardPayloadBuilderFactory.Get(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShardBuilder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.BaseReformatter.ParseOneOutputComment(System.String)~ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.OneCommentDto\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.OutputCommentsReformatter.ConvertParsedCommentsToNecessaryTokensForEmailShard(ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.OutputCommentsDto)~System.Object\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.OutputCommentsReformatter.SplitOutputComments(System.String)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractShareShardBuilder.DocumentMobileUrl(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractShareShardBuilder.DocumentWebUrl(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractShareShardBuilder.FolderMobileUrl(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractShareShardBuilder.FolderWebUrl(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetAssigneeLinks(ADEXS.Core.Domain.Model.Contacts)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetAssignees(ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard)~ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.Assignees\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetAssignees(ADEXS.Core.Domain.Model.Contacts)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetDocumentLinks(ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetDocuments(ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.GetExpiration(ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalReminderShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.WorkflowApprovalStepRejectedShardPayloadBuilder.BuildShardPayload(ADEXS.Core.Domain.Messaging.Framework.Integration.Interfaces.IShard)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.ShardPayload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Messaging.RemoveDisabledUsers(ADEXS.Core.Domain.Persistence.Model.EmailPersistence.EmailContext,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.MetadataLoaderService.Map(ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.ValueConstraint)~ADEXS.Core.Domain.MetadataLoader.Models.ValueConstraint\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.MetadataLoaderService.ToMetadataInstance(ADEXS.Core.Domain.MetadataLoader.Models.Metadata,ADEXS.Core.Domain.MetadataLoader.Models.ValueConstraint)~ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.MetadataLoader.StandardMetadataLoader.ToMetadata(ADEXS.Core.Domain.Repository.AgreementRepository.AgreementField,System.String)~ADEXS.Core.Domain.MetadataLoader.Models.Metadata\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ActionMenuItemEqualityComparer.Equals(ADEXS.Core.Domain.Model.ActionMenuItem,ADEXS.Core.Domain.Model.ActionMenuItem)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ActionMenuItemEqualityComparer.GetHashCode(ADEXS.Core.Domain.Model.ActionMenuItem)~System.Int32\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Agreement.AgreementPeriodRangeIsValid(ADEXS.Core.Domain.Model.AgreementPeriod)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Agreement.StringIsValid(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementNode.IsSupported(System.Collections.Generic.List{ADEXS.Core.Domain.Attributes.AttributeRegistry},System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementNode.ValidateCircularRelationship(System.Collections.Generic.HashSet{System.Guid},System.Guid)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementNode.ValidateMaxHierarchyLevel(ADEXS.Core.Domain.Model.AgreementNode,ADEXS.Core.Domain.Model.AgreementNode)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementProperties.HasValidDates(System.Nullable{System.DateTime},System.Nullable{System.DateTime})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementProperties.IsAllAutoRenewalFieldsValid(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementProperties.IsAnyPropertyInvalid(System.Collections.Generic.List{System.String})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementProperties.IsEveryPropertyInvalid(System.Collections.Generic.List{System.String},System.Int32,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{System.String})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementProperties.IsNoticePeriodFieldsValid(System.String,System.String,System.Collections.Generic.List{System.String})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementProperties.IsParentInvalidOrUnspecified(ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{System.String})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementProperties.IsRenewalNoticePeriodFieldsValid(System.String,System.String,System.Collections.Generic.List{System.String})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementProperties.IsRenewalTermFieldsValid(System.String,System.String,System.Collections.Generic.List{System.String})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementProperties.SetDropDownAgreementProperty(System.Object,System.String,ADEXS.Core.Domain.Model.Agreement@)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementPropertiesValidations.IsBooleanValid(System.String)~ADEXS.Core.Domain.Model.AgreementValidationResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementPropertiesValidations.IsCountValid(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementPropertiesValidations.IsDropDownValueValid(System.String,System.String)~ADEXS.Core.Domain.Model.AgreementValidationResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementPropertiesValidations.IsPartyIdValid(System.String)~ADEXS.Core.Domain.Model.AgreementValidationResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementPropertiesValidations.IsTimeUnitValid(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementPropertiesValidations.IsTypeValid(System.String,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.AgreementValidationResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementPropertiesValidations.IsValueValid(System.String)~ADEXS.Core.Domain.Model.AgreementValidationResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementPropertiesValidations.StringIsValid(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ApprovalWorkflowStep.BuildUserIdList\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportDataFieldAggregate.GetVariantByName(System.String)~ADEXS.Core.Domain.Reporting.Interfaces.IEntityField\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.CustomReportDataFieldGrouping.GetVariantByName(System.String)~ADEXS.Core.Domain.Reporting.Interfaces.IEntityField\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1827:Do not use Count() or LongCount() when Any() can be used\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DocTypeVisibleRule.IsValid(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanUndoCheckoutForElectronicSignature(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1845:Use span-based 'string.Concat'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.NameHTML(System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.SecuredIconHTML(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DocumentWorkflowHistoryData.UserDatabag(ADEXS.Core.Domain.Model.UserAccount)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1721:Property names should not match get methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DSGroups.GetPageSize~System.Int32\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1721:Property names should not match get methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DSGroups.GetTotalCount~System.Int32\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.AbstractContentDataSource.GetValues(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Nullable{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.AbstractGroupDataSource.GetValues(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Nullable{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DocumentContent.GetDocumentByStringId(System.String,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DocumentContent.GetValues(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Nullable{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DocumentContent.GetValuesFromSourceFile(ADEXS.Core.Domain.Model.Document,System.Int32)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.DocumentContent.GetValuesFromSourceFile(ADEXS.Core.Domain.Model.Document,System.Int32)~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.DynamicDropDown.SavedSearch.GetValues(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Nullable{System.Guid})~System.Collections.Generic.List{System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1810:Initialize reference type static fields inline\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ElasticFacade.ElasticFacadeTaskPayloadHelper.#cctor\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ElasticFacade.ElasticFacadeTaskPayloadHelper.Deserialize(System.String)~LanguageExt.Option{System.Collections.Generic.List{ADEXS.Core.Domain.Model.ElasticFacade.PostClmEventRequest}}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ElasticFacade.ElasticFacadeTaskPayloadHelper.Deserialize(System.String)~LanguageExt.Option{System.Collections.Generic.List{ADEXS.Core.Domain.Model.ElasticFacade.PostClmEventRequest}}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ElasticFacade.ElasticFacadeTaskPayloadHelper.GenerateTaskBulk(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.ElasticFacade.ClmEntityType,System.Collections.Generic.List{System.String},ADEXS.Core.Domain.Model.ElasticFacade.EventScenario)~CLM.MessageDefines.Tasks.ElasticFacadeTask\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ElasticFacade.ElasticFacadeTaskPayloadHelper.Serialize(System.Collections.Generic.List{ADEXS.Core.Domain.Model.ElasticFacade.PostClmEventRequest})~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ExternalSecurityMap.Equals(System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataGroup.CompareTo(ADEXS.Core.Domain.Model.MetadataGroup)~System.Int32\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ObjectFilters.DocumentBasedFilter.RemoveUsersThatDoNotHaveViewPermissionToObject(ADEXS.Core.Domain.Model.UserAccounts,System.Guid)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ObjectFilters.FolderBasedFilter.RemoveUsersThatDoNotHaveViewPermissionToObject(ADEXS.Core.Domain.Model.UserAccounts,System.Guid)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.ObjectHistoryBucketedMetadata.GetBucketId(System.DateTime)~System.DateTime\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Party.#ctor(ADEXS.Core.Domain.Model.QueueTasks.SyncParty.SyncParty)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.PartyAgreementTrees.DefaultCheckActiveMsaStatus(ADEXS.Core.Domain.Model.AgreementNode)~ADEXS.Core.Types.Enums.AgreementStatus\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1721:Property names should not match get methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.AIAutofillPostProcessingBaseTask.GetUniqueId(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1721:Property names should not match get methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.AISIngestionBaseTask.GetUniqueId(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.AIStagedMetadataSyncTask.GetHash(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1721:Property names should not match get methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.APRAIIngestionBaseTask.GetUniqueId(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SAMLMessage.#ctor(System.Xml.XmlElement,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SecurityMaskTable.GetValueFromRow(System.Data.DataRow)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SecurityTable.TranslateSecurityFlagToSecurityLevel(System.String,ADEXS.Globals.ScmEnums.Security)~ADEXS.Core.Domain.Model.SecurityTable.SecurityLevel\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.UserAccount.GetSFUserId~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PasteBase.GetCopyResults(System.Int32,System.String)~ADEXS.Core.Domain.Model.CopyResults\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PastePartialSuccess.AppendPartialSucessEmailBody(ADEXS.Core.Domain.Model.UserAccount,System.Text.StringBuilder,System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.FailedPasteResult})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.ActionTypes.PastePartialSuccess.SendPasteProcessorPartialSuccessEmail(ADEXS.Core.Domain.Model.UserAccount,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NewsActionTypeBase.ObjectTypeCastfromIModel``1(ADEXS.Core.Domain.Model.Base.IModel,``0@)~``0\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.OfficeWebApps.WopiDiscoveryService.BuildConfiguration\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartyDocumentUtility.GenerateDocumentAgreement(ADEXS.Core.Domain.Model.Document)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartySyncTaskUtility.ValidatePartySyncTaskParamsOrThrowException(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.AtlasPersistenceFactory.GetPersistenceFromConnectionString``1(System.String)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.OnDatabaseCommandInfo(ADEXS.SqlCorePersistence.DbCommandInfo)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.SplitIds(System.String)~System.String[]\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccessControlPersistence.Delete(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccessControlPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.AccessControl)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccessControlPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountConversionStatusPersistence.UpdateStatus(System.Int32,System.Guid,System.Int32)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountPersistence.GetUsedStorageGb(System.Int32)~System.Decimal\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountPersistence.SetCanDeleteRoles(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AgreementPersistence.LoadByExternalIds(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AIDocumentBatchPersistence.GenerateInsertCommand(System.String,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch)~ADEXS.CqlCorePersistence.AtlasCassandraCommand\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AIDocumentStatisticsPersistence.BuildParamsArray(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Types.Enums.AIDocumentStatisticsCounterType})~System.Object[]\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AnalyticsReportPersistence.CancelReportQuery(System.String)~System.Threading.Tasks.Task{System.Boolean}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AnalyticsReportPersistence.CreateClientInfoHeader(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowPersistence.DeleteApprovalTemplate(System.Guid)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowPersistence.DeleteApprovalTemplateDocument(System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowPersistence.LoadApprovalTemplateDocuments(System.Guid)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowPersistence.LoadApprovalTemplateParticipantsAsContacts(System.Guid)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowPersistence.LoadApprovalTemplateParticipantsByStepUid(System.Guid,System.Guid)~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowPersistence.LoadByAccountId(System.Int32)~ADEXS.Core.Domain.Model.ApprovalWorkflows\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowPersistence.LoadByAccountIdAndType(System.Int32,System.Boolean)~ADEXS.Core.Domain.Model.ApprovalWorkflows\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowPersistence.LoadByUid(System.Guid)~ADEXS.Core.Domain.Model.ApprovalWorkflow\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowPersistence.SaveApprovalTemplate(ADEXS.Core.Domain.Model.ApprovalWorkflow)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowPersistence.SaveApprovalTemplateDocument(System.Guid,System.Guid,System.Int32)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowStepPersistence.Delete(System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowStepPersistence.DeleteApprovalTemplateParticipants(System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowStepPersistence.LoadByTemplateUid(System.Guid)~ADEXS.Core.Domain.Model.ApprovalWorkflowSteps\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowStepPersistence.Save(ADEXS.Core.Domain.Model.ApprovalWorkflowStep)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ApprovalWorkflowStepPersistence.SaveParticipant(System.Guid,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AutoNumberPersistence.AutoNumberPreSave(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.BPMPersistence.LoadById(System.Int32)~ADEXS.Core.Domain.Model.BPMExecution\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.BPMPersistence.LoadDesignerDefinition(System.Int64)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.BPMPersistence.LoadDetailById(System.Int32)~ADEXS.Core.Domain.Model.BPMExecutionDetail\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.BPMPersistence.LoadWorkItem(System.Guid)~ADEXS.Core.Domain.Persistence.Model.BPMPersistence.BPMWorkItemInfo\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.BPMPersistence.SaveDesignerDefinition(System.Int64,System.Xml.XmlDocument)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.BPMPersistence.SetRoleProviderSettings(System.String,System.Guid)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.BPMPersistence.VerifyCalendarId(System.Int32,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CommonPersistence.CalculateElapsedTime(System.DateTime,System.DateTime,System.Boolean,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CommonPersistence.GetDbTime~System.DateTime\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CommonPersistence.IndexQueueInsert(System.Int32,System.Guid,System.String,System.Int64,System.Int32)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CommonPersistence.LogUserAction(System.Guid,System.Int32,ADEXS.Globals.ScmEnums.ActionType)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CommonPersistence.TimeZoneLoadAll~ADEXS.Core.Domain.Model.TimeZoneDatas\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CommonPersistence.TimeZoneLoadById(System.Int64)~ADEXS.Core.Domain.Model.TimeZoneData\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ContactPersistence.ConvertStatuses(ADEXS.Core.Types.Enums.ContactStatus[])~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ContactPersistence.LoadList(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IEnumerable{System.Guid},ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomMenuItemPersistence.LoadByAccountId(System.Int32)~ADEXS.Core.Domain.Model.CustomMenuItems\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomMenuItemPersistence.LoadByAccountIdPersonaUid(System.Int32,System.Guid)~ADEXS.Core.Domain.Model.CustomMenuItems\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomMenuItemPersistence.LoadByUid(System.Int32,System.Guid)~ADEXS.Core.Domain.Model.CustomMenuItem\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportChartPersistence.Delete(ADEXS.Core.Domain.Model.CustomReportChart)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportChartPersistence.LoadByUid(ADEXS.Core.Domain.Model.Base.IUserContext,System.Guid)~ADEXS.Core.Domain.Model.CustomReportChart\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportChartPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportColumnPersistence.LoadByReportUid(System.Guid)~ADEXS.Core.Domain.Model.CustomReportColumns\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportParameterPersistence.LoadByReportUid(System.Guid)~ADEXS.Core.Domain.Model.CustomReportParameters\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportPersistence.LoadByAccountIdAndUserId(System.Int32,System.Guid,System.Nullable{ADEXS.Core.Types.Enums.UserRole},ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.CustomReports\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportPersistence.LoadByMetadataFieldUid(System.Int32,System.Guid)~ADEXS.Core.Domain.Model.CustomReports\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportPersistence.LoadByName(System.Int32,System.Guid,System.Nullable{ADEXS.Core.Types.Enums.UserRole},System.String)~ADEXS.Core.Domain.Model.CustomReport\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportPersistence.LoadBySubType(System.Int32,System.Guid,System.Nullable{ADEXS.Core.Types.Enums.UserRole},ADEXS.Core.Types.Enums.ReportSubType)~ADEXS.Core.Domain.Model.CustomReports\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportPersistence.LoadByUid(System.Int32,System.Guid,System.Nullable{ADEXS.Core.Types.Enums.UserRole},System.Guid)~ADEXS.Core.Domain.Model.CustomReport\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportPersistence.LoadByUserAndNameFilter(System.Int32,System.Guid,System.Nullable{ADEXS.Core.Types.Enums.UserRole},System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.CustomReports\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportPersistence.LoadEditable(System.Int32,System.Guid,System.Nullable{ADEXS.Core.Types.Enums.UserRole},ADEXS.Core.Types.Enums.ReportType)~ADEXS.Core.Domain.Model.CustomReports\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomReportPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomToolbarPersistence.CustomToolbarButtonDeleteByToolbarUid(System.Guid)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomToolbarPersistence.DeleteForPersona(System.Guid)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomToolbarPersistence.LoadByAccountId(System.Int32)~ADEXS.Core.Domain.Model.CustomToolbars\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomToolbarPersistence.LoadByAccountIdAndKey(System.Int32,System.String)~ADEXS.Core.Domain.Model.CustomToolbars\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomToolbarPersistence.LoadByKey(System.Int32,System.Guid,System.String,System.Boolean)~ADEXS.Core.Domain.Model.CustomToolbar\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.CustomToolbarPersistence.LoadByToolbarUid(System.Guid)~ADEXS.Core.Domain.Model.CustomToolbarButtons\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentAssemblyFormFieldPersistence.DeleteFieldsByTemplateAndFolder(System.Int32,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentAssemblyFormFieldPersistence.LoadFieldValues(System.Int32,System.Guid,System.Guid)~System.Collections.Generic.Dictionary{System.String,System.Object}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentAssemblyFormFieldPersistence.SaveBatch(System.Int32,System.Guid,System.Guid,System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{System.String,System.String}})\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentAssemblyFormFieldPersistence.SaveField(System.Int32,System.String,System.String,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentCheckinNotificationPersistence.DeleteNotificationRegistration(System.Guid,System.Guid,System.Boolean)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentCheckinNotificationPersistence.LoadByDocumentUid(System.Guid)~System.Collections.Generic.IList{System.Guid}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentCheckinNotificationPersistence.RegisterNotification(System.Guid,System.Guid,System.Boolean)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentHistoryPersistence.LogDocumentAction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Globals.ScmEnums.ActionType,System.Guid,System.String,System.Guid,System.String,System.DateTime,Newtonsoft.Json.Linq.JObject,System.Nullable{System.Guid},ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,ADEXS.Core.Types.Enums.HistoryCommentIdentifiers)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentHistoryPersistence.LogDocumentAction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Globals.ScmEnums.ActionType,System.Guid,System.String,System.Guid,System.String,System.DateTime,Newtonsoft.Json.Linq.JObject,System.Nullable{System.Guid},ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,ADEXS.Core.Types.Enums.HistoryCommentIdentifiers)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.ApplyHasNamingTemplate(ADEXS.Core.Domain.Model.Documents)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.CopyMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.Dictionary{System.Guid,System.String},System.Guid,ADEXS.Core.Types.Constants.FileDataSource)~ADEXS.Core.Domain.Model.DocumentCopyResults\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.EnumerateUnauthorized(ADEXS.Core.Domain.Model.Contacts,ADEXS.Core.Domain.Model.Documents)~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.FilterOutTrashedDocumentUids(System.Int32,System.Collections.Generic.List{System.Guid})~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.IsDocumentNameDuplicate(System.Int32,System.Guid,System.String,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.IsDocumentUsingFileDataUid(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadByMetadataMatch(System.Int32,System.Guid,System.Collections.Generic.IList{ADEXS.Core.Domain.Model.Metadata},System.Guid,System.Guid,System.Boolean)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadByRelatedMetadata(System.Int32,System.Guid,System.Guid)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadByRelatedMetadata(System.Int32,System.Guid,System.Guid,System.Guid)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadByTransactionUid(System.Guid,System.Guid,System.Guid)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadCountByFolderUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadList(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{System.Guid},System.Boolean,System.Boolean,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.LoadList(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.MoveMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.Dictionary{System.Guid,System.String},System.Guid,System.Boolean)~System.Data.IDataReader\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.MungeSortColumn(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentReminderPersistence.LoadByUid(System.Int32,System.Guid)~ADEXS.Core.Domain.Model.DocumentReminder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentReminderPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentReminderRecipientPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.BuildInClauseTemplate(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.BuildInClauseTemplate(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.SetScopeDatesKindToUtc(ADEXS.Core.Domain.Model.Scope)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.UpdateDocumentScopes(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.DocumentScope},ADEXS.Core.Types.Enums.DocumentScopeActorAction,System.String,System.DateTime,System.Nullable{System.DateTime},System.String,ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.DocumentScopePersistence.UpdateDocumentScopes(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.DocumentScope},ADEXS.Core.Types.Enums.DocumentScopeActorAction,System.String,System.DateTime,System.Nullable{System.DateTime},System.String,System.String)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.EmailPersistence.GetPlainTextBodyFromMsg(System.Net.Mail.MailMessage)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.EmailPersistence.GetPlainTextBodyFromMsg(System.Net.Mail.MailMessage)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalReviewApprovedEmailDomainPersistence.DeleteEmailDomain(System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalReviewApprovedEmailDomainPersistence.GetEmailDomain(System.Int32,System.String)~ADEXS.Core.Domain.Model.ExternalReviewApprovedEmailDomain\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalReviewPersistence.LoadByDocumentUid(System.Int32,System.Guid)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalReviewPersistence.LoadExpiring~ADEXS.Core.Domain.Model.ExternalReviews\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalReviewPersistence.Save(ADEXS.Core.Domain.Model.ExternalReview)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalSystemUserPersistence.Delete(System.Int32,ADEXS.Core.Types.Enums.ExternalSystemType)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalSystemUserPersistence.Delete(System.Int32,ADEXS.Core.Types.Enums.ExternalSystemType)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalSystemUserPersistence.DisableByAccountId(System.Int32)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalSystemUserPersistence.DisableByAccountId(System.Int32)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalSystemUserPersistence.LoadByAccountId(System.Int32)~ADEXS.Core.Domain.Model.ExternalSystemUsers\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalSystemUserPersistence.LoadByAccountId(System.Int32)~ADEXS.Core.Domain.Model.ExternalSystemUsers\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalSystemUserPersistence.LoadByAccountIdAndSystemType(System.Int32,ADEXS.Core.Types.Enums.ExternalSystemType,System.Boolean)~ADEXS.Core.Domain.Model.ExternalSystemUser\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalSystemUserPersistence.LoadByAccountIdAndSystemType(System.Int32,ADEXS.Core.Types.Enums.ExternalSystemType,System.Boolean)~ADEXS.Core.Domain.Model.ExternalSystemUser\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ExternalSystemUserPersistence.LoadBySystemType(ADEXS.Core.Types.Enums.ExternalSystemType)~ADEXS.Core.Domain.Model.ExternalSystemUsers\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.CanMoveFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.EnumerateUnauthorized(ADEXS.Core.Domain.Model.Contacts,ADEXS.Core.Domain.Model.Folders)~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.FolderHasDocuments(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.GetDescendantsCount(System.Int32,System.Guid,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.GetFolderPath(System.Int32,System.Guid,System.Guid,System.String,System.Boolean,System.Boolean,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.IsFolderNameDuplicate(System.Int32,System.Guid,System.String,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.IsStaticSecurityFolder(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.IsTrashed(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadAncestorsAndChildrenByFolderUids(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadContents(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Base.ModelCollection{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadList(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IEnumerable{System.Guid},ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.LoadList(ADEXS.Core.Domain.Model.UserAccount,System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.MungeSortColumn(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.MungeSortColumnExternal(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.GroupMemberPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.GroupPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAccountPersistence.LoadByGuid(System.Guid)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IAccountPersistence.SaveAllocation(System.Int32,System.Guid,System.String,System.String,System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IDevicePersistence.DeleteSyncDevice(System.Guid)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.InboundEmailPersistence.LoadByAccountId(System.Int32)~ADEXS.Core.Domain.Model.InboundEmails\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.InboundEmailPersistence.LoadByAccountIdUserId(System.Int32,System.Guid)~ADEXS.Core.Domain.Model.InboundEmails\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.InboundEmailPersistence.Save(ADEXS.Core.Domain.Model.InboundEmail)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.InboundFaxPersistence.LoadById(System.Int32)~ADEXS.Core.Domain.Model.InboundFax\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.LoginPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.LoginRecentPasswordPersistence.LoadByLoginUid(System.Guid,System.Int32)~ADEXS.Core.Domain.Model.LoginRecentPasswords\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.LoginRecentPasswordPersistence.LoadByLoginUid(System.Guid,System.Int32)~ADEXS.Core.Domain.Model.LoginRecentPasswords\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.LoginRecentPasswordPersistence.Save(ADEXS.Core.Domain.Model.LoginRecentPassword)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataFieldPersistence.LoadByUidList(System.Int32,System.Collections.Generic.IEnumerable{System.Guid})~ADEXS.Core.Domain.Model.MetadataFields\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataFieldPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataFieldPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataGroupPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataImportMappingElementPersistence.LoadByMetadataImportMappingUid(System.Guid)~ADEXS.Core.Domain.Model.MetadataImportMappingElements\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataImportMappingElementPersistence.LoadByUid(System.Guid)~ADEXS.Core.Domain.Model.MetadataImportMappingElement\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataImportMappingPersistence.Exists(System.Int32,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataImportMappingPersistence.LoadByAccountId(System.Int32)~ADEXS.Core.Domain.Model.MetadataImportMappings\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataImportMappingPersistence.LoadByUid(System.Guid,System.Boolean)~ADEXS.Core.Domain.Model.MetadataImportMapping\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.ConstructMetadataDictionary(ADEXS.Core.Domain.Model.Metadatas)~System.Collections.Generic.Dictionary{ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.Metadatas}}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.LoadByFieldUidAndObjectUids(System.Guid,System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{System.Guid,ADEXS.Core.Types.Enums.ObjectType}})~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.LoadCalculated(System.Int32,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.LoadFromAncestorsWithMatchingMetadata(System.Int32,ADEXS.Core.Types.Enums.ObjectType,System.Guid,System.String,System.Collections.Generic.List{System.String})~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.LoadSchemaByGroupIds(System.Int32,System.Collections.Generic.IEnumerable{System.Guid})~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.MetadataLoadByObjectUids(System.Int32,System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{System.Guid,System.Int32}})~System.Collections.Generic.Dictionary{ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.Metadatas}}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.MetadataLoadMinimalSelectionByObjectUids(System.Int32,System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{System.Guid,System.Int32}},System.Collections.Generic.List{ADEXS.Core.Util.Core.Pair{System.Guid,System.Int32}})~System.Collections.Generic.Dictionary{ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.Metadatas}}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.Save(ADEXS.Core.Domain.Model.Metadata)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.SaveBatch(System.Int32,System.Guid,System.Guid,ADEXS.Core.Types.Enums.ObjectType,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas,System.Boolean)~ADEXS.Core.Domain.Persistence.Model.CustomRuleEventParameters\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataPersistence.ToXML(ADEXS.Core.Domain.Model.Metadatas)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataQueuePersistence.InsertDocumentListForRename(System.Int32,System.Collections.Generic.IList{System.Guid})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.MetadataSetPersistence.SavePreExecute(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.NotificationPersistence.CreateNotification(ADEXS.Core.Domain.Model.Notification,ADEXS.Core.Domain.News.NotificationUsers)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.NotificationPersistence.DeleteDigestRows(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.NotificationPersistence.getNotificationPager(System.Int32,System.Int32)~ADEXS.Core.Domain.Lookup.Pager\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.PortalPersistence.LoadByExternalId(System.String,System.Int32)~ADEXS.Core.Domain.Model.Portal\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.PortalPersistence.LoadByUid(System.Guid,System.Int32)~ADEXS.Core.Domain.Model.Portal\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.PublicShareLinkPersistence.GetSharedFolders(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.PublicShareLinkPersistence.LoadDocumentByObjectUid(System.Int32,System.Guid,System.Guid)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ReminderTemplatePersistence.ReminderTemplatePreSave(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ReminderTemplateRecipientPersistence.ReminderTemplateRecipientPreSave(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SealExtractionsPersistence.Save(System.Int32,System.Guid,System.String,System.String,System.Collections.Generic.List{ADEXS.SealAPIClient.Models.Responses.Objects.MetadataItem})\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityPersistence.ExplicitSecurityLoadByObject(System.Int32,System.Guid,ADEXS.Core.Types.Enums.ObjectType)~ADEXS.Core.Domain.Model.ExplicitSecurities\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityPersistence.ExplicitSecurityLoadByObject(System.Int32,System.Guid,ADEXS.Core.Types.Enums.ObjectType)~ADEXS.Core.Domain.Model.ExplicitSecurities\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityPersistence.FormatExplicitSecurities(ADEXS.Core.Domain.Model.SecurityTable,System.Int32,ADEXS.Core.Types.Enums.ObjectType,System.Guid)~ADEXS.Core.Domain.Model.ExplicitSecurities\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SecurityPersistence.Load(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole},System.Int32)~ADEXS.Core.Domain.Model.ExplicitSecurities\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SentEmailBucketedMetadata.GetBucketId(System.DateTime)~System.DateTime\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.StagedMetadataReviewPersistence.CreateInsertCommand(System.String,ADEXS.Core.Domain.Model.AIDocument.StagedMetadata)~ADEXS.CqlCorePersistence.AtlasCassandraCommand\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.StagedMetadataReviewPersistence.DeleteOne(System.String,ADEXS.Core.Domain.Model.AIDocument.StagedMetadata)~ADEXS.CqlCorePersistence.AtlasCassandraCommand\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.StagedMetadataReviewPersistence.UpdateOne(System.String,ADEXS.Core.Domain.Model.AIDocument.StagedMetadata)~ADEXS.CqlCorePersistence.AtlasCassandraCommand\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.StaticSecurityPersistence.Load(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Types.Enums.UserRole},System.Int32)~ADEXS.Core.Domain.Model.StaticSecurities\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SupportPersistence.GetExpiringPrimaryAccountHolder(System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Persistence.Model.SupportPersistence.ExpiringAccountRecord}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SyncPersistence.AddFoldersToSyncFolderProfiles(System.Int32,System.Guid,System.Collections.Generic.IList{System.Guid})\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SyncPersistence.AddSyncFoldersToSyncProfile(System.Int32,System.Guid,System.Collections.Generic.IList{System.Guid},System.Boolean)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SyncPersistence.DeleteFoldersFromSyncFolderProfiles(System.Int32,System.Guid,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SyncPersistence.ExpireProfileManifest(System.Int32,System.Guid,System.DateTime,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SyncPersistence.RemoveSyncFoldersFromSyncProfile(System.Int32,System.Guid,System.Collections.Generic.IList{System.Guid})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.SyncPersistence.SyncPreSave(System.Guid,ADEXS.SqlCorePersistence.IBaseDomainObject,ADEXS.SqlCorePersistence.Command)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.TrackedFieldStatusPersistence.SaveOne(System.String,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus)~ADEXS.CqlCorePersistence.AtlasCassandraCommand\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserAccountPersistence.GetNewAccountOption(ADEXS.Core.Domain.Model.UserAccounts)~ADEXS.Core.Types.Enums.NewAccountOption\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserAccountPersistence.LoadByAccountIdAndRole(System.Int32,ADEXS.Core.Types.Enums.UserRole[])~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserAccountPersistence.LoadByLegacyUserId(System.Int32)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserAccountPersistence.LoadByUid(System.Guid)~ADEXS.Core.Domain.Model.UserAccount\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserAccountPersistence.LoadList(System.Int32,System.Collections.Generic.IEnumerable{System.Guid},ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.UserLoginLogPersistence.WriteToWorkload(ADEXS.Core.Domain.Model.UserLoginLog,System.String)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.ActivityPropertyPersistence.Save(System.Int32,System.Guid,System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Object})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.EventPersistence.GetStatuses(System.Collections.Generic.IEnumerable{ADEXS.Core.Types.Enums.WorkflowStepStatus})~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.EventPersistence.LoadNext(System.String,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable{ADEXS.Core.Types.Enums.WorkflowStepStatus},System.Collections.Generic.IEnumerable{System.Int32})~ADEXS.Core.Domain.Model.Workflow.Events\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.EventPersistence.LoadNextBulk(System.String,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable{ADEXS.Core.Types.Enums.WorkflowStepStatus},System.Collections.Generic.IEnumerable{System.Int32})~ADEXS.Core.Domain.Model.Workflow.Events\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstancePersistence.GetStatuses(System.Collections.Generic.IEnumerable{ADEXS.Core.Types.Enums.WorkflowStepStatus})~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstancePersistence.GetStatuses(System.Collections.Generic.IEnumerable{ADEXS.Core.Types.Enums.WorkflowStepStatus})~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstancePersistence.LoadByStatusAndDate(System.Int32,System.Guid,System.Guid,System.Int32,System.Collections.Generic.IEnumerable{ADEXS.Core.Types.Enums.WorkflowStepStatus},System.DateTime,System.DateTime,System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Workflow.Instances\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstancePersistence.LoadWithFilters(System.Int32,System.Guid,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{ADEXS.Core.Types.Enums.WorkflowStepStatus},System.DateTime,System.DateTime,System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Workflow.Instances\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstancePersistence.LoadWithFilters(System.Int32,System.Guid,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{ADEXS.Core.Types.Enums.WorkflowStepStatus},System.DateTime,System.DateTime,System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Workflow.Instances\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceVariablePersistence.InstanceVariablePersistenceCassandra.BuildInsertCommand(ADEXS.Core.Domain.Model.Workflow.InstanceVariable)~ADEXS.CqlCorePersistence.AtlasCassandraCommand\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceVariablePersistence.InstanceVariablePersistenceSql.Save(System.Guid,ADEXS.Core.Domain.Model.Workflow.InstanceVariables)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.InstanceVariablePersistence.InstanceVariablePersistenceSql.Save(System.Guid,ADEXS.Core.Domain.Model.Workflow.InstanceVariables)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.PersistedInstancePersistence.LoadRunnableInstances(System.String,System.DateTime,System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.Int32})~ADEXS.Core.Domain.Model.Workflow.Instances\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.PersistedInstancePersistence.LoadRunnableSlowInstances(System.String,System.DateTime,System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.Int32})~ADEXS.Core.Domain.Model.Workflow.Instances\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.WorkerPoolPersistence.LoadAccessesByUserAccountAndUids(System.Int32,System.Guid,System.Collections.Generic.IEnumerable{System.Guid})~ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccesses\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.WorkerPoolPersistence.SaveAccess(System.Int32,System.Guid,System.String,System.String,System.Guid,System.String,System.Boolean,System.Boolean)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.WorkItemPersistence._LoadActivityCounts(System.Int32,System.Guid,System.Guid,System.Guid,System.Boolean,System.Boolean,System.Boolean,System.Boolean)~System.Collections.Generic.Dictionary{System.String,System.Int32}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.WorkItemPersistence.LoadAdministrationNodes(System.Int32,System.Guid,System.Boolean)~ADEXS.Core.Domain.Model.Workflow.WorkItems\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.PersistenceFactory.GetPersistenceFromConnectionString``1(System.String)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.PublicUserAuthorizationPersistence.Delete(System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.PublicUserAuthorizationPersistence.Load(System.String)~ADEXS.Core.Domain.Model.PublicUserAuthorizationInfo\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.ExecuteWithParameters(System.Int32,System.Guid,ADEXS.Core.Domain.Model.CustomReport,ADEXS.Core.Domain.Model.CustomReportParameters,ADEXS.Core.Domain.Lookup.Pager,System.Int32@)~System.Data.DataTableCollection\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.LoadSimpleReportByRecipientName(System.Guid,System.Int32,System.String,System.DateTime,System.DateTime,System.Collections.IList)~System.Data.DataSet\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.LoadSimpleReportByRecipientName(System.Guid,System.Int32,System.String,System.DateTime,System.DateTime,System.Collections.IList)~System.Data.DataSet\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.LoadSimpleReportBySenderName(System.Guid,System.Int32,System.DateTime,System.DateTime,System.Collections.IList)~System.Data.DataSet\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.LoadUploadsByUserId(System.Int32,System.Guid,System.DateTime,System.DateTime)~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ReportWarehousePersistence.TransactionSummaryByRecipient(System.Int32,System.Guid,System.Guid)~System.Data.DataTable\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.SfInvoiceMergeStatusPersistence.GenerateInsertCommand(ADEXS.Core.Domain.Persistence.SfInvoiceMergeStatus,System.TimeSpan)~ADEXS.CqlCorePersistence.AtlasCassandraInsertCommand\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.SOAPAuthenticationTokenPersistence.UpdateTokenUsage(ADEXS.Core.Domain.Persistence.AuthenticationToken,System.Int32)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.ThrottlingPersistence.GetKey(System.String,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedStorage.EncryptedOperationTimer(System.Int32,System.String)~DocuSign.Monitoring.OperationTimer\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedStorage.ResolveFormatForMetadata(System.String,System.Nullable{DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat})~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasHybridPhysicalStorage.LogFileSize(System.Func{System.Int64},System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA1816:Dispose methods should call SuppressFinalize\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasPhysicalStorageFactory.Dispose\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasPhysicalStorageFactory.GetPhysicalStorage(DocuSign.CLM.ContentStorage.StorageConstants.PhysicalStorageType,System.Int32)~DocuSign.CLM.ContentStorage.IPhysicalStorage\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.AttributeQueryHelper.GetAttributeSelectionBase(System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Func{ADEXS.Core.Domain.Presto.Model.ReportColumn,System.String})~System.String[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.ExcelExportHelpers.ConvertReportToExcel(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.IO.MemoryStream)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.ExcelExportHelpers.ConvertReportToExcel(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.IO.MemoryStream)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.Export.CsvExportHelpers.ConvertReportToCsv(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.IO.MemoryStream)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.Export.CsvExportHelpers.ConvertReportToCsv(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.IO.MemoryStream)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.DocumentLimit(System.String[],System.String,System.String,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetQuery(System.String[],System.String,System.String,ADEXS.Core.Domain.Presto.Model.ReportColumn[],System.String[],System.String[],System.String[],ADEXS.Core.Types.Enums.LogicalOperator,System.String[],System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetQuery(System.String[],System.String,System.String,System.String[],System.String[],System.String[],ADEXS.Core.Types.Enums.LogicalOperator,System.String[],System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetSqlTableName(ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String[],System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.TryGetActorClauseInArrayColumn(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.ActorReportFilter},System.String,ADEXS.Core.Domain.Model.UserAccount,System.ValueTuple{System.String,System.Boolean}[]@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.TryGetActorClauseInJsonColumn(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.ActorReportFilter},System.String,ADEXS.Core.Domain.Model.UserAccount,System.ValueTuple{System.String,System.Boolean}[]@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.UserQueryHelper.TryGetActorsUserAccountUids(ADEXS.Core.Domain.Model.ActorReportFilter,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.AddPlaceHolderValues(ADEXS.Core.Domain.Presto.Model.ReportColumn,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.AddSetInfoToDict(System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.List{System.Guid}},System.Guid,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.GetNestedRepeatingAttrTransformFunction(System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Object},System.Guid,System.Collections.Generic.List{System.Guid},System.String,System.Boolean)~System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Collections.Generic.List{System.ValueTuple{System.String,System.Object}},System.Object}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.GetRepeatingAttrTransformFunction(System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Object},System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Object},System.Guid,System.Collections.Generic.List{System.Guid},System.Boolean)~System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Collections.Generic.List{System.ValueTuple{System.String,System.Object}},System.Object}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.IsClauseField(LanguageExt.Option{System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataField}},System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.IsDropdownType(ADEXS.Core.Types.Enums.DataType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.IsValidVisibleAttribute(ADEXS.Core.Domain.Presto.Model.ReportColumn)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.ShouldHtmlDecode(ADEXS.Core.Domain.Presto.Model.ReportColumn)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.TransformData(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.PrestoQueryResults,System.Boolean,System.Boolean)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoDataTransformConfiguration.WrapTransformFunc(System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Object})~System.Func{ADEXS.Core.Domain.Model.UserAccount,System.Object,System.Collections.Generic.List{System.ValueTuple{System.String,System.Object}},System.Object}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1810:Initialize reference type static fields inline\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoRestClient.#cctor\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoRestClient.PostRequest(System.String,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)~LanguageExt.EitherAsync{ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoException,ADEXS.Core.Domain.Presto.PrestoQueryResults}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoRestClient.PrestoUrl~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReport.GetUserFiltersCondition(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportFilters)~System.String[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.ConditionallyGenerateAccountConditions(ADEXS.Core.Domain.Model.UserAccount)~System.String[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsHelpers.GenerateAttributeQueries(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter})~System.ValueTuple{System.String[],System.Boolean}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.AccumulateBucketIdsForPreview(System.ValueTuple{System.String,System.Int32}[])~System.String[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.AccumulateBucketIdsForPreview(System.ValueTuple{System.String,System.Int32}[])~System.String[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.ExtractData(ADEXS.Core.Domain.Presto.PrestoQueryResults)~System.ValueTuple{System.String,System.Int32}[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.GenerateQueryAsync~System.Threading.Tasks.Task{System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.GenerateWhereConditions(System.ValueTuple{System.String,System.Int32}[])~System.ValueTuple{System.String[],System.ValueTuple{System.String[],System.String}[]}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.RenameSortColumn(ADEXS.Core.Domain.Presto.Model.ReportColumn)~ADEXS.Core.Domain.Presto.Model.ReportColumn\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.EmptyBaseQuery~System.ValueTuple{System.String[],System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.EmptyBaseQuery~System.ValueTuple{System.String[],System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.GenerateBaseQueriesWithoutAttributes(System.String[],System.String[],System.Boolean,System.String[],System.String[],ADEXS.Core.Domain.Presto.Model.ReportColumn,System.String[],System.String[],System.String[],ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter[])~System.ValueTuple{System.String[],System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.GetDocumentTableAlias(System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportHelper.DocumentUrlCol(ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.String[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentWhereConditions.Documents(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters,System.String,System.String[]@,System.String[]@,System.String[]@,System.String[]@,System.Boolean,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentWhereConditions.Folders(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters,System.String[]@,System.String[]@,System.String[]@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReport.GetUserFiltersCondition(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportFilters,System.String,System.String,System.String,System.String)~System.String[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReportConfiguration.SearchQueryToStringListReportFilter(System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.StringListReportFilter}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.ConditionallyGetSqlDynamicFilteringHeaders(ADEXS.Core.Domain.Model.UserAccount)~System.String[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReport.GenerateQuery~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReport.HandleLaterCol(ADEXS.Core.Domain.Presto.Model.ReportColumn)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReportConfiguration.GetAdditionalHeaders(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~System.String[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportQueryHelpers.InitDetailsFieldsAndValidate(ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport,System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus}@,System.String[]@,System.String[]@,System.String[]@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportQueryHelpers.WorkflowOverviewQuery(ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport,System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus},System.String[],System.String[],System.String[],System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportQueryHelpers.WorkflowOverviewQuery(ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport,System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus},System.String[],System.String[],System.String[],System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportSubQueries.GenerateAllScopesDetailsQuery(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportSubQueries.GenerateFinishedScopesDetailsQuery(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewConfiguration,System.String[],System.String[],System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus},System.String[],System.Collections.Generic.List{System.String})~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportSubQueries.GenerateRunningScopesDetailsQuery(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewConfiguration,System.String[],System.String[],System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus},System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportSubQueries.GenerateScopesWithAttributesQuery(System.String,System.String[],System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},LanguageExt.Option{System.String[]},ADEXS.Core.Types.Enums.LogicalOperator)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewWhereConditions.Base(ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewConfiguration,ADEXS.Core.Domain.Model.UserAccount,System.String[],System.String[])~System.ValueTuple{System.String[],System.String[],System.Collections.Generic.List{System.String}}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportSubQueries.GenerateJoinsClause(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},LanguageExt.Option{System.String[]},ADEXS.Core.Types.Enums.LogicalOperator)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReportQueryHelpers.GetAggregateWhereConditions(ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailConfiguration,ADEXS.Core.Domain.Model.UserAccount)~System.String[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReportQueryHelpers.InitStepDetailFieldsAndValidate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters,System.Collections.Generic.List{ADEXS.Core.Types.Enums.WorkflowStatus}@,System.ValueTuple{System.String,System.Boolean}[]@,System.ValueTuple{System.String,System.Boolean}[]@,System.ValueTuple{System.String,System.Boolean}[]@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReportQueryHelpers.StepDetailsQuery(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailConfiguration,ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters,System.Boolean)~System.ValueTuple{System.String[],System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReportSubQueries.GenerateStepDetailAttributeFiltersQuery(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter},LanguageExt.Option{System.String[]},ADEXS.Core.Types.Enums.LogicalOperator)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReportWhereConditions.GenerateBaseConditions(ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters,ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,ADEXS.Core.Types.Enums.LogicalOperator,System.Int32,System.Boolean)~System.String[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReportConfiguration.GetAdditionalHeaders(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~System.String[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyCommon.AppendCustomFormFields(System.Xml.XmlDocument,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.FormRepository.FormInputFieldEx},System.Int32)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyCommon.CreateXmlElementWithSetNumberAndSetName(System.Xml.XmlDocument,ADEXS.Core.Domain.Model.Metadata,System.String)~System.Xml.XmlElement\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyDocument.Serialize(ADEXS.Core.Domain.Model.Document)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Proxy.ProxyFolder.Serialize(ADEXS.Core.Domain.Model.Folder)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.QueueHelper.TaskSender.GetPriority(ADEXS.Core.Domain.AccountSettings,System.String)~CLM.MessageDefines.Constants.QueueItemPriority\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccessControlRepository.Load(System.Int32,System.Guid)~ADEXS.Core.Domain.Model.AccessControl\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccessControlRepository.MergeAccessLevels(ADEXS.Core.Domain.Model.AccessControls)~System.Int32\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository._DetermineConnectionStringFromSite(System.String,ADEXS.Core.Types.Enums.AccountType)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository._SaveDsCredentials(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository._SaveSfOrgForAccount(ADEXS.Core.Domain.Model.UserAccount,System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AccountStatusChangedCleanup(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AddKazmonEventForPropertyUpdate(System.Int32,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AllocateNewAccountId(ADEXS.Core.Domain.Model.Account)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.EnableEos(ADEXS.Core.Domain.Model.UserAccount,System.Boolean)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.IsExistingCLMAccount(ADEXS.Core.Domain.Model.Account)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.PreSaveDsCredentials(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.RevertToAccountTypeDefaults(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.AccountType)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SaveCulture(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.CreateAccountData)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SaveTimeZone(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.CreateAccountData)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SyncAccount(System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.UpdateRootFolderName(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.ValidateNewAccountPackage(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.ValidateSecuritySettings(ADEXS.Core.Domain.Model.Account)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.AccountRepository.AccountValidationError}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.VerifyPrivileges(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.VerifyRequestEssentialsForNewAdmin(ADEXS.Core.Domain.Model.CreateAccountData)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.IAccountRepository.LoadByGuid(System.Guid)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.IAccountRepository.SaveAllocation(System.Guid,System.String,System.String,System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementFieldService.GetStandardFields(ADEXS.Core.Domain.Model.UserAccount,System.Nullable{ADEXS.Core.Domain.Repository.AgreementRepository.Tag})~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Repository.AgreementRepository.AgreementField}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRelationshipHelper.ValidateAgreementRelationships(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.MergeAgreementFields(ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.Agreement)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.ElasticAgreementRepository.RestoreDocumentsFromTrash(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{System.Guid})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.ElasticAgreementRepository.ValidateAndFormatDateRange(System.String,System.String,ADEXS.Core.Domain.Model.MetadataField,ADEXS.Core.Domain.Model.MetadataGroup,System.Globalization.CultureInfo)~ADEXS.Core.Domain.Search.MetadataSearchField\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentBatchRepository.DocumentBatchIsValid(ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatchValidationErrors@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentTransactionRepository.IsNotMirroredTransaction(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentTransactionRepository.ValidateAIDocumentTransaction(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentUploadService.EmitDocumentUploadedTelemetry(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction,ADEXS.Core.Domain.Model.AIDocument.Data.DocumentUpload)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIRulesEngineMappingRepository.ValidateAIRulesEngineMapping(ADEXS.Core.Domain.Model.AIDocument.AIRulesEngineMapping)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIRulesEngineRepository.CreateMonitoringTimer(System.String)~DocuSign.Monitoring.OperationTimer\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIXmlHelper.GenerateXml(System.Type,System.Object)~System.Xml.XmlElement\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIXmlHelper.GetAnalyzedValues(System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext})~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.AIDocument.AnalyzedValueXml}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIXmlHelper.SafeDeleteFile(DocuSign.CLM.ContentStorage.Shared.ISharedStorage,System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIXmlHelper.SaveDataReviewResultXml(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata})~ADEXS.Core.Domain.DataReview.Models.DataReviewResultXml\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StagedMetadataRepository.IsValid(ADEXS.Core.Domain.Model.AIDocument.StagedMetadata)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.StartAIBulkAnalysisTransactionsService.DateTimeUtcOrDefault(System.DateTime)~System.DateTime\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.AISApiFactory.#ctor(ADEXS.Core.Domain.IApplicationSettings,ADEXS.Core.Domain.Repository.ProvisioningRepository.IDSAccountsServerRepository,ADEXS.Core.Domain.Utilities.IAccountUidUtilities)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.AISApiFactory.GetConfiguration(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~DocuSign.API.AIFrontend.Sdk.Client.Configuration\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.AisMockedDataHelper.TryGetMockedData(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.AnalysisResult}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.IntellegoExtractionsRepository.GenerateUploadedFileName(ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1849:Call async methods when in an async method\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.IntellegoExtractionsRepository.GetAnalyzers(ADEXS.Core.Domain.Model.UserAccount)~System.Threading.Tasks.Task{DocuSign.API.AIFrontend.Sdk.Model.AnalyzerConfigurationResponse}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIExtractions.IntellegoExtractionsRepository.GetIntellegoAnalzersCacheKey(ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.GetRating(ADEXS.Core.Types.Enums.StagedMetadataStatus,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.GetSentenceLevelRating(System.String,ADEXS.Core.Types.Enums.StagedMetadataStatus,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.GetValueTypeOrDefault(ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult,RulesEngineAPIClient.Model.DataType)~System.ValueTuple{RulesEngineAPIClient.Model.DataType,ADEXS.Core.Types.Enums.ExtractionsDataType}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIS.AISAIDocumentTransactionProvider.IsSentenveLevelStandardMapping(System.Guid,ADEXS.Core.Types.Enums.AttributeFieldType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ApiWhiteListedUriRepository.Save(System.Collections.Generic.List{System.String},ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeBaseRepository.GetSaveFormat(System.String)~Aspose.Words.SaveFormat\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeCompareRepository.AcceptRevisions(Aspose.Words.Document)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeCompareRepository.GetCompareOptions(ADEXS.Core.Domain.DocumentCompare.ComparisonStyles.DocumentStyleOverride)~Aspose.Words.Comparing.CompareOptions\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeCompareRepository.RemoveProtection(Aspose.Words.Document)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeContentReplacementRepository.ReplaceText(ADEXS.Core.Domain.Model.Document,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.StructuredDocument.Models.OfficeContentReplacementModel})~ADEXS.Core.Util.FileIO.TempFile\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.AsposeScorecardDatabagRepository.UpdateOrAddProperty(Aspose.Words.Properties.CustomDocumentProperties,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA1816:Dispose methods should call SuppressFinalize\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AsposeImplementations.OperableDocument.Dispose\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractMetadataService.CreateMetadataField(System.String,System.Guid,System.Guid,System.Int32)~ADEXS.Core.Domain.Model.MetadataField\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractMetadataService.CreateMetadataSet(System.String,ADEXS.Core.Domain.Model.MetadataGroup,System.Int32)~ADEXS.Core.Domain.Model.MetadataSet\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractMetadataService.TrySetSmartClauseMetadata(ADEXS.Core.Domain.Model.Clause.ClauseSmartClauseMetadata,System.String,System.String,ADEXS.Core.Domain.Model.Clause.ClauseSmartClauseMetadata@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.BuildAuthorizationStep(System.String)~ADEXS.ClauseIOClient.Models.Common.FlowStep\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.BuildCallbackWorkflowStep(ADEXS.Core.Types.Enums.APIVersion,System.String,System.String)~ADEXS.ClauseIOClient.Models.Common.FlowStep\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.BuildJsonToXmlStep(System.String)~ADEXS.ClauseIOClient.Models.Common.FlowStep\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.CreateWorkload(ADEXS.Core.Domain.Model.QueueTasks.ClauseSmartContractTask)~ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractWorkload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.GetAPIVersionByAccount(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Types.Enums.APIVersion\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.LogWorkload(ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractWorkload,System.Diagnostics.Stopwatch,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.ResultErrorMessage(ADEXS.ClauseIOClient.Models.Results.ResultStatus,ADEXS.Core.Domain.Model.QueueTasks.ClauseSmartContractTask,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.TryConvertParameterValue(Newtonsoft.Json.Linq.JValue,System.String,System.Object@,System.Boolean@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.TryUpdateWorkflowName(System.Collections.Generic.List{ADEXS.ClauseIOClient.Models.Common.FlowStep},System.String,System.Boolean@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Clause.ClauseSmartContractService.ValidateClauseMapByTemplateUri(System.Collections.Generic.Dictionary{System.String,ADEXS.ClauseIOClient.Models.SmartClause},System.Collections.Generic.Dictionary{System.String,ADEXS.ClauseIOClient.Models.SmartClause}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.ObjectToDateTime(System.Object)~System.DateTime\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1847:Use char literal for a single character lookup\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.RemoveFileNameFromPath(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.GetBlobStorageFileName(System.Int32,ADEXS.Core.Types.Enums.MigrationEntityType,System.Guid,ADEXS.Core.Types.Enums.AccountConversionStatus)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.UpdateGroupInfo(System.Collections.Generic.Dictionary{System.String,System.String},ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.UpdateUserInfo(System.Collections.Generic.Dictionary{System.String,System.String},ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionStatusRepository.DeleteAccountConversionStatus(System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.UserGroup.UserGroupMigrationStatusRepository.GetAccountConversionAction(ADEXS.Core.Types.Enums.MigrationEntityType)~ADEXS.Core.Types.Enums.AccountConversionAction\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.CleanUpWhitespaceOnPartyFields(ADEXS.Core.Domain.Model.Party)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.Contains(System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.ConvertToNullIfEmpty(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.PartyMetadataHelper.LogMessages(System.Collections.Generic.IList{System.String})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration.buildAddress(System.String,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration.getDocumentPageCount(ADEXS.Core.Domain.Model.Documents)~System.Int32\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration.ScrubEntities(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Device.DeviceRepository.LoadDeviceApplicationActivity(System.Int32,System.Guid,System.String,System.String)~ADEXS.Core.Domain.Model.SyncDevice\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigRepository.ValidateConfig(System.Int32,ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigValidationError}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.GetSampleRowPartialCacheKey(System.Collections.Generic.ICollection{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.Cell},System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.DropdownDefinition.PossibleValue},System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherFormReader.BuildKey(System.Guid,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.AddElementToListIfFlagIsSet(System.Collections.Generic.List{System.String},Newtonsoft.Json.Linq.JToken,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.AddElementToListIfFlagIsSet(System.Collections.Generic.List{System.String},Newtonsoft.Json.Linq.JToken,System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.MergeDataRepository.LoadMergeData(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.DocLauncherConfig.MergeData\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.TrackedFieldRepository.Save(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.TrackedFieldStatusRepository.ValidateTrackedFieldStatusBase(ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataRepository.ValidateAccountId(ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataModel,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataSaveResult.ErrorTypes})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataRepository.ValidateContentAndContentType(ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataModel,System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataSaveResult.ErrorTypes})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.CombineDocumentRepository.GetPathForUnhandledMergeItem(ADEXS.Core.Domain.Model.QueueTasks.DocumentMergeItem)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.CombineDocumentRepository.IsDocxExtension(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentAttachmentSet.GetTimer(System.String)~DocuSign.Monitoring.OperationTimer\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.FileTooLarge(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.GetCurrentVersionNumber(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.InsertTaskIntoCompareQueue(ADEXS.Core.Domain.Model.UserAccount,CLM.MessageDefines.Interfaces.IUserTask)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRelatedText(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.String,System.Guid,System.String,System.Guid,System.Boolean,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRevisedFileNameForHtml(System.Guid,System.String,ADEXS.Core.Types.Enums.HistoryLinkType,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRevisedFileNameForHtml(System.Guid,System.String,ADEXS.Core.Types.Enums.HistoryLinkType,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRevisedFileNameNoHtml(System.String,ADEXS.Core.Types.Enums.HistoryLinkType,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentHistoryRepository.GetRevisedFileNameNoHtml(System.String,ADEXS.Core.Types.Enums.HistoryLinkType,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.ConvertTemplateRecipients(ADEXS.Core.Domain.Model.ReminderTemplateRecipients)~ADEXS.Core.Domain.Model.DocumentReminderRecipients\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.DocumentReminder,System.Boolean)~ADEXS.Core.Domain.Repository.DocumentRepository.DeleteDocumentReminderResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.FindAddedRecipients(ADEXS.Core.Domain.Model.DocumentReminderRecipients)~ADEXS.Core.Domain.Model.DocumentReminderRecipients\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.FindDeletedRecipients(ADEXS.Core.Domain.Model.DocumentReminderRecipients,ADEXS.Core.Domain.Model.DocumentReminderRecipients)~ADEXS.Core.Domain.Model.DocumentReminderRecipients\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.GetAssigneeString(ADEXS.Core.Domain.Model.DocumentReminder,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.IsDifferent(ADEXS.Core.Domain.Model.DocumentReminderRecipient,ADEXS.Core.Domain.Model.DocumentReminderRecipient)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.RemoveMinutes(System.DateTime)~System.DateTime\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.UserIsAuthorizedToCreateRemindersOn(ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.UserIsAuthorizedToUpdateRemindersOn(ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.ValidateDocumentReminderRequiredFields(ADEXS.Core.Domain.Model.DocumentReminder)~ADEXS.Core.Domain.Repository.DocumentRepository.ValidateDocumentReminderResult\")]\n[assembly: SuppressMessage(\"Build\", \"CA1841:Prefer 'ContainsKey' over 'Keys.Contains' for dictionary type 'Dictionary'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository._CopyMultipleToFolder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.Guid,ADEXS.Core.Types.Constants.FileDataSource,System.Boolean,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},System.Boolean)~ADEXS.Core.Domain.Model.CopyResults\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetContent(ADEXS.Core.Domain.AccountSettings,ADEXS.Core.Domain.Model.Document,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetCurrentDocumentVersion(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetCurrentDocumentVersion(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetDocumentsInFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.String)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.IsTrashed(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UndoCheckoutDocumentsFromElectronicSignature(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String,System.Boolean,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.GetDocumentScopeRef(System.Int32,System.Guid,System.Guid,System.Guid,System.String)~ADEXS.Core.Domain.Model.DocumentScopeRef\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.Save(System.Int32,ADEXS.Core.Domain.Model.Scope,ADEXS.Core.Domain.Model.DocumentScopeActivity,System.String,ADEXS.Core.Domain.Model.Contact,ADEXS.Core.Domain.Model.Workflow.WorkerPool,System.String,ADEXS.Core.Domain.Model.Documents,System.DateTime,System.Nullable{System.DateTime})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentScopeRepository.SetActor(ADEXS.Core.Domain.Model.Contact,System.String,ADEXS.Core.Domain.Model.DocumentScope)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentSearchQuery.GetDefaultPager(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Lookup.Pager\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.DuplicateHandlingDocumentHistory(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.NoDuplicateCheck(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.RenameDuplicateMessage(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DuplicateHandlingRepository.UpdateNoDuplicateCheck(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.IsTemporaryStorageEnabled(System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.CheckName(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.FireFolderDeletedEvent(System.Guid,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.GetFolderUidFromSfObjectType(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)~System.Guid\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.TagInbound(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Boolean})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderSearchQuery.GetDefaultPager(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Lookup.Pager\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderSearchQuery.SetPublicShareProperties(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folders)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.CreateFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Boolean,System.Boolean,System.Int32@,ADEXS.Core.Domain.Model.Metadatas)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1847:Use char literal for a single character lookup\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystem.CreateFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Boolean,System.Boolean,System.Int32@,ADEXS.Core.Domain.Model.Metadatas)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult.ParseLogicalPath\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.OpenXmlRepository.IsFileSizeTooBig(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.OpenXmlRepository.IsXmlWordDocument(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA1816:Dispose methods should call SuppressFinalize\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.PhysicalStorageTransaction.Dispose\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.SearchRepeater.GetRequestedMaxHitsPager(ADEXS.Core.Domain.Search.SearchResults,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Lookup.Pager\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.UrlRepository.GetFromContents(ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository.CanAccess(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository.GetParentDocumentUid(ADEXS.Core.Domain.Model.Document)~System.Guid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentTypes.DocumentTypesRepository.GetAliasLog(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType})~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentTypes.DocumentTypesRepository.GetAliasLog(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType})~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentTypes.DocumentTypesRepository.TrimAllAliasInList(System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocumentType})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmbeddedDocumentProperties.Handlers.PdfEmbeddedDocumentPropertiesHandler.Write(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.IO.Stream,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EmbeddedDocumentProperties.Handlers.WordEmbeddedDocumentPropertiesHandler.UpdateOrAddProperty(Aspose.Words.Properties.CustomDocumentProperties,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventPaceRepository.LocalEventKey(System.String,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.BuildNDCTags(ADEXS.Core.Domain.Model.Account)~System.String[]\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.FireEvent(ADEXS.Core.Domain.Model.UserAccount,CLM.MessageDefines.CommonEvent)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.EventRepository.EventRepository.GetDispatcherEventQueuePath~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.LoadAccountIdFromClmAccountUid(System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.ParseExternalKeyForUnknownSystemType(System.String,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SaveDSGroupId(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SyncToSite(ADEXS.Core.Domain.Persistence.Model.ExternalDataMap,System.String,System.Int64)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewAttachmentRepository.InsertAttachmentAsNewDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid,System.String)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.BuildHistoryDataForCompletion(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.Boolean,System.String,System.String,System.String)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.BuildHistoryMessageForCompletionByUser(ADEXS.Core.Domain.Model.ExternalReview,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.ExternalReview.UploadResult})~ADEXS.Core.Types.Enums.HistoryMessageIdentifiers\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.CompleteExternalReview(ADEXS.Core.Domain.Model.ExternalReview,System.String,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.ExternalReview.UploadResult},System.Nullable{System.Guid},System.Collections.Generic.ICollection{System.Guid},System.Boolean,ADEXS.Core.Domain.Model.ExternalReview.DocumentMatchInfo,System.Boolean)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.DeleteWatcher(System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.GetAttachmentNames(ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewReconciliationTask)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.GetExternalReviewCompleteUserType(ADEXS.Core.Domain.Model.ExternalReview,System.Boolean,System.String,System.Boolean)~ADEXS.Core.Types.Enums.ExternalReviewCompleteUserType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.GetExternalReviewCompletionMethod(System.Boolean,System.Boolean)~ADEXS.Core.Types.Enums.ExternalReviewCompletionMethod\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.GetExternalReviewReturnMethod~ADEXS.Core.Types.Enums.ExternalReviewReturnMethod\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.GetHistoryMessageIdentifierForCompletionByEmail(System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.ExternalReview.UploadResult})~ADEXS.Core.Types.Enums.HistoryMessageIdentifiers\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.GetHistoryMessageIdentifierForEmailAttachments(System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.ExternalReview.UploadResult},System.Boolean)~ADEXS.Core.Types.Enums.HistoryMessageIdentifiers\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.NewDocumentNames(ADEXS.Core.Domain.Model.ExternalReview,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.ExternalReview.UploadResult})~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.RegisterExternalReviewKeys(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalReview)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.RemoveDuplicateWatchers(ADEXS.Core.Domain.Model.ExternalReviewParticipants)~ADEXS.Core.Domain.Model.ExternalReviewParticipants\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.WriteHistoryForCompletionByEmail(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Persistence.Model.IDocumentHistoryPersistence,ADEXS.Globals.ScmEnums.ActionType,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.WriteHistoryForCompletionByUser(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Persistence.Model.IDocumentHistoryPersistence,ADEXS.Globals.ScmEnums.ActionType,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AbstractWord2PdfHelper.QueueUpConversions(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.ExternalReviewEmailAttachment})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.ExternalReviewEmailAttachmentBuilder.GenerateUniqueFileName(System.Int32,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.SafeToReplyEmailDomainRepository.EmailAddress.#ctor(System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalSystemUser.ExternalSystemUserRepository.DeleteAccountMap(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ExternalSystemType,System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.FormRepository.FormRepository.LoadDesignByUid(System.Int32,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Html.HtmlConversionRepository.CreateTempFileForHtmlConversion(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.Html.HtmlConversionInputFormat,System.Boolean)~ADEXS.Core.Domain.Repository.Html.HtmlConversionDirectoryDetails\")]\n[assembly: SuppressMessage(\"Usage\", \"CA1816:Dispose methods should call SuppressFinalize\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ImageCreation.Barcode.Dispose\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ImageCreation.BarcodeRepository.ResizeBarcodeImage(System.Drawing.Image,System.Int32,System.Int32)~System.Drawing.Bitmap\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.GenerateImagesForTransientDocument(System.String,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32[],ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.LWDPRepository.RetrievePageImageFileNames(System.Int32,System.Int32)~System.Collections.Generic.IEnumerable{System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Maintenance.EmptyTrash~System.Int32\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.CreateChangeHistoryJArray(ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas,System.Boolean)~Newtonsoft.Json.Linq.JArray\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.GetAddMapKey(ADEXS.Core.Domain.Model.Metadata)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.GetDifferenceFrom(System.Linq.ILookup{System.String,ADEXS.Core.Domain.Model.Metadata},System.Linq.ILookup{System.String,ADEXS.Core.Domain.Model.Metadata})~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.GetRemoveMapKey(ADEXS.Core.Domain.Model.Metadata)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MergeMetadataFromParent(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MergeMetadataFromParent(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1827:Do not use Count() or LongCount() when Any() can be used\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MergeMetadataFromParent(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{System.Guid})~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadata.MetadataSaveOptions,System.String,System.Guid,System.Guid)~System.Collections.Generic.IList{System.String}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadatas,ADEXS.Core.Domain.Model.Metadata.MetadataSaveOptions,System.String,System.Guid,System.Guid)~System.Collections.Generic.IList{System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.SetSequenceValue(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Metadata,ADEXS.Core.Domain.Model.AutoNumberMetadataFieldDefinition)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataSetRepository.Validate(ADEXS.Core.Domain.Model.MetadataSet,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.ProtobufCachingRepository.GetCacheKeyForProtobuf(System.Int32,System.Guid,ADEXS.Core.Domain.Utilities.Language)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.ProtobufCachingRepository.GetCachKeyForJson(System.Int32,System.Guid,ADEXS.Core.Domain.Utilities.Language)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Api.ReviewsApi.ApiV1AccountIdReviewsDocumentsDocumentIdGetWithHttpInfo(System.Guid,System.Guid)~ADEXS.Core.Domain.Repository.Negotiation.Client.ApiResponse{ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Api.ReviewsApi.ApiV1AccountIdReviewsDocumentsDocumentIdGetWithHttpInfoAsync(System.Guid,System.Guid,System.Threading.CancellationToken)~System.Threading.Tasks.Task{ADEXS.Core.Domain.Repository.Negotiation.Client.ApiResponse{ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse}}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Api.ReviewsApi.ApiV1AccountIdReviewsReviewIdGetWithHttpInfo(System.Guid,System.Guid)~ADEXS.Core.Domain.Repository.Negotiation.Client.ApiResponse{ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Api.ReviewsApi.ApiV1AccountIdReviewsReviewIdGetWithHttpInfoAsync(System.Guid,System.Guid,System.Threading.CancellationToken)~System.Threading.Tasks.Task{ADEXS.Core.Domain.Repository.Negotiation.Client.ApiResponse{ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse}}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.EscapeString(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.IsJsonMime(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)~RestSharp.FileParameter\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.ParameterToString(System.Object)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.PrepareRequest(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)~RestSharp.RestRequest\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.SelectHeaderAccept(System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.Serialize(System.Object)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1810:Initialize reference type static fields inline\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Client.Configuration.#cctor\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ProblemDetails.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.ProblemDetails)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ProblemDetails.Equals(System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ProblemDetails.ToString~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient.Equals(System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.Recipient.ToString~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse.Equals(System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.ReviewResponse.ToString~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest.Equals(System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.StartReviewRequest.ToString~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.UpdateReviewRequest.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.UpdateReviewRequest)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.UpdateReviewRequest.Equals(System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.UpdateReviewRequest.ToString~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.Watcher.Equals(ADEXS.Core.Domain.Repository.Negotiation.Model.Watcher)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.Watcher.Equals(System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.Model.Watcher.ToString~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.BuildNotification(System.Int32,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.ObjectType,System.Guid,ADEXS.Core.Domain.News.NotificationData,System.Guid,System.Guid)~ADEXS.Core.Domain.Model.Notification\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.BuildNotificationMessage(System.String,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Domain.News.NotificationData,System.Boolean,ADEXS.Core.Domain.News.NotificationData.LinkAttributesList)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.BuildNotificationSubscription(ADEXS.Core.Domain.Model.Contact,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.ObjectType,System.Guid,ADEXS.Core.Types.Enums.NotificationSubscriptionType)~ADEXS.Core.Domain.Model.NotificationSubscription\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.CreateNotification(System.Int32,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.ObjectType,System.Guid,ADEXS.Core.Domain.News.NotificationUsers,ADEXS.Core.Domain.News.NotificationData,System.Guid,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.DoesResourceExist(System.Resources.ResourceManager,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetAllNotificationPreferences(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.Dictionary{ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.NotificationPreference}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetNotificationPreference(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType)~ADEXS.Core.Types.Enums.NotificationPreference\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetSubscribeAllSettingName(ADEXS.Globals.ScmEnums.ActionType)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetSubscriptionActionTypesForObjectType(ADEXS.Core.Types.Enums.ObjectType)~System.Collections.Generic.List{ADEXS.Globals.ScmEnums.ActionType}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.NotificationPreferenceSettingName(ADEXS.Globals.ScmEnums.ActionType)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.SaveAllNotificationPreferences(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IDictionary{ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.NotificationPreference})\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.SaveNotificationPreference(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.NotificationPreference)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.ToggleSubscriptionForObjectType(ADEXS.Core.Domain.Model.NotificationSubscription)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.ToggleSubscriptionForObjectType(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.IOAuthRepository.CreateAccessTokenWithoutSecret(System.Guid,ADEXS.Core.Types.Enums.OAuthScope,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.OAuthKey\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.BuildOAuthKey(System.Guid,System.Guid,ADEXS.Core.Types.Enums.OAuthKeyType,System.String,ADEXS.Core.Types.Enums.OAuthScope,System.DateTime,System.Int32)~ADEXS.Core.Domain.Model.OAuthKey\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.CreateAccessTokenWithoutSecret(System.Guid,ADEXS.Core.Types.Enums.OAuthScope,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.OAuthKey\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.GetRefreshTokenExpiration~System.DateTime\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.IsValidAPIRegistrationName(ADEXS.Core.Domain.Persistence.Model.APIRegistration)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.SyncApiRegistrationWithSite(ADEXS.Core.Domain.Persistence.Model.APIRegistration,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.SyncTokenWithSite(ADEXS.Core.Domain.Model.OAuthKey,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.FormatTemplateWithPlaceholders(ADEXS.Core.Domain.Model.UserAccount,System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.GetLocalizedEnumValue(System.String,Newtonsoft.Json.Linq.JObject)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.GetMessage(ADEXS.Core.Domain.Model.ObjectHistory,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,ADEXS.Core.Domain.AtlasUrl.UrlBuilder)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.GetTemplateName(ADEXS.Core.Domain.Model.ObjectHistory,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.LocalizeValue(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.MetadataField,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.ReplaceLocalDateTimes(System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.ReplaceWithLinks(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.IsSettingBlackListed(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryRepository.LoadByObjectIdentifier(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.HistoryObjectType,System.String,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ObjectHistory}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository.GetHistoryDescriptionUpdate(ADEXS.Core.Domain.Model.ObligationHistory,System.Collections.Generic.Dictionary{System.String,System.String}@)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository.GetHistoryDueDateUpdate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ObligationHistory,System.Collections.Generic.Dictionary{System.String,System.String}@)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsHistoryRepository.AddEditor(System.Int32,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.GetMajorDocumentVersion(ADEXS.Core.Domain.Model.Document,System.Int32,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.IncreaseMinorVersion(ADEXS.Core.Domain.Model.Document,System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.SaveLock(System.Int32,System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OfficeWebApps.OfficeWebAppsLockRepository.ValidateLock(System.Int32,System.Guid,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpFileRepository.FileName(ADEXS.Core.Domain.Model.Account,System.String,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpFileRepository.GetRequestContent(ADEXS.Core.Domain.Model.Account,System.Guid)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpFileRepository.GetResultContent(ADEXS.Core.Domain.Model.Account,System.Guid)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpFileRepository.SetRequestContent(ADEXS.Core.Domain.Model.Account,System.Guid,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpFileRepository.SetResultContent(ADEXS.Core.Domain.Model.Account,System.Guid,System.IO.Stream)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.GetSpringCmRole(ADEXS.Core.Domain.Model.DSGroup)~System.ValueTuple{System.String,ADEXS.Core.Types.Enums.UserRole}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.ExchangeAuthCodeForTokenResponse(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.ExchangeRefreshTokenForAccessToken(System.String)~ADEXS.Core.Domain.Model.OauthAccessTokenResponse\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetAccessTokenFromResourceToken(System.String)~ADEXS.Core.Domain.Model.OauthAccessTokenResponse\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetConstrainedDelegationOauthTokens(System.String,System.String,System.String[],System.String)~ADEXS.Core.Domain.Model.OauthAccessTokenResponse\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1827:Do not use Count() or LongCount() when Any() can be used\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetEntitledAccountsForDsUser(ADEXS.Core.Domain.Model.DSUserInfo,System.String)~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.DSUserInfoAccount}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetMeTokenValues(ADEXS.Core.Domain.Model.OauthAccessTokenResponse)~System.ValueTuple{System.String,System.Int64}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetOauthTokens(System.String[],System.String,System.String)~ADEXS.Core.Domain.Model.OauthAccessTokenResponse\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetTokenValues(ADEXS.Core.Domain.Model.OauthAccessTokenResponse)~System.ValueTuple{System.String,System.Int64}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.IsProductEnabled(ADEXS.Core.Domain.Model.Provisioning.DSAccountProduct)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.RegisterResourceToken(System.String,System.Object,System.Boolean,System.Int32,System.String)~ADEXS.Core.Domain.Model.RegisterResourceTokenResponse\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.AddProductGroup(System.Net.Http.HttpClient,System.Guid,System.String,ADEXS.Core.Domain.Model.Provisioning.AddProductGroupRequest)~ADEXS.Core.Domain.Repository.ProvisioningRepository.AddProductGroupResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.Locale_ParseJsonResponse(System.String)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.MorePagesRemaining(System.Int32,System.Int32,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.GetChargeIdByType(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.GetInviteEmailSubject(ADEXS.Core.Domain.Model.Provisioning.ApplicationData)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.GetInviteRedirect(ADEXS.Core.Domain.Model.Provisioning.ApplicationData)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.GetModuleNameByModuleId(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.ModuleSpecificAccountSettings(System.Collections.Generic.List{System.String})~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.PlanSpecificAccountSettings(System.String)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.QueueItemStateRepository.IsInMotion(System.Int32,System.String,System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.CleanUnnecessaryOffsetValues(ADEXS.Core.Domain.Model.ReminderTemplate)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.ValidateEmailSubject(ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.SaveResult,ADEXS.Core.Domain.Model.ReminderTemplate)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.ValidateReminderName(ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.SaveResult,ADEXS.Core.Domain.Model.ReminderTemplate)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.ValidateReplyTo(ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.SaveResult,ADEXS.Core.Domain.Model.ReminderTemplate)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.ValidateTo(ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.SaveResult,ADEXS.Core.Domain.Model.ReminderTemplate)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.Delete(System.String,ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.CancelQuery(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.GetErrorTypeFromException(System.Exception,System.Guid)~ADEXS.Core.Domain.Model.Reporting.ReportErrorType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.GetExportResults(LanguageExt.Seq{System.ValueTuple{ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.PrestoQueryResults}},System.Boolean)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.PollForCacheResults(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,System.Boolean,System.Boolean,System.Int64)~System.ValueTuple{LanguageExt.Option{ADEXS.Core.Domain.Model.Reporting.ReportDataContainer},LanguageExt.Option{ADEXS.Core.Types.Enums.ReportLoadingState},System.Boolean}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.RunExportReport(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,System.String,ADEXS.Core.Types.Enums.ReportExportFormat,System.Globalization.CultureInfo)~ADEXS.Core.Domain.Model.Reporting.ExportResults\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportRepository.RunQueries(ADEXS.Core.Domain.Model.Reporting.ReportQueryContext,LanguageExt.Seq{System.Func{ADEXS.Core.Domain.Model.Reporting.ReportQueryContext,System.ValueTuple{ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,LanguageExt.EitherAsync{LanguageExt.Common.Error,ADEXS.Core.Domain.Presto.PrestoQueryResults}}}},System.Boolean)~ADEXS.Core.Domain.Model.Reporting.ReportDataContainer\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.CustomReportChartRepository.Load(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.CustomReportChart\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetDefaultPublicDocumentReportConfiguration(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReportConfiguration\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetDefaultSortExpression(ADEXS.Core.Types.Enums.AnalyticsReportType)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetDefaultWorkflowProcessesReportConfiguration(System.Int32)~ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportConfiguration\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetReportTypeFromName(System.String)~ADEXS.Core.Types.Enums.AnalyticsReportType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.SaveConfigHistory(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.UserHasDeleteAccess(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomReport)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.UserHasEditAccess(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.ValidateReportName(System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.AnalyzerInsightsIngestionService.DateTimeUtcOrDefault(System.DateTime)~System.DateTime\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.InsightsMetadataAggregationService.ToSealMetadataItemType(System.Collections.Generic.List{ADEXS.Core.Types.Enums.DataType})~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.InsightsMetadataAggregationService.ToSealMetadataName(ADEXS.Core.Domain.Model.Metadata)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.InsightsMetadataAggregationService.ToSealMetadataValue(ADEXS.Core.Domain.Model.Metadata,System.Globalization.CultureInfo)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealClauseSyncService.Xor(System.Byte[],System.Byte[])~System.Byte[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.ProcessValidateAuthResult(ADEXS.SealAPIClient.Models.Results.ResultStatus)~ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.AuthResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1849:Call async methods when in an async method\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.GetLogicAppsModelList(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.SealDigitalAppType,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.List{ADEXS.Core.Domain.Model.Seal.DigitalAppRule}}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1849:Call async methods when in an async method\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.GetModelList(ADEXS.Core.Domain.Model.Account,System.String)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.SystemMetadataResponse}}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsRepository.SendUploadDocumentTask(ADEXS.Core.Domain.Repository.Seal.SendDocumentUploadParams)~System.Threading.Tasks.Task{ADEXS.SealAPIClient.Models.Results.Result{ADEXS.SealAPIClient.Models.Responses.UploadDocumentResponse}}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealExtractionsService.CreateWorkload(ADEXS.Core.Domain.Model.QueueTasks.SealExtractionsTask)~ADEXS.Core.Domain.Repository.Seal.SealExtractionWorkload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealGetDatabagService.CheckIfUrisAreEqual(System.Uri,System.Uri)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealGetDatabagService.CreateWorkload(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.SealGetDatabagTask)~ADEXS.Core.Domain.Repository.AIDocument.SealGetDatabagWorkload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealScorecardService.CreateWorkload(ADEXS.Core.Domain.Model.QueueTasks.SealScorecardTask)~ADEXS.Core.Domain.Repository.Seal.SealScorecardWorkload\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityAccessRuleRepository.CompareLists``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{``0},System.Collections.Generic.List{``0}@,System.Collections.Generic.List{``0}@)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityMetadataRepository.CheckPrivileges(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityMetadataRepository.FireSecurityMetadataDeletedEvent(ADEXS.Core.Domain.Model.Account,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityMetadataRepository.GetKey(ADEXS.Core.Domain.Model.ABAC.SecurityMetadata)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.ConvertToStaticSecurity(ADEXS.Core.Domain.Model.BaseSecurity)~ADEXS.Core.Domain.Model.StaticSecurity\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.ExplicitSecurityLoadByObject(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType)~ADEXS.Core.Domain.Model.ExplicitSecurities\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.GetSecurityItem(System.Collections.Generic.List{ADEXS.Core.Domain.Model.BaseSecurity},ADEXS.Core.Domain.Model.BaseSecurity,System.Boolean)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.GetSecurityName(ADEXS.Core.Domain.Model.BaseSecurity)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.LogSecurityWorkload(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Util.Core.LoggedStopWatch,System.Boolean,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.RemoveSeeByObject(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.RevokeJitSecurityCatch(System.Int32,ADEXS.Core.Types.Enums.SecurityItemTable,System.Guid)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.CanShare(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.ObjectType,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.GetShareLinkHistoryObject(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.PublicShareLink)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.LoadSharedFolderContentsPaged(System.Int32,System.Guid,System.Guid,ADEXS.Core.Domain.Lookup.Pager,System.Boolean)~ADEXS.Core.Domain.Model.Base.ModelCollection{ADEXS.Core.Domain.Model.Base.INode}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.LoadSharedFolderDocument(System.Int32,System.Guid,ADEXS.Core.Domain.Model.PublicShareLink)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.SavePublicShareLink(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.PublicShareLink)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.UserInformationForHistoryLog(ADEXS.Core.Domain.Model.Document,System.String)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SOAPAuthenticationTokenRepository.SyncAuthTokenWithSite(ADEXS.Core.Domain.Persistence.AuthenticationToken,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.SignWithCert(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ValidCertDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ValidSigningCertDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TrackedContentWritebackService.BuildNewTrackedFieldStatus(System.Collections.Generic.KeyValuePair{System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus}},ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus)~ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TrackedContentWritebackService.GetAllowedValues(ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.IGetDataProvider,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus)~System.Collections.Generic.List{ADEXS.Web.DocExplorer.Models.PanelModels.AllowedValue}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TrackedContentWritebackService.GetValueInExternalSystem(ADEXS.Core.Domain.Model.DocLauncherConfig.FieldType,System.String,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.SalesforceGetDataProvider.BuildGetQuery(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}},Newtonsoft.Json.Linq.JObject)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.SalesforceGetDataProvider.HandleError(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}},System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.SalesforceGetDataProvider.IsValidResponse(ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.GetDataResponse)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.SalesforceGetDataProvider.ParseSingleSelectValueFromSalesforce(System.String,System.Collections.Generic.List{System.ValueTuple{System.String,System.String}})~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.SalesforceGetDataProvider.TryParseSourceIdentifier(System.String,System.String@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.DataManipulationHelper.ReplaceEnd(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.SalesforceHelper.GetSFAuthorizationFromRefreshToken(ADEXS.Core.Domain.AccountSettings)~ADEXS.Salesforce.DTO.SFAuthorization\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.SalesforceHelper.GetSFAuthorizationFromSyncUser(ADEXS.Core.Domain.AccountSettings)~ADEXS.Salesforce.DTO.SFAuthorization\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.BuildFieldsDictionary(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}},System.Boolean)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.BuildGetObjectQuery(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.BuildGetRelatedObjectIdQuery(System.String,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.GetRelatedObjectsFieldsToUpdate(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}})~System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.GetTargetObjectFieldsToUpdate(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}})~System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.HandleError(System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField},System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.IsValidGetCustomObjectResponse(ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.SFGetCustomObjectResponse)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.IsValidGetObjectResponse(ADEXS.Salesforce.DTO.SFGetObjectResponse)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SalesforceSaveDataProvider.NormalizeAndValidateValuesToUpdate(System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}})~System.Collections.Generic.List{System.ValueTuple{ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldStatus,ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField}}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.WritebackProcessingService.LogWorkload(ADEXS.Core.Domain.Repository.StructuredDocument.Models.GetExternalSystemDataWorkload,System.Diagnostics.Stopwatch,System.Boolean)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.WritebackProcessingService.LogWorkload(ADEXS.Core.Domain.Repository.StructuredDocument.Models.OrchestrateExternalSystemDataWorkload,System.Diagnostics.Stopwatch,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.WritebackProcessingService.LogWorkload(ADEXS.Core.Domain.Repository.StructuredDocument.Models.SaveExternalSystemDataWorkload,System.Diagnostics.Stopwatch,System.String,System.Boolean)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SubscribeAllRepository.SubscribeAllRepository.RemoveUsersThatAreNotEnabled(ADEXS.Core.Domain.Model.UserAccounts)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.ValidateRawOptions(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.Core.Domain.Model.TermOption},ADEXS.Core.Domain.Repository.Term.ValidateRawTermDocumentResult)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TermOption}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Throttling.CounterThrottlingRepository.GetAccountCount(System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.TransactionHistory.GetAllInprogressDeliveryUids~System.Collections.Generic.List{System.Guid}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.TransactionHistory.RouteTransaction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents,ADEXS.Globals.ScmEnums.ActionType,System.Boolean)~ADEXS.Core.Domain.Model.Transaction\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.TransactionHistory.RouteTransaction(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Transaction,ADEXS.Core.Domain.Model.Documents,ADEXS.Globals.ScmEnums.ActionType,System.Boolean)~ADEXS.Core.Domain.Model.Transaction\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository.CreateTranslationLogRecord(ADEXS.Core.Domain.Translation.Models.TranslationUpdate,ADEXS.Core.Domain.Translation.Models.ImportTranslation,ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility,ADEXS.Core.Domain.Translation.Models.TranslationRegistry,ADEXS.Core.Domain.Translation.Models.AccountTranslation)~ADEXS.Core.Domain.Translation.Models.TranslationUpdateLog\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository.GetAllTranslationNamespaces~System.Collections.Generic.IEnumerable{ADEXS.Core.Types.Enums.TranslationNamespace}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository.GetTranslationRegistryCacheKey(System.Int32,ADEXS.Core.Types.Enums.TranslationNamespace)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Contact,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.ContactRepository.Validate(ADEXS.Core.Domain.Model.Contact,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.LoadByUid(System.Guid,System.Int32)~ADEXS.Core.Domain.Model.CustomUserRole\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.Validate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.Login(ADEXS.Core.Domain.Model.UserAccount,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.BuildMembersToAdd(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Groups,ADEXS.Core.Domain.Model.Contact,System.Collections.Generic.List{System.String},System.String)~ADEXS.Core.Domain.Model.GroupMembers\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.BuildMembersToDelete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Groups,ADEXS.Core.Domain.Model.Groups,ADEXS.Core.Domain.Model.Contact,System.Collections.Generic.List{System.String},System.String)~ADEXS.Core.Domain.Model.GroupMembers\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.EventGroupMembershipChanged(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.MembersEmails(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Group)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.ParseDeletes(ADEXS.Core.Domain.Model.GroupMembers,ADEXS.Core.Domain.Model.GroupMembers,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.GroupMembers\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.ParseNewMembers(ADEXS.Core.Domain.Model.GroupMembers,ADEXS.Core.Domain.Model.GroupMembers,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.GroupMembers\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.RequestSecurityCalc(ADEXS.Core.Domain.Model.UserAccount,System.Guid)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.GroupRepository.Validate(ADEXS.Core.Domain.Model.Group,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginLockRepository.SyncLoginLockToWithSite(ADEXS.Core.Domain.Model.LoginLock,ADEXS.Core.Domain.AtlasUrl.AllocationUrl.ForwardingType,System.Int32,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1845:Use span-based 'string.Concat'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.CheckPassword(ADEXS.Core.Domain.Model.Login,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.CheckPassword(ADEXS.Core.Domain.Model.Login,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.GetDefaultUploadFolder(ADEXS.Core.Domain.Model.UserAccount)~System.Guid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.IsUserLoginLocked(ADEXS.Core.Domain.Model.Login)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.LoadLoginByName(System.String)~ADEXS.Core.Domain.Model.Login\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.RepeatOfOldPassword(System.Guid,System.String,ADEXS.Core.Domain.Model.Account)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1845:Use span-based 'string.Concat'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.RepeatOfOldPassword(System.Guid,System.String,ADEXS.Core.Domain.Model.Account)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.SaveAllocation(System.String,System.String,System.Guid@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.SyncLogin(System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.UnlockLogin(ADEXS.Core.Domain.Model.Login,ADEXS.Core.Domain.Model.UserAccount,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.ValidateNewUserLogin(System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.BitmapToString(System.Drawing.Bitmap)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.BuildBarcode(ADEXS.Core.Domain.Model.Login,System.String,System.Int32,System.Int32)~System.Drawing.Bitmap\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.BuildBarcodeSkia(ADEXS.Core.Domain.Model.Login,System.String,System.Int32,System.Int32)~SkiaSharp.SKImage\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.GeneratePinAtInterval(System.String,System.Int64,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.GetTwoFactorIssuer(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.SKImageToString(SkiaSharp.SKImage)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.SyncTwoFactorKeysWithSite(System.Int32,System.Guid,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1827:Do not use Count() or LongCount() when Any() can be used\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.SyncTwoFactorKeysWithSite(System.Int32,System.Guid,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.DefaultUserExisted~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.DiffProperties(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.String},System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.ExtendDateTime(System.DateTime,System.String)~System.DateTime\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.GetValueOrDefault``1(System.Object,System.String)~``0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.IsSecurityAdministrator(ADEXS.Core.Types.Enums.UserRole)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.RemoveApiUserMappings(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.SendUserOverageEmailIfNecessary(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Validate(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Validate(ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserActionRepository.WriteToWorkload(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.ConvertToDispatchPatterns(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.GetAccessRightsXML(ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.IsUserGuest(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.IsUserSuperAdmin(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.ReplaceRemovedUserTask(ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient.UpdateDocumentHistory(ADEXS.Core.Domain.Model.DocumentWorkflowHistoryData,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChoiceClient.RecordChoice(System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem)~ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.RoutingClient.RecordRoutingDecision(System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem)~ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkItem\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogDebugNoPII(System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogDebugNoPII(System.String,System.Exception)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogDebugWithPII(System.String,System.Exception,System.String[])\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogDebugWithPII(System.String,System.String[])\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogErrorNoPII(System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogErrorNoPII(System.String,System.Exception)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogErrorWithPII(System.String,System.Exception,System.String[])\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogErrorWithPII(System.String,System.String[])\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogInfoNoPII(System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogInfoNoPII(System.String,System.Exception)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogInfoWithPII(System.String,System.Exception,System.String[])\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogInfoWithPII(System.String,System.String[])\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogWarnNoPII(System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogWarnNoPII(System.String,System.Exception)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogWarnWithPII(System.String,System.Exception,System.String[])\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientWorkflowContext.LogWarnWithPII(System.String,System.String[])\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.RemoteWorkflowClient.EmitTelemetry(System.Diagnostics.Stopwatch,System.Boolean,System.String)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.RemoteWorkflowClient.SystemCallback(System.Int32,System.Guid,System.Guid,System.String,System.Object)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.LegacyResource.ConvertFromLegacy(System.Int32)~System.Object\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceHandlerCompatibility.QueryContacts(System.Int32,System.String,System.Data.IDataParameter[])~System.Data.IDataReader\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceHandlerCompatibility.QueryResources(ADEXS.Core.Domain.Model.Account,System.String,System.Object[])~System.Data.IDataReader\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1810:Initialize reference type static fields inline\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter.#cctor\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter.DoConversion(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter.UpdateUnsupportedProperties(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.DynamicContextHelper.ProcessElement(System.Text.StringBuilder@,System.Text.StringBuilder,System.Boolean@)\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.InstanceHistoryRepository.LoadByInstanceAndActivity(System.Int32,System.Guid,ADEXS.Core.Domain.Model.Workflow.InstanceActivity)~ADEXS.Core.Domain.Model.Workflow.InstanceHistories\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.GetXmlVariableIds(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.GetXmlVariableIdsForUsers(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LegacyGenerateSqlFilter(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String@,System.String@,System.Collections.ArrayList@)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1827:Do not use Count() or LongCount() when Any() can be used\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LoadUserAccountsByPath(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1847:Use char literal for a single character lookup\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LoadUserAccountsByPath(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LoadUserAccountsByXmlVariable(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.Calendar.AbstractWorkHourCalendar.AdvanceToHour(System.DateTime,System.Int32)~System.DateTime\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.Calendar.AbstractWorkHourCalendar.CalculateUtcEndDate(System.Int64,System.DateTime,System.TimeSpan)~System.DateTime\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1847:Use char literal for a single character lookup\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.Condition._EvaluateComparables(System.String,System.Collections.Generic.IList{System.IComparable},System.Collections.Generic.IList{System.IComparable})~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.CustomTimeSpan.ConvertToTimeSpan(Newtonsoft.Json.Linq.JObject)~System.TimeSpan\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.CastPropertyValue``1(System.String,System.Object,``0)~``0\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.CastVariableValueAsString(ADEXS.Core.Types.Enums.WorkflowVariableType,System.Object)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1847:Use char literal for a single character lookup\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.LoadUserAccountByValue(System.Int32,System.String)~ADEXS.Core.Domain.Model.UserAccount\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.Serialize(System.Object)~System.Byte[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowParameterBuilder._LoadAndVerifyParamsXmlText(System.String[])~System.Xml.XmlDocument[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.GetAutoAssignParticipants(ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccesses)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.GetRandomParticipant(System.Collections.Generic.List{ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess})~System.Guid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.GetRandomParticipant(System.Collections.Generic.List{ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess})~System.Guid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.GetWorkerPoolAccess(System.Int32,System.Guid,System.Guid)~ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1847:Use char literal for a single character lookup\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.SendHumanActivityTaskNotification(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.SendEmailResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1846:Prefer 'AsSpan' over 'Substring'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowVersionNumber.TryParse(System.String,ADEXS.Core.Domain.Repository.Workflow.WorkflowVersionNumber@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1810:Initialize reference type static fields inline\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Rules.PrivilegeCard.#cctor\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.BasicSearch.ParseDate(System.String,System.DateTime)~System.DateTime\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.LocationSearch.Replace(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.CreateAgreementDictionaryDedupMultipleExternalIdReferences(System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement})~System.Collections.Generic.Dictionary{System.String,ADEXS.Core.Domain.Model.Agreement}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.GenerateRequestContext(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.ABAC.Data.RequestContext\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.GetIds``1(System.Collections.Generic.IList{``0})~System.Collections.Generic.IEnumerable{System.String}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.ListSecurities(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Base.INode)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.ABACPolicyListResponse}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.PopulateResourceContexts``1(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{ADEXS.ABAC.Data.ResourceContext},System.Collections.Generic.Dictionary{System.String,ADEXS.Core.Domain.Model.Agreement},System.Collections.Generic.Dictionary{ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.Metadatas}},System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}@,System.Boolean,System.Collections.Generic.List{System.String})\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.AbstractSecurityProvider`1.DoTheCall(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Object,System.String,System.Threading.CancellationToken)~System.Net.Http.HttpResponseMessage\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.AbstractSecurityProvider`1.ProcessResponse(System.Net.Http.HttpResponseMessage)~`0\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.JustInTime.JITSecurityProvider.LogWorkload(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Util.Core.LoggedStopWatch,System.Int32,ADEXS.Core.Domain.Model.JiTSecurityEvaluationResponse,System.Int32,System.Boolean)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.CacheIsDisabled(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.CacheKey(System.Int32,System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.Salesforce.SalesforceSecurityProvider.FormatObjectType(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1840:Use 'Environment.CurrentManagedThreadId'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.SecurityFilterCache.Add(System.Guid,System.Guid,ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1840:Use 'Environment.CurrentManagedThreadId'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.SecurityFilterCache.Clear\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1840:Use 'Environment.CurrentManagedThreadId'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.SecurityFilterCache.GetSecurityMap(System.Guid)~System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.SecurityFiltering.Interfaces.ISecurityMap}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ServiceProtection.ServiceProtectionRegistry.GetServiceProtectionHttpClient~System.Net.Http.HttpClient\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ServiceProtection.TokenUtils.GetTokenDescriptor(System.Security.Cryptography.RSA,System.String,System.String,System.String,System.String)~Microsoft.IdentityModel.Tokens.SecurityTokenDescriptor\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasHybridSharedStorage.LogFileSize(System.Func{System.Int64},System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA1816:Dispose methods should call SuppressFinalize\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasSharedStorageFactory.Dispose\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasSharedStorageFactory.GetSharedFileStorageForType(System.Int32,DocuSign.CLM.ContentStorage.StorageConstants.SharedStorageType)~DocuSign.CLM.ContentStorage.Shared.ISharedStorage\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasSharedStorageFactory.IsEncryptionEnabledForAccount(ADEXS.Core.Domain.AccountSettings)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.ADMInsightsClient.BuildUrl(System.String,System.Nullable{System.Int32})~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.ADMInsightsClient.Get(System.Guid,System.Guid,System.String,System.Nullable{System.Int32})~System.Threading.Tasks.Task{ADEXS.Core.Domain.SmartAgreement.Models.ADMInsightsResponse}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.ADMInsightsClient.GetHttpClient(System.Net.Http.Headers.AuthenticationHeaderValue)~System.Net.Http.HttpClient\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.ADMInsightsClient.Save(System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.ADMInsightRequest})~System.Threading.Tasks.Task\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AIMetadataHelper.IsAllowedDropdownType(ADEXS.Core.Types.Enums.DataType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AIModelManagement.AiModelManagement.GetMasterAiModelList~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AIModelManagement.AiModelManagement.SuppressModelItemsByKeys(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String})~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AISTransactionProviderBase.GetLogicAppsToRun(System.Int32,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.Data.LogicApp}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AISTransactionProviderBase.IsDocumentFileTypeSupported(ADEXS.Core.Domain.Model.Document)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.GetValueTypeOrDefault(ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction,RulesEngineAPIClient.Model.DataType)~System.ValueTuple{RulesEngineAPIClient.Model.DataType,ADEXS.Core.Types.Enums.ExtractionsDataType}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.TryConvertGlyph(System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.Glyph})~System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.Glyph}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.TryConvertMatchedMetadata(System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.Metadata})~System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.MatchedMetadata}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIDocumentTransactionProvider.TryConvertMetadataSpecifications(System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.MetadataSpecification})~System.Collections.Generic.List{DocuSign.API.AIFrontend.Sdk.Model.MetadataSpecification}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIIngestionService.HandleBatchStatus(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch,ADEXS.Core.Domain.Model.QueueTasks.IAPRAIIngestionTask)~ADEXS.Core.Types.Enums.APRAIIngestionStatus\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIIngestionService.ProcessTransactionDocumentGlyphs(ADEXS.Core.Domain.Model.AIDocument.AIDocumentTransaction,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.SmartAgreement.Models.Enums.AnalysisTriggerSource)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.APRBridgeHelper.GetChannel~Grpc.Net.Client.GrpcChannel\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.BatchReportService.GetBatchReportFilePathCacheKey(System.Int32,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Comparers.RuleModelMappingBasicDetailsComparer.ObjectTypeOrder(ADEXS.Core.Types.Enums.AIRulesEngineMappingObjectType)~System.Int32\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.AIExtractionValueHelper.GetLocalizedPluralizedValue(System.String,System.String,System.Int64)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.AIExtractionValueHelper.NormalizedStringToAmount(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.AIExtractionValueHelper.PeriodToNormalizedString(NodaTime.Period)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.AISuggestionStandardAttributeMatcher.MatchNumericFields(System.String,System.String,ADEXS.Core.Types.Enums.AttributeFieldType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.CacheHelper.ReviewDataPageNumberCacheKey(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.SmartAgreementFilterSortPageHelper.HasAnyInstances(ADEXS.Core.Domain.AIConfiguration.Models.AttributeDetailAnalytics)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.SmartAgreementFilterSortPageHelper.HasValue(ADEXS.Core.Domain.AIConfiguration.Models.AttributeDetailAnalytics)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Helpers.SmartAgreementFilterSortPageHelper.IsSuggestionTypeFilter(ADEXS.Core.Domain.Utilities.Filter,ADEXS.Core.Domain.SmartAgreement.Models.Enums.AISuggestionTypeFilterConditions)~System.Boolean\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.APRMockedDataHelper.GetMockedData(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.APRMockedDataHelper.TryGetMockedData(System.Int32,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.APRRepository.EmitDocumentUploadedTelemetry(System.String,System.Guid,System.String,System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.BuildAttributeSaveModel(ADEXS.Core.Domain.Repository.AgreementRepository.AgreementField,ADEXS.Core.Domain.AIConfiguration.Models.MetaDataReviewResultItem)~ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.FilterUnsupportedFields(System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1829:Use Length/Count property instead of Count() when available\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.GetVerificationStatusInPercentage(System.Collections.Generic.List{ADEXS.Core.Domain.Model.AIDocument.StagedMetadata})~System.Decimal\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.HasSuggestions(ADEXS.Core.Domain.Model.AIDocument.StagedMetadata)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.InsertFeedbackTask(ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionProvider,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.AIDocument.StagedMetadata,ADEXS.Core.Domain.AIConfiguration.Models.MetaDataReviewResultItem,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.SmartAgreementExecutionService.ProcessSaveResult(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultRequest,ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult,ADEXS.Core.Domain.AIConfiguration.Models.MetaDataReviewResultItem,ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultResponse)~ADEXS.Core.Domain.AIConfiguration.Models.MetaDataProcessReviewItemResult\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.StagedMetadataApplicationService.UpdateStagedMetadatasForDocumentByFileDataUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadataItem})~ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadatasResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.AttributeValueExcludeRule.SetTypeSpecificProperties(ADEXS.Core.Domain.Model.SyncRule)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.FolderExcludeRule.SetTypeSpecificProperties(ADEXS.Core.Domain.Model.SyncRule)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.FolderIncludeRule.CombineListsRemovingDuplicates(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.SyncFolder},System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.SyncFolder})~ADEXS.Core.Domain.Model.SyncFolders\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.FolderIncludeRule.SetTypeSpecificProperties(ADEXS.Core.Domain.Model.SyncRule)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.RuleStack.Apply(ADEXS.Core.Domain.Model.SyncFolders,System.Collections.Generic.IList{ADEXS.Core.Domain.Sync.ISyncRule})~ADEXS.Core.Domain.Model.SyncFolders\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SynchronousWork.SynchronousWorkService.LogWorkCompletionResult(System.Guid,ADEXS.Core.Domain.SynchronousWork.WorkCompletionResult)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.BuildMergeModel(System.Collections.Generic.List{ADEXS.MergeEngine.Base.TrackedTermReplacementModel})~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.BuildReplacementModel(System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermMergeModel})~System.Collections.Generic.List{ADEXS.MergeEngine.Base.TrackedTermReplacementModel}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.GetComparisonXml(System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermComparisonResult})~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.GetTrackedTermsXml(ADEXS.Core.Domain.Model.TrackedTerms)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.BaseTranslationConverter.GetNamespaceAndObjectKey(System.String)~System.ValueTuple{System.Int32,System.String}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.BaseTranslationConverter.VerifyGetFileContentParameters(ADEXS.Core.Domain.Model.Account,System.String,ADEXS.Core.Types.Enums.TranslationNamespace)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.CsvConverter.GetPropertiesForExport~System.Collections.Generic.List{System.Reflection.PropertyInfo}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.CsvConverter.ReplaceTemplate(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.GetTranslatableProperties``1(``0)~System.Collections.Generic.IEnumerable{System.ValueTuple{System.Reflection.PropertyInfo,ADEXS.Core.Domain.Translation.Models.TranslatableAttribute}}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.ExportUtilities.BaseExportUtility.TranslationGrouping(System.Collections.Generic.List{ADEXS.Core.Domain.Translation.Models.ExportTranslations},System.Guid)~ADEXS.Core.Domain.Translation.Models.ExportTranslations\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.TranslationTaskUtility.GetImportTranslationFile(ADEXS.Core.Domain.Model.Account,System.IO.Stream,System.String)~ADEXS.Core.Domain.Translation.Models.ImportTranslationFile\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.TranslationTaskUtility.InitiateTranslationImport(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,ADEXS.Core.Types.Enums.TranslationNamespace,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UserSettings.CsvFromIntArray(System.Int32[])~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UserSettings.IntArrayFromCsv(System.String)~System.Int32[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UserSettings.IntArrayFromCsv(System.String)~System.Int32[]\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UserSync.UserSyncRepository.GenerateUniqueFileName(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UserSync.UserSyncRepository.InitiateUserSync(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,ADEXS.Core.Domain.Sync.SyncProcessorOptions,System.Nullable{System.Guid},System.Nullable{System.Guid},ADEXS.Core.Types.Enums.EtlType)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.AccountUidUtilities.GenerateAccountUidFromInt(System.Int32)~System.Guid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.AIDocumentUtilities.BuildInQueryTemplate(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.AsposeLicenseSetter.GetLicenseStream~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CaptchaVerification.Verify(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CssDefinitionGenerator.Validate(ADEXS.Core.Domain.Utilities.ColorModel)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1847:Use char literal for a single character lookup\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CssDefinitionGenerator.Validate(ADEXS.Core.Domain.Utilities.ColorModel)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CssKeyframeGenerator.Validate(ADEXS.Core.Domain.Utilities.ColorModel)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1847:Use char literal for a single character lookup\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CssKeyframeGenerator.Validate(ADEXS.Core.Domain.Utilities.ColorModel)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1810:Initialize reference type static fields inline\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CurrencyCodeCultureMap.#cctor\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.DSAuthTokenUtilities.Verify(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.DSTokenVerificationResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HexColorManipulator.ChangeColorBrightness(System.Drawing.Color,System.Single)~System.Drawing.Color\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HexColorManipulator.Luminate(System.String,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HttpClientExtensions.PostAsyncRetry(System.Net.Http.HttpClient,System.String,System.String,System.Int32,System.Int32,ADEXS.Core.Util.Loggers.IDiscreetLogger)~System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HttpClientExtensions.PostRetry(System.Net.Http.HttpClient,System.String,System.String,System.Int32,System.Int32,ADEXS.Core.Util.Loggers.IDiscreetLogger)~System.Net.Http.HttpResponseMessage\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.PagingAndFiltering.CreateQueryExpression``1(System.Linq.Expressions.Expression,System.String,System.String)~System.Linq.Expressions.Expression\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.PagingAndFiltering.CreateQueryExpressionForNestedProperties``1(System.Linq.Expressions.Expression,System.String,System.String)~System.Linq.Expressions.Expression\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.RestApiClientUtilities.HttpRequestRetryHandler.#ctor\")]\n[assembly: SuppressMessage(\"Usage\", \"CA1816:Dispose methods should call SuppressFinalize\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.SimpleCsvWriter.Dispose\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.BaseValidator.#ctor(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.CrossValidatorJsonConvertor.Create(System.Type,Newtonsoft.Json.Linq.JObject)~ADEXS.Core.Domain.Validation.ICrossValidator\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.ValidationRepository.Validate(ADEXS.Core.Domain.Validation.ValidationInput,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.DateCrossFieldValidator.DateTimeGreaterThan(System.DateTime,System.DateTime)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.DateCrossFieldValidator.DateTimeGreaterThanOrEqual(System.DateTime,System.DateTime)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.DateCrossFieldValidator.DateTimeLessThan(System.DateTime,System.DateTime)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.DateCrossFieldValidator.DateTimeLessThanOrEqual(System.DateTime,System.DateTime)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.NumberFormatValidator.RemoveNegativeSign(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.UrlValidator.UrlValidate(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.ApprovalWorkflowSnapshot.ExtractInt(System.String)~System.Int32\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.ApprovalWorkflowSnapshot.FindCommentForDate(System.Collections.Generic.IEnumerable{System.String},System.DateTime)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.GetDefinition~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.DesignerDefinition.TimeToPaddedString(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.WorkflowSnapshot.WorkflowSnapshotBase.ActionNode(System.Xml.XmlNode,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.WorkflowSnapshot.WorkflowSnapshotBase.ActivityComment(System.String,System.String[])~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.WorkflowSnapshot.WorkflowSnapshotBase.WorkflowNodeAttributeValue(System.Xml.XmlNode,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.WorkflowSnapshot.WorkflowSnapshotBase.WorkflowNodes(System.String,System.String)~System.Xml.XmlNodeList\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.AddNameSpaceHolder(System.String,System.String,System.Collections.Hashtable)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.AddNameSpaceHolder2(System.String,System.String,System.Collections.Hashtable)\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.BuildXsdString(System.Collections.Generic.List{ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNode})~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.ConvertToJson(System.String)~Newtonsoft.Json.Linq.JToken\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.ConvertToJson(System.String)~Newtonsoft.Json.Linq.JToken\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.DecodeXmlElementName(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.GetNameSpacePrefix(System.Collections.Hashtable,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.GetNodeList(System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNode}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.GetNodeNameWithNamespace(ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNode,System.Collections.Hashtable)~System.String\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.GetNodesFromXml(System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNode}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.GetXmlVariableNodeTypeFromXSD(ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNode,System.String)\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.ReadValue(System.Object)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.VerifyXmlName(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVaraiableNodeType(ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNodeDataType)~System.String\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.WINS.Repository.RevisionRepository.LoadLegacyXmlByUid(System.Int32,System.Guid,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.WINS.Repository.VersionRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,System.String,System.Int32)~ADEXS.Core.Domain.Model.Workflow.Version\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.CreateAttributeReviewData(ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance,System.Globalization.CultureInfo,ADEXS.Core.Domain.Model.MetadataField,ADEXS.Core.Domain.Model.Metadata,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.DataReview.Models.AttributeReviewData\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.CreateAttributeReviewGroup(System.String,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.AttributeReviewData})~ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.MapObjectType(System.Nullable{ADEXS.Core.Domain.MetadataLoader.Models.Type})~ADEXS.Core.Types.Enums.DataReviewObjectType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.ParseUpdatedAttributesForStagedMetadataUpdate(System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData})~System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.UpdateStagedMetadataItem}\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.RemoveAttributeGroupFromDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1725:Parameter names should match base declaration\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributePanelService.UpdateAttributes(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.DataReview.Models.SaveAttributeReviewData},System.String,System.String,System.Nullable{System.Guid})~ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.Culture\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.LanguageCulture\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ABACPDPServerList\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ABACRetrySleepSecondsSchedule\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AcceptableFileExtensionsArray\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AuthenticationApplicationServedSites\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.AuthenticationSites\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.DataReviewCustomAttributesAllowedAttributeTypes\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.InsightsAllowedDomains\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.InsightsAllowedProtocols\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ManagedSites\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ObsoleteCustomCustomReports\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.ObsoleteCustomCustomReports\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.OktaIssuerDomains\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.OneLoginIssuerDomains\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.RequestLoggingHandlerUrlContains\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SFDomains\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.SfIssuerDomains\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.UpdatableSupportUserProperties\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.UrlAllowedProtocols\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettings.UrlMimeTypes\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettingsWrapper.DataReviewCustomAttributesAllowedAttributeTypes\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettingsWrapper.InsightsAllowedDomains\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ApplicationSettingsWrapper.InsightsAllowedProtocols\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.LoginUrl\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.RestAuthUrl\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AgreementListUrl.QueryName\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.AjaxUrl.HeaderCallbacks\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.About\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.Chat\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.CorporateMap\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.CSS\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.CSS\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.Facebook\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.Index\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.Legal\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.LinkedIn\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.LoginContentCenter\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.LoginContentLeft\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.LoginContentMain\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.LoginContentRight\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.Privacy\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.Promo\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.SubscriptionAgreement\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.Support\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.TermsOfUse\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.Twitter\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.MarketingUrl.Youtube\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.PartiesUrl.AgreementSummaryRoot\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AtlasUrl.SearchUrl._useNewSearch\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.DataReviewValidationContext.SkipLinkedFields\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.FolderRepository\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.DataReviewCustomAttributesAllowedAttributeTypes\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.InsightsAllowedDomains\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.IApplicationSettings.InsightsAllowedProtocols\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.CollaborationNotificationMessaging.Body\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.BaseEmail.SendDocuSignBrandedEmails\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.BaseEmail.UseAlternateSmtpServer\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.PackageNotificationEmail.CaughtException\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Messaging.EmailSentLoggingInfo.AttachmentExtensions\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Messaging.EmailSentLoggingInfo.AttachmentSizes\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Account.Country\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Account.GUID\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Account.State\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.BaseResourceTokenPayloadResources.Scopes\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CommonMetadataField.CustomerTranslationsEnabled\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CreateAccountData.GUID\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1827:Do not use Count() or LongCount() when Any() can be used\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReport.IsGrouped\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReports.DataFieldName\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReports.DataValueName\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomRule.Type\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomUserRole.Type\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Document.CanShareDocument\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Document.CanShareDocumentInFolder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1845:Use span-based 'string.Concat'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Document.DescriptionSummary\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ElectronicSignatureRecipient.SigningOrder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Folder.CanShareFolder\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Form.Type\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ForwardEventRegistrationRequest.EventTypes\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.GetAccountResponse.Guid\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.GetRemoteObjectResponse`1.Object\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.InboundEmail.Type\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.InboundFax.Type\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataGroup.Type\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataImportMapping.Type\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSAccountEntitlement.products\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ExecuteReportTask.Parameters\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ExecuteReportTaskPayload.Parameters\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.IPdfManipulationTaskPayload.PagePriorities\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.OutboundHttpRequestTask.Headers\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.OutboundHttpRequestTaskPayload.Headers\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.PdfManipulationTask.PagePriorities\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.PdfManipulationTaskPayload.PagePriorities\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.WebServiceActivityTask.ParamValues\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.WebServiceActivityTaskPayload.ParamValues\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ReserveAccountResponse.Guid\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.SAMLMessage.Signed\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.Shares.Groups\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.Shares.Users\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.UserViewModel.Admins\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.SftpPublicKey.PublicKey\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.SyncFolder.FilterType\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAccount.DocumentUrlExportEnabled\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAccount.ReportExportRepeatableAttributesExpansionEnabled\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAuthorizationData.AuthorizationClaims\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAuthorizationDataRequest.AuthorizationClaims\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Workflow.Event.CallbackSerializedValue\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1721:Property names should not match get methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Workflow.Instance.NextLocalContextId\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Workflow.Instance.SerializedState\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Workflow.InstanceActivity.SerializedState\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Workflow.WebService.ProxyDllBytes\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.OfficeWebApps.WopiDiscoveryService.XmlDocument\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReport.Selections.AdmSelect\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReport.Selections.AomSelect\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportConfiguration.RunTotalAggregateQuery\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReport.Selections.AdmSelect\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReport.Selections.AomSelect\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportConfiguration.RunTotalAggregateQuery\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.ForExpandedRows\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.ForExport\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.PreviewMode\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReport.Selections.AdmSelect\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReport.Selections.AomSelect\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportConfiguration.RunTotalAggregateQuery\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReportConfiguration.ShouldCacheReport\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBranding.AccountIconContent\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBranding.AccountLogoContent\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AddressBook.AddressBookSearch.FilterTypes\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1834:Consider using 'StringBuilder.Append(char)' when applicable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AddressBook.AddressBookSearch.Roles\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AgreementRepository.ElasticAgreementFilters.Status\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.CountryRepository.ExpirationSeconds\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.AccountRepository\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.OAuthKeyPersistence\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.UserAccountPersistenceInstance\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.UserAccountRepository\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.ProvinceStateRepository.ExpirationSeconds\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Throttling.CounterThrottlingRepository.ApiAccountThrottlingCacheDurationSec\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.User.GroupRepository.AtlasPersistenceFactory\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChoiceClient.Outputs\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChoiceClient.Outputs\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.ChooseUsersClient.LimitToGroups\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1825:Avoid zero-length array allocations\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.RoutingClient.Outputs\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.RoutingClient.Outputs\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.BasicSearch.includeTrashedExclusive\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.MetadataSearchField.Values\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.Telemetry.SearchExecutedTelemetryProperties.IsPassiveSearchRequest\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.Telemetry.SearchExecutedTelemetryProperties.IsSavedSearch\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.Telemetry.SearchExecutedTelemetryProperties.NumCustomAttributesApplied\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SecurityFiltering.AbstractSecurityProvider`1.TimeoutMs\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ServiceProtection.RulesUpdaterConfiguration.ContextTypes\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.AISTransactionProviderBase.LabelGroupTypes\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.AttributeSyncRule.Params\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.FolderSyncRule.Params\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.ISyncRule.Params\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1805:Do not initialize unnecessarily\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Models.ImportTranslation.Namespace\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.UserSettings.DocumentHistoryFilters\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.UserSettings.FolderHistoryFilters\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1820:Test for empty strings using string length\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.UserSettings.LanguageCulture\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1819:Properties should not return arrays\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Utilities.Language.Variants\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.InternalApiCommentUrls\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.InternalApiWorkItemUrls\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1813:Avoid unsealed attributes\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Attributes.AllowUpdateViaWebservice\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1813:Avoid unsealed attributes\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Attributes.IdentifierAttribute\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1813:Avoid unsealed attributes\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Attributes.NamedPropertyAttribute\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1813:Avoid unsealed attributes\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Attributes.ValidationAttribute\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Authentication.Authentication\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.CodeRunner.CodeRunner\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DocTracking.Models.Document\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DocumentCreation.MergeType.MergeFieldPrefix\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.EventSubscriber.EventSubscriber`2\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Lookup.DocumentPermissions\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.WorkflowApprovalActivitiesTokens.Activities\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.CollaborationNotificationMessaging\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Messaging\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.MetadataLoader.Models.Field\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.MetadataLoader.Models.Metadata\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.MetadataLoader.Models.Type\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ABAC.Group\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.AccessControl\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.DataTypeEnum\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.DocLauncherConfig.MergeData\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.DocLauncherConfig.Template\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ExternalReview.Document\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ExternalSystemUser\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.FormConfiguration.Operators\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.FormConfiguration.Types\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Forms\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Group\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Metadata\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Notifications\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.ObjectHistory\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Provisioning.Clm\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1813:Avoid unsealed attributes\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.QueueTasks.SyncParty.PartySyncTemplateAttribute\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.QueueTasks.SyncParty.SyncParty\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.SalesforceActions.SalesforceActionMenu.SalesforceActions\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Settings\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Transaction\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Transactions\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Workflow.Event\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Workflow.Events\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Workflow.Versions\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.SettingStruct\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Catalogs.Adm.Adm\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Catalogs.ClmSecurity.ClmSecurity\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Catalogs.ClmSer.ClmSer\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Constants.DataTypes\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.JsonConverter.JsonConverters\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.ReportFilter.ReportFilter\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReport\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReport.Columns\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReport\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReport.Columns\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.CommonColumns\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.BaseReport`1.CommonSubQueryNames\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.Catalogs\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.Catalogs\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.Columns\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.Columns\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Columns\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReport\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReport.Columns\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReport\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReport.Columns\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReport\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.UsersReport.UsersReport.Columns\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport.Columns\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReport\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.Columns\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Columns\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.QueueHelper.TaskSender\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBranding\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementFieldService.ObjectIds\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementFieldService.StandardFieldNames\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AutoNumberRepository.AutoNumberRepository\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Clause.ClauseMetadataItem\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataModel.DataTypes\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.DocumentSelectionRepository.DocumentSelectionRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.EmailRepository.EmailRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.EventRepository.EventRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.FormRepository.FormRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ImageCreation.Barcode\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.InboundFaxRepository.InboundFaxRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.LegacyCustomActionsReportRepository.LegacyCustomActionsReportRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Negotiation.Client.Configuration\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Negotiation.Model.Watcher\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ObligationRepository.ObligationRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.OutboundHttpRepository.OutboundHttpRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.RequestOriginRestrictionRepository.RequestOriginRestrictionRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.SavedSearchRepository.SavedSearchRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ScheduleRepository.ScheduleRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.ScopeEventRepository.ScopeEventRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.SessionRepository.SessionRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.SettingRepository.SettingRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.SFSecurityMappingRepository.SFSecurityMappingRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.SubscribeAllRepository.SubscribeAllRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.UserConsentRepository.UserConsentRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.Configuration\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.Type\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Workflow.Types.ParticipantCount\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Rules.Validation\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1720:Identifier contains type name\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Search.FieldData.IndexedDataType\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SmartAgreement.AIModelManagement.AiModelManagement\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SmartAgreement.AISTransactionProviderBase.AnalyzerModelNames\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1815:Override equals and operator equals on value types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SmartAgreement.AISTransactionProviderBase.RatingsConstants\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SmartAgreement.Models.Metadata\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SmartAgreement.Models.Trace\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1813:Avoid unsealed attributes\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Sync.SyncTemplateAttribute\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1813:Avoid unsealed attributes\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Translation.Models.TranslatableAttribute\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1813:Avoid unsealed attributes\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Translation.Models.TranslationDisplayAttribute\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1813:Avoid unsealed attributes\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Translation.Models.TranslationExportAttribute\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Utilities.Filter\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Utilities.Language\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Utilities.Retry\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1724:Type names should not match namespaces\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.Security\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2235:Mark all non-serializable fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AccountSettings._securitySettings\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Adm.AdmUtilities.AttributeDataTypeOverrides\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Adm.AdmUtilities.ClauseFields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Adm.AdmUtilities.DurationFieldNamesByUnitFieldNames\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Adm.AdmUtilities.NonPersistentFieldUidMapping\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Adm.AdmUtilities.UnitFieldNamesByDurationFieldNames\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.Assignable\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.AutoRenewal\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.DocumentType\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.EffectiveDate\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.ExpirationDate\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.Indemnity\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.LimitatonOfLiability\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.Party\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.PaymentDuration\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.PaymentLateFees\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.PaymentTerms\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.RenewalNotice\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.RenewalTerm\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.TerminationCause\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.TerminationConvenience\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.TerminationNotice\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.AIConfiguration.Utilities.SystemDefinedMappingHelper.RuleModelUid.TotalContractValue\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Aom.AomConstants.AmendmentTypes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Aom.AomConstants.PrimaryTypes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Aom.AomConstants.SecondaryTypes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Aom.AomConstants.StandaloneTypes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Aom.AomConstants.SupplementTypes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Aom.AomRestClientBase._logger\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.ApplicationSettings.MaxOutboundEmailsForAccountInSlidingWindow\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2235:Mark all non-serializable fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult.UpdateStagedMetadatasResult\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clm\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clmessentials\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clmessentialssf\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clmfedrampmoderate\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clmfedrampmoderatesf\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clmforgov\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clmforgovsf\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clmil4\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clmil4sf\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clmplus\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clmpro\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clmprosf\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clmsf\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Clmsfplus\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Gen\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.GenCpq\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.CLMAccountConversion.Validation.EnabledConversionPlans.Negotiate\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2213:Disposable fields should be disposed\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DatabaseConnectionSwitch._prevThreadConnectionStore\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContentControlContentElement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContentControlDataBindingElement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContentControlDataBindingXPathAttribute\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContentControlElement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContentControlPropertiesElement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContentControlPropertiesPictureElement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContentControlPropertiesShowingPlaceholderElement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContentControlTagElement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ContentControlTagValueAttribute\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ImageBlipElement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ImageBlipEmbedAttribute\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ImageCxAttribute\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ImageCyAttribute\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ImageExtElement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ImageExtentElement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.EmailTemplateNameManager.BodyTemplatesMap\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.EmailTemplateNameManager.FooterTemplatesMap\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.EmailTemplateNameManager.HeaderTemplatesMap\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.EmailTemplateNameManager.PreHeaderTemplatesMap\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.EmailTemplateNameManager.StylesheetsMap\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.PreDefinedDataSets.ShardTemplatesMap\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Messaging.Framework.Core.PreDefinedDataSets.TokenDictionary\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2235:Mark all non-serializable fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Account._urls\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2235:Mark all non-serializable fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.DashboardTab._viewers\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup.EnvTagRegex\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataGroup.FieldTagRegex\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2235:Mark all non-serializable fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.Notification._notificationData\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Catalogs.Adm.Adm.Agreements\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Catalogs.Adm.Adm.Obligations\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Catalogs.ClmSecurity.ClmSecurity.ClmSecuritySchema\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Catalogs.ClmSer.ClmSer.ClmSerSecurity\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Constants.PrestoConstants.StringColumns\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.AggSortByExtensionDict\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Helpers.AggregateQueryHelpers.DateGroupedByPrefix\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Helpers.WorkflowQueryHelper.SecuredDocumentsSelect\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Helpers.WorkflowStatusQueryHelper.AllStatuses\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Helpers.WorkflowStatusQueryHelper.FinishedStatuses\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Helpers.WorkflowStatusQueryHelper.RunningStatuses\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Model.DateRange.DefaultAllTimeDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Model.DateRange.DefaultThisMonthDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Model.DateRange.DefaultThisWeekDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReport.AggregateCountColumn\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReport.AggregateCountColumn\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.Common.AgreementObjectModelHelpers.ADMAgreementsTable\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.Common.AgreementObjectModelHelpers.ADMObligationsTable\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.Common.AgreementObjectModelHelpers.AgreementTable\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.Common.AgreementObjectModelHelpers.ObligationsTable\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.Common.AgreementObjectModelHelpers.PartyTable\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.Alias\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.Catalogs.ClmSecurity\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.Common.SecurityApiHelper.Catalogs.ClmSer\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.AggregateCountColumn\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.SubQueryNames.AggregateFinalQuery\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReport.SubQueryNames.BaseConditionsQuery\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Selections.DocumentAttributesFilters\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Selections.DocumentDocuments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Selections.DocumentFolders\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReport.Selections.UnaliasedDocumentFolders\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReport.AggregateCountColumn\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReport.Selections.PublicDocuments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport.Selections.DetailsAttributeSelect\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport.Selections.DetailsBase\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport.Selections.DetailsUnnestedFinishedScopeDetail\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport.Selections.DetailsUnnestedRunningScopeDetail\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReport.Selections.DetailsUnnestedScope\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReport.ProcessesUnnestedDocuments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.AggregateCountColumn\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.Selections.StepDetail\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.Selections.StepDetailBase\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.Selections.StepDetailIso8601Dates\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.Selections.StepDetailsAttributeSelect\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.Selections.StepDetailUnnestedScope\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReportQueryHelpers.UnnestedColumn\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Selections.Summary\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Selections.SummaryAllScopes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Selections.SummaryFinished\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Selections.SummaryRunning\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Selections.SummaryScopeAggregates\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Selections.SummaryStages\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Selections.SummaryStageStatusAggregates\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReport.Selections.SummaryStageTotalCount\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2235:Mark all non-serializable fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Proxy.ProxyDocument.CustomData\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.AIDocument.StandardRulesConfigurationHelper.RulesConfigUid\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiClient.Default\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.Random\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.PAGE\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.PAGE_SIZE\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.PlanIdMap\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Throttling.AbstractThrottlingRepository._log\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.DefinedProperties\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2235:Mark all non-serializable fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Workflow.Dynamic.DynamicContext._referencedDynamicContext\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Search.SearchResults.EMPTY\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.AccountId\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.CreatorUid\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.DocumentType\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.GroupMembership\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.HasSecurityAttributes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.NodeCreatedDate\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.NodeId\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.NodeType\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.NodeUpdatedDate\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.ParentNodeId\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.ParentNodeTpe\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.PartyId\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.Region\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.Role\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.Status\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityIds.UserId\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.UserSettings.PDFFootnoteNumberSizeDefault\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.AnalyticsUtilities.GetSalt\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.ApplicationInfo.Version\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Chinese_Simplified\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Chinese_Traditional\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Default\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Dutch\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.English\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.French\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.German\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Italian\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Japanese\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Korean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Polish\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Portuguese\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Portuguese_Brazil\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Pseudoloc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Russian\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Spanish\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.Language.Spanish_LatinAmerica\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2211:Non-constant fields should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Utilities.RestApiClientUtilities._httpStatusCodesWorthRetrying\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.Delete(System.Int32,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.MakeApiCall(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule,System.Collections.Generic.List{ADEXS.ABAC.Engine.Policy{ADEXS.ABAC.Data.SecurityFlagsResponse,ADEXS.Globals.ScmEnums.Security}})~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AbstractSettings.GetSettings~ADEXS.Core.Domain.Model.Settings\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomRestClientBase.DeserializeErrorResponse(System.Net.Http.HttpResponseMessage)~ADEXS.Core.Domain.Aom.AomApiErrorResponse\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomRestClientBase.DeserializeResponse``1(System.Net.Http.HttpResponseMessage)~``0\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Aom.AomRestClientBase.MakeRequestAndReturnResponse``1(System.Net.Http.HttpMethod,System.Object,System.String,System.String)~``0\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.ReportsUrl.Report(System.Guid,ADEXS.Core.Types.Enums.AnalyticsReportType)~ADEXS.Core.Domain.AtlasUrl.UrlBuilder\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.EntityChangeManager.AccountChanges(System.Int32,ADEXS.Core.Types.Enums.AccountConversionStatus)~ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.Model.AccountChange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.EntityChangeManager.PopulateAccountSettings(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})~System.Collections.Generic.List{ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.Model.EntityChange}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.GroupManagement.GroupConversionService.AddGroupToAccountServer(System.Net.Http.HttpClient,System.String,System.Int32,ADEXS.Core.Domain.Model.Group)~System.Net.Http.HttpResponseMessage\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.GroupManagement.GroupConversionService.ConvertGroup(System.Net.Http.HttpClient,ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,ADEXS.Core.Domain.Model.Group,System.Collections.Generic.IList{ADEXS.Core.Domain.Model.DSGroup})\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Helper.UserMigrationHelper.SendRequestToDSServer(System.Net.Http.HttpClient,System.String,System.Object,System.Net.Http.HttpMethod,System.Guid,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.MixedMode.MixedModeSettingUtility.SaveMixedModeSettings(ADEXS.Core.Domain.Model.Account)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.CompareValues(System.Reflection.PropertyInfo,System.Object,System.Object)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.DeserializeSnapshotByType(ADEXS.Core.Domain.Model.Conversion.AccountConversionSnapshot)~System.Object\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.FormatValueToParseSetting(System.Object,System.Reflection.PropertyInfo,System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.GetDataFromBlob(System.Int32,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.ParseAnEnumList``1(System.Object,System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.ParseData``1(``0,System.Boolean)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.ParseList``1(System.Object,System.Boolean)~System.Object\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.SerializeWritableFieldsObject``1(``0)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Helper.AccountConversionSnapshotHelper.ValidateInputParameters(System.Collections.Generic.Dictionary{System.String,System.Object})\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Service.AccountDataSnapshotService.BackupAccountInfo(System.Int32,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Service.AccountDataSnapshotService.BackupGroupInfo(System.Int32,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.Service.AccountDataSnapshotService.BackupUserInfo(System.Int32,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CLMAccountConversion.Validation.AccountConversionValidatorHelper.IsAllowedClmAccountType(System.Int32)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DatabaseConnectionSwitch.InitializeFromConnectionString(System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.DocxXmlMergeProcessor.ProcessElement(System.IO.Packaging.PackagePart,System.Xml.XmlNamespaceManager,System.Xml.Linq.XContainer,ADEXS.Core.Domain.DocumentCreation.IXmlMergeDataSource,System.String,System.Int32,System.Int32@)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Merge.#ctor(ADEXS.Core.Domain.SharedStorage.IAtlasSharedStorageFactory,ADEXS.Core.Domain.DocumentCreation.IMergeTaskDataSourceService,ADEXS.Core.Domain.DocumentCreation.IXmlMergeProcessorFactory)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.SfMerge.MergeAgreementDataIntoDataXml(System.String,ADEXS.Core.Domain.Model.Party,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.WatermarkHelper.WatermarkFile(System.String,ADEXS.Core.Domain.FileOperations.Models.WatermarkProperties,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.XmlMergeTemplate.GetFilePath~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.AbstractSyncRequestProcessor`1.Execute~System.Nullable{ADEXS.Core.Domain.DocuSignSync.SyncProcessingErrorCode}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.GroupSyncRequestProcessor.Delete\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.GroupSyncRequestProcessor.Insert\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.GroupSyncRequestProcessor.Update\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.GroupUsersSyncRequestProcessor.Delete\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.GroupUsersSyncRequestProcessor.Insert\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuSignSync.RoleUsersSyncRequestProcessor.GetSpringCmRole~ADEXS.Core.Types.Enums.UserRole\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.GetFolder(System.String,System.String,System.String,System.String,System.Boolean)~ADEXS.Core.Domain.Model.Folder\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.EOS.ExternalObjectsStorage.RenameBaseFolder(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2229:Implement serialization constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Exceptions.AdexsApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2229:Implement serialization constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Exceptions.AdexsDisplayException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2229:Implement serialization constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Exceptions.AdexsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2229:Implement serialization constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Exceptions.PublicException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.CallExpressionService(System.Uri,ADEXS.Core.Domain.ExpressionService.Internal.Model.WorkflowExpressionServiceRequestContent,ADEXS.Core.Domain.Model.Account,System.Guid,System.Guid,System.Guid,System.Int32@,System.String@,System.Boolean@)~ADEXS.Core.Workflow.Expressions.Model.ApiExpressionServiceResponse\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.GetExpressionServiceResponseDetails(ADEXS.Core.Workflow.Expressions.Model.ApiExpressionServiceResponse,System.Uri,System.Int32,System.Guid,System.String,System.Boolean,System.String,System.Boolean,System.Boolean)~ADEXS.Core.Workflow.Expressions.Model.ExpressionServiceResponseDetails\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2008:Do not create tasks without passing a TaskScheduler\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.ExpressionServiceClient.RemoteWorkflowEvaluateExpression(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Model.Account,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Guid)~ADEXS.Core.Workflow.Expressions.Model.WorkflowExpressionResult\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.Internal.CertificateLoader.LoadCertificate(System.String)~System.Security.Cryptography.X509Certificates.X509Certificate2\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2215:Dispose methods should call base class dispose\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FeatureFlags.Remoting.FeatureFlagsRemoteCallWrapperFactory.NullRemoteCallWrapper.NullWrapper.Dispose\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.OperationFactory.GetInstance(ADEXS.Core.Domain.FileOperations.Interfaces.IOperable,ADEXS.Core.Util.FileIO.FileExtensionList,System.Int32)~ADEXS.Core.Domain.FileOperations.Interfaces.IOperation\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PdfOperations.FieldExportProcessorPdf.GeneratePdfFieldExportXml(ADEXS.Core.Domain.Model.Document,System.Int32,System.Int32,CLM.MessageDefines.Event.PdfFieldExportEvent)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.FileOperations.PDF.PDFOperators.PageCount.AlternatePageCountOperator.GetPageCount~System.Int32\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Import.UserCSVReader.GetContact(System.String,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Contact\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2016:Forward the 'CancellationToken' parameter to methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Javelin.JavelinApiService.GetGenResponseAsyncCall(ADEXS.Core.Domain.Javelin.SalesForceRequestSchema,System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.String}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Lookup.Pager.ModifyPagerForReUse(System.Int32)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.LoadFile(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2225:Operator overloads have named alternates\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.MailMessageDto.op_Explicit(System.Net.Mail.MailMessage)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.MailMessageDto\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.MailMessageValidator.ValidateMailMessage(System.Net.Mail.MailMessage)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.PostProcessor.GetUserAccountFromPayload(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload)~ADEXS.Core.Domain.Model.UserAccount\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.EmailService.ComposeAndSendEmail(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.String)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.SendEmailResult\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.CollaborationNotificationMessagingBuilder.Build(ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CollaborationEmail,ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailResourceManager)~ADEXS.Core.Domain.Messaging.Framework.Integration.EmailPayloadBuilders.CollaborationNotificationMessaging\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Messaging.SendEmail(ADEXS.Core.Domain.Persistence.Model.EmailPersistence.EmailContext,System.String,System.String,ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Net.Mail.Attachment},System.Boolean,System.Boolean,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.SendDsEmailServiceHelper.SendEmailViaOneNotification(ADEXS.Core.Domain.Messaging.ISendDsEmailService,DSEmailAPIClient.Model.PostEmailRequest,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Guid)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementNode.SetAgreement(ADEXS.Core.Domain.Model.Agreement)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementNode.SetNodeAsVisited(System.Collections.Generic.HashSet{System.Guid})\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementNode.ValidateAgreement(ADEXS.Core.Domain.Model.Agreement)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementNode.ValidateMaxHierarchyLevel(ADEXS.Core.Domain.Model.AgreementNode,ADEXS.Core.Domain.Model.AgreementNode)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.AgreementNode.ValidateParentAgreement(ADEXS.Core.Domain.Model.AgreementNode)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Document.CanDownload(ADEXS.Core.Domain.Model.UserAccount,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,ADEXS.Core.Domain.Exceptions.PublicException@,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2225:Operator overloads have named alternates\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Metadata.op_Explicit(ADEXS.Core.Domain.Model.Metadata)~System.DateTime\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.PartyAgreementTrees.UpdateAgreement(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Nullable{System.Guid},System.Boolean)~ADEXS.Core.Domain.Model.AgreementNode\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.PartyAgreementTrees.ValidateAndGetParentNode(System.Nullable{System.Guid})~ADEXS.Core.Domain.Model.AgreementNode\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SavedSearchV2.DeserializeColumns~System.Collections.Generic.List{ADEXS.Core.Domain.Presto.Model.ReportColumn}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.SavedSearchV2.DeserializeSearchQuery~ADEXS.Core.Domain.Search.SearchQuery\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2225:Operator overloads have named alternates\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.TermDocument.op_Implicit(ADEXS.Core.Domain.Model.TermDocument)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2002:Do not lock on objects with weak identity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Workflow.Instance.GetNextLocalContextId~System.Int32\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Workflow.InstanceVariable.CreateFromValueString(System.Int32,System.Guid,System.String,ADEXS.Core.Types.Enums.WorkflowVariableType,System.String)~ADEXS.Core.Domain.Model.Workflow.InstanceVariable\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Workflow.WorkItem._Initialize(ADEXS.Core.Domain.Model.Workflow.WorkerPool,ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.Int32,System.Nullable{System.DateTime})\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NewsActionTypeBase.NotifySubscribers(System.Collections.Generic.IEnumerable{System.Guid},ADEXS.Core.Domain.Model.QueueTasks.NewsTask)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.AddLink(System.String,System.Int32,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.AddValue(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.GetLink(System.String,ADEXS.Core.Domain.News.NotificationData.LinkAttributesList)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.GetLinkForWebService(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.News.NotificationData.GetValue(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Organization.DSOrganizationManagementService.GetMultiUserProfiles(System.Guid,System.String,System.Guid)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DSUserProfileInfo}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartyDocumentUtility.AddDocLauncherDocumentToParty(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartyDocumentUtility.GenerateSalesforcePartyData(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.AtlasPersistenceFactory.Get``1(System.Int32)~``0\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.AtlasPersistenceFactory.GetInstance``1(System.Int32)~``0\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBrandingPersistenceLegacy.DeleteImage(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.AccountBrandingImageType)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBrandingPersistenceBase.GetBrandingImageStorageDirectory~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.GetDescendantsCount(System.Int32,System.Guid,System.Int32)~System.Int32\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.PersistedInstancePersistence.Purge(System.Int32,System.Guid,ADEXS.Core.Workflow.Lookup.KeySetPager,System.Int32)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.FolderPersistence.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedPhysicalStorage.GetContentLength(System.Int32,System.String,DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat,System.Boolean,System.String,System.Int64)~System.Int64\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedStorage.SetBlobMetaData(System.Int32,System.String,ADEXS.Core.Types.Enums.FileMetaDataType,System.String,System.Nullable{DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat},System.Nullable{System.Int32})\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasPhysicalStorageFactory.GetHybridPhysicalStorage(ADEXS.Core.Domain.AccountSettings)~DocuSign.CLM.ContentStorage.IPhysicalStorage\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasPhysicalStorageFactory.GetPhysicalStorage(DocuSign.CLM.ContentStorage.StorageConstants.PhysicalStorageType,System.Int32)~DocuSign.CLM.ContentStorage.IPhysicalStorage\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasPhysicalStorageFactory.GetPhysicalStorage(System.Int32)~DocuSign.CLM.ContentStorage.IPhysicalStorage\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasPhysicalStorageFactory.GetPrimaryPhysicalStorage(System.Int32)~DocuSign.CLM.ContentStorage.IPhysicalStorage\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.JsonConverter.JsonConverters.MetadataFilterConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)~System.Object\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoFunctions.And(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoFunctions.Or(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoQueries.GetQueryByType``1(ADEXS.Core.Domain.Presto.Reports.BaseReport{``0},ADEXS.Core.Types.Enums.ReportQueryType)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoQueries.GetQueryFromReportConfig(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Presto.IPrestoRestClient,ADEXS.Core.Types.Enums.ReportQueryType,System.Boolean,System.Boolean,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoQueryResults.AppendColumns(ADEXS.Core.Domain.Presto.PrestoQueryResults)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoQueryResults.AppendData(ADEXS.Core.Domain.Presto.PrestoQueryResults)~ADEXS.Core.Domain.Presto.PrestoQueryResults\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoRestClient.CancelQuery(System.String)~LanguageExt.EitherAsync{ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoException,System.Boolean}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.PrestoRestClient.GetRequest(System.String,System.Int32)~System.Threading.Tasks.Task{LanguageExt.Either{ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoException,ADEXS.Core.Domain.Presto.PrestoQueryResults}}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.Common.WorkflowReportsHelpers.AddProcessingStatusColumn(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration)~ADEXS.Core.Domain.Presto.Reports.ReportConfiguration\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.GetCustomReportType~ADEXS.Core.Types.Enums.ReportType\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepsReport.GetColAliasFromColName(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Provisioning.AccountProvisioningService.GetAccountRolesByProduct(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.SourceProductName)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.Provisioning.Role}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Provisioning.AccountProvisioningService.GetProductByAccountType(ADEXS.Core.Types.Enums.AccountType)~ADEXS.Core.Types.Enums.SourceProductName\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountBranding.AccountBrandingRepository.LoadByAccountId(System.Int32)~ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBranding\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AllocateNewAccountId(ADEXS.Core.Domain.Model.Account)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.AllocateNewAccountId(ADEXS.Core.Domain.Model.Account)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.ConvertAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.CreateAccountData)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.CreateAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CreateAccountData)~System.ValueTuple{ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.CreateLinkedAccount(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,ADEXS.Core.Types.Enums.AccountStatus,System.String@)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.GetSuperAdministrator(System.Int32)~ADEXS.Core.Domain.Model.UserAccount\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SyncAccount(System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.SyncAccount(System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.System_CreateSignupAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.AccountStatus,ADEXS.Core.Types.Enums.AccountType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Guid)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.UnlinkAllConvertAccountData(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Types.Enums.AccountType,ADEXS.Core.Domain.Model.CreateAccountData)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.UpdateAccount(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.CreateAccountData)~ADEXS.Core.Domain.Model.Account\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.VerifyPrivileges(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.VerifyRequestEssentials(ADEXS.Core.Domain.Model.CreateAccountData)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AccountRepository.AccountRepository.VerifyRequestEssentialsForNewAdmin(ADEXS.Core.Domain.Model.CreateAccountData)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRelationshipHelper.ValidateAgreementRelationships(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement})\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.Create(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement})~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.LoadByExternalId(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.LoadPartyAgreementTrees(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.PartyAgreementTrees\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.Update(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Agreement},System.Boolean)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.UpdateV2(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Nullable{System.Guid},System.Boolean)~ADEXS.Core.Domain.Model.Agreement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementRepository.ValidateAgreementDoesNotExist(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AgreementRepository.AgreementService.CreateOrUpdateAgreementAndRelationships(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Agreement,System.Collections.Generic.List{ADEXS.Core.Domain.Model.AgreementRelationship},System.Collections.Generic.List{System.String}@)~System.Guid\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIDocumentTransactionProviderFactory.Create(ADEXS.Core.Types.Enums.AIProviderType)~ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionProvider\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIStatusNotificationService.#ctor(ADEXS.Core.Domain.Repository.AIDocument.IAIDocumentTransactionProviderFactory)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIStatusNotificationTaskHelper.#ctor(ADEXS.Core.Domain.QueueHelper.ISendTask,ADEXS.Core.Domain.Repository.AgreementRepository.IAgreementRepository)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AutoNumberRepository.AutoNumberRepository.Delete(System.Guid)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AutoNumberRepository.AutoNumberRepository.FormatValue(ADEXS.Core.Domain.Model.AutoNumberFormatSpec,System.Int64,System.DateTime)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.CheckForSave(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,System.Object,ADEXS.Core.Types.Enums.MigrationEntityType,System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.Setting},System.Func{System.String,System.Boolean})~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.DeleteDataFromBlob(System.Int32,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.Load(System.Int32,ADEXS.Core.Types.Enums.AccountConversionStatus,ADEXS.Core.Types.Enums.MigrationEntityType,System.Guid)~ADEXS.Core.Domain.Model.Conversion.AccountConversionSnapshot\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.RevertAccount(System.Int32,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.AccountConversionStatus,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.RevertGroup(System.Int32,System.Guid,ADEXS.Core.Types.Enums.AccountConversionStatus,ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.RevertUser(System.Int32,System.Guid,ADEXS.Core.Types.Enums.AccountConversionStatus,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.SaveDataToBlob(System.Int32,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.SnapshotAccount(System.Int32,ADEXS.Core.Types.Enums.AccountConversionStatus,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.SnapshotGroup(System.Int32,System.Guid,ADEXS.Core.Types.Enums.AccountConversionStatus,ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.SnapshotUser(System.Int32,System.Guid,ADEXS.Core.Types.Enums.AccountConversionStatus,ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.UpdateAccountInfo(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.UpdateAccountSettings(System.Collections.Generic.Dictionary{System.String,System.String},ADEXS.Core.Domain.Model.UserAccount,System.Boolean)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.UpdateGroupInfo(System.Collections.Generic.Dictionary{System.String,System.String},ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.UpdateUserInfo(System.Collections.Generic.Dictionary{System.String,System.String},ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionSnapshotRepository.UpdateUserSettings(System.Int32,System.Guid,System.Collections.Generic.Dictionary{System.String,System.String},ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionStatusRepository.DeleteAccountConversionStatus(System.Int32,System.Guid)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionStatusRepository.DeleteAccountConversionStatusByAccountId(System.Int32)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionStatusRepository.GetConversionStatus(System.Int32,System.Guid)~ADEXS.Core.Types.Enums.AccountConversionStatus\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionStatusRepository.GetMigrationStatusByAccountId(System.Int32)~ADEXS.Core.Types.Enums.AccountConversionStatus\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionStatusRepository.Load(System.Int32,System.Guid)~ADEXS.Core.Domain.Model.Conversion.Account.AccountConversionStatus\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionStatusRepository.Load(System.Int32,System.Guid)~ADEXS.Core.Domain.Model.Conversion.Account.AccountConversionStatus\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionStatusRepository.LoadAccountConversionStatusByAccountId(System.Int32)~ADEXS.Core.Domain.Model.Conversion.Account.AccountConversionStatus\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionStatusRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Conversion.Account.AccountConversionStatus)~ADEXS.Core.Domain.Model.Conversion.Account.AccountConversionStatus\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Conversion.AccountConversionStatusRepository.UpdateConversionStatus(ADEXS.Core.Domain.Model.Conversion.Account.AccountConversionStatus)~ADEXS.Core.Domain.Model.Conversion.Account.AccountConversionStatus\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.CreateOrUpdateByExternalId(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Party)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CustomRuleRepository.CustomRuleExecutionContext.RuleExit(System.Guid)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration.convertInputFile(System.String,ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Documents,System.Int32,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DeliveryRepository.CoverSheetGeneration.GeneratePDFCoversheetFile(ADEXS.Core.Domain.Model.Account,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Delivery,ADEXS.Core.Domain.Model.Documents,System.Int32,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigRepository.ValidateConfig(System.Int32,ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigValidationError}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.FormConfigurationRepository.Save(ADEXS.Core.Domain.Model.FormConfiguration,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.FormConfiguration\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCompareRepository.GetFullPathToTransientCompareDocument(System.Int32,System.Guid,System.Guid,ADEXS.Core.Domain.Repository.DocumentRepository.TransientCompareDocType)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReader.GetDisplayName(DocuSign.CLM.ContentStorage.StorageConstants.StorageFormat)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.DraftDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,System.String,ADEXS.Core.Types.Constants.FileDataSource,System.String,System.Boolean)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.GetUpdatedDocumentSecurity(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~ADEXS.Globals.ScmEnums.Security\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadAndValidateDocument(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.LoadByVersion(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UpdateDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String,ADEXS.Core.Types.Constants.FileDataSource,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.String)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UpdateDocxFormat(ADEXS.Core.Domain.Model.FileData,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UpdateHtmlFormat(ADEXS.Core.Domain.Model.FileData,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.UpdatePDFConversion(ADEXS.Core.Domain.Model.FileData,System.String,System.Guid,System.Boolean)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.VerifyInsertDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertType,ADEXS.Core.Domain.Model.Document,System.String,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentSearchQuery.ExecuteSearch(ADEXS.Core.Domain.Lookup.Pager,System.Boolean)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentSearchQuery.ExecuteSearchWithAttributes(ADEXS.Core.Domain.Lookup.Pager,System.Boolean)~System.Tuple{System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.Document},System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.IList{ADEXS.ScmElasticCore.Indexing.MetadataIndexModel}}}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.FileMetaDataExists(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.FileMetaDataType)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.GetTrackedChangesStatus(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Types.Enums.TrackedChangesStatus\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.LoadByDocumentUidAndType(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.FileMetaDataType)~ADEXS.Core.Domain.Model.FileMetaData\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.FileMetaData)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.SubmitCheckTrackedRevisionsTask(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FileMetaDataRepository.UpdateTrackedChangesStatus(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.TrackedChangesStatus)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalDocumentReader.GetDocumentContentByPath(System.String)~System.IO.Stream\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult.SetDocument(System.Guid)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.LogicalFileSystemParseResult.SetFolder(System.Guid)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.PhysicalStorageTransaction.Commit(ADEXS.Core.Domain.Model.FileData)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.PhysicalStorageTransaction.Dispose\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.PhysicalStorageTransaction.Rollback(System.Exception)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.SearchRepeater.#ctor(ADEXS.Core.Domain.AccountSettings)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalDataMapRepository.ExternalDataMapRepository.SyncToSite(ADEXS.Core.Domain.Persistence.Model.ExternalDataMap,System.String,System.Int64)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.CancelExternalReview(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Types.Enums.HistoryMessageIdentifiers,System.Guid,System.String,ADEXS.Globals.ScmEnums.ActionType,System.Boolean,System.Guid,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Types.Enums.ExternalReviewCancelReason)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.CompleteExternalReview(ADEXS.Core.Domain.Model.ExternalReview,System.String,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.ExternalReview.UploadResult},System.Nullable{System.Guid},System.Collections.Generic.ICollection{System.Guid},System.Boolean,ADEXS.Core.Domain.Model.ExternalReview.DocumentMatchInfo,System.Boolean)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.CompleteExternalReviewWithNewDocument(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.String,System.String,System.String,Newtonsoft.Json.Linq.JObject)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.FlagExternalReviewAfterSetSafeToReplyEmail(ADEXS.Core.Domain.Model.ExternalReview)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.FlagExternalReviewForManualMatching(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewReconciliationTask)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.FlagExternalReviewForPendingEmailDomainApproval(ADEXS.Core.Domain.Model.ExternalReview,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.GetUserAccount(ADEXS.Core.Domain.Model.ExternalReview)~ADEXS.Core.Domain.Model.UserAccount\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.RegisterExternalReviewKeys(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalReview)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.RegisterExternalReviewKeys(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ExternalReview)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.Resend(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document)~ADEXS.Core.Domain.Model.ExternalReview\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.SendCancelEmailForUnknownEmail(ADEXS.Core.Domain.Model.ExternalReview)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.SendCancelEmails(ADEXS.Core.Domain.Model.ExternalReview,ADEXS.Core.Domain.Model.Documents,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.UseDocuSignExternalReview(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewRepository.ValidateReviewSubmission(ADEXS.Core.Domain.Model.ExternalReview,System.Collections.Generic.List{ADEXS.Core.Domain.Model.Document},System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Model.ExternalReview.UploadResult})\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.SafeToReplyEmailDomainRepository.EmailAddress.#ctor(System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Negotiation.NegotiationApiClient.CreateHttpClient(System.Int32,System.Guid)~System.Tuple{ADEXS.Core.Domain.Repository.Negotiation.Api.IReviewsApi,System.Guid}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.GetAllNotificationPreferences(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.Dictionary{ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.NotificationPreference}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.SaveAllNotificationPreferences(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IDictionary{ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.NotificationPreference})\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.NotificationRepository.NotificationRepository.SaveNotificationPreference(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Globals.ScmEnums.ActionType,ADEXS.Core.Types.Enums.NotificationPreference)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.SaveKey(ADEXS.Core.Domain.Model.OAuthKey,System.Boolean)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.SyncApiRegistrationWithSite(ADEXS.Core.Domain.Persistence.Model.APIRegistration,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.SyncTokenWithSite(ADEXS.Core.Domain.Model.OAuthKey,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.SyncTokenWithSite(ADEXS.Core.Domain.Model.OAuthKey,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.ReplaceLocalDateTimes(System.String,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ObjectHistory.ObjectHistoryMessageRenderingRepository.ReplaceWithLinks(ADEXS.Core.Domain.Model.UserAccount,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.GetSpringCmRole(ADEXS.Core.Domain.Model.DSGroup)~System.ValueTuple{System.String,ADEXS.Core.Types.Enums.UserRole}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DocuSignSyncRepository.SyncDsUser(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.DSGroupUser)~ADEXS.Core.Domain.Model.UserAccount\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.ExchangeAuthCodeForTokenResponse(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.ExchangeRefreshTokenForAccessToken(System.String)~ADEXS.Core.Domain.Model.OauthAccessTokenResponse\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetAccessTokenFromResourceToken(System.String)~ADEXS.Core.Domain.Model.OauthAccessTokenResponse\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetConstrainedDelegationOauthTokens(System.String,System.String,System.String[],System.String)~ADEXS.Core.Domain.Model.OauthAccessTokenResponse\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetDocuSignExternalAccountId(System.String)~ADEXS.Core.Domain.Model.Conversion.Account.DocuSignAccountInfo\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetEntitlementsFromApi(System.String)~ADEXS.Core.Domain.Model.Provisioning.DSAccountEntitlement\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetOauthTokens(System.String[],System.String,System.String)~ADEXS.Core.Domain.Model.OauthAccessTokenResponse\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetUserInfo(System.String)~ADEXS.Core.Domain.Model.DSUserInfo\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetUserInfo(System.String)~ADEXS.Core.Domain.Model.DSUserInfo\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.GetUserInfosFromRSAKey(System.Byte[],System.Byte[])~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DSUserInfo}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.IsDsOrgAdmin(ADEXS.Core.Domain.Model.UserAccount)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSAccountsServerRepository.RegisterResourceToken(System.String,System.Object,System.Boolean,System.Int32,System.String)~ADEXS.Core.Domain.Model.RegisterResourceTokenResponse\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.AddProductGroup(System.Net.Http.HttpClient,System.Guid,System.String,ADEXS.Core.Domain.Model.Provisioning.AddProductGroupRequest)~ADEXS.Core.Domain.Repository.ProvisioningRepository.AddProductGroupResult\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.DeleteMagnumGroup(System.Net.Http.HttpClient,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.LoadAllPages``2(System.Net.Http.HttpClient,ADEXS.Core.Domain.AtlasUrl.UrlBuilder,System.Action{``0})~System.Collections.Generic.IEnumerable{``0}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.LoadGroupsByUser(System.Guid,System.Guid,System.String)~ADEXS.Core.Domain.Model.DSGroupUser\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.DSApiRepository.LoadLocaleByUser(System.Guid,System.String)~System.Collections.Generic.Dictionary{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ProvisioningRepository.ProvisioningAppDataRepository.GetProductIdByProductName(ADEXS.Core.Types.Enums.SourceProductName)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.GetQueryId(ADEXS.Core.Domain.Presto.Reports.ReportConfiguration,LanguageExt.Option{ADEXS.Core.Domain.Presto.Reports.ReportConfigurationFilters},ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~LanguageExt.Either{System.Exception,System.String}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.AnalyticsReportCacheRepository.GetReportConfig(System.String,ADEXS.Core.Domain.Model.UserAccount,System.Guid)~LanguageExt.Either{System.Exception,ADEXS.Core.Domain.Presto.Reports.ReportConfiguration}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetDefaultReportConfiguration(ADEXS.Core.Types.Enums.AnalyticsReportType,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Presto.Reports.ReportConfiguration\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetDefaultReportNameByReportType(ADEXS.Core.Types.Enums.AnalyticsReportType)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetDefaultSortExpression(ADEXS.Core.Types.Enums.AnalyticsReportType)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.GetReportTypeFromName(System.String)~ADEXS.Core.Types.Enums.AnalyticsReportType\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Reporting.ReportConfigurationRepository.LoadReportConfigByConfigUid(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.AnalyticsReportType)~ADEXS.Core.Domain.Presto.Reports.ReportConfiguration\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealClauseSyncService.ConvertToSealClausesFromFolder(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.Repository.Seal.SealClauseSyncConvertResult\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealClauseSyncService.ConvertToSealClausesFromTermDocument(ADEXS.Core.Domain.Model.TermDocument)~ADEXS.SealAPIClient.Models.Requests.ClauseGroup\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2208:Instantiate argument exceptions correctly\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.JITSecurityCalculator.GetSecurities(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Repository.Security.Node})~System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Repository.Security.JITSecurityResult}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityAccessRuleRepository.SaveRule(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.RevokeJitSecurityCatch(System.Int32,ADEXS.Core.Types.Enums.SecurityItemTable,System.Guid)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.Save(ADEXS.Core.Domain.Persistence.Model.ISecurityPersistence,ADEXS.Core.Domain.Model.BaseSecurity,ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.Boolean)~ADEXS.Core.Domain.Model.BaseSecurity\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SessionRepository.SessionRepository.ExchangeApiTokenForUISession(System.String,System.String,System.Guid,ADEXS.Core.Domain.Model.UserAuthorizationData,System.String)~ADEXS.Core.Domain.Model.GateKeeper.ExchangeApiTokenForUISessionResponse\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SfAuthorization.SfScratchOrgAuthorizationRepository.GetSfAuthorization(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Salesforce.DTO.SFAuthorization\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Share.ShareRepository.SavePublicShareLink(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.PublicShareLink)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SOAPAuthenticationTokenRepository.SyncAuthTokenWithSite(ADEXS.Core.Domain.Persistence.AuthenticationToken,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SOAPAuthenticationTokenRepository.SyncAuthTokenWithSite(ADEXS.Core.Domain.Persistence.AuthenticationToken,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TrackedContentWritebackService.GetExternalSystemUrl(ADEXS.Core.Domain.Model.DocLauncherConfig.DataSourceType,Newtonsoft.Json.Linq.JObject,ADEXS.Core.Domain.Model.UserAccount)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.EqualityComparerStrategy.GetComparer(ADEXS.Core.Domain.Model.DocLauncherConfig.DataSourceType,ADEXS.Core.Domain.Model.DocLauncherConfig.FieldType)~ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.EqualityComparers.IEqualityComparer\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.GetDataProviderFactory.GetProvider(ADEXS.Core.Domain.Model.DocLauncherConfig.DataSourceType)~ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.GetDataProviders.IGetDataProvider\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.Helper.SalesforceHelper.GetSfAuthorization(ADEXS.Core.Domain.AccountSettings)~ADEXS.Salesforce.DTO.SFAuthorization\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.SaveDataProviderFactory.GetProvider(ADEXS.Core.Domain.Model.DocLauncherConfig.DataSourceType)~ADEXS.Core.Domain.Repository.StructuredDocument.Services.Writeback.SaveDataProviders.ISaveDataProvider\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Term.TermRepository.TermDocumentNameIsValid(System.Int32,System.Guid,System.String,System.Guid,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository.GetTranslationUpdateByUid(System.Int32,ADEXS.Core.Types.Enums.TranslationNamespace,System.String,System.String)~ADEXS.Core.Domain.Translation.Models.TranslationUpdate\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.TranslationRepository.TranslationRepository.GetTranslationUpdateLog(System.Int32,ADEXS.Core.Types.Enums.TranslationNamespace,System.String,System.String)~ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.Delete(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.CustomUserRoleRepository.Validate(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.CustomUserRole,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.Delete(ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.ExchangeAccessTokenForUISession(System.String,ADEXS.Core.Domain.Model.UserAccount,System.Guid)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.GetAccessToken(ADEXS.Core.Domain.Model.UserAccount,System.Int32,System.Guid,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.LoadAll(ADEXS.Core.Domain.Model.UserAccount)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.DelegationAccess}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.Login(ADEXS.Core.Domain.Model.UserAccount,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.Provision(ADEXS.Core.Domain.Model.UserAccount,System.Boolean,System.DateTime,System.Int32)~ADEXS.Core.Domain.Model.UserAccount\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.DelegationAccessRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.DateTime,System.Boolean)~ADEXS.Core.Domain.Model.DelegationAccess\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginLockRepository.SyncLoginLockToWithSite(ADEXS.Core.Domain.Model.LoginLock,ADEXS.Core.Domain.AtlasUrl.AllocationUrl.ForwardingType,System.Int32,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Login,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.SyncLogin(System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.SyncLogin(System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.SForceCredentialRepository.EncryptPassword(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.BuildBarcode(ADEXS.Core.Domain.Model.Login,System.String,System.Int32,System.Int32)~System.Drawing.Bitmap\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.BuildBarcodeSkia(ADEXS.Core.Domain.Model.Login,System.String,System.Int32,System.Int32)~SkiaSharp.SKImage\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.EnableTwoFactorAuthentication(ADEXS.Core.Domain.Model.Login)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.TwoFactorKey}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.SyncTwoFactorKeysWithSite(System.Int32,System.Guid,System.Boolean)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.ValidateTwoFactorPin(ADEXS.Core.Domain.Model.Login,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.UserAccountRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.UserAccount)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient._LoadContactsProperty(System.String)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient._LoadDocumentsProperty(System.String)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient._LoadFoldersProperty(System.String)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient._LoadUsersProperty(System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.ClientFactory.Get(System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)~ADEXS.Core.Domain.Repository.Workflow.Client.Activities.AbstractClient\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary._GetRevision(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Int32,System.Int32)~ADEXS.Core.Domain.Model.Workflow.Revision\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSClientLibrary.CreateNewWorkflowDefinition(ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.Workflow.Definition\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WINSWorkItem.#ctor(System.Int32,System.Guid,ADEXS.Core.Domain.Model.Workflow.WorkItem)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceCompatibilityProperty.#ctor(System.String,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Compatibility.ResourceHandlerCompatibility.QueryResources(ADEXS.Core.Domain.Model.Account,System.String,System.Object[])~System.Data.IDataReader\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.AbstractLoader.ValidateNodeProperty(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Repository.Workflow.Loaders.PropertyLoadType,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.ContactLoader.ParseContacts(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.Boolean)~ADEXS.Core.Domain.Model.Contacts\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.DocumentLoader.ParseDocuments(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,ADEXS.Core.Domain.Lookup.Pager)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.FolderLoader.ParseFolders(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Folders\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.FormLoader.ParseForms(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Forms\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.MetadataVariablePropertyLoader.ParseMetadataConfiguration(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.MetadataConfigurationCollection\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.GetValues(System.String,System.String,ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)~System.Object[]\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.LegacyGenerateSqlFilter(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String,System.String@,System.String@,System.Collections.ArrayList@)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.UserLoader.ParseUserAccounts(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.UserAccounts\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.WorkerPoolLoader.ParseWorkerPools(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Workflow.WorkerPools\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2225:Operator overloads have named alternates\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.PropertyExpressions.StringPropertyExpression.op_Implicit(System.String)~ADEXS.Core.Domain.Repository.Workflow.PropertyExpressions.StringPropertyExpression\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.Condition._ConvertToList(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~System.Collections.Generic.IList{System.IComparable}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.Condition._EvaluateComparables(System.String,System.Collections.Generic.IList{System.IComparable},System.Collections.Generic.IList{System.IComparable})~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Types.Condition.Evaluate(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.CastPropertyValue``1(System.String,System.Object,``0)~``0\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.GetWorkflowConnectionString(System.Int32,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.SendHumanActivityTaskNotification(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,ADEXS.Core.Domain.Model.UserAccount,System.Boolean)~ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.SendEmailResult\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.SendStartWorkflow(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String)~System.Guid\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Search.SearchQuery.FromXml(System.String)~ADEXS.Core.Domain.Search.SearchQuery\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.ABAC.ABACSecurityProvider.ListSecurities(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Base.INode)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ABAC.ABACPolicyListResponse}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.AbstractSecurityProvider`1.DoTheCall(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Object,System.String,System.Threading.CancellationToken)~System.Net.Http.HttpResponseMessage\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SecurityFiltering.AbstractSecurityProvider`1.MakeRequest(ADEXS.Core.Domain.Model.UserAccount,System.String,System.Object,System.Int32,System.String,ADEXS.Core.Util.Core.LoggedStopWatch,System.Int32@,System.Boolean@)~`0\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasEncryptedSharedStorage.GetContentLength(System.Int32,System.String)~System.Int64\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasSharedStorageFactory.GetHybridSharedFileStorage(System.Int32)~DocuSign.CLM.ContentStorage.Shared.ISharedStorage\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SharedStorage.AtlasSharedStorageFactory.GetSharedFileStorageForType(System.Int32,DocuSign.CLM.ContentStorage.StorageConstants.SharedStorageType)~DocuSign.CLM.ContentStorage.Shared.ISharedStorage\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.ADMInsightsClient.Delete(System.Guid,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})~System.Threading.Tasks.Task\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.ADMInsightsClient.Get(System.Guid,System.Guid,System.String,System.Nullable{System.Int32})~System.Threading.Tasks.Task{ADEXS.Core.Domain.SmartAgreement.Models.ADMInsightsResponse}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.ADMInsightsClient.Save(System.Guid,System.Collections.Generic.List{ADEXS.Core.Domain.SmartAgreement.Models.ADMInsightRequest})~System.Threading.Tasks.Task\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.AddTermSyncMetadata(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.GetComparisonXml(System.Collections.Generic.List{ADEXS.Core.Domain.Model.TrackedTermComparisonResult})~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.TermSync.TermSyncRepository.GetTrackedTermsXml(ADEXS.Core.Domain.Model.TrackedTerms)~System.Xml.Linq.XDocument\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2214:Do not call overridable methods in constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Translation.Utilities.Converter.CsvConverter.ExportTranslationAutoMap`1.#ctor(ADEXS.Core.Domain.Translation.Models.TranslationUpdate,System.String)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CaptchaVerification.Verify(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CssDefinitionGenerator.Validate(ADEXS.Core.Domain.Utilities.ColorModel)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CssKeyframeGenerator.Validate(ADEXS.Core.Domain.Utilities.ColorModel)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HexColorManipulator.ChangeColorBrightness(System.Drawing.Color,System.Single)~System.Drawing.Color\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HexColorManipulator.Luminate(System.String,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HttpClientExtensions.PostAsyncRetry(System.Net.Http.HttpClient,System.String,System.String,System.Int32,System.Int32,ADEXS.Core.Util.Loggers.IDiscreetLogger)~System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2234:Pass system uri objects instead of strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.HttpClientExtensions.PostRetry(System.Net.Http.HttpClient,System.String,System.String,System.Int32,System.Int32,ADEXS.Core.Util.Loggers.IDiscreetLogger)~System.Net.Http.HttpResponseMessage\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.ValidationRepository.UserDefinedValidate(System.String,System.String,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Validation.UserDefinedValidator)~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.ValidationRepository.Validate(ADEXS.Core.Domain.Validation.ValidationInput,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.CustomRegexValidator.ValidationRule(System.String)~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.LengthValidator.Initialize(System.Collections.Generic.List{System.String},Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.LengthValidator.ValidationRule(System.String)~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.NumberFormatValidator.Initialize(System.Collections.Generic.List{System.String},Newtonsoft.Json.Linq.JObject)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Validation.Validators.NumberFormatValidator.ValidationRule(System.String)~ADEXS.Core.Domain.Validation.ValidationResult\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2229:Implement serialization constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.WinsServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.GetRemoteObject``1(System.String)~``0\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.RegisterChannel(System.String,System.Int32,System.Type)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.TryRemoteRequest``2(System.String,ADEXS.Core.Util.Net.RemoteCommon.RetryableRemoteRequest{``0,``1},System.Int32,System.Int32,System.Int32)~``1\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Util.Net.RemoteCommon.UnRegisterForRemoting(System.String,System.Int32)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.WINS.Repository.VersionRepository.CreateVersion(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String)~ADEXS.Core.Domain.Model.Workflow.Version\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.WINS.Repository.VersionRepository.Save(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.String,System.String,System.String,System.Int32)~ADEXS.Core.Domain.Model.Workflow.Version\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.GetMetadataGroupDetails(ADEXS.Core.Domain.Model.UserAccount,System.Guid)~ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.AllowedUserRoles\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.CoreAttributeList\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.ElasticsearchKeywordOnlySearchForAttrTypes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.EssentialsAttributeList\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.MaxAttributeList\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.PlusAttributeList\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.SuppressedAisExtractions\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.SuppressedAttributeList\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AccountSettings.UpdatableUserProperties\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Adm.AdmApiValidationResponse.Errors\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.AttributeDetailAnalytics.LinkedAttributes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.AttributeDetailAnalytics.ValueContexts\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.AttributeGroupsResponse.AttributeFields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.BatchAnalyticsResponse.BatchAnalytics\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.CreateGroupMappingRequest.groupMappings\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.DocumentReviewDetails.DocumentAnalytics\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.GetAvailableModelsResponse.AvailableLabelGroups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.GetAvailableModelsResponse.LabelGroupTypes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.GroupMappingResponse.MappingUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.JobReviewDetails.AttributeAnalytics\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.LabelGroup.Labels\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.MetaDataProcessReviewItemResult.Errors\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultRequest.ResultItems\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.MetadataProcessReviewResultResponse.ResultItems\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.Result`2.Errors\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.RuleModel.LabelGroups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.RuleModel.SelectionRuleTypes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.RulesConfigurationDetails.ActiveBatchAnalyses\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.RulesConfigurationDetails.RuleModelMappings\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.RulesConfigurationUsageAnalytics.ActiveBatchAnalyses\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.AIConfiguration.Models.RulesConfigurationUsageAnalyticsResponse.RulesConfigurationUsageAnalytics\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Aom.AomApiCollection`1.items\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.BusinessModel.OAuth.OAuthClient.CallbackUrls\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.BusinessModel.OAuth.OAuthClient.OAuthKeyScopeDescriptions\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.BusinessModel.SyncProfiles.SyncProfile.SyncFolders\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.Model.AccountChange.Info\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.AccountMigrationChanges.Model.AccountChange.Settings\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Models.BaseMigrationModel.Notes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Models.GroupMigrationResponseModel.Records\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Models.MigrationRequestModel.RoleNames\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Models.MigrationRequestModel.Status\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Models.MigrationRequestModel.UserTypes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Models.UserMigationResponseModel.Records\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.models.AccountSnapshot.Settings\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.models.EntitySnapshot.Info\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.models.EntitySnapshot.Settings\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.CLMAccountConversion.Snapshot.models.ISnapshot`1.Settings\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.AttributeReviewData.AiSuggestions\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.AttributeReviewData.Children\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.AttributeReviewGroup.Attributes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.DataReviewModel.AttributeReviewGroups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.DataReviewTask.AttributeReviewGroups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel.UpdatedAttributes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.SaveDataReviewResult.SupportedAttributes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.SaveDataReviewResult.UpdatedAttributes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DataReview.Models.SaveDataReviewResult.ValidationErrors\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DocTracking.Models.DocTrackingActivity.Actors\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.DocuSignSync.GroupModel.Users\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.ExpressionService.Internal.Model.WorkflowExpressionServiceRequestContent.Variables\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.FileOperations.DOCX.DocxWatermarkOperation.OperableResource\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.FileOperations.Image.ImageOperation.CopyOfOperableImage\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.FileOperations.PDF.PDFMergeProcessor.MergeItems\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.FileOperations.PDF.PdfOperation.OperableResourcePath\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Javelin.InvoicesRequestSchema.InvoiceIds\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Javelin.SalesForceLoggingSchema.SalesForceLogs\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Javelin.SalesForceMergeField.Children\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Javelin.SalesForceRequestSchema.AdditionalFields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload.Attachments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload.BccRecipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload.CcRecipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload.ToRecipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailTemplateNames.BodyTemplateName\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailTemplateNames.ComponentTemplateName\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailTemplateNames.StylesheetTemplateName\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.MailMessageDto.Bcc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.MailMessageDto.Cc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.MailMessageDto.To\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.WorkflowApprovalActivitiesTokens.PreviousActivities\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.BaseShareObjectEmail.Bcc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.BaseShareObjectEmail.Cc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.BaseShareObjectEmail.To\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CompleteExternalReviewReviewerEmail.UpdatedDocuments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.CompleteExternalReviewSenderEmail.UpdatedDocuments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.DeactivatedFaxesEmail.Faxes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.DocumentReminderEmail.RecipientList\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ESignatureSendFailureEmail.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExpiredExternalReviewReviewerEmail.Watchers\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExpiredExternalReviewSenderEmail.Watchers\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewEmail.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewWatcherEmail.UpdatedDocuments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ExternalReviewWatcherEmail.Watchers\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.GenericFailureEmail.BccRecipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.GenericFailureEmail.CcRecipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.GenericFailureEmail.ToRecipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.GenericNonTemplatedEmail.CcRecipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.IExpiredExternalReviewEmail.Watchers\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SecurityAccessRuleValidationEmail.AffectedRules\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SecurityAccessRuleValidationEmail.AttributeFields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendEmailActionEmail.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendEmailActionEmail.Recipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendEmailActivityEmail.Bcc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendEmailActivityEmail.Cc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.SendEmailActivityEmail.ToRecipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ShareDocumentAttachmentEmail.Attachments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ShareObjectLinkEmail.DocumentUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.ShareObjectLinkEmail.FolderUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.TranslationImportEmail.ErrorMessages\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.UserSyncEmail.Added\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.UserSyncEmail.Deactivated\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.UserSyncEmail.Deleted\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.UserSyncEmail.Problems\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.UserSyncEmail.Reactivated\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.UserSyncEmail.Updated\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.WorkflowAbortNotificationEmail.Recipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.WorkflowPauseActivityExecutionLimitExceededNotificationEmail.EmailRecipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.WorkflowRevisionSuspensionNotificationEmail.EmailRecipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.WorkflowSendDocumentAttachmentEmail.Attachments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.WorkflowSendDocumentAttachmentEmail.Bcc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.WorkflowSendDocumentAttachmentEmail.Cc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Emails.WorkflowSendDocumentAttachmentEmail.Recipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Reformatters.OutputCommentsDto.Comments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.ShardPayloadBuilders.AbstractWorkflowApprovalShardPayloadBuilder.Assignees.MoreAssignees\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseShareShard.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseShareShard.Folders\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.BaseWorkflowApprovalShard.Participants\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.ShareDocumentShard.DocumentUrls\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.ShareFolderShard.FolderUrls\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Messaging.Framework.Integration.Shards.WorkflowApprovalInitiatorStepExpiredShard.NextAssignees\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ABAC.ABACSecurityEvaluationResponse.Results\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ABAC.Condition.FieldChoices\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ABAC.Rule.AllowedGroups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ABAC.Rule.Conditions\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ABAC.Rule.SecurityAttributeSelections\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Account.Settings\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ActionItem.ChildActions\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ActorAttributeRestriction.Groups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ActorReportFilter.EmailUsers\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ActorReportFilter.Groups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ActorReportFilter.Queues\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ActorReportFilter.Users\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Agreements.AgreementData\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.Data.AIRulesEngineMappingData.LabelGroups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.Data.AITransactionData.LogicApps\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.Data.StagedMetadataData.SelectionRules\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.Data.StagedMetadataData.ValueContexts\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext.Instances\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.Data.ValueContext.MatchedExtractions\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.AIDocument.StagedMetadata.OtherValuesList\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ApprovalWorkflow.DocumentList\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ApprovalWorkflow.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ApprovalWorkflow.Steps\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ApprovalWorkflowSteps.RemovedStepUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Clause.ClauseSmartContractMetadata.SmartClauseTemplateMetadatas\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CommonMetadataField.DependentFields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Conversion.Common.AccountMigrationHealthCheckModel.GroupHealth\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Conversion.Common.AccountMigrationHealthCheckModel.UserHealth\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Conversion.Common.EnabledAccountMarkCompleteHealthCheckModel.GroupHealth\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Conversion.Common.MigrationMetaData.Notes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Conversion.Group.GroupMigrationMetaData.ErroredUsers\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Conversion.User.UserMigrationMetaData.GroupUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CreateAccountData.AccountSetting\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReport.Columns\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReport.Parameters\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReport.Selections\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomReportDataTable.Fields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.CustomToolbar.Items\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DashboardTab.Viewers\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig.LaunchActions\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig.MetadataFieldFilters\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig.TemplateGroups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.DocLauncherConfig.Templates\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.MergeData.MergeDataSources\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.MergeDataSource.MergeDataDefinition\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.MergeDataSource.MergeDataValues\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.MergeDataValue.ConfigurationValues\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.Template.FilterTags\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.TemplateGroup.Templates\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedField.DataSourceConfiguration\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocLauncherConfig.TrackedFieldSchema.AllowedValues\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocumentReminder.Recipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocumentWorkflowHistoryData.Approvers\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DocumentWorkflowHistoryData.CommentList\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSGroups.Groups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSGroupUser.Groups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSGroupUsers.Users\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSOrgAdmins.Admins\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSTokenVerificationResult.JwtPayload\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSTokenVerificationResult.Scopes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserApps.Apps\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserInfo.Accounts\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserInfoAccountOrganization.Links\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserProfile.Users\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserProfileInfo.Memberships\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserProfileInfoV2.Memberships\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.DSUserProfileV2.Users\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ElectronicSignatureDocument.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ElectronicSignatureDocument.ElectronicSignatureTemplates\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ExternalReview.DocumentMatchInfo.MatchTypeResults\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ExternalReview.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ExternalReview.Watchers\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ExternalSecurityMap.Mapping\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.FormConfiguration.Config\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.FormConfiguration.ConstantValue.Value\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Group.GroupMembers\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Intellego.AnalyzeOptions.Analyzers\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Intellego.AnalyzeOptions.Pages\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataField.DependentFields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataField.InUse\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataField.Related\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataGroup.InUse\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataGroup.Related\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataImportMapping.Elements\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.MetadataSet.InUse\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ObjectHistory.Data\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.OfficeWebApps.WOPIAction.Requires\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.OfficeWebApps.WopiConfiguration.FavIcons\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.OfficeWebApps.WopiConfiguration.WopiActions\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Parties.CLMPartyData\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.AddProductGroupRequest.DsUserIds\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.AddUpdateUserRequestV1.Accounts\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.CreateAccountResponse.application_data\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSCreateUpdateUserResponse.accounts\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.DsGetUserResponseV1.Memberships\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.DSGetUsersResponseV1.Users\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.GetDSGroupsResponse.Groups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.UserAccountMembershipResponse.Groups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DSGetUserResponse.UserAccountMembershipResponse.PermissionProfiles\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.DsGroupUsersAddRequest.UserIds\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.GetRolesResponse.RolesCollection\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.NewMultiProductUserAddRequest.DsGroups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.NewMultiProductUserAddRequest.ProductPermissionProfiles\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.ProductPermissionProfileResponse.PermissionProfiles\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.ProductPermissionProfilesResponse.ProductPermissionProfiles\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.UpdateUserRequest.Memberships\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.UpdateUsersRequest.Users\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Provisioning.UserAccountMembership.PermissionProfiles\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueState.WorkingSetIds\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.AbstractMergeTask.MergeItems\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.AbstractMergeTaskPayload.MergeItems\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ClauseSmartContractTask.UpdatedVariables\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ClauseSmartContractTaskPayload.UpdatedVariables\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ContentReplacementTask.ReplacementModels\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ContentReplacementTaskPayload.ReplacementModels\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.DestinationDocument.Pages\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ElasticWorkItemIndexTask.RefDocumentIds\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ElasticWorkItemIndexTaskPayload.RefDocumentIds\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2235:Mark all non-serializable fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ExecuteReportTask.Parameters\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewReconciliationTask.Attachments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ExternalReviewReconciliationTaskPayload.Attachments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.GetExternalSystemDataTask.TrackedFieldUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.GetExternalSystemDataTaskPayload.TrackedFieldUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.IAbstractMergeTaskPayload.MergeItems\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.IElasticWorkItemIndexTaskPayload.RefDocumentIds\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ISplitTaskPayload.DestinationDocuments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ISplitTaskPayload.Pages\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.IStartAIBulkAnalysisTransactionTaskPayload.DocumentUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.IStartAIBulkAnalysisTransactionTaskPayload.FolderUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.IWatermarkTaskPayload.WatermarkPages\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.MetadataPropagationTask.DocumentUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.MetadataPropagationTask.Metadatas\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.MetadataPropagationTask.MetadatasToDelete\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.MetadataPropagationTaskPayload.DocumentUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.MetadataPropagationTaskPayload.Metadatas\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.MetadataPropagationTaskPayload.MetadatasToDelete\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SalesforceInvoice.Bcc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SalesforceInvoice.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SalesforceInvoice.To\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SaveExternalSystemDataTask.TrackedFieldUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SaveExternalSystemDataTaskPayload.TrackedFieldUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfCreateObjectTask.Fields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfCreateObjectTaskPayload.Fields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2235:Mark all non-serializable fields\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfDocMergeClmTask.AgreementMetadata\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfEmailTask.Bcc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfEmailTask.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfEmailTask.To\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfEmailTaskPayload.Bcc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfEmailTaskPayload.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfEmailTaskPayload.To\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceIngestionTask.Invoices\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceIngestionTaskPayload.Invoices\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTask.Bcc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTask.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTask.To\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTaskPayload.Bcc\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTaskPayload.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfInvoiceMergeTaskPayload.To\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfUpdateObjectTask.UpdateFields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SfUpdateObjectTaskPayload.UpdateFields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SplitTask.DestinationDocuments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SplitTask.Pages\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SplitTaskPayload.DestinationDocuments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.SplitTaskPayload.Pages\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.StartAIBulkAnalysisTransactionsBackgroundTask.DocumentUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.StartAIBulkAnalysisTransactionsBackgroundTask.FolderUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.StartAIBulkAnalysisTransactionsTask.DocumentUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.StartAIBulkAnalysisTransactionsTask.FolderUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.StartAIBulkAnalysisTransactionsTaskPayload.DocumentUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.StartAIBulkAnalysisTransactionsTaskPayload.FolderUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.WatermarkTask.WatermarkPages\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.WatermarkTaskPayload.WatermarkPages\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ReminderTemplate.ReminderTemplateRecipients\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.RequestOriginRestriction.RequestOriginList\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.SalesforceActions.SalesforceActionMenu.StandardActionGroup.Actions\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ScopeEventData.Assignees\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ScopeEventData.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ScopeEventData.NotifiedAssignees\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.DigitalAppRule.ScorecardRules\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ScorecardAnalytic.Values\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ScorecardElement.Analytics\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ScorecardModel.RiskMaps\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ScorecardModel.ScorecardElements\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.UserViewModel.MetadataItems\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ViewMetadataItem.Subgroups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Seal.ViewSubgroup.MetadataItems\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.SecurityEvaluationCacheRevocationRequest.Nodes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.SecurityEvaluationRequest.Nodes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.SFSecurityModel.Groups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.TermDocument.Options\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.TrackedTerm.CustomAttributes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.TrackedTerm.Value\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.TrackedTermComparisonResult.CustomAttributes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.TrackedTermComparisonResult.OriginalValue\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.TrackedTermComparisonResult.RevisedValue\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UploadInfo.FullFileName\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAccount.GroupUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserChangeRecord.Changes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.ValueScopeNames.ScopeNames\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Workflow.InstanceVariable.Value\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult.ExtractionLocation\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.AISAnalysisResult.MatchedMetadata\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.APIRegistration.Callbacks\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.CustomRuleEventParameters.MetadataFields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.CustomRuleEventParameters.MetadataGroups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.CustomRuleEventParameters.NativeProperties\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Model.ReportFilter.DropdownReportFilter.AllowedValues\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Model.ReportFilter.DropdownReportFilter.Value\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Model.ReportFilter.GuidListReportFilter.Value\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataFilter.DependentFields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Model.ReportFilter.Metadata.MetadataSearchFieldLite.AllowedValues\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Model.ReportFilter.StringListReportFilter.Value\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportFilters.AgreementType\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportFilters.BusinessType\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportFilters.ExpirationDate\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportFilters.NoticeDate\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsApproachingRenewalReport.AgreementsApproachingRenewalReportFilters.PartyNameAlias\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportFilters.AgreementType\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportFilters.BusinessType\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportFilters.ExpirationDate\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.AgreementsExpiringReport.AgreementsExpiringReportFilters.PartyNameAlias\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReportFilters.ActivityDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReportFilters.ActivityName\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentActivityReport.DocumentActivityReportFilters.User\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.Attributes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.CheckedOutBy\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.CheckedOutDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.CreatedBy\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.CreatedDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.Description\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.DocumentName\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.FolderUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.IsInTrash\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationCreatedBy\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationCreatedDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationDescription\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationIsInboundFax\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationModifiedBy\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationModifiedDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.LocationPath\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.ModifiedBy\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.ModifiedDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.NativeFileSize\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.Source\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.DocumentReport.DocumentReportFilters.TotalFileSize\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportFilters.AgreementType\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportFilters.DueDate\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportFilters.ObligationNameAlias\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ObligationsReport.ObligationsReportFilters.PartyNameAlias\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReportFilters.CreatedBy\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.PublicDocumentsAndFoldersReport.PublicDocumentsAndFoldersReportFilters.ObjectName\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.Columns\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.ReportConfiguration.SelectedFilters\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.ActiveDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.AssignedTo\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.Attributes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.CreatedDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.ExpectedCompletionDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.FinishedDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.InitiatedBy\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.ScopeNames\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.StageNames\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.WasAssignedTo\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowOverviewReport.WorkflowOverviewReportFilters.WorkflowStatuses\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.Attributes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.CurrentlyAssignedTo\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.CurrentStages\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.Duration\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.InitiatedBy\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.LastUpdatedDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.StartDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.Statuses\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowProcessesReport.WorkflowProcessesReportFilters.WorkflowName\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.AssignedTo\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.Attributes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.Comment\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.CompletedBy\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.CreatedDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.DueDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.InitiatedBy\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.Output\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.ScopeInitiatedBy\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.ScopeLastUpdatedDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.ScopeNames\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.ScopeStartDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.ScopeUid\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.StageNames\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.StepDisplayNames\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.StepLastUpdatedDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.StepNames\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.StepStartDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.WorkflowNames\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowStepsReport.WorkflowStepDetailReportFilters.WorkflowStatuses\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReportFilters.ActiveDateRange\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Presto.Reports.WorkflowSummaryReport.WorkflowSummaryReportFilters.ScopeNames\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Proxy.IdListHelpers.CaseIdList.Ids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Proxy.IdListHelpers.DocumentIdList.Ids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Proxy.IdListHelpers.FolderIdList.Ids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Proxy.IdListHelpers.IIdList.Ids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Reporting.Interfaces.IEntityTable.Fields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Persistence.Model.AccountBranding.AccountBrandingSaveResult.Errors\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AccountRepository.UpdateAccountSecurityResult.FailureReasons\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AgreementRepository.ElasticAgreementFilters.AgreementTypes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AgreementRepository.ElasticAgreementFilters.PartyIds\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AgreementRepository.ElasticAgreementFilters.TaskGroupIds\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AIDocument.StartAIBulkAnalysisTransactionsResult.LogicAppsToRequest\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.AIExtractions.MockedDataResponseItem`1.Extractions\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.CommonRepository.TimeZones\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherConfigSaveResult.ValidationErrors\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.DropdownDefinition.SampleRow\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.DropdownDefinition.values\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentLauncherData.DocumentLauncherDataSaveResult.ErrorList\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentAttachmentSet.Account\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions.HistoryData\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.FolderContents.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.FolderContents.Folders\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.MoveNodeRepositoryHelpers.MoveNodesResult.FailedNodeResults\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.DocumentRepository.ValidateDocumentReminderResult.InvalidRecipientEmails\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.ExternalReview.ExternalReviewWorkload.DocumentTypes\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentMatchingModel.MatchedDocuments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentMatchingModel.RemainingAttachments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.DocumentMatching.DocumentMatchingModel.RemainingXRDocuments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSetProcessor.MetadataFields\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MetadataSaveContext.Metadatas\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MetadataSaveContext.MetadatasToDelete\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MetadataSaveContext.OutcomeMessages\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Negotiation.Client.Configuration.ApiKey\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Negotiation.Client.Configuration.ApiKeyPrefix\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Negotiation.Client.Configuration.DefaultHeader\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Negotiation.NegotiationApiClient.NegotiationApiException.Errors\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.SaveResult.Errors\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.ReminderTemplateRepository.ReminderTemplateRepository.SaveResult.InvalidToEmails\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Seal.SealClauseSyncConvertResult.ClauseGroups\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Seal.SendDocumentUploadParams.CustomDocumentMetadata\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.StructuredDocument.Models.OfficeContentReplacementModel.TextOccurenceInstances\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Term.SaveTermResult.ValidationResults\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.Workflow.Types.MetadataConfiguration.MetadataConfigurationCollection.Values\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.ContentSearch.UpdatedByList\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.EosIndexedData.EosMetadatas\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.ExportSearchRequest.OutputMetadataFieldUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.FieldData.Values\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.LocationSearch.FolderUids\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.SearchResult.Snippets\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.SearchResults.Results\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.Telemetry.SearchExecutedTelemetryProperties.AdmFieldsApplied\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.Telemetry.SearchExecutedTelemetryProperties.ParametersApplied\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Search.Telemetry.SearchItemsTelemetryProperties.ItemsSelected\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SecurityFiltering.SecurityFilterSupportData.Agreements\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.BaseAITelemetryEvent.AdditionalContext\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction.MatchedMetadata\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.ADMExtraction.MatchedText\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.ADMInsightsResponse.Items\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.AllowedValuesResult.AllowedValues\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.AttributeDetailsCollection.AttributeDetailAnalytics\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.AttributeDetailsCollection.StatusCounts\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.InsightType.MetadataSpecification\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Models.PdfLocation.Glyphs\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.IRuleStack.SyncExclusionRules\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.IRuleStack.SyncInclusionRules\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.RuleStack.SyncExclusionRules\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.RuleStack.SyncInclusionRules\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Sync.SyncProcessorOptions.DisallowedRoles\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Models.AccountTranslation.Data\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Translation.Models.ImportTranslationFile.Units\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Utilities.AIBulkJobContentComposerResult.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Utilities.AIBulkJobContentComposerResult.SubFolders\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Utilities.AIBulkJobContentComposerResult.SkippedDocuments\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Utilities.FilterWrapper.Filters\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Utilities.FilterWrapper.FilterWrappers\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Validation.AbstractCrossValidator`1.TriggerField\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Validation.ValidationInput.CustomValidationParameters\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Validation.ValidationInput.ValidationParameters\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Validation.ValidationResult.Errors\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Wins.DesignerAction.Links\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Wins.DesignerAction.Participants\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Wins.DesignerDefinition.Actions\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Wins.DesignerDefinition.Docs\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Web.DocExplorer.Models.PanelModels.TrackedFieldStatusViewModel.AllowedValues\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.CLMAccountConversion.Helper.UserMigrationException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DataReview.Exceptions.AttributeReviewGroupNotFoundException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DataReview.Exceptions.DataReviewObjectNotFoundException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DocumentCreation.MergeTaskDataSourceLimitException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.DocuSignSync.Exceptions.UserNotEnabledForCLMException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.AccountReplicationException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.AdmApiException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.AomApiException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.DelegateRaceConditionException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.DSApiException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Exceptions.EmailValidationException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FileOperations.PDF.PDFException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Core.AttachmentsBuilder.AttachmentTooLargeException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2229:Implement serialization constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.PayloadValidationFailedException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.NoRetryException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Presto.Model.Exceptions.PrestoException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AgreementRepository.Exceptions.AgreementCreateException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.AgreementRepository.Exceptions.StandardFieldNotFoundException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Negotiation.Client.ApiException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Negotiation.Model.ProblemDetails\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.SynchronousWork.SynchronousWorkException\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Translation.Models.AccountTranslationRegistries\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Translation.Models.AccountTranslations\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Translation.Models.TranslationRegistries\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2237:Mark ISerializable types with serializable\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Translation.Models.TranslationUpdateLogs\")]\n[assembly: SuppressMessage(\"Security\", \"CA5362:Potential reference cycle in deserialized object graph\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.MetadataRepository.CascadeNode._items\")]\n[assembly: SuppressMessage(\"Security\", \"CA5394:Do not use insecure randomness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.SfMerge.ConvertToPdf(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.ISfDocMergeTask,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Security\", \"CA5399:HttpClients should enable certificate revocation list checks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.Internal.HttpClientFactory.GetHttpClient(System.Int32,System.String)~System.Net.Http.HttpClient\")]\n[assembly: SuppressMessage(\"Security\", \"CA5386:Avoid hardcoding SecurityProtocolType value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ExpressionService.Internal.HttpClientFactory.GetHttpClient(System.Int32,System.String)~System.Net.Http.HttpClient\")]\n[assembly: SuppressMessage(\"Security\", \"CA5386:Avoid hardcoding SecurityProtocolType value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Seal.SealCredentialRepository.#ctor(ADEXS.Core.Domain.Repository.ExternalSystemUser.IExternalSystemUserRepository,ADEXS.Caching.ICacheRepository,ADEXS.Core.Domain.Repository.Seal.IAdvancedInsightsConfigurationRepository)\")]\n[assembly: SuppressMessage(\"Security\", \"CA5394:Do not use insecure randomness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.GetRandomParticipant(System.Collections.Generic.List{ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccess})~System.Guid\")]\n[assembly: SuppressMessage(\"Security\", \"CA5386:Avoid hardcoding SecurityProtocolType value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ServiceProtection.ServiceProtectionRegistry.GetServiceProtectionHttpClient~System.Net.Http.HttpClient\")]\n[assembly: SuppressMessage(\"Security\", \"CA5386:Avoid hardcoding SecurityProtocolType value\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.CaptchaVerification.Verify(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Security\", \"CA2326:Do not use TypeNameHandling values other than None\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ABAC.ABACPolicyService.MakeApiCall(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.ABAC.SecurityAccessRule,System.Collections.Generic.List{ADEXS.ABAC.Engine.Policy{ADEXS.ABAC.Data.SecurityFlagsResponse,ADEXS.Globals.ScmEnums.Security}})~System.Boolean\")]\n[assembly: SuppressMessage(\"Security\", \"CA2326:Do not use TypeNameHandling values other than None\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.CodeRunner.CodeRunner.ExecuteCodeSnippet``2(ADEXS.Core.Domain.CodeRunner.CodeSnippet{``0,``1},ADEXS.Core.Domain.CodeRunner.ICodeRunnerData)~``1\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.Archive.Perform(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.QueueTasks.ArchiveTask)~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2249:Consider using 'string.Contains' instead of 'string.IndexOf'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Import.UserCSVReader.GetContact(System.String,ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Core.Domain.Model.Contact\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2249:Consider using 'string.Contains' instead of 'string.IndexOf'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildBouncebackCoversheet(ADEXS.Core.Domain.Model.UserAccount,System.String,System.String,System.String)~System.Text.StringBuilder\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2249:Consider using 'string.Contains' instead of 'string.IndexOf'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Coversheet.BuildOriginalMessageText(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Messaging.Framework.Core.PostProcessor.LogInObjectHistory(ADEXS.Core.Domain.Messaging.Framework.Core.DTOs.EmailPayload,System.Net.Mail.MailMessage)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.MetadataFields.Find(System.String,System.Guid)~ADEXS.Core.Domain.Model.MetadataField\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Metadatas.Find(System.String)~ADEXS.Core.Domain.Model.Metadata\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.BaseDomainObjectPersistence`1.TranslateSortExpressionToSortColumnAndDirection(System.String,System.String@,System.Boolean@)\")]\n[assembly: SuppressMessage(\"Security\", \"CA2300:Do not use insecure deserializer BinaryFormatter\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.CommonHelpers.DeepClone``1(``0)~``0\")]\n[assembly: SuppressMessage(\"Security\", \"CA2301:Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.CommonHelpers.DeepClone``1(``0)~``0\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.Export.SharedExportHelpers.FindColInResults(ADEXS.Core.Domain.Presto.PrestoQueryResults,ADEXS.Core.Domain.Presto.Model.ReportColumn)~LanguageExt.Option{System.Int32}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Presto.Helpers.PrestoQueryHelper.GetSortAndDirection(System.String,System.Boolean,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Security\", \"CA2301:Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.LoadBinaryFromCache``1(ADEXS.Caching.ICacheRepository,System.String)~``0\")]\n[assembly: SuppressMessage(\"Security\", \"CA2300:Do not use insecure deserializer BinaryFormatter\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CommonRepository.LoadBinaryFromCache``1(ADEXS.Caching.ICacheRepository,System.String)~``0\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2249:Consider using 'string.Contains' instead of 'string.IndexOf'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.CounterpartyRepository.CounterpartyRepository.Contains(System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2249:Consider using 'string.Contains' instead of 'string.IndexOf'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.FindMatchingRows(System.Int32,ADEXS.Core.Domain.Model.Document,System.String,System.String,System.Int32,System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Repository.DocLauncherConfig.DocLauncherCsvRowLookupRepository.DropdownPosition}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentReminderRepository.ValidateDocumentForDocumentReminder(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.DocumentReminder)~ADEXS.Core.Domain.Repository.DocumentRepository.ValidateDocumentReminderResult\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.String@,ADEXS.Core.Domain.Model.Document,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.FolderRepository.Save(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Folder@,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.InboundEmailRepository.InboundEmailRepository.Provision(ADEXS.Core.Domain.Model.Folder,ADEXS.Core.Domain.Model.UserAccount,System.String)~ADEXS.Core.Domain.Model.InboundEmail\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.Parse(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataPlaceHolder},ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ParseOptions)~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Security.SecurityRepository.GetSecurityItem(System.Collections.Generic.List{ADEXS.Core.Domain.Model.BaseSecurity},ADEXS.Core.Domain.Model.BaseSecurity,System.Boolean)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.IsAuthenticationApplicationRequest(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.LoginRepository.IsLoginNameInUse(System.String,ADEXS.Core.Domain.Model.UserAccount,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.WorkerPoolRepository.WorkerPoolRepository.Save(System.Int32,ADEXS.Core.Domain.Model.Workflow.WorkerPool,ADEXS.Core.Domain.Model.Workflow.WorkerPoolAccesses)\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter.FilterUnsupportedActivities(System.String,System.String)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Converters.JsonDefinitionConverter.UpdateUnsupportedProperties(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject)~Newtonsoft.Json.Linq.JObject\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Loaders.FormLoader.LoadFormsByPath(ADEXS.Core.Domain.Repository.Workflow.Interfaces.IWorkflowContext,System.String)~ADEXS.Core.Domain.Model.Forms\")]\n[assembly: SuppressMessage(\"Security\", \"CA2300:Do not use insecure deserializer BinaryFormatter\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowConversion.Deserialize(System.Int32,System.Byte[])~System.Object\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Sync.AttributeValueExcludeRule.FilterDocuments(ADEXS.Core.Domain.Model.Documents)~ADEXS.Core.Domain.Model.Documents\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SynchronousWork.SynchronousWorkService.CompletedWithFailure(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2251:Use 'string.Equals'\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SynchronousWork.SynchronousWorkService.CompletedWithSuccess(System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Security\", \"CA3075:Insecure DTD processing in XML\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentCreation.SfMerge.MergeAgreementDataIntoDataXml(System.String,ADEXS.Core.Domain.Model.Party,ADEXS.Core.Domain.Model.Agreement,ADEXS.Core.Domain.Model.Document)~System.String\")]\n[assembly: SuppressMessage(\"Security\", \"CA3075:Insecure DTD processing in XML\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Workflow.InstanceVariable.DeserializeSerializableValueValue\")]\n[assembly: SuppressMessage(\"Security\", \"CA3075:Insecure DTD processing in XML\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.AIDocument.AIXmlHelper.LoadXmlFromSharedStorage(System.Int32,System.String,System.Boolean)~System.Xml.XmlElement\")]\n[assembly: SuppressMessage(\"Security\", \"CA5350:Do Not Use Weak Cryptographic Algorithms\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.OAuth.OAuthRepository.VerifySignedTokenData(ADEXS.Core.Domain.Model.OAuthKey,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Security\", \"CA5350:Do Not Use Weak Cryptographic Algorithms\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.SignWithCert(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Security\", \"CA5350:Do Not Use Weak Cryptographic Algorithms\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.VerifyCert(System.String,System.String)~System.Boolean\")]\n[assembly: SuppressMessage(\"Security\", \"CA3075:Insecure DTD processing in XML\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.StructuredDocument.Services.TaskServiceXmlStorageHelper.Get(System.Guid,ADEXS.Core.Domain.Model.Account,System.String,System.Boolean)~System.Xml.XmlDocument\")]\n[assembly: SuppressMessage(\"Security\", \"CA3075:Insecure DTD processing in XML\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.DetailedTransactionSummary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\")]\n[assembly: SuppressMessage(\"Security\", \"CA3075:Insecure DTD processing in XML\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.DetailedTransactionSummary.GetSchemaSerializable~System.Xml.Schema.XmlSchema\")]\n[assembly: SuppressMessage(\"Security\", \"CA5350:Do Not Use Weak Cryptographic Algorithms\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.User.TwoFactorRepository.GeneratePinAtInterval(System.String,System.Int64,System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Security\", \"CA5350:Do Not Use Weak Cryptographic Algorithms\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.GuidGenerator.CreateUuidV5(System.Guid,System.String)~System.Guid\")]\n[assembly: SuppressMessage(\"Security\", \"CA3075:Insecure DTD processing in XML\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.ConvertToJson(System.String)~Newtonsoft.Json.Linq.JToken\")]\n[assembly: SuppressMessage(\"Security\", \"CA3075:Insecure DTD processing in XML\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.GetNodeList(System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNode}\")]\n[assembly: SuppressMessage(\"Security\", \"CA3075:Insecure DTD processing in XML\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.GetNodesFromXml(System.String)~System.Collections.Generic.List{ADEXS.Core.Domain.Wins.XmlVariableSchemaXsdCreator.XmlVariableNode}\")]\n[assembly: SuppressMessage(\"Security\", \"CA5350:Do Not Use Weak Cryptographic Algorithms\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAccount.HashedUid\")]\n[assembly: SuppressMessage(\"Security\", \"CA5350:Do Not Use Weak Cryptographic Algorithms\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.UserAccount.MarketoEncryptedEmailAddress\")]\n[assembly: SuppressMessage(\"Security\", \"CA2352:Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.InboundEmails._dataTable\")]\n[assembly: SuppressMessage(\"Security\", \"CA2352:Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.InboundFaxes._dataTable\")]\n[assembly: SuppressMessage(\"Security\", \"CA2352:Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.LoginDelegations._dataTable\")]\n[assembly: SuppressMessage(\"Security\", \"CA2352:Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.MetadataImportMappingElementPlaceHolders._dataTable\")]\n[assembly: SuppressMessage(\"Security\", \"CA2352:Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Model.SecurityTable._securityMasks\")]\n[assembly: SuppressMessage(\"Security\", \"CA2352:Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.SecurityMaskTable\")]\n[assembly: SuppressMessage(\"Security\", \"CA2352:Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Model.SecurityTable\")]\n[assembly: SuppressMessage(\"Security\", \"CA2352:Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Transaction.DetailedTransactionSummary.DocumentSummaryDataTable\")]\n[assembly: SuppressMessage(\"Security\", \"CA2352:Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Transaction.DetailedTransactionSummary.eBinderTransactionSummaryDataTable\")]\n[assembly: SuppressMessage(\"Security\", \"CA2352:Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Transaction.DetailedTransactionSummary.RecipientSummaryDataTable\")]\n[assembly: SuppressMessage(\"Security\", \"CA2362:Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Transaction.DetailedTransactionSummary.tableDocumentSummary\")]\n[assembly: SuppressMessage(\"Security\", \"CA2362:Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Transaction.DetailedTransactionSummary.tableeBinderTransactionSummary\")]\n[assembly: SuppressMessage(\"Security\", \"CA2362:Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~F:ADEXS.Core.Domain.Repository.Transaction.DetailedTransactionSummary.tableRecipientSummary\")]\n[assembly: SuppressMessage(\"Security\", \"CA2362:Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Repository.Transaction.DetailedTransactionSummary\")]\n[assembly: SuppressMessage(\"Security\", \"CA2361:Ensure auto-generated class containing DataSet.ReadXml() is not used with untrusted data\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Transaction.DetailedTransactionSummary.ReadXmlSerializable(System.Xml.XmlReader)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ServiceProtection.ExternalRuleRefresherWrapper.Start(DocuSign.API.ServiceProtection.Client.IServiceProtectionClient,DocuSign.API.ServiceProtection.Client.IExternalRulesUpdaterConfiguration,ADEXS.Core.Domain.ServiceProtection.ServiceProtectionEnablementEvaluator)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.IAPRMockedDataHelper.TryGetMockedData``1(System.Int32,System.Guid,System.Collections.Generic.List{``0}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.APRMockedDataHelper.GetMockedData``1(System.Int32,System.Guid,System.Collections.Generic.List{``0}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRService.InitiateSummaryProcessing(Grpc.Core.Metadata,System.String,System.String,Google.Protobuf.ByteString,System.String,System.String,System.String,ADEXS.Core.Domain.SmartAgreement.Models.Enums.Priority)~Docusign.Apr.Service.V1.ExtractSummaryResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AIAgreementSummaryExtractionService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.AIAgreementSummaryExtractionTask)~ADEXS.Core.Domain.SmartAgreement.AIAgreementSummaryExtractionServiceTaskStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IAPRService.InitiateSummaryProcessing(Grpc.Core.Metadata,System.String,System.String,Google.Protobuf.ByteString,System.String,System.String,System.String,ADEXS.Core.Domain.SmartAgreement.Models.Enums.Priority)~Docusign.Apr.Service.V1.ExtractSummaryResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRService.InitiateSummaryProcessing(Grpc.Core.Metadata,System.String,System.String,System.String,System.String,ADEXS.Core.Domain.SmartAgreement.Models.Enums.Priority,System.String,Google.Protobuf.ByteString)~Docusign.Apr.Service.V1.ExtractSummaryResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IAPRService.InitiateSummaryProcessing(Grpc.Core.Metadata,System.String,System.String,System.String,System.String,ADEXS.Core.Domain.SmartAgreement.Models.Enums.Priority,System.String,Google.Protobuf.ByteString)~Docusign.Apr.Service.V1.ExtractSummaryResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.IAPRService.GetSummary(Grpc.Core.Metadata,System.String,System.String,System.String,System.String,ADEXS.Core.Domain.SmartAgreement.Models.Enums.Priority,System.String)~Docusign.Apr.Service.V1.ExtractSummaryResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRService.GetSummary(Grpc.Core.Metadata,System.String,System.String,System.String,System.String,ADEXS.Core.Domain.SmartAgreement.Models.Enums.Priority,System.String)~Docusign.Apr.Service.V1.ExtractSummaryResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.SSO.SSORepository.ValidateSamlResponseAuthenticationSignature(System.Xml.XmlElement,ComponentSpace.SAML2.Protocols.SAMLResponse,ADEXS.Core.Domain.Model.Account,ComponentSpace.SAML2.Assertions.SAMLAssertion,System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Telemetry.AIAgreementSummaryTelemetryEvent.AdditionalContext\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2227:Collection properties should be read only\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.SmartAgreement.Telemetry.AIAgreementSummarySavedEvent.AdditionalContext\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AgreementSummaryService.GetSuggestion(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,ADEXS.Core.Domain.Model.FileMetaDataTypes.AgreementSummaryProcessingData,ADEXS.Core.Domain.Model.FileMetaDataTypes.AgreementSummaryProcessingData@)~ADEXS.Core.Domain.SmartAgreement.Models.SummaryExtractionResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AgreementSummaryService.InitiateSummaryProcessing(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)~ADEXS.Core.Domain.Model.FileMetaDataTypes.AgreementSummaryProcessingData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AgreementSummaryService.GetSuggestion(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,ADEXS.Core.Domain.Model.FileMetaDataTypes.AgreementSummaryProcessingData,ADEXS.Core.Domain.SmartAgreement.Models.SummaryExtractionResponse@)~ADEXS.Core.Domain.Model.FileMetaDataTypes.AgreementSummaryProcessingData\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.Repositories.APRAgreementSummaryRepository.SubmitSummaryFeedback(System.Guid,System.Guid,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AgreementSummaryService.SaveSummary(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.SmartAgreement.Models.AgreementSummarySaveRequest,System.String@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AgreementSummaryService.InitiateSummaryProcessing(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid,System.Guid)~ADEXS.Core.Domain.Model.FileMetaDataTypes.AgreementSummaryProcessingData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.IWorkItemPersistence.LoadWorkItemsByAssignedUserUids(System.Int32,System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.Workflow.WorkItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.WorkflowRepository.LoadWorkItemsByWorkerPoolUids(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.Workflow.WorkItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.IWorkflowRepository.LoadWorkItemsByWorkerPoolUids(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.Workflow.WorkItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1052:Static holder types should be Static or NotInheritable\", Justification = \"<Pending>\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.FeatureFlags.RebrandFeatureFlags\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ApplicationSettings.OliveImagesAsset(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Naming\", \"CA1721:Property names should not match get methods\", Justification = \"This method name comes from the base class.\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.QueueTasks.UnifiedRepository.UnifiedRepositoryIngestionBaseTask.GetUniqueId(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.APRAIIngestionService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.IAPRAIIngestionTask,ADEXS.Core.Domain.Model.AIDocument.AIDocumentBatch@)~ADEXS.Core.Types.Enums.APRAIIngestionStatus\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartyCsvProcessor.CreatePartyCsvByteArray(System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.SyncParty.SyncParty},System.String)~System.Byte[]\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2214:Do not call overridable methods in constructors\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartyCsvProcessor.PartySyncAutoMap`1.#ctor\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartyCsvProcessor.WritePartyResult``2(System.Collections.Generic.List{``1},System.String)~System.Byte[]\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.PartyUtility.PartyCsvProcessor.PartySyncAutoMap`1\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.PartyUtility.PartyCsvProcessor.PartySyncTemplateAutoMap`1\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartySyncFileImportProcessor.SendResultsEmail(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.PartySyncResults,ADEXS.Core.Domain.Model.QueueTasks.PartySync.PartySyncValidationCounts)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.CreatePartyOrIncrementErrors(ADEXS.Core.Domain.Model.QueueTasks.SyncParty.SyncParty,ADEXS.Core.Domain.Model.QueueTasks.PartySync.PartySyncValidationCounts@)~ADEXS.Core.Domain.Model.Party\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.CreateSyncParty(ADEXS.Core.Domain.Model.Party)~ADEXS.Core.Domain.Model.QueueTasks.SyncParty.SyncParty\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.ProcessPartySyncsIntoCommands(System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.SyncParty.SyncParty},System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party},ADEXS.Core.Domain.Model.QueueTasks.PartySync.PartySyncValidationCounts@)~System.Collections.Generic.List{System.Tuple{ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.ProcessPartySyncsIntoCommands(System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.SyncParty.SyncParty},System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party},ADEXS.Core.Domain.Model.QueueTasks.PartySync.PartySyncValidationCounts@)~System.Collections.Generic.List{System.Tuple{ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation}}\")]\n[assembly: SuppressMessage(\"Maintainability\", \"CA1508:Avoid dead conditional code\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.ProcessPartySyncsIntoCommands(System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.SyncParty.SyncParty},System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party},ADEXS.Core.Domain.Model.QueueTasks.PartySync.PartySyncValidationCounts@)~System.Collections.Generic.List{System.Tuple{ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation}}\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1806:Do not ignore method results\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.ProcessPartySyncsIntoCommands(System.Collections.Generic.List{ADEXS.Core.Domain.Model.QueueTasks.SyncParty.SyncParty},System.Collections.Generic.List{ADEXS.Core.Domain.Model.Party},ADEXS.Core.Domain.Model.QueueTasks.PartySync.PartySyncValidationCounts@)~System.Collections.Generic.List{System.Tuple{ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.SyncPartiesFromCommandList(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Tuple{ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation}},System.Action)~ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.PartySyncResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.SyncPartiesFromCommandList(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.List{System.Tuple{ADEXS.Core.Domain.Model.Party,ADEXS.Core.Types.Enums.PartyOperation}},System.Action)~ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.PartySyncResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.PartySyncResults.CreatedCounterparties\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.PartySyncResults.DeletedCounterparties\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.PartySyncResults.Errors\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.PartySyncResults.UpdatedCounterparties\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.PartyUtility.PartySyncProcessorUtility.PartySyncResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"This can be ignored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.AuditService.IAuditServiceClient.CreateEvents(System.Uri,Grpc.Core.Metadata,System.Collections.Generic.List{Audit.Server.Events.V1.Event})~Audit.Server.Events.V1.CreateEventsResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"The implementing method accepts the URL as string for creating the gRPC channel\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.Helpers.IGrpcHelper.GetChannel(System.String,Grpc.Net.Client.GrpcChannelOptions)~Grpc.Net.Client.GrpcChannel\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"This method accepts the URL as string for creating the gRPC channel\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.Helpers.GrpcHelper.GetChannel(System.String,Grpc.Net.Client.GrpcChannelOptions)~Grpc.Net.Client.GrpcChannel\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"The HttpClientHandler instance is passed in the constructor of GrpcWebHandler\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.Helpers.GrpcHelper.GetChannel(System.String,Grpc.Net.Client.GrpcChannelOptions)~Grpc.Net.Client.GrpcChannel\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"This can be ignored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.AuditService.AuditServiceIngestionRepository.MapDocumentHistoryItemToEvent(System.Guid,System.Guid,System.Guid,System.Guid,ADEXS.Core.Domain.UnifiedRepository.Models.DocumentHistoryItem)~Audit.Server.Events.V1.Event\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"This method is handling RPCException explicitly\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.AuditService.AuditServiceIngestionRepository.ProcessDocumentHistoryItemsBatch(System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.UnifiedRepository.Models.DocumentHistoryItem},System.Guid,System.Guid,System.Guid,System.Uri,Grpc.Core.Metadata,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.SmartAgreement.AgreementSummaryService.GetSuggestion(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.FileMetaDataTypes.AgreementSummaryProcessingData,ADEXS.Core.Domain.SmartAgreement.Models.SummaryExtractionResponse@)~ADEXS.Core.Domain.Model.FileMetaDataTypes.AgreementSummaryProcessingData\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:Uri return values should not be strings\", Justification = \"This can be ignored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DataPlacement.IDataPlacementRepository.GetShardInternalBaseUrl(ADEXS.Core.Domain.Model.Account)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1065:Do not raise exceptions in unexpected locations\", Justification = \"Suppressing the alert as we need to throw not implemented exception for IPhysicalStorage layer as this is used only for ISharedStorage\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.PhysicalStorage.AtlasDmsStorageSettings.IncludeDebugInfoInStorageResponse\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.Helpers.IURPermissionHelper.GetAccessPermission(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IEnumerable{ADEXS.Core.Domain.Model.Security})~System.Collections.Generic.List{DocuSign.Adm.Ems.OpenApi.Client.Model.AccessPermissionsDto}\")]\n[assembly: SuppressMessage(\"Reliability\", \"CA2000:Dispose objects before losing scope\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.Workflow.RevisionPersistence.LoadByUids(System.Int32,System.Collections.Generic.IEnumerable{System.Guid})~ADEXS.Core.Domain.Model.Workflow.Revisions\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Existing method signature, warning can be ignored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.IWorkflowRepository.LoadWorkItemsByAssignedUserUids(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.HashSet{System.Guid},System.Collections.Generic.List{System.Guid})~ADEXS.Core.Domain.Model.Workflow.WorkItems\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.Helpers.URIngestionHelper.GetUnifiedRepositoryUrl(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.Helpers.URIngestionHelper.GetUnifiedRepositoryTasksUrl(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.Helpers.IURIngestionHelper.GetUnifiedRepositoryUrl(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.Helpers.IURIngestionHelper.GetUnifiedRepositoryTasksUrl(System.Int32)~System.String\")]\n[assembly: SuppressMessage(\"Usage\", \"VSTHRD003:Avoid awaiting foreign Tasks\", Justification = \"Suppressing while upgrading to new version of analyzer.\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Utilities.TaskExtensions.Forget(System.Threading.Tasks.Task)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing while upgrading to new version of analyzer.\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentStorage.DocManagementServiceClient.CreateMetadataInDms(ADEXS.Core.Domain.Model.Account,System.Guid,System.Guid,System.Guid)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing while upgrading to new version of analyzer.\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocumentStorage.DmsDocumentDto.#ctor(System.String,System.String,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.PostSaveHistory(ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.MetadataSaveContext)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Need to throw generic exception\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasEncryptedPhysicalStorage.DeleteTempFile(System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ApplicationSettings.SiteSpecificApplcationUrlFormal(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1310:Specify StringComparison for correctness\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.GenerateSiteSpecificAppUrl(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.GenerateSiteSpecificAppUrl(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuMonitor.DocuMonitorUtility.LogDocuMonitorEvent(ADEXS.Core.Domain.Model.UserAccount,DocuMonitor.Common.DocuMonitorEventType,System.String,System.String,System.String)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuMonitor.DocuMonitorUtility.LogDocuMonitorEvent(ADEXS.Core.Domain.Model.UserAccount,DocuMonitor.Common.DocuMonitorEventType,DocuMonitor.Common.DocuMonitorParamKey,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.DocuMonitor.DocuMonitorUtility.CatchBlockException(System.Exception,DocuMonitor.Common.DocuMonitorEventType)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AbsoluteUrl.GenerateSiteSpecificAppUrl(System.String,System.String,System.Boolean)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ApplicationSettings.CrossPlatformAppUrlFormat(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ApplicationSettings.CrossPlatformAppUrl(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.ApplicationSettings.AuthAppRootFormat~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.AuthUrl.CrossPlatformRootUrl(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing as its exposed from persistence\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.IObjectHistoryPersistence.LoadByObjectIdentifier(ADEXS.Core.Types.Enums.HistoryObjectType,System.String,System.Guid,System.Int32)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.ObjectHistory}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Mappers.WorkItemAssignmentMapper.MapWorkItem(AssignmentApi.Model.AssignmentResponse)~ADEXS.Core.Domain.Model.Workflow.WorkItem\")]\n[assembly: SuppressMessage(\"Design\", \"CA1034:Nested types should not be visible\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"type\", Target = \"~T:ADEXS.Core.Domain.Messaging.Framework.Integration.Collaboration.AssignmentsApiConstants.AssigneeAction\")]\n[assembly: SuppressMessage(\"Design\", \"CA2227:Collection properties should be read only\", Justification = \"Setter is required for this property.\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.Workflow.WorkItem.Properties\")]\n[assembly: SuppressMessage(\"Performance\", \"CA1822:Mark members as static\", Justification = \"This method is part of the WorkflowV2Client instance and may need access to instance-specific data.\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.Workflow.Client.WorkflowV2Client.ChangeAssigneeForWorkItem(ADEXS.Core.Domain.Model.UserAccount,System.Guid,System.Guid)\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"Suppressing new method signature to maintain functionality\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Attributes.AttributeManagementService.Save(ADEXS.Core.Domain.Model.UserAccount,System.Globalization.CultureInfo,System.Guid,ADEXS.Core.Domain.DataReview.Models.SaveDataReviewDataModel,System.Nullable{System.Guid},System.Guid,System.Guid,System.String,System.Collections.Generic.List{ADEXS.Core.Domain.MetadataLoader.Models.MetadataInstance},ADEXS.Core.Domain.DataReview.DataReviewValidationContext)~ADEXS.Core.Domain.Attributes.Models.AttributeSaveResult\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.CommonCheckinDocument(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.Model.FileData,System.String,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling})~ADEXS.Core.Domain.Model.Document\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like parameters should not be strings\", Justification = \"Suppressing new method signature to maintain functionality\", Scope = \"member\", Target = \"~M:ADEXS.DocumentReviewMenuActions.Helpers.CustomActionHelper.GetWindowType(System.String)~ADEXS.Core.Types.Enums.OpenIn\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.LWDP.ILWDPRepository.GetPagesAvailability(ADEXS.Core.Domain.Model.Document,ADEXS.Core.Domain.LWDP.ImageScale,System.Int32[])~System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Boolean}}\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Need to catch any exception in case document copy fails\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.CopyDocumentHelper.CopyDocuments(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.Guid,ADEXS.Core.Types.Constants.FileDataSource,System.Boolean,System.Nullable{ADEXS.Core.Types.Enums.DuplicateHandling},System.Boolean)~ADEXS.Core.Domain.Model.CopyResults\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Suppressing all existing issues\", Scope = \"member\", Target = \"~M:ADEXS.SForce.Core.Util.GetSfAuthorization(ADEXS.Core.Domain.Model.UserAccount)~ADEXS.Salesforce.DTO.SFAuthorization\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"This can be ignored since all we care about is whether any exception happened during save or not\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.Helpers.URIngestionHelper.UpdateFileDataDmsDocumentIdAndVersionIds(ADEXS.Core.Domain.Model.UserAccount,System.Collections.Generic.IList{System.ValueTuple{System.Guid,System.String,System.Int64}})~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Feature flag evaluation returns a string\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasBlobSharedStorageEndpointSettings.UrlFromAccountId(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Feature flag evaluation returns a string\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasBlobPhysicalStorageEndpointSettings.UrlFromAccountId(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Feature flag evaluation returns a string\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasDmsPhysicalStorageEndpointSettings.UrlFromAccountId(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Feature flag evaluation returns a string\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasHybridStorageSettingsHelper.GetAccountStorageBlobStoreUrl(System.String,System.Func{System.String},System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"Catching any exceptions and defaulting to application setting\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.PhysicalStorage.AtlasHybridStorageSettingsHelper.GetAccountStorageBlobStoreUrl(System.String,System.Func{System.String},System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1062:Validate arguments of public methods\", Justification = \"This can be ignored since the stillProcessingCallback action is passed from task processor\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.UnifiedRepositoryHistoricalDocumentsIngestionService.ProcessTask(ADEXS.Core.Domain.Model.QueueTasks.UnifiedRepository.UnifiedRepositoryIngestionBackgroundTask,System.Action)~ADEXS.Core.Domain.UnifiedRepository.UnifiedRepositoryIngestionTaskResult\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.DocumentCheckinHandler.PersistDocumentCheckin(System.Boolean,System.Boolean,ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Repository.DocumentRepository.PhysicalStorageTransaction,ADEXS.Core.Domain.Model.FileData,ADEXS.Core.Domain.Model.Document@,ADEXS.Core.Domain.Repository.DocumentRepository.DocumentRepository.InsertDocumentOptions)\")]\n[assembly: SuppressMessage(\"Globalization\", \"CA1307:Specify StringComparison for clarity\", Justification = \"Suppressing while upgrading to new version of analyzer\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Model.Workflow.ParameterizedMessage.FormatMessage(System.Globalization.CultureInfo\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataParser.Parse(ADEXS.Core.Domain.Model.UserAccount,System.Guid,ADEXS.Core.Types.Enums.ObjectType,System.Collections.Generic.List{ADEXS.Core.Domain.Model.MetadataPlaceHolder},ADEXS.Core.Domain.Repository.MetadataRepository.MetadataRepository.ParseOptions)~ADEXS.Core.Domain.Model.Metadatas\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.MoveMultipleDocumentsToTrash(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String,System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FailedPasteResult}\")]\n[assembly: SuppressMessage(\"Style\", \"IDE0040:Add accessibility modifiers\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.DocumentRepository.IDocumentRepository.MoveMultipleDocumentsToTrash(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Documents,System.String,System.Boolean)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.FailedPasteResult}\")]\n[assembly: SuppressMessage(\"Style\", \"IDE0040:Add accessibility modifiers\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.MetadataRepository.IMetadataRepository.GetCascadingTypeAheadValues(System.Guid,System.Guid,System.Collections.Generic.List{System.String},System.Int32,System.Collections.Generic.Dictionary{System.Guid,ADEXS.Core.Domain.Repository.MetadataRepository.CascadingFieldSet})~System.Collections.Generic.SortedList{System.String,System.String}\")]\n[assembly: SuppressMessage(\"Usage\", \"VSTHRD003:Avoid awaiting foreign Tasks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.IdentityClient.CreateManagedToken(ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AddOrUpdateManagedTokenRequest)~System.Threading.Tasks.Task{ADEXS.Core.Domain.Repository.ExternalReview.Helpers.ManagedTokenSecretLinkResponse}\")]\n[assembly: SuppressMessage(\"Usage\", \"VSTHRD011:Use AsyncLazy<T>\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.IdentityClient.ServiceIntegrationOptions\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.IdentityClient.CreateManagedToken(ADEXS.Core.Domain.Repository.ExternalReview.Helpers.AddOrUpdateManagedTokenRequest)~System.Threading.Tasks.Task{ADEXS.Core.Domain.Repository.ExternalReview.Helpers.ManagedTokenSecretLinkResponse}\")]\n[assembly: SuppressMessage(\"Usage\", \"VSTHRD003:Avoid awaiting foreign Tasks\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.IdentityClient.RetrieveApplicationToken(System.Collections.Generic.IList{System.String})~System.Threading.Tasks.Task{DocuSign.eSign.Client.Auth.OAuth.OAuthToken}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.IdentityClient.RetrieveApplicationToken(System.Collections.Generic.IList{System.String})~System.Threading.Tasks.Task{DocuSign.eSign.Client.Auth.OAuth.OAuthToken}\")]\n[assembly: SuppressMessage(\"Usage\", \"CA2201:Do not raise reserved exception types\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Repository.ExternalReview.Helpers.IdentityClient.CreateRsaKeyFromPem(System.String)~System.Security.Cryptography.RSA\")]\n[assembly: SuppressMessage(\"Design\", \"CA1055:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.IUrlProvider.ParseReturnUrl(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1054:URI-like return values should not be strings\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.AtlasUrl.IUrlProvider.ParseReturnUrl(System.String)~System.String\")]\n[assembly: SuppressMessage(\"Design\", \"CA1031:Do not catch general exception types\", Justification = \"<Pending>\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.UnifiedRepository.UnifiedRepositoryDocumentMoveService.TryDeleteByDocumentStorageId(ADEXS.Core.Domain.Model.UserAccount,ADEXS.Core.Domain.Model.Document,System.Nullable{System.Int64}@,System.Nullable{System.Int64}@)~System.Boolean\")]\n[assembly: SuppressMessage(\"Design\", \"CA2227:Collection properties should be read only\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~P:ADEXS.Core.Domain.Model.QueueTasks.ObligationUpdateTaskPayload.Data\")]\n[assembly: SuppressMessage(\"Design\", \"CA1002:Do not expose generic lists\", Justification = \"Suppressing all existing issues, has to be fixed if refactored\", Scope = \"member\", Target = \"~M:ADEXS.Core.Domain.Persistence.Model.ISecurityPersistence.LoadSecuritySeeReferencesForObject(System.Int32,System.Guid,System.Guid,ADEXS.Core.Types.Enums.UserRole)~System.Collections.Generic.List{ADEXS.Core.Domain.Model.SecuritySeeReference}\")]\n",
      "relevance_score": 0.85
    },
    {
      "path": "/Users/shuaib.tabit/Documents/Atlas/src/Atlas.Workflow.Activities/Telemetry/WorkflowEventWorkload.cs",
      "content": "\ufeffusing System;\nusing ADEXS.Core.Domain;\nusing ADEXS.Core.Domain.Repository.Workflow;\nusing ADEXS.Core.Types;\nusing ADEXS.Core.Util.Loggers;\nusing ADEXS.Core.Util.ServiceLocator;\nusing DocuSign.Monitoring;\n\nnamespace ADEXS.Atlas.Workflow.Activities.Telemetry\n{\n\tpublic class WorkflowEventWorkload : Workload\n\t{\n\t\tprivate static readonly IDiscreetLogger _mqWorkloadLog = DiscreetLogger.GetLogger(\"WorkloadWorkflowEvent\");\n\t\t[EventSource(\"workflowevent\", \"ScmWorkload\")]\n\t\tprivate static readonly SimplePropertyBagEventSource _simplePropBagEventSource = new SimplePropertyBagEventSource();\n\n\t\tprotected override IDiscreetLogger WorkloadLogger => _mqWorkloadLog;\n\t\tprotected override SimplePropertyBagEventSource KazmonEventSource => ApplicationSettings.GetBooleanAppSetting(\"Kazmon_EnableWorkload_workflowevent\", true) ? _simplePropBagEventSource : null;\n\n\t\tpublic WorkflowEventWorkload(Core.Domain.Model.Workflow.Event wfEvent, string action)\n\t\t{\n\t\t\tAccountId = wfEvent.AccountId;\n\t\t\tAction = action;\n\t\t\tTotalMs = -1;\n\n\t\t\tUid = wfEvent.Uid.ToString();\n\t\t\tInstanceUid = wfEvent.InstanceUid;\n\t\t\tActivityUid = wfEvent.ActivityUid;\n\t\t\tBPMUserUid = wfEvent.BPMUserUid;\n\t\t\tCallbackName = wfEvent.CallbackName;\n\t\t\tIsControlEvent = wfEvent.IsControlEvent;\n\t\t\tErrorCount = wfEvent.ErrorCount;\n\t\t\tLockExpirationDate = wfEvent.LockExpirationDate;\n\t\t\tLockOwner = wfEvent.LockOwner;\n\t\t\tNextProcessDate = wfEvent.NextProcessDate;\n\t\t}\n\n\t\tpublic WorkflowEventWorkload(int accountId, string action)\n\t\t{\n\t\t\tAccountId = accountId;\n\t\t\tAction = action;\n\t\t\tTotalMs = -1;\n\t\t}\n\n\t\tpublic string Action { get; }\n\t\tpublic Guid  InstanceUid { get; set; }\n\t\tpublic Guid  ActivityUid { get; set; }\n\t\tpublic Guid  BPMUserUid { get; set; }\n\t\tpublic string  CallbackName { get; set; }\n\t\tpublic bool IsControlEvent { get; set; }\n\t\tpublic int  ErrorCount { get; set; }\n\t\tpublic DateTime  LockExpirationDate { get; set; }\n\t\tpublic string  LockOwner { get; set; }\n\t\tpublic DateTime  NextProcessDate { get; set; }\n\t\tpublic Guid RevisionUid { get; set; }\n\t\tpublic string WorkflowDB { get; set; }\n\n\t\tpublic override void Log()\n\t\t{\n\t\t\t// We should try setting the revision uid where it is easily available but if it is not this should do it.\n\t\t\tif (RevisionUid == Guid.Empty && InstanceUid != Guid.Empty)\n\t\t\t{\n\t\t\t\tvar instance = ServiceLocator.GetInstance<IWorkflowRepository>().LoadInstanceById(AccountId, Constants.WorkflowUser, InstanceUid);\n\t\t\t\tif (instance != null)\n\t\t\t\t{\n\t\t\t\t\tRevisionUid = instance.RevisionUid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase.Log();\n\t\t}\n\t}\n}\n",
      "relevance_score": 0.7
    },
    {
      "path": "/Users/shuaib.tabit/Documents/Atlas/src/Core.Domain/Translation/Utilities/ChangeLogFileWriter.cs",
      "content": "\ufeffusing System.IO;\nusing ADEXS.Core.Domain.Translation.Models;\nusing ADEXS.Core.Domain.Utilities;\nusing ADEXS.Core.Types;\n\nnamespace ADEXS.Core.Domain.Translation.Utilities\n{\n\tpublic static class ChangeLogFileWriter\n\t{\n\t\tpublic static byte[] CreateChangeLogTextFileArray(TranslationUpdate translationUpdate, TranslationUpdateLogs updateLogs)\n\t\t{\n\t\t\tusing (var mem = new MemoryStream())\n\t\t\tusing (var writer = new StreamWriter(mem, System.Text.Encoding.UTF8))\n\t\t\t{\n\t\t\t\tvar language = Language.Validate(translationUpdate.TargetLanguage);\n\n\t\t\t\tvar headerLine = Resources.Translations.ChangeLogHeader.Replace(\"{language}\", language?.LocaleName ?? translationUpdate.TargetLanguage).Replace(\"{fileName}\", translationUpdate.UploadedFileName);\n\t\t\t\twriter.WriteLine(headerLine);\n\n\t\t\t\tforeach (var updateLogGroup in updateLogs)\n\t\t\t\t{\n\t\t\t\t\tvar featureLine = Resources.Translations.ChangeLogNamespace.Replace(\"{namespace}\", Enums.GetLocalizedName(updateLogGroup.Key, Resources.Translations.ResourceManager));\n\t\t\t\t\twriter.WriteLine(featureLine);\n\n\t\t\t\t\tforeach (var updateLog in updateLogGroup.Value)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar line = FormatRecord(Resources.Translations.ResourceManager.GetString($\"ChangeLogRecord_{updateLog.Action}\"), updateLog);\n\n\t\t\t\t\t\tif (!string.IsNullOrWhiteSpace(line))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twriter.WriteLine(line);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twriter.Flush();\n\t\t\t\tmem.Flush();\n\t\t\t\treturn mem.ToArray();\n\t\t\t}\n\t\t}\n\n\t\tprivate static string FormatRecord(string recordLine, TranslationUpdateLog updateLog)\n\t\t{\n\t\t\treturn recordLine?.Replace(\"{translationType}\", updateLog.TranslationType)\n\t\t\t\t?.Replace(\"{sourceText}\", updateLog.SourceText)\n\t\t\t\t?.Replace(\"{currentTranslation}\", updateLog.CurrentText)\n\t\t\t\t?.Replace(\"{newTranslation}\", updateLog.NewText);\n\t\t}\n\t}\n}\n",
      "relevance_score": 0.7
    }
  ],
  "reasoning_chain": "ReasoningChain(strategy=<ReasoningStrategy.CHAIN_OF_THOUGHT: 'chain_of_thought'>, steps=[ReasoningStep(step_number=1, description='Fallback analysis', reasoning=\"Error in LLM reasoning: 'AdvancedLLMReasoner' object has no attribute '_parse_reasoning_steps'\", conclusion='Using fallback approach', confidence=0.5, evidence=['Error occurred'])], final_conclusion='Fallback conclusion due to reasoning error', overall_confidence=0.5, alternative_approaches=['Manual implementation'])"
}